{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "56e0acc8-68d2-4b63-ac60-061d8da548de",
        "name": "Clear Cache",
        "item": [
          {
            "id": "62b58ee0-8619-4350-9fd3-5b1da2f81f69",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a034ed4-d8bb-44bf-8bfd-d89a731839d6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4627b56e-eb02-4fce-9693-3738915def38"
                }
              }
            ]
          },
          {
            "id": "5c8bb77d-74bd-432b-83e1-10381083646a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "60eacfe2-99a8-4b3f-9523-ce6c83a4bb97",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d6bf6ec3-c565-4dde-a532-a371cee51c38"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "59b6bc25-e562-40e4-b84d-b3f3459fa166",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a46d5923-f3e0-4bed-9185-6894c1455b90",
            "name": "Positive Testing",
            "item": [
              {
                "id": "52e39a6e-7f7b-4786-8677-27722293a4d8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a38e7e4-1488-4711-b899-5920f9bf24fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "592f4ff4-5290-48b9-8b51-51721a819b6b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "92535560-e14a-41fb-8332-c6908d59d039",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a955d9e4-3698-4eac-be0b-b4d653980dde"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2d07994c-6707-468b-8e37-fc3ec9865c09",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ceaa67c-c4ce-4722-8634-2d6640753b61"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9337114e-6c2b-452e-816a-770afc1ec4bc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8f4785a2-f676-4ef7-8b90-3473a6fcc9bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "536b7149-6d6f-48fe-a66a-28f273b483f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f08307e-b7a2-4d3f-9df5-bbc467577e48"
            }
          }
        ]
      },
      {
        "id": "63897e58-bd76-4f8e-96c0-14c5420aab11",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "505f2f32-be92-4533-845b-a2fbf12298e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf07739b-b6f6-4468-a2de-37790470edaf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bb8e3a78-52f6-45db-b2cd-17052547c8da",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d622253d-4b08-4d8b-93a4-c45738eba04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d7b77b1-9041-470b-8f84-4d9431ec4fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734e97fe-7c98-467a-ad41-582278a52a50",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33405704-c6bb-4432-8208-56253976f6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60c4b580-c15d-4fe8-b62b-e1dcd55125f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5fb27f-d71d-49d7-bfe2-9cb07050a785",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bae83d-b85e-4e72-a7ad-5db0433172c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e08a9265-37c6-4acb-995e-b787101f1598"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c03694c2-9a69-4401-ab8f-095c342354af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "719e766d-9e36-41db-8257-bfee34a4d9d2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093a67ec-02e5-406a-bcc0-ff27d1734038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9492385-3210-422c-80de-6435ca2d3fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c682127-7f70-4b64-9f34-06a3c69f454c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95be4d2a-606a-49d4-a162-bd3a72257f98"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ae77afbf-2c1b-430e-acd9-2345542a7178",
            "name": "Positive Testing",
            "item": [
              {
                "id": "99fb2b0c-f14b-4eaa-931e-0221f65a3e77",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c0d1c0d-5871-4725-9487-c95715750093",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2ca2a119-a09e-432e-bb80-f08f3db8583b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e74bc147-f632-47f0-a251-0e595dd9fcf5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "60f1f973-a133-4ae2-9634-d6442e5c75d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4885edab-802b-4d73-84d1-735189536b99",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8cff644-e179-4305-936d-01d4b4a83b9d"
            }
          }
        ]
      },
      {
        "id": "69d781ec-9d64-4ab0-8848-8f88ee2204eb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ad22c739-3aef-48f7-bef4-d362908e0f62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f2af851-ec58-44c2-8be3-7e647b0a5a49",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7f17e693-3100-486a-879d-43b4115a7fa5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4f039e-96d7-4a1f-9045-88daffe4c58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3cbfaf-86d9-4658-9cf1-3eec9c64dc9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ff9e0a-31d6-4564-8ebc-1122ded63902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fd1bd1c-44e9-453c-917a-e3f836b1b8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c315f8-c3ec-4180-8f18-5fa5d68e5cfc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f17b04-b93a-4f3b-b5ff-85180956127e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e67840-42c1-49ac-9db2-2631ec8aeb6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8c50ab-b318-4c72-830a-faa8641413f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a15ddb79-5300-4648-a29a-55912c63527e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2448fb5-ae3b-4e56-a612-e271f42cb792",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafbdd37-dee5-48af-9125-f51997e9f9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455cdfeb-e342-41f6-ac40-cb5971aad3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2083af-04a9-4803-a340-5a6fc797e1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0233c61-b577-4a21-8a2c-58dec899b5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d814b9-541c-40e7-8886-18f3f5415f69",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b59080-5318-40a1-98cf-9d0763b07dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae00630-3fbd-418f-a132-6fec012a2507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d755acb7-68d2-4273-a753-c40d96c1a6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42332a8a-2b8b-48cc-a578-a96ad3cf0699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21e83a3-26d1-44aa-b8f8-a295c781a772",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5467427b-f70b-4f28-aa3c-ad27a7ca918a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2387815-237e-4b1e-a912-f308103f890c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e1eddc-011f-420f-af0f-dfaedf97a214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "007d0428-7794-4170-abb2-4cd11015012a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b286c6f0-157e-47bf-a3dc-426bf0bc22f4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67911868-e2e2-43a7-8fdd-fd222c769705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b098a84-fcdb-4429-bbdd-a7557a7cec1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c38a932-8c42-4615-bb9b-da47e92c2920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92e52e23-addd-40d8-8c30-c958006c3ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e56049-6f75-4a3c-9649-934dbba98fd3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b0eb18-5e76-4cd8-963c-a44d17ff18d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eee3815-6ce5-40b6-a8ff-79471656b606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82df193-2023-4bd3-a409-80616c2457a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e709fe5-74e3-4f08-a306-9bdfa2570cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c7fa70-f30e-41a3-b4a8-5929680e7fcf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dff46c2-f363-4287-a9e4-89fb976eb163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf86431-48d3-4ca4-a6a1-0f64f94dd3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a66d08-7dd4-4b15-8099-4272f1e53ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cd53f95-9b49-4755-b2c3-33bf5e20ada2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f28eb6-5e53-4480-9fc0-a9cc71a8dd70",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfea4494-b2ac-4bd7-8f6b-7773bbcbc928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5695cb77-da55-43d6-bb2d-edf7d493e7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dfcedcc-d75f-44c7-a8d0-1e1640e689e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6b472d5-3667-4749-ac7f-d2bf8a0859f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ee79cc-1f3a-47a3-a311-8c9511efda2f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfade4c-9ce2-4b55-b7c7-91d9fe74e69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89d7e39-a06f-4b64-b970-ca574a54e9ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432dd277-e276-4fae-b6a6-e5b8e044f1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a12483c7-0b6b-4b51-b853-66b0d4b656b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6d2dba-adca-4d4e-8028-7da1f921af91",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b4a743-e4db-46f0-91aa-f240eee6bbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296656db-9556-4a32-bb3a-9679ad0bb5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994311d4-c779-48fc-9c99-23a7768ebfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0ce6e6a-e44c-48e3-9801-15c06eb63fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1829e5b-a466-49c6-a52a-396e79be9b33",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674f8db5-149f-45a0-a83c-1435ad050498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ce7523-8f94-408e-824c-c4382ffdc1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077138d2-12a2-4ed2-9bd3-29e86f31e217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8447478-c2d6-4fc8-9ae9-350326bf9330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3d612f-f34b-490a-abdd-3fcbe0f93371",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe18a06-db17-40e1-99cc-586e81fe3422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4f0c3c-4d4a-4a62-99fa-cd5771f99bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b031b432-9bc0-4d8a-b41f-c885612f7720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "886deae7-d82c-4e47-ad6c-a4fc1c104e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb658798-92b0-43a1-a2b4-2436d2d415fb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023f698a-ab5c-4598-834a-2edd8a58ac83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407bc1ed-caf7-4bde-8205-d923d40dea32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5710bdde-70eb-4242-9df8-2c31409bdff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46569b44-c185-45d5-94cc-e2f800c17967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f80386d-6c33-406c-949b-d947abf36e05",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2455a27b-492b-49be-9a07-3c97ce273966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e537f3a4-5e3e-44ec-9aa4-d1288aaf1993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bc1fee-4569-4914-8ea6-0f81c76b2f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1ff9cce-759a-4259-b44f-bbd08d63de70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df4addc-e0ca-4b0a-8c64-a35cdb7393ed",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8fa9e3-9a29-432b-a28f-824b327ec32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3799fe7d-cd62-4763-b4b9-cfcc8f214da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d244cc6-c998-4da0-9ad9-3f9ead184b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "921e7568-6592-40ff-b3d4-ee6a3829be18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d1c1e7-13e7-47be-b1b3-2a3c6f7e706b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05f0208-6dbb-45d7-b1dc-16d0bc4e57d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d60868-c9e6-4904-a768-98ce5f7c8a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf63e8ca-c982-4bab-ad0e-b5373b1c4132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7070c1f5-a91d-4027-b237-c4cfa1eb0a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33f6cc9-cc44-4b34-bba7-0f4605e4f3bd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702390d7-5cfe-40ea-8e5c-5f5351866353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7502d8-bda0-41b2-aeaa-930c07b428b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddabf5a7-2d48-4875-9883-24d6d42265a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8101e004-e3a3-48c3-92b5-71bd09e5201f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b3f0cc-01b9-4581-bba4-8d5811b55332",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c06719b-23d2-407d-a831-a7b86735a7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a414c67-edbc-460a-b69c-fd0c1c7ec931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467ffb3f-ccb8-4aab-bebd-c6d3418bf07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "795a9a73-4700-471b-8acc-7c9f0a20b134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28f1e9b-e7cf-4d45-8749-8038a1be1adc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9233c305-6350-46c0-81a4-53a129d1ebd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee7b388-2fee-4aee-b189-30b2253df2f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdc648b-ced7-4441-beb1-b0c7a2e1bd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c25a71e0-faa0-40e9-8d8d-57804e1484b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ca30e9-b514-45ca-9bb3-b18e06f46eed",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2243b47-c795-479a-ad0e-9270c0fc97ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0015a499-cf9b-42c6-bc89-20ec73569640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f48e78-ab09-4c45-a44f-4f2f4ef60aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44f960a4-3280-452c-b362-66bb2f98d13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3550bc2f-77ae-4e8a-9845-17ebc0fb0437",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fe6a4a-53a7-4c21-b478-9068591ac906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0463c5-8c1d-4927-ac12-9d2334b522d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441a08ce-a58f-4ad3-bd74-c2641bbbd733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11fb4314-f1df-42d4-99c6-7d2f74cd42de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a63920-ca93-47e9-bd0e-6960eb95f9b4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4373c2f0-7496-4985-8f96-06e6add92f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a4c8b4-cfc0-4658-9cb6-802f47d79255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e446fd23-da97-406d-9f60-26c44d958955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cab776b1-749e-4735-8f5a-6e8b9e80f1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcbf2a4-11d5-44f6-bcd6-72d40fd6d779",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1ab9c1-f346-40b1-8d8e-de7cbdf6b463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8fa332-8338-4d2c-85ba-920ec9e464ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16221a60-d6ef-42f4-b4e1-148c0f4b27c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e78835bd-7b59-4a55-80e8-535284013b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdb958c-45ef-4acd-9b4f-aa4382bef4bf",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca532475-effc-4d7c-9b3e-7c910b766f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086ae15f-4def-4e02-9b82-075c710aa4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ff6e34-e1b0-42bf-88ef-55bdac363978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3660ea77-7d1d-4cce-8058-98f7d2e909ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f074ed-46ec-4756-8a4a-799c2dcaa53a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789121c3-2ecd-4e61-a341-058458c5292d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd219b5d-eda4-400f-be47-65cffabca7dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86067a8a-b55c-4a7e-a2a5-10467d4dead3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "370a0804-34c7-4814-93bb-2393e6f5b000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35db0a17-4c41-41e2-ad45-3eaa9306a73c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0be440-b6f5-4ac4-8ab1-ad63a33e4664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047523ae-69f2-46f0-810d-226dffc36e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711b25d6-21f3-46fc-b62d-aa2b04d60fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3702bb0-2855-421e-b132-d0492a6f91b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3359725-ceb0-49af-91a0-af86bb000f70",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49a20da-1801-44bf-a893-cc7feb8434e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a9f143-74aa-438b-8c3d-13ce61d9fe70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf39d8c-f225-406d-920a-519be692d8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d68654e-2abd-435d-861d-2911865425f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef809a4-5889-47e1-b675-2696a600ea02",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa285f3-bbe4-45a7-811b-a0252d1b2649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12dd1c0-90a6-41ea-92ee-371e40d2308e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b50840-a040-4d2e-b1b6-7ed6ad599937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80204935-ebc4-4d2d-8f61-bbc02633e86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09323f47-5b47-4361-aa27-22b23d1e5c60",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b75d229-17c3-486e-8fea-3f5c0b7f40cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a0eb93-bb28-4347-9f74-55cb5ab4c01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a964be3-23a8-4a20-8bf5-2119815b7835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2587ec6a-ff3b-42b7-825a-e77d51de20d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04c220d-9648-42c1-9c76-1df8a8ea6b2a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e545e463-2943-4d1e-87a8-6e1be6a3970d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2a16d8-30ad-4ff3-948f-e0b6f0492381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55102b4-c112-458d-9a84-340d220c2fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5902e6-c0ea-4e60-a747-bbfe7bb29721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bb12e4-2a27-4838-b609-463105c57ff6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2692c6-8827-4671-b09f-312aefab9cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b46b1c-76af-4e74-91b4-2829e6b88480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffef89a3-feb2-4275-a11d-2df2de2226f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c22139f5-9648-4c0c-972b-85b1f0ad4bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55422179-76f9-4a18-b006-d5dfbb530129",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0d5427-2cfc-40fa-9305-de5c3a1744ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8db947e-30bb-4a60-8c6f-e6b009b9fb3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427c4221-21ef-419c-9120-0eb0ea65a97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c19c450-7f2c-4152-8b93-78e308fb7f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357de8bc-d24e-4400-b05c-624033929271",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d3adfe-945a-4234-ac96-2420360c9a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5964105f-52fd-440f-b8b2-3794e6ed1a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85a07f0-ec11-4843-9c66-cdce4febddaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a0c04ad-8d34-4d9c-ad10-7a85dabe3037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42c0eae-2476-4681-a6d0-ed293b50e404",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b279590c-826b-4608-a44d-b9f2e6a75fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61072c6b-eed6-4d6e-b396-5a40c7e20a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00c11ed-7610-4153-8d7e-60d41d747ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c01deea2-912b-4500-ba6d-3d0b01ef810d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e88d49a-4222-41ee-a107-5b871fb34f8c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da664d0-8b01-47d2-9538-7835b799dd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f8b5910-2d50-4161-bcce-d91f6a6c6672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e6e5f8-a7ca-4fbc-97a7-322f06cab3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5915155-fcd5-4bd3-bfb1-ae3c56c734af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39a47f6-1c86-49ef-a46a-8e90b43134d4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830dd219-fb84-4edd-99aa-4526e1796e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ad8c65-bd40-496f-88ca-132002618155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60485954-0461-4a36-8683-7d1d2ac487e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d174ddeb-612d-4fb5-9daf-8ecfa2702fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602c7016-92ea-4ffb-b187-1c22ee41369b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1d0709-250f-4d35-ae6f-7b85850ab625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae130fa-9e19-4f2a-8c3c-06c97f6fc111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015fd861-4950-414f-ae3e-c8531d173715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "26506810-f3cc-49ef-ad0a-0e052331efd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69689d49-9b7a-45c9-bc76-19477d876165",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a72ca9f-854b-4d1e-8629-11e3137fd9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fefe32ff-d8eb-4272-9d69-fb272ef04004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbebd0c-5afd-485a-88da-a5f0472d9fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb18818e-078e-4cb9-93d7-fa650daa5aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7453bc6-075f-415a-b574-adc58a8d6fb5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1890db8f-c88f-4654-9dc2-df2c8917b7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb01cd1-d6fb-4f39-a713-8e5f5fefa7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc37ea64-f663-4d1b-a96c-d36e14543ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3efa75d1-bfa8-47ab-815e-d615891ceec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe43271-6f69-4f8e-a913-74ddbbaf10e8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76973951-d7a1-40ba-942d-7bea292ab111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79c993d-9f60-44bc-bced-5971a7caac38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c670bbb-eb2b-4acd-a4a5-0c6095b917a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "16fda8e1-32c5-4b10-bf54-c96b76c1d0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b42084c-3428-4b12-a84c-8fe03d4c5870",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56da9dae-f4f4-4e10-aa3a-f47176b8030d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e4900f-b336-47fd-af37-92ca6db489d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783c772f-c3ee-439c-aa64-2d298454d902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3264447f-f29a-4739-ae3e-92d3c63f700b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7935536-f5e1-44ed-8e3b-50f1f177dd06",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e85aae8-8a88-426a-b384-feaca288dc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9289cf1-8ba5-4bd6-b804-33cdd572defc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696eed45-e55d-4d8e-b193-f63ed420fb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "26e52a7e-54ac-4578-853c-7f82857d207e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5e887b-fce3-4a04-8de8-d5e52359d5e7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28289400-c8dd-4407-aa76-6f0fde4f4c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f6be4f0-3e88-49ed-85e3-ecf9043386a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e3c054-b799-4462-9d46-519c1ee5e8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e505326f-3f31-4ded-b52f-783f7d364787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89aa56d-50e5-45e1-acd8-d800dbbfbf2d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8deac9-b053-487c-9225-cc2d891ea167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856c5446-66b9-49c6-a5c2-2d09a9d25e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d9cbbd-3fdd-42d0-9154-f791e70c581d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de70574f-c217-449e-b1bc-07dc02b31f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73cbaa3-401d-4091-9a53-5d3bf10cac4e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c145d9a7-9cba-44d4-a7b8-eca405bb5d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96ea85c-b091-4c93-aea5-99c365902a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5ad033-b7ff-47bd-a1af-8f05579d57cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d206c09a-1b51-4579-afa9-ce204e0b0a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b354175-6231-49b6-9984-3cd4f0f7dc8f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3af647-109e-42db-9411-f6a717c046af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb526003-d0a3-42e2-b8a3-ab060c4c780b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bd0bbd-4bf2-49be-9371-dbc023f7e484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb5421f-4bad-47e8-8a9e-3bc0d3c5fc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fca818c-0196-492a-bedc-ce1f9386f311",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905f6a0b-0f36-4c08-991d-72dc01c3479f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13f23e3-e3bc-4f73-ba46-35ae2c063a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420c53aa-04af-4a0d-8389-e6ad98f83492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d4b3896-13f8-4b48-9ef3-2d2ba8a5e2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e6b4ca-9c92-48e8-8d26-41b945ec31b5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0a15f4-35d5-4492-a0bb-8380c43bd32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f207fb-3a1a-48a7-a66f-e4fba39b03ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4760f51d-32b3-4019-8862-ddc30b0e09f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4542ff-db02-413a-ac16-3399c7486f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cdf75d-76a2-4f83-9ff8-d40548b882fb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5856eef7-6c92-460d-8b5c-e531a2e3e1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e709029d-008a-4fb1-b868-43095e2c6e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a136d8-1afd-4b4b-b3f4-1a3d049a8122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b62a252-e3ed-4bc4-ba1a-899734e71a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76ec9c5-1207-47d8-a2d3-54cc552dba99",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef786d2-0af4-4f4d-b75d-1ee5f1b6ed9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0a9492-96b7-407d-938a-bc03db96b8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2106d9-d84c-4f02-945e-e3ab5604cbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9452ebc9-6c28-49d9-891d-333f9680476d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13352021-a0a2-4c8f-87ec-5c587c6b07e0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a014645-2d9c-43a8-9fee-6ecc3cd00232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f770a4a-e7f5-408c-a49c-9b96334de371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1326e354-a423-4898-a768-e82047629849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "72c85844-2682-45c4-94b1-e179c4197122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81693a8-cc8a-4079-b2eb-1201f2b34057",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ee27f6-46b0-400b-8eb6-f5bb9b13cc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8cb44b7-f3de-482f-b2eb-fd42267ef8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4da64bf-3fa0-4688-acc6-f8d6c2775400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "662e44d7-ea57-4b4d-8fe1-8257d3f92a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4ba6d2-b278-4170-933c-cc161eb96b09",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35b7a69-0fb7-4665-9788-9999a4121ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42df160-8d84-4300-922c-ffddfb133368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca0f01a-35bc-47e1-9b2a-b9f3e6fbde41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e49b6a-8e4d-4ed7-a205-6773dfad65e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4527d894-3812-4fa0-ad37-8a3d0da9e624",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f741e980-3dcc-41d8-80c1-160f413ac0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589992a2-fbec-4f28-93e9-7b549232c4db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45ea6ed-0bc3-4872-aaa6-e10e31671465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "423c505f-9ca0-43ed-a8e9-dd4dc1434834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af17be58-23eb-41ac-91b2-de9d8d5a688f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60e5ad1-e675-4f39-bb0a-6a0304404559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39411f60-8d4e-47b9-a86c-ee25aedacde0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187239cb-4c71-4f69-97d3-a27807f17306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f63e6a20-8f95-4bc1-aedb-b6b0c64db4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a89b73-f7ac-4a55-ad08-64a5756b1205",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059545b5-80c2-4d9b-9a5a-757a9c900d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5d0d88-2839-456b-826b-d779affd21a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd54d1d7-7d75-4b8e-aee6-0cfda03e4881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "29e6d60b-b00b-45bc-8d6a-5158f33bb11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e769c64-297e-4779-8c2c-e47954ad2b45",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcad531b-7c6e-4ff8-ad74-08b36f3d71e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d99ad63a-75d6-4245-aa02-ec4504a7d051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f8a36b-4aa3-4ed0-9090-d0c158fcef96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "db013493-f958-4e85-9bf2-63c07b4efa7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf304e7-752b-445a-86ba-cb2aef43109a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1a6cf7-cbeb-4fb6-a2a0-410045a97855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af35c89-2315-4e7e-b30b-6e62b77b9fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68056c62-a550-42ba-abd6-dd5920b63b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "81fb13e1-651d-4863-a095-e1c23aeb5175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c37751a-594c-43ff-8dfa-78f1ff769ede",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c4ab71-8080-46b8-b8f3-5cdcda72cbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e70216-39fd-4f3f-b3c0-6d39fc745810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9bd59d-15ca-4fa9-9eff-7ca7f1c9957c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b144a89-d2d8-482a-9d90-7d0c56532cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3509e259-ec9c-48ce-a309-25e386302306",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b3c0fb-c386-42bf-b292-dc4b9169db9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a6b8af0-402f-4233-ae4a-19349a22d683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b759dcc-e813-4ec6-8105-36caa2a798a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "44b123f5-fc83-431e-8f0b-d83386edf98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd29a27b-eba3-49a3-8ff9-6e87db9780cc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf34e938-d406-460f-adf2-ae305bf81ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a6a7ba-2470-46c8-846a-7e40c797bd14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d31f90-27e0-456f-8011-22f1e0cc81f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "189a04a4-258c-4967-9af3-93a7c2dbbfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709a1e44-67e1-4416-8e63-305dfbf6ea13",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e785b1a9-979a-4e43-a18c-8d45a1caa992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a857d74-9aeb-4155-a84e-09d65c0bacbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4021010f-be81-4ed8-87cc-283d2fd29fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "396f84de-df30-4e0e-bc27-27b418e53e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d846fdcd-76e0-4166-b81f-09f9eac2f655",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2e449c-17e7-439d-aadf-0537761a3eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13ea958-1a85-4c46-a5c0-8f3f83398ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cbbb4a-fa6f-4822-aeee-daab511049c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c8bb94-7e29-4593-85c9-e6432e291283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fe9508-5711-4042-9c7a-221413a4d8a6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc00912e-10d3-485f-bd3f-ce465bfd24ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d29454a-4b69-4b42-a3f8-10382cdc102f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05abaf4-b8d5-46fc-b72e-e5553ee27299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5e6510-de72-4389-a22a-0df58fe10d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b9a8c0-27d0-47b6-bf33-b3e865019c90",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8661b81f-93eb-4067-80d4-f605b038b828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7bd2b42-dde1-4069-8ed4-153150625362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48738b94-5f42-4931-98e1-76d5627612c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d857a05a-cb8f-44ff-bcab-2dae69029275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf1f984-393c-45f6-a2a6-7abc6052a147",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2ddad6-b778-4b5c-a05a-d00d01edc0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1177fd3-582f-412e-b709-5e31ce3c4176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a969d5f-f952-4b8c-85b2-d49064b06d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72cc7d8b-0186-4506-bc59-82c37c1cab30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10c4e8c-159f-407f-8b8e-5f6c81d9ab48",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fab9d07-0404-4ce5-bb3d-2aac497ebbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34415c2d-736c-4192-bce1-61fefec7871d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de5c13e-3d04-42fd-a57d-c1c1dc00f0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f3cbe95-b685-4991-a5db-14ca9df71827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc3608e-b3bf-4dda-bfdc-5cdbe82a39d1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26719821-de27-46da-8563-bd87978c1d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7414631-99cc-44f7-8e9c-4cc14a5b4505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc96bb6-a77b-4bf1-865c-6c38cda7f781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd4c1f2-be23-4486-9efa-c2d637d10319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe8328e-6b2a-47f7-a47c-13a1794bdd73",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f0e76f-02d6-4fa1-867d-292e106d5612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f67c106-26c3-42c8-a77e-bb6f95ab307c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a23591d-ac2c-45b1-afd4-6147e1240ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b46c44c-3b53-4b3d-9742-77014467f147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ceca76-5af0-48c1-8bdc-8f10ba18150b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9329e2-47de-42e3-a791-9659ef00e852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8054233d-1272-44e4-b552-df19725fd6dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f670825b-37ee-4545-bb24-2ea17b5e673c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd4113c-d330-4a9d-9bd3-3e8316b057da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a5654d-11c6-4a43-9ea2-4bc105e370e4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16d71e0-6f22-4551-a32b-54c906bd80c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5b77ed-0686-4d21-95c7-481f5435b11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287e9625-4b9e-4dc1-897b-8f1b496bd7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9a9dcc-ceca-44f8-b92d-b75fb53925d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d15dab-e31f-401d-ad2d-50df179f157b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a988cc7-b1cf-49bc-a33e-475696501a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96deeafa-646e-4b3c-a797-40822b4bd1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f7f834-c646-409a-be57-6ec6a27d2b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5af6a36-9c51-44fa-bf4a-c657fea4ef29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbe4b80-4c00-47d1-a2de-1a45cdb10f8c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7047d82a-3764-456c-bd1b-0c0f7d12261e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dec7223-7b36-42d5-b3b4-dd4ea46195a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1874eb5-3f3b-4115-b675-5a6700ec15ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69f917fa-863b-4522-a73a-3b88fd6704cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06eed153-688c-4dbe-97d6-b50a9cd418ff",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad75788-a4b7-411e-97c1-d1b00fe05be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc31d6f-2bcc-4538-bbf1-21acc7d4fa4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7472b41-6b85-4632-8dc2-da6cf7bc3186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2de7a03-53f8-42c7-b8bc-041c72543379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876e88f5-4e92-48d5-96cc-1667baedfca5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062685d2-28cf-4231-ad8c-71dba11442b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a775e80-fc1c-4912-a483-ec8e7dd5ef18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b5cc7d-d66d-48c3-801f-7a74f6d1850a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39c01049-f9c8-4e73-bce7-8dc1e23fd276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129db37e-c0c4-40df-b571-82400c2b54bf",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba02e579-d2fe-4ff3-82e0-c77d3a1e088f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2386b2a1-65eb-46e6-8d02-2a05977ac5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e80ad5-14a9-463b-b69e-7edbeb183b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09315518-203a-4bcb-838a-3a419d2cc172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f733b2f1-1fd2-456f-b83c-a1c40cca2566",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fa1859-d114-4a96-bce7-2e834470102b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b44422-3190-47e7-80a7-771814a139e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a21e41-c793-4954-95ca-dc0d7a936ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc24cc2-7fa1-4f88-9891-4f1661e3c204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fc74a4-6932-47d7-82df-b2265b7ba1ec",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a386a0-045f-498f-ab2b-bdc7e6e57988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f298974f-6dd5-4f87-b9aa-7abd39ef1702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e82339a-9dc1-40b3-9aed-8c96d2d31fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5607530b-b28f-4e3a-8ad7-0c8a7cf6f3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46bef82-44ac-4221-aa87-614731366cbf",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe9a484-ef88-4bde-847d-104e52c6566d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0379d6e-dea5-4efb-8b32-2b4083418d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599a7500-2f62-43da-a91a-90327b948c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dee0ca60-8ad5-495d-97e2-4dbada912e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb847d8-3762-45c4-b2a9-e91215297f02",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2762bb-7637-40b7-bbaa-16b46f0c2264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11954f55-8725-460c-8c16-265f537ae3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ac5589-b264-4d44-aaeb-739e9d3ad0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc1d8ce-504f-4750-a032-403ad8c89798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b05e45-024c-493e-a0e8-7257763cd396",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f4b1be-a1a8-4e17-b9d3-352cc8f72c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f50f4c0-e77e-4e79-87ab-4496e84576e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc3b3c8-f97e-43bc-8515-a991e245a1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "837b8e9a-25cf-4c5e-a599-13c69c04e1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb571d4-abec-42a3-9e41-832981daf52d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea227335-f7ec-4e93-8204-da6a60ecc99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3330cd33-1c91-4b52-904e-a204b3db2081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746cba92-5dcc-47ff-9b4c-8c9ba4010d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf285899-0a35-4c2e-ae47-b7a05e533acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5f4e8d-6f7f-4310-80d8-7d2500e52f14",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8749d2eb-e2ba-4dc8-9f6d-f38543947520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4644820f-f977-4fa6-b484-1ad35d6b6592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a998551-13a5-4645-b2c7-19ee14288425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1109895-85b4-4a67-a7d1-7df0b8c7ca97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe8c248-fd93-4b46-aca1-85553d521702",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c3d1fc-8c74-47a6-9b15-cd8f9301a190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ff7782-3848-4d01-9835-4cc723d6c2f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193c456e-de31-48e5-aeb6-388451263e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b370830-197f-4da5-b3e2-80eebafcb7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59eb9175-ff74-4410-a741-ad67bd09d590",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c52846b-6054-4165-ad92-f7268c31cc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef91cccf-23a5-468d-af80-5c5d9fb39969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8be4ef1-41f5-4fc6-b735-5b1ef3864042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8b2384-ca48-42c8-9140-4a648091ba0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd72d37c-1f1f-4d11-ac8c-d974261c315d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9e9132-ffc7-4f7b-8ff2-10fce9a2dbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33512905-e372-48cc-8672-8ebc24e0d210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17208c6-9152-449a-8085-14c3f96a0e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "436c4eae-c43a-4f97-8604-ac24d281b0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285063e1-3ec1-4508-b7d0-76595acfe811",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad83e622-5bb3-4178-9ccc-22a710356eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71554c21-3b5a-407f-b857-6c0ac4051920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a243dd2-c16c-4825-bb5f-171efdbe1fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0985cf3f-a9e7-47c5-a640-272011030682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2b4efb-51b0-4024-92ce-4370e4109231",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2146956c-4cb5-452b-8b99-82ee3858f994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eec76f1-dd05-4d7d-8897-ab639f4e1b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dce5ce-da9b-4fd8-9105-5df65dfa3114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "54054a59-ed42-485e-b0f4-647d7e886a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03201ffd-4a00-42b4-89af-4a9f0b6c9984",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f983cd-ec77-40a7-b997-e20123b22942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06549f7f-f4bf-4525-aa13-35d198141c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78da451-4da7-4097-bc4a-35f599c1ae25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1b09f6-a206-495d-a1c7-d2b61d171e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df97208-8770-43a6-83cf-8fdd806c3e7e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945b2f94-8561-42f9-82c5-12184bcd1a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b15b97-c91f-4413-99ce-731c15074352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d74c1a-830b-4869-a104-bf946372cdae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb2f6e3-f6aa-4aac-a55d-33feb8b1cafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427349b5-5b65-43eb-978e-fac3f671013c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238b5c55-cd23-4c60-bb7e-b3eaad27cafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8f8a9737-87d5-43fc-af64-660ca7b3658b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4142e4d0-d408-4839-bd3c-2c3c879a2fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "07f963b2-8b9f-47f3-9e79-3f842fde623e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1cc7db10-42eb-479c-bd15-334480dd30c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36688b9f-b7e1-487d-ac86-887504f7108f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa4098c-5547-471e-9a84-ac51c10e560f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08d06728-32e8-448f-9490-29c296ac144d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018cdc0a-5783-4d0b-9244-adf2d91e5419",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "102c3937-0d45-4b09-9757-36f751b482c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e2e2778-f3c8-419f-8f58-7f7306f749b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aec0ef72-a676-4ee4-8524-df6855690c29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a9c98ba-cd27-4a19-9a58-d00e315134e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6930a349-0a57-4f25-97da-bc3dc5df3fe4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2ac3927c-d1f4-42d2-ab62-816e271fbf1e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "235a8b7a-b4e8-4442-884c-fda1f0ac5c8c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5d99371e-f2d8-4d95-8567-af22c1f7fe3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "154fae41-11a2-404f-bddd-1e735783167d"
                }
              }
            ]
          },
          {
            "id": "6c0b3ba4-e43b-4e75-9cb7-dba6b429541e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d2b6e1c0-726e-4f3b-b379-3dfa5fb95416",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "db50869f-5b27-4a47-a7b4-c0b97c7b2289",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c800cb6-9c92-4029-a641-c26df4994361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ed4a7c8e-e542-4376-b179-a0faabe2113e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa3c88b-d97d-49cb-b344-97dc607b3297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb52df87-f77f-4513-a195-732a32b5cf91"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "57ef10f3-c78b-4de8-b477-2d52ffb7af18",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cc376ee-eac9-4655-86fb-d6127686ac89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6731ef45-fd09-4daa-b633-834af2145d83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "652fd849-eec3-40ee-8e86-441f8dc32371",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ce6654c3-cd0f-47bb-a8ea-9a195b4e76ad"
                    }
                  }
                ]
              },
              {
                "id": "f2a56154-c41c-41d4-89c2-e58c7040b277",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5c6e6a3-a059-453c-bc62-7dfde61cd50a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c9691df-f59a-4603-bcdc-0abf60e4217d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a872d1c-126e-4bf1-8152-67a34f062c8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4bbcce12-b267-467f-b217-756aee6c5651"
                    }
                  }
                ]
              },
              {
                "id": "00464c05-5a16-4921-ab1d-da591fff355c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a920b41c-d2a8-48fe-b4f0-89296729264b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18177487-63e3-45d3-9f63-c215103a7999"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4f1ef84-c76f-409c-963b-359e8a800e7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "273cf920-0129-4b69-b196-73d3adb80acb"
                    }
                  }
                ]
              },
              {
                "id": "3a514ea2-7f16-4f2e-85b3-4e03c948fa84",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9674952d-010a-40b2-b7d8-460cd36ca5e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94ce886c-a6ce-4c05-b78d-8cbdb0d814d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "301c78d1-67bb-4659-867a-2b667d5e542e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f18f9b52-226d-4792-bf8e-89f10c603618"
                    }
                  }
                ]
              },
              {
                "id": "957ed882-07b2-4035-9e11-dc494285f9b6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f62cf32-10e7-4fe1-8a86-49080c3934b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f74709c3-2663-422d-971f-9ac21293ec8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35d07a88-e834-4f53-a444-405dfbaf3f46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "50fdcc65-053f-45a2-b06b-f9f59833d895"
                    }
                  }
                ]
              },
              {
                "id": "71a1b4e7-9be6-4a8d-8578-144edb9116be",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ea6de8a-0672-43e4-833b-b4ad5a51586d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "05996349-9b2e-44a7-8040-f55cdc068307"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea199e10-30d0-49f3-a7b6-f7eea90ca827",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5bbddbff-ecb8-4ded-a41c-e682bc14a2d5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bccfb0e5-b0d3-4843-9b68-5552108c64c2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "822173c5-f074-443d-ac93-d84f6769d9c5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cbce6679-6702-41c9-858d-9aa2803f6979",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "916061ee-8f9d-4c15-8d85-64a8ac0cca8d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3a6223a-f307-4583-8a39-0bd76b0896e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "040df471-729f-4f38-8f20-d12b47b2b3c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc8354d7-6f9c-4ab7-a528-8517735f1a8c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b54dd32-cfb5-409e-b84d-4f90e7b5fa96"
            }
          }
        ]
      },
      {
        "id": "e0ce10f2-2e9a-452a-864c-e9f17df96fb6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e48146f3-08b4-4f05-9c48-51161b682600",
            "name": "Negative Testing",
            "item": [
              {
                "id": "289e9358-d39d-4289-8e86-1a4c1db5e1a4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "181bf07c-8b31-40a4-a472-c781b22e2383",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f95f3e-2f1d-494f-a701-12df2fceeebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e367fc-c8fe-44ea-89a4-1f1074edfff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ec047a-3199-43f2-84a5-a189ddf69274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f4b45da-d4fa-4889-86d4-54ec218485fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c364084-6d17-4baa-92bb-a5e8291dac34",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1f5057-2275-4213-9984-cab656d5917e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3318dc78-c46f-49a2-92f5-4a432aec11c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb58b04e-f444-4076-a0b2-6e3adb221fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f86761-0bf7-40a2-a729-ba6fb1fac0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ed3a9b-6179-492f-afa1-27250a3607ab",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00960db-8dd7-4bec-bb8d-647e327e800c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de74176-c953-4eb3-a9c1-855ad400a253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825a7d6d-8f21-470a-9230-26e32ae58149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf31cf6-0535-4a24-9725-44f6122f6512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a174dd9-b48d-4635-ad6e-3c11a7732522",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f4dcb1-7fb4-4fec-b808-28873d27d21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc9b141-fbb8-4fec-885c-f1b07a885f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05d308e-26f5-47ba-b0bf-2abfe82ab6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76539003-b090-46ae-b661-9f6614708211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95941f08-f913-4c9e-bdbe-007c3b57ef7a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8821fd8-40fd-4f38-b63c-507051bb7498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e267ca7d-036f-4ba5-be71-8e324685f509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fac929-a48d-460c-a141-8418be7c3589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffef0f0b-fe66-4349-8b21-ded7adb9d24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed389e1-1b08-4f91-8ace-55cb417e2ceb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3377cb-efae-436e-8106-f841ca284252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc73a30a-8e9c-4016-924d-7df1004b4b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7833bebe-bb08-48b4-8da1-c0140d2f5454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73e7d55a-6659-41aa-9166-3eab9c924feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9854a156-7aef-4d4c-b533-5e0f688ed786",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878f9a35-8458-455d-8fe6-e5886cb45ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d953399-b6df-4a12-a1c7-b26a6ebabd69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667e4a15-7a9c-4903-b952-2da574ced36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "661e8937-9cdf-4afe-9d5b-e13ef36ce8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506cfaa0-e269-4afb-9109-7ac83c2ee714",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f62b4d-9e7f-4a49-9a25-9a3d1514d957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f8dc9c-1950-4d06-8619-bd6c3c900bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa3bcb5-0cdb-4bb4-84d4-cd379fcc1ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a217c87-b378-4430-ab5e-56efc43f76c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32d9613-ec36-4925-acfe-c81ee84af3b6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e8b7ae-7912-4369-815c-a0610f5755c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e86183-48ec-4746-bf74-3c1f43c38021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2f56e4-117f-4f00-b8e3-b4803a46bd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6451841-ee9d-4e7e-bca5-58debda2e163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f459d8bc-a643-46e7-a943-d3d7118a0ff7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7360ecf9-d73b-4c5c-b144-af1d61b42694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2fbc51-5cc6-41ff-ba29-51b655f1116f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8cc3bdb-bffa-4eb9-b38e-5c52ff92320e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a52ea7-5b8e-45e4-b728-57f863c338c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fcb303-cb3b-4357-abf0-37e982ab3207",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642f4382-742d-4a21-a8be-bb67f79a095e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f873bd-be35-4e4d-a39a-12e7620e2af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb67211-6e2f-4f33-8ded-fa030757eeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "85bcfb7e-16f9-40b9-9be6-f9e637da5b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e49ae9-5bea-4c3d-9b6b-109867f9c5d2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd259adf-db89-4c56-9bc3-873548f7af31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd76850-4362-41f5-8657-d228ae6a7c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fc3e25-4a06-4d7d-9705-0a8d0c1b5cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77ecff32-e122-4645-9e5f-74e84b3d413a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94646de5-d05b-4bd6-b6bd-b5cfa50deda7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8768bf-0ab3-4e11-9b62-ea0351bb1a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab4d25b-ccec-42f7-8fad-c01b02393b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a17a2a-2ce8-40f3-9240-7fe58b307672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac120c0-029e-4a39-9daf-4c1c6d3ac142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4d4e14-8655-4691-9c1a-64fb6a27e52b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ff1f2b-c15b-4a51-b94d-37a2937e5e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670e0d24-8f8e-45ad-90c8-dd312ba270cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9d8594-9415-448f-8fb7-e65f9c8a4955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b74b97-c8f2-4e75-a044-b718a811451b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105f871b-c2ae-4bc0-a213-a664815750f2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0696b22-eec3-4529-bf0c-c41bd8163d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7de5dc3-72be-4763-b28e-25aaa6ae87c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c728194c-53d3-405d-9870-e534107170cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a85e010e-b9fc-4471-a817-d45bf36cc74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a5f990-d226-400c-b31e-83d97b89f9d3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b2f78d-316c-48a5-bd37-86f93b32e1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc81c9f-97c1-4581-8025-b40b61a7f8f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982cade8-c900-4f71-869d-3f11c57073ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "93852dab-ff25-44ba-8bed-9f0fd9c01ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8895cfa6-cb3d-458e-a086-54ae3085092f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2170002d-973d-4caa-9095-17ab37a25d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a91dd6-3da9-431b-afc4-1b529811b150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7787e6-30c9-4eaa-8918-17202f28731d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4e2f4c-5e5e-4636-94b2-5573d550a8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f256fc47-d320-4df1-806c-404f017d7411",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63dd0e62-c3e0-41a0-b499-327ecebdae3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "307f3324-3365-43ce-8306-d9c3d6fc1f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d1f599-f8b3-48fc-be93-b3f8bceb7e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "05a7fd7f-8e43-426f-8757-d700a8ff1c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f257e8bc-b207-4b07-91db-d8423412ce89",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922277a2-8048-4639-bdc4-8b3f36896bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd402c4-3576-43fc-a8ff-780b160d71d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae46d39-5a01-408f-8b9d-f683306b1c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "054c947e-8af0-452e-ae01-43890becda62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e0066a-67c7-4439-b864-85c77393a18a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af35cf5-32de-42c8-9a8d-3b59f3662654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32140e77-75bb-40d2-9589-4d48628c956c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c45579-ad3b-4f11-9f3c-79868c118351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5533edba-ba46-4595-91b9-59d0895f2f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15e3518-3275-4792-ae5b-776310cf9ae7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b55447-d657-48e3-a76d-39b2e1d362be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82152ac3-96eb-49f6-ab4a-aa7c17a05254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d09ce8-2438-4524-9f35-ac03a28576ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b687232-247a-4565-bbc0-d29c911f71ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a92576-f53b-4139-a21c-9fca784f5b11",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd45fc8-bcb4-45ed-bf71-ae366f5b9a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1af9066-a625-4f18-90c3-d964599d911f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33535e16-2585-4a03-bacc-286532284c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98111b54-9e46-4a4b-8c45-250987bb3db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473a67fa-064b-49ca-bae7-7fb322423392",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc73139b-ea7c-4c13-afa8-6c0cd6ebab38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91a1378-fddd-43b5-8b83-cddc4c209e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e17c24b-4378-458d-a5fa-5773cdb1c379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7e5e5d-18ad-4f89-b8f5-72f2c4098033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eaeef1a-17dc-4d6e-be79-38d749132ee4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89383a15-db5e-4aa1-9dc1-e53caac1a8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef22b841-bfcf-4fcf-b8fe-bf996a44b61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89c6ddc-d6ca-4359-b1ff-a7c922e3442b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea21b812-44b0-42f0-a1fd-19811001735c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c9d4e9-08d3-4b61-bd7b-3079d2efe4e4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e644b0e-72b6-4a45-a485-4a169b30390b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364c44bb-a40b-4909-b9e1-8e36184ac689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bf8bbd-904f-4199-9563-b32f6cd8b626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40eb4c46-65a9-4b2b-930a-ed94964ba049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1724af50-7537-488a-849b-21d37fd63c69",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967a8744-046c-4f1a-bcd8-d9730b905a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3aa6320-30d6-44ea-b134-68ed52ead3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6baa014-26e1-4f0f-af59-36782d649eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f086baa6-e673-48b4-9e6b-c2c41af108f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b862df2-8c40-40ba-9abc-6ae874c2a180",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9effd9e7-c9ab-4502-b743-ad917664a74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c665b515-7766-4719-877b-f0d32151928a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5062057f-4001-46c6-81f1-52009ca17bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "212f1f68-690f-42eb-b89a-5359f25c0ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c7c307-c8bf-4750-9b31-7f710f7751e5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662b609d-f773-4a18-9a44-57bba1a2722a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f312775-b39f-4aee-b437-0434a4f2e30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59129b9d-2953-4eea-81e9-7962c37ef81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a1ab35-afde-4acd-8c2a-173756d08e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa243278-f255-47df-97d0-8447c600126b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75c803f-1f5a-47e6-92e6-1a132804379d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc5cb41-023d-4765-9b5d-9ab44c1d6a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03123185-64ba-4ec7-ba46-efdbb3267c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27868139-4465-43ee-84c3-dcdf2e8ea0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2b9b44-ff03-4335-9e1e-39c6840b4e9f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde7e034-0119-4b82-9c7d-a5cd13049068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b51fe8-ec34-4c8d-b83d-54a724851e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0bfafe-68f7-46d9-9c7b-222ba6dfa282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98755b0b-c1c7-4d4b-b238-0ca3b1891844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46dd0d8-b6da-40df-b66d-dd0b531bf3ef",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cfaff5-e7bc-4464-b2fd-d8908afdfe74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c196bc7-ad4f-44e8-b424-06f9f25de54a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a24dc9-ad08-44de-9c04-4292708b48d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94a07ff4-c649-42ca-a1fb-86efb49e523d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d42872-6c0c-444a-9926-545faf3bf730",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c7e468-8e94-4d0d-ac6a-25ac751403e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2935d44-c577-4ddf-885f-1e6cd335b0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2354d8ec-417e-4ff4-9caa-b99cc8f0a1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95471816-3c5b-4b62-8967-e62cc0cb7227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec18e3ff-ee4e-4af4-b95b-030785a66bf0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0152ea7d-3353-4be8-9a80-0115609c2cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a34b72ca-641e-4659-8bfe-eb5f0edd181c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a056605d-4b19-4edc-9e5c-34286df45c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52e361ba-b371-45b4-bcf8-80f57772efc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04431fda-09eb-4070-ae00-e50c5890a8f8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8dea0d-5c52-4716-8289-3557e1bbf465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b083e8ca-72c8-41aa-a9c5-032974e615a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0dcec7-9f7d-4300-b72d-042ca632aff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fad1855-310c-4bd2-9574-23c579e1c559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008e893c-7266-43b6-9049-d4278cdfd113",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5258a6-415f-440f-9d1c-52ba5594a130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249f5355-c0fc-4e0a-bba4-c156773e9726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea087cd7-25ef-4f55-b863-ab198f06bcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8300bbc-afa4-4c2d-8728-7ccdfa879edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519ed25d-87dc-4799-b129-de067e971e06",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edef991-7b0e-45e3-a27e-da2f8c2fa744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0674aadb-c201-4ca3-9bb5-daeebe7ac34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48aac7a2-efd7-45a9-ba1d-d7c9be9391fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1064af47-5e3e-4d24-a49e-4fc724059860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defa2e2b-559f-4005-bcf0-dac30e2a71f8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1f47e1-86be-4ee1-bb59-961324b3ebf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd74e7f-8725-4db3-a24d-002a76105509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bd8326-4dd0-4779-9c34-0859566af3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb18b56-d667-4c44-a1a4-c3d3f38b78a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "188b6a59-3514-4a81-bbe9-2e2211ca35d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc976ee1-27b4-4e97-a7ff-469c4a08a320",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b15468e-84ce-410d-9a5b-8ac8d86ee886",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2f23622e-ebe1-423b-9f04-02b28b4a7dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ea87f8-df7a-4922-b24c-b20b096200e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0525cc07-6ecc-48bd-99aa-670ea70570b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9f02331-9020-4260-9f92-99779b3cc478",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "930f5654-2c35-4f86-b1e7-80000614e212"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4031b48a-5960-4661-aad4-dfbeec3fb2eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "faa7d528-b90d-43c0-929e-d7b24ee0c828"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffc29138-076a-49c5-8089-c075809d8151",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f525c109-74e7-44c9-a074-d373f0141173"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca35788e-5a1e-4ce1-8dbf-446b27dda11f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "836486d1-51aa-4613-8d1f-ecf4f2389508"
            }
          }
        ]
      },
      {
        "id": "60d70ec6-4ca1-4b33-907a-f1953f69c640",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0d64ff39-165f-4777-9932-7a91a80f47fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "443ae80b-e601-44a3-8570-67adcade6f6f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d2e2f55a-4e86-40f9-a0fb-31b87ce4109d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f82bc0a-efd4-466f-a78e-58575f12d165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ebdfc1-84b6-4f3f-b742-3c34767346c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f008fe-55bb-4141-a134-1a0ce9eb1e1f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbc8d8c-1015-4436-a006-02be435e0b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d43aeb-8c10-4d77-91cf-eaa3e72ea135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e267544-ba6b-4cc1-a261-41c426c989b7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2390f693-dc4f-4ea7-b0d9-2ef44dd39c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3611c5ed-1a3f-4511-8dce-9391415cadd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482ef8b7-4f06-4cc3-bced-e8c4d7b404c3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bd51df-9f20-4f3f-8c0f-7ae00b63166d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9480f4e3-76c0-432b-9df5-5de0f93bdd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7a1136-eb48-4fc0-97fb-06130eb68650",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4dd9aa-888f-4576-a3a0-33bcd852446e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56110aa0-ed69-42a4-8c31-7b06e732d750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29001448-904a-49c2-a4b3-829903b3a20a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419522f4-404b-44ab-ab39-4a46538c6a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27e8512-139e-4a0b-a876-c5884515798c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73050c9-d4c8-40f4-a804-cc0ac8f8eb61",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02006668-f036-4c41-8930-03130b4ff599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0130bb-c305-4460-80c3-13dd7e24ab0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d23fb7f-2fbe-4c4b-9d77-c2af95e2fe1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33fc1d11-8433-498c-ae58-f8f41a903ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d4ddff-f8d0-4843-895a-aee392616fc5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435c94ba-fb8c-46ba-9d2b-decd821e335a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bac32239-9971-430d-bd31-b37b9fdf1b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66d37a7-e4de-4e9d-96f2-8e3c616ddddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d134dab-e5d1-4e51-a7ca-5e1dfb22e698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df873f19-c1be-4e6e-b779-6f6477ee100b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c089c7-9b64-4065-9b8d-31723ea60a53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b69ed01-7612-4bae-94a0-989853ef4e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "472a5163-e051-46f6-9dc3-e1ac38c709d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da9d5e1-2164-42aa-97ac-8c42f969fea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e6abaa-c8f0-4bd1-84fd-5ff7ced3f593",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5dd4b8-cc21-4a2a-88cd-d50f44793f52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71dd64e0-d7c4-4d29-bf82-3ed5db02e849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a1891e-7395-4afc-b4d2-f54b00db3175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5096f6d5-cd2c-42a6-88ad-e604fcc92a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be51975e-8540-4261-adad-5b4d2b03b782",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640677d6-9183-46af-b677-59c560746145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718787a0-456f-4172-a680-9543a0051402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93458f1a-9336-4a92-a42f-25d1a9e3de13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c948124d-cb87-4f1b-96c9-7b4e02b59586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bb5406-3f07-415a-be03-c2738b4261b1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a31fc4-16b7-40c6-b738-ceb113add19d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4fbfe2e-6d2e-456f-bafa-a1b56d75fe6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f8c9cd-917e-41bf-a741-2dc8a68071f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0965dfcb-9497-4645-95ef-9c4fd6cd1fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d44d138-2209-471e-971d-d5a10389d02e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e92128c-4574-4304-a7da-3b3dd0185128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d8f310-d1df-424b-9393-bddc4519357c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb136c3-7ac0-4ba8-96d9-4e7422b73ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e493af-9e1b-4f00-927b-82a16a382159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf8551a-a494-4b7c-86dd-a86454122e75",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed83629-e343-4386-91fb-2b6cb4502852",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77815d12-35a9-43e0-9f88-d6fe11a9a7e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26894ce-08fc-4e0b-ac21-daa676f740ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6a1070-9390-4549-8d94-b4caf7929cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e9aca0-7316-4496-896b-a5107d515868",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2a2722-db75-43d9-a182-02462ebeaa9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eaebea8-7536-4356-93fb-9299f646c266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d38d3c3-5ba9-4235-a706-e7ce55907097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e850e71-934c-4e5d-9334-d10910a7fab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53653c81-36cd-46bb-af64-353302bdf761",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5598e59a-f6c9-424d-b0cb-2a83a28ab288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "791f233d-bcee-4d14-9ea1-9bd2e7960661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfa4c9e-9b71-48c6-b2fa-020a960bad91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a394fe31-d095-4647-94e7-41840c10b450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e693e4f5-492e-4778-b02c-64baaee5dc65",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76021536-f290-4bca-ba26-0bc84034cc66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c169f8af-7523-464d-930c-409d91aacf6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6ef324-63d5-4258-906a-136c6b693b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae189bd-fd6d-4476-b709-bb3d521ba185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b014a55d-dfb8-40d8-a656-27f5a116c605",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d7dcf8-3b78-4ab5-b18d-7407fb5a3c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d58f8c-3a46-441e-bf3b-5f8ffee5eccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "291721cb-ab18-4ddc-819e-3a7480c5b5fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5806fef3-8cdb-443c-8a4c-d1949a80bed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605b5b1c-9ed7-4cd7-89cf-40d2a5d17d96",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e00821-a440-4fa0-b689-6aa4141391a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad1eb56-327c-4e90-a087-1e64bd9b58b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d011ad5-0350-4ca9-89b3-7281440ef9e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603be1e2-4bb8-462a-b99e-5657fe80e247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfacf613-9827-4da6-be8b-43e8dfebe160",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc11eb0-9ae4-4d50-a09c-78f87fa3c6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3b84c9-32c5-4c05-9977-f70cd8c42271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23cc521-339b-498d-baa0-dda44a4b4672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5a3530-8319-4587-84e3-acf06274805b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f76d9e1-dfa6-4e03-809a-57047a36d614",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c3bd66-3dc5-4d7f-8ece-c2dcd370fc77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05559fed-a62f-4caa-92a5-d8765231a04a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c212dfa2-0b49-4064-bd19-d00084fee3f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944b7751-0c63-42dc-b465-fd55d132972a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651355be-0511-4a39-81b5-67072a2c1f48",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de8237c-8ea9-414e-83a7-efdec68fc84b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37dfe8a5-1bf6-49be-b0ba-98e2bf10d2b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2f1dd4-850c-46d9-a42d-ca2ca24cf34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce8892f-c22a-4dbf-9f3d-29b5cb052139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e7dc40-2ef5-4cfe-9af3-7beb806ebea3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4e43a6-80d9-4a5f-9869-fa7b53f60961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871fdbf5-699c-459e-81b8-aa2bdae681ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "672748fe-1aca-4318-bc35-be58f75288bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6191828-24b6-49f0-bba4-ffd74ce32095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abaa2149-e92e-4d88-9b7a-496d479548a5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede71489-d058-456f-bfb6-7d1c2dd1b412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb020254-15fa-4df0-a319-8946e909d41e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d3116a-1c9f-4e40-86dd-99cbf12a59dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7eadb77-a9c6-4d07-a4cb-dd5c5f999739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1073d3-8767-4b88-a983-2aa9fe9ee211",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af02d6d6-8a4e-45e1-b2d7-3339368da946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cc1e3cf-45f6-4638-ae4e-a790c7e63013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "475aa6cf-d8b3-4251-8ad4-bfef42fdfde5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "204a19a1-2ec5-48f7-b236-ae0ba4c3a71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b89c35-395e-4466-b27c-280f7d69ce6f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69352e4-aaca-4de9-8e7c-92b21f3d457f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b2d0d73-4846-44f9-bd3b-c7185e790e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cdfddb-1164-4860-b675-cb851964e9e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13523b3-ba5f-4f66-9986-e80579ea7456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cede8c44-5243-48e2-8cf9-19c8494f3697",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49592c53-0b9d-4372-9ca0-d8994cab387f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e76528ab-2c6a-4e21-9ab3-dc5408b11b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4973c16d-30b9-451e-b1ee-b001d794cb74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbcb6abe-0f5d-4010-8c7c-4162ebc5ee06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753184a2-dbc7-4fb2-be25-15db79b1e995",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f074e31f-73be-4be2-afeb-3d4bff8ec33f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad791a2-b0a1-4727-8776-c10b4f65486d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e91b5b8-7443-43cd-924c-23b71d4e5ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4190705e-76ac-4f16-abaa-8d1c2ce039bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f37fcd-7fff-4fd5-904a-e563b7ec7bcf",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcbdd39-bef0-4d8e-9cb9-1f18af457fb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cb13a72-6e4e-426a-9236-c019d855387b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4b1534-c008-4212-b893-5381b2be10fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f66ef3-2ff6-4ee4-9e9d-4c6fecbd918a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d95d00-8094-4a11-b5cb-e88370dbac1e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4b4f75-1c66-42da-aa30-f747bfc09402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74fe0c2a-2506-4a08-a2fa-f6c1d96eab09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8608d20d-9dfd-4b2c-acbb-3c5c9fc689e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634ef64a-3cbd-4a6c-a21d-f6dfd558dd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8d6a6f-55a6-4e8d-acf1-cffc686bb040",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bca5ed-ea54-482d-a578-9bab06dc620b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01341fe1-f6d0-4cd9-9e4f-7c4ace8ab618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1e0478-568b-41e8-ae1c-9f68019a27b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c11dc98-2b03-49a1-91da-f6b8bfaea274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5a47b1-acf7-463a-adaf-822fffe44b9a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e33b60-201c-44fc-82fc-397d0e82930c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1214b5fc-29a9-43ec-b7df-db07ba5b5f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03041d7-5b7d-4477-a5b0-ce32ecc9ad6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcabbf29-c34b-40ef-9493-d5f6d9988bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788af6da-694f-456d-8336-db22b1a09f3a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896606da-741a-403b-ab86-e659178773a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30fd85a9-2310-44b5-9cf8-bdfb500edf91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1e62fb-fd81-408e-84eb-a6230e0f336f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6095dcad-58f6-4e66-9eb5-a4836f561043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5feb1e1b-cb7f-47f3-8d7c-53e570b562aa",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869699c6-a7f2-4326-ac1a-771ba56d6dea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77a521f2-4d54-41a8-b03c-a34bb8375a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bd31ab-0a51-4343-8efe-5598a21fde3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ff79eb-cc1d-4a85-8f4d-d892bb8ae4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0d0966-6ab4-42cd-9759-b996e983660c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e336cd-ee48-4ab0-81e3-eaec4a10efa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9766d2f-b2c8-41ff-b4bd-a6aafc1ff489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ce8957-28f2-4bb2-8c4d-d82e07d0abf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e11b19a-865e-4865-ab8c-18d906c0dac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc01a59a-21c2-45ea-b987-143a09beb07a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c031c3b8-a23c-414d-9519-109dd1560fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e587a615-5b64-476e-9e6a-ee5a8e5a2ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cec19b7-0de0-4dda-8626-5c4bc8e4b3b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f74e07-7b4a-4812-bddb-67cdaad9f913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d17d5a-de5f-4cdb-8dab-a94ba3531db9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8779f9-78af-422a-b39e-7e6386cb51f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2421de31-5a25-46e8-b868-3664f7637b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1d3c8f-3ff7-4733-8992-c3c3d78a2bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934ca0f2-1536-4072-8dd6-cb8939e2f44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f812784-52f6-4c03-9fcb-d6c0f7ba1254",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53e54ee-8409-49f1-bca3-4f65000f36b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc27395-cb4c-442d-b69d-2796a05000c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35f77b9-8000-4efd-9f23-b7e73b0c0808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f27e88e-2432-4453-a1b5-3a7e41f91cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3bc22a-0085-4a5f-a40f-edb63009696b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6205d7a-78dd-4f55-a9b1-1326a3e81602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8074c0-479a-4fd6-b16e-3e301292571a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd82ff9-b5fb-4a5f-ae7d-2a409637fa57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a16a4878-b038-4f28-b515-3abacdf60927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859aaa12-95ec-481b-bad1-1192bdafda40",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ff71a5-745b-4e45-b00a-dd7a291b3b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442a4409-de1a-4a90-9acf-3035e9fb2959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fd7d22-9d3a-4391-8e6b-8ae83ca98216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65123b0-8fdd-46d8-a5cf-760a63c816a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692c21a3-b3d9-4752-adca-75cf7f0d3af5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67aa729-d967-4a4d-a8d5-4a16033d8bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace407ca-b748-4ef8-8a42-15612bb68f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "857d34ce-a45d-4fb6-a6af-9bb62d19d46d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6935f2-058f-41e3-ad00-8334ab2fa7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a93c44-75ec-4751-9b22-2ec690ee5dfb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86ef220-7798-4a7b-ae1f-f2515f4e5626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c0b5bd-dc0b-435b-9c45-e1612e83bbd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bf2cc3-eddd-43e0-8689-093988114971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "551e7763-2d8b-41f2-a284-8378ea38ba31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839c78c4-b174-49eb-8c23-36c9a424de79",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3413e605-cbe5-480a-93e9-afb3f36c42ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4186f33f-270c-46fc-bf79-e36ac3a4b85d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0165143d-52bb-42e8-a3fe-16678059e5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0556f02c-a479-4884-96e7-d6884f35b168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aaa56b5-a7cc-453d-ad1e-1340f9e2e6e6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c2ace1-23b2-4402-a423-a6160cb03171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52918c30-1c77-4d37-8fa2-386a050e1921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20f1004-7ea3-4bdb-abe7-594f35d23e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753d8c8c-176b-4200-8090-b4197c608222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d88f1e6-ef67-40ba-9e3b-90507e4385fc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da3c5f9-7275-456e-a742-2933fe2d773b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3bdac3-bafe-425b-88f8-88ea613c4154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a398693-15c7-4181-a680-ba1be82835a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1be8888-a928-43dc-b5ca-e30fa64e4000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6ff134-b2c8-41b2-8cd8-ea6ca4bc3f0b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae86e71a-8e1d-4136-8358-ba62f3a27aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c5db73-2e31-49e8-a19b-cffa92d0bf3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce64b9f-6d6f-4649-bc36-615b4a53da66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0500db62-e371-4fbd-a9f5-3ddcad01224a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e10ae0-ca6b-4ecb-844f-010e5cc7673a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d0b0fd-bf64-4977-a62c-f6d91167491b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6798e6f6-909b-4056-8a6a-fcb5b1722260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bfb50b-19d6-44af-8a59-27e5d832a95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7afb403-8886-4101-9cf5-73d1f219902e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22931429-afa9-475a-bb65-16c473f0740f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7683f8f5-e09c-4595-9b48-a190fb1af094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81bde155-12b2-4163-a4c6-cca493552821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1026f2-f9af-496e-b2a9-a6efb8c57cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af69321c-6c76-4339-8818-0badedde8cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bebc1c8-38e4-43dc-818a-2f3d7cbae3d9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce15ad9-781e-4781-9c84-ce3492ea65ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b5b4c5-a12a-413f-ac64-5333330ac034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "939063d3-7e79-49df-ac54-8df5ed96ee54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea0cd98-5807-4077-bc34-34a21279ecf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7109991a-ba2f-4878-96cb-54a18686f419",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae482272-19e4-464f-bda8-996cc0c785c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f20da0-443e-477c-8eac-8595d7df29d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6eb2d4-268f-4dc8-b6b1-fb1b11530a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf02f591-5b0d-46f9-b101-01fc1d4d6392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e45d80-9b20-42d0-a72c-c318ff01df2b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc52d258-eee3-4d26-81d1-6b52585e9d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f365c6-72ad-4a0d-a21b-51083103abdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa0beb4-e1ba-4e0d-8837-22477fa95fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14334f9d-6a49-4640-9961-71b889d4374e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ace6b8-9f00-4ac1-bca6-b2acde93cea5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9db631-5f93-42e7-a0b3-1a429b1f3c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044b0663-976e-4ba3-97e6-39553170e0b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b127ca-8d29-417a-9dcf-0038ee377101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24bd25e-86a6-4525-ad64-b06f98ddbc9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e007792a-a2f0-4e27-a7dd-165fc4ea3e85",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d7eb3a-32f9-438d-8660-75e8cadc8fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63eb1c03-d395-491e-9561-1d71b52c04ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "275745b2-7764-48e1-87d1-03fe1eab1e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aff7514-6458-451e-bc91-8ff16958f657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1971851-ed34-4119-b4d4-7742b2888d92",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69df9c0-12dd-4138-b848-7f1aeb323129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212770e3-8ab7-4c2a-a931-2b7d4bd358fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c51395a-22e6-4d2b-aa54-769b86ce4962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef36927c-5109-4c17-9267-808ccae5c2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450eb748-ab9d-4353-af30-b2f8c65aeca7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3e3c66-fcc2-4c92-b0b5-d69c133ffebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b079f8eb-0133-468e-900c-46c3bc9b5f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c90c40-72e0-40ee-b4a0-da452a281664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5606b7-0f8c-4e78-99fd-bc91da0890a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcceb30-47a4-441f-9892-49a41936e327",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097f4068-a06d-4b94-923e-bc35c5ace002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250a2053-5bdd-4562-839f-cf96b1151271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d17e15-fb09-4457-a9af-581bf168a41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a18797-d199-4779-84a9-7d81dde1839b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276a4df0-c161-4846-9721-d7d9ab9cfb0f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef26b23-f8c8-4836-80bb-10d4dee382c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4378183a-2213-417b-be19-6c166a49f638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "343cfeba-292f-4196-8346-12f6f38fa75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a467a4-4ac7-488f-83c5-ac55d84442e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6b2f6e-8ad4-45c2-a480-af51e98840ae",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1617b225-a212-4ffd-9bc4-d72963ac1171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f87f42-7398-4037-981d-491cdaae72ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86398b1-c81f-4dac-b674-9521714cf53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a79ca8-891d-4bb4-90d5-d6a6fcdf3ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bde95d-894c-43d4-a091-5105576ac247",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7aa9ece-daa5-4d9b-980c-36452749acdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f784a746-dddf-4224-aaef-0c0167f213e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3aa2064-f3c2-4014-a626-083dccb5017d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04b38ee-51da-42c6-87f0-3fd8ebf7b361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5651f1a0-5259-4874-82f2-029ceb900622",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9563dcb-ee93-4fcb-be91-5a5e863ec7bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c72bdef-1c4a-421c-8165-0934a3c8b6bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9c61a0-2551-47d2-8b49-3b30e0deb0e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35e2a02-6906-4c7c-9ada-cdd9edf1f61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261c8716-4a01-4a1f-8369-c481e7fc0f2a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40deb147-2e1f-417e-8d5c-76eb2a1c614e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a0c976-d9ad-4ac1-8486-d3d41dd3e3bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22882926-e41c-4525-a0b3-99a8cc51581c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8664695d-afc1-4397-b9fa-343556fdd520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d6fe08-fd60-41ec-ad8f-9896386c544a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2ff508-b45f-4148-90b0-913341a7c80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc359dde-7174-462a-b2f9-e3f175225edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450fefde-baca-413d-a8e6-eaf458934582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812e94a7-3f30-4c12-a464-21b44f468db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae016c9-db56-40aa-a35f-a0624ce0816e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d3a1dd-cd98-4c9d-b8a8-838ed37a0582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2448fd59-c0f5-4410-be99-00a9e5f98f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd92b9b-2814-47cc-965e-250187c78cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04dee4ce-2832-4fd7-a2e5-89cb622ae1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9413a7bb-2eff-462a-a576-06ffaba94703",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a3c6bd-79b0-4c88-a201-be4e8ba3dd36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e369a6b8-09f5-437c-b93d-2e1535771bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "968b2d0e-84a1-4fae-904b-7b5fd8c8e5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95d7697-7f03-4fdf-845c-30393f118bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95dd417b-cdf8-4f86-88dc-edaad0ce8481",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f949639-f084-44c2-ab30-a8fb8a09adf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7786ca5a-177d-46a7-a3d9-e893a297a3e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b804569-d06f-4d8e-a8a7-9fa77bc837c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6258e10-048c-4412-9163-89985b1a5af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a992ee7f-eb96-4d60-92bc-8d16b0922d87",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3f4799-e40b-4e59-b716-6a176550db4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75e26267-c2de-4992-b7d2-fe55bb062087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d82204-2085-486f-8df6-966433875ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb1fafc-2335-4799-977f-bea44b993836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe6c9db-749f-4f89-88b4-b839e162901a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25582dba-7ce2-4a39-a4d3-bd78a5086110",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56c176d5-05f6-44f0-8bc3-6e067acc46f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eeca0ee-38ae-43d8-8291-3e5b32af2557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42abfd0-0b0b-457e-9c70-a29156c81f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647aa3f3-952f-41ff-b394-a018c24b3471",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d61493-1879-4a67-b242-0da92025bb83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "666c060a-354c-4834-9d76-09ab26bdb715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c45389-5f51-4585-9e06-866fd08b4178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89af0557-45e0-4af8-a5bd-81801fcc3660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d034f3a9-fa37-4c24-bd9e-bc26815a6080",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7168175b-2792-40bc-9c26-bd94177f84d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83131c3a-fb90-4367-aa8d-98daabe89863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c643085d-e8fe-4d54-bc15-7ef1afcd5611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e2675b-e8f6-4729-9c13-e8567f31c04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1f66bb-fee6-4097-89bf-2fec2e5d4c87",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802c1a96-fdd2-4a59-8b6f-ae526033dba9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "101c3881-2999-449a-a904-ff5203f718ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db355106-b6a4-468a-b3c8-87905b19e702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b74a1e-8d12-4fed-ba2e-2ec7896815dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6046337a-8e51-4cb9-89fc-4754ff718b96",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0853e0df-0aea-43d1-a089-f11d2985cb1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50acc154-f9cf-4a5e-89c1-bc3c13e545b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6da1d43-6238-4eb0-ab02-abb59f51fee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92be8b5a-453e-4cbe-a6ff-02cf16526142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fb72a7-d9f1-4ef2-8e16-1f50ce10487c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd553b2-9587-4a13-9ca3-7e3a00b040ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5190f50d-9128-42a8-b827-64cd4480526b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b85fe28-52ac-46a9-b36f-e30e7b56fb67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71b1384-4ff4-4682-8d5e-cf7920187f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475cab31-6741-40f8-8960-db167be33f42",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9596460-6fc0-42f2-9a23-e204ff6e7290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a498da4-f442-4e57-9adc-9cc9da8c7cd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "946f70a5-3b1c-472f-9326-3bd655b2564a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc574088-6736-48a5-9c2b-7a77e9cf5194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df0e883-9024-408b-a32c-f30f1b63a55e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580c71a6-a1ef-4826-accf-0e6f45167dcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ae21e5a-e462-4195-95ed-017e63e5fdcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8470de8-27ea-4302-bb72-6ad91952856f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7068e58c-0d2f-41a7-bbeb-5a696c36c87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4df9309-c6c5-46f0-8fc8-c1ff80baf218",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9807c30c-ca5b-40bd-b7a1-f5f7a4588013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed65e645-b305-4cfb-87a0-3c49668abde6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9be6514-a996-4827-95bb-4b3a9aba3325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d4bd08-74a0-47ca-8ddd-c04e5a0bf9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51506f4e-8547-43eb-9b73-4bc697cb448f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3271d2-5097-4e2d-9fad-24802cb2b2b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c6b7228-071b-43fa-ac82-a97057d51f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e544737-4231-4dd8-8f85-524888c8dde4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb688f4-9bb2-4a72-a5ed-97b73f5a42d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be445bb-3246-4783-8d3d-2d3d14c30ad5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de20503d-30c7-45c2-b9b9-3182d3261ae6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f7ffff3-442e-4509-81f9-200850745695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbbbf5e-d70c-41c6-ad1b-4c5becd9a379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6106798-21e0-48d4-b178-431430a56308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c45d0ae-224e-469b-947d-cbd527201464",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401f2e15-c6dc-486e-b864-91afca5669f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f8d47cb-1f5e-4b05-87ac-11163dabbc9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0892f8-ac5b-4a4a-8041-d2ee9b2d70b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312fb3d6-520a-4961-ad06-5c823af2d5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f9b377-77ae-41ef-b820-8d7e7eb9cbc0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512dc7f0-3b3d-4690-b2aa-907bd7c8c703",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f378fac0-eddd-486b-aaf1-c883857634e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acf00cd-1cc5-4583-a371-2424e6b470b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dee0587-40ee-4c2d-9a6d-1392455dac82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5f08a4-7ff7-40ac-8532-949a0469eae7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7c2b88-e4c9-46c8-bdbf-f7eee493798d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69a1ac15-b446-4ea3-bac9-d931fb0d41be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "499d7bd3-9045-4a69-98ec-88556bb62640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2466cdf-5940-40d6-9808-73cd454917a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103b3fa1-6128-4f4c-a204-b207bb1e7597",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cd70ee-85da-4710-ba1f-e7ed35e2a08a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f09943b4-ed86-4b12-9a2f-3045addcfa4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2d0a09-d580-4a9f-9eec-0874594d5c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb5b996-a544-4d61-acd5-2e5bc4be6c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9650e6ac-ca49-44ad-8666-bded411669c2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84934667-773b-4062-9cc2-ae5807b37da1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73e2e2ca-4c7c-428a-b126-bfcc89c9660f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7617f50-40a9-4813-943b-91f8b2796c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5c0f08-d0cd-4e04-838b-a098299102d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f009c6-4c86-40c9-9903-b0adf1430b56",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22478450-9535-40b4-88ca-f08eb77574fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b61d5e2-8c7b-45ba-b9e4-3f1c626b708e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d7ed5c-f242-453c-a751-c2a81cf1a701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6345986-bd84-47c2-b17b-dac591bef8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c952aa-f36c-41d1-90a3-cd53e122fdf3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c27a43-90a3-48e5-a606-2fe216b474ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b7ca08-8a0c-4de7-b5d9-19d6effa881d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8413fe82-a230-4ac7-8515-70f88db7bb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79d363d-e03e-48c4-a4e7-e369fe0bc065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e0ffeb-cf0b-4b7a-9c36-fc1d938e683d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77d9d09-7de4-4d21-869a-72d799a910af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9a95890-d8a5-4eeb-9129-060dc07253b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5128551-4312-4db6-81e1-c1aeb38c5515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1f15d1-4df6-4f2a-8ae8-5ef182394310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04742ee-aef7-4334-9f73-f90333700996",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc4e5e1-02d5-4230-b50e-8e1a000c6070",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab75f123-1b0c-4327-b225-27ff5f8542a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65cf465-6461-4faf-9d4b-fe48c96d586b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855ec8fa-c87b-4ebd-b52e-caef12315f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a10fdc-f6e1-482b-95df-0fbc352e12fb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8dd1b92-9df7-4b0d-a4de-516b0765a408",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "374a8156-8c52-4014-bdc1-07cf3e3fea7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c33e7a-22e0-429f-a606-54676900c254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0809d8f-a345-464b-becb-93a2531a0d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef81d4b7-f5d2-4037-81b7-6a502cbde416",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31348fd4-92ce-4fdf-8cb8-98e78c0a8c3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52e8f2cf-3ec0-4ce1-88ea-fe4a03cf0fda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3500a7-03bf-46be-98a0-1aef481e050b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0146afdc-e37d-4d46-9e52-1dd50f4f926a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88917039-7ae1-467a-a10f-c3122d183bee",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183bd536-8e24-4f74-9589-cb41a6df415e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f57dd940-cef3-4263-a00c-7cb960b28ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "186e3681-dd5c-4764-bd7f-837a0b3aab8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c25bbd6-acae-434a-9f4b-570d58367d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca8fbd3-afb4-4203-a739-dda8b99b0a4b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa07e4e4-e75f-42e4-92cf-dcb6d98cb233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57ce9913-5c97-47c0-88b2-ab55b2d38120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20368470-b321-4397-b4b9-a962a3b8ed4a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989023f3-ecd7-4760-9ae3-81572517f965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1f7fc8-d0e8-45c3-84d5-2abe101d8ee7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbf7b00-65dc-475d-ad06-2987d3b99659",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33d33817-197c-4ff6-a20a-06b17c7f1039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3dd197-2868-4e08-96b9-6ec1dde25ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd07ec60-c2ae-4ff4-9825-c85193a98e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373528dc-3618-4cf6-ae84-db55908dab7f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49bd0fc-9e1d-4ec8-af37-4fded8c63f92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51821914-ed8b-4ef7-864a-01e3e5ce44a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f7efbb-d6bc-498d-8680-a40ed30d4ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23c69c8-02c1-4859-8e20-f011a6c177ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53d1be2-ac78-4a45-ade5-113adfc240c0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cefa86-47bd-4460-8c1c-0ff66ca58c2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eedb9e2-c151-4cdc-8137-54639c39825c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "236d0baf-c38d-4291-8a67-f939b8c78df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5bbe97-6e7c-4e65-9e1c-9498081f85a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3378d6-6819-4380-85f1-e2ce957b340b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16663e1-a27a-4063-9761-8c26bc577aea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14651d31-77e5-45b8-a123-00f0c79b364e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12c65d8-cd68-4c88-abce-162a0d5b306d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f772d3c-82d0-49c8-87bd-3cb48fc42548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631119b0-6956-46c3-b8c6-428e98ad222e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0c15de-0e3e-4768-9ed3-bc61e7c9de5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1066cded-887b-4c35-b3f7-8ab93e443052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e1bfdc-fd15-4534-9441-733e847c7490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8651ecf3-2b57-4d70-8d49-77431ae698f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80731510-f69d-4040-8132-b626e7cde04f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9156f200-8649-4459-b229-caba3e219040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9a5ae5e-0290-4a0f-98d7-7d701e05fa15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd980cc-a119-405f-aa4b-bd761a0e5de2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5c3133-3386-4d3b-96f6-97663924f609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0c7fb4-6f53-4c1c-a8bc-a3ac5e809086",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8a07de-1a23-4fca-9b23-c30ced4b5d67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca251ef5-28a4-42b1-8bc4-70dde86678d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e66aca-5502-4d30-bac2-2ad37e7c4335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22898c87-ff33-4a43-8f6d-886dae8a926b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb1a0f37-e8c7-47db-8a6d-ac5b068bed82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "010ba1ad-24dd-4d98-b493-5c50e234ef68"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8dfaef4d-842f-43cd-a7af-ce6e441db295",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f647bcfa-e2e3-4f38-9fe1-96009878fe1e"
                    }
                  }
                ]
              },
              {
                "id": "d08ec035-2f99-4128-8bae-7aeb8d20ad6a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7aafdc5f-1f22-4094-818b-97c0c4a786c5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77496d8f-a02a-4026-abf2-3890b1cef2d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9ff84b7a-8c76-497d-8f1e-eb34023cc70c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fd7c42-c02a-4ff8-95f6-11092c10def7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0ca52d6-742b-4169-a30a-2485edddbf60"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa101943-04e3-47a9-8562-1c795bb00d9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05270ee6-d8e2-4015-8ea5-df9c1d2549ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef9b19ae-1dd5-45fe-a216-1ae04571751c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8f42e45-0595-4481-b832-3603c20c6c27"
                    }
                  }
                ]
              },
              {
                "id": "40b9cf15-bf02-4d8d-b2ee-24ba7a3d1044",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "da2c92d4-fb59-4a4b-821f-e9d27854aa3f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ea22e9-0b35-4483-88b8-8193c8d3faaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e1982e4b-6210-42a3-b5e9-7d6bc56f1a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9316c47-79d6-4bee-827b-e059f0d77541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23851af8-0e4d-4ef2-b481-a57580b4b29b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "eddd78d3-b8c7-4d40-99b6-11760b34024a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "db43f08f-b140-40d3-a4b1-4f3f73c5d7e8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eff380ad-5fc5-477e-9b6b-bb7973c48664",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "62b2f4cd-f06a-47f7-9ed9-549308fea6f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "983f232f-9ff8-4d09-b026-af330eeceb30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fca3bad1-1867-483e-9d45-a270a9e74ba3"
                    }
                  }
                ]
              },
              {
                "id": "2fd77b2d-4f2f-4a95-b266-52f42c396f08",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fc3dad9-e07b-4152-9ece-0b7f2c00a864",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "666dfe8e-89c7-48e2-b798-0df8a28636fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93fd6f5f-8f5d-4a1c-98a4-18d812398aec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea4bea68-98b8-4174-939e-d156c5c20e4f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3e5f64a-379e-452f-a391-faa805588898",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "706803bc-ba8d-4062-bb4f-ec4a60d9b8f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "413588c6-f8b9-45ce-897c-85f8f448c28d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90f80ce0-bdfa-4bbd-9927-767efc32ac8c"
            }
          }
        ]
      },
      {
        "id": "afc7e063-9474-4766-8570-32a52e2d9538",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9d1a2bf6-da47-4fb6-ac04-047f397bea27",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57fe13bc-c784-4667-9ede-c529ac5d9274",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b34af73-4501-4f62-bd07-263a7aaa5eec",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1228ce67-0737-4eaa-b3d5-6caec88b0584",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0b51639a-ac27-4f9a-95e0-31cc8d177ff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f25f8ec-9730-4063-8d56-885c78bf3159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd9df1b0-cc42-48e5-b6ad-b41a85e200af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c684de7-d055-46f4-8122-f77f162bd4a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26b60a1f-55da-4c3d-affb-baabf113ab9b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "41b3f012-b26e-421b-8fd6-fe4062485fb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "345e5045-2104-4b04-bdaa-edf5de6045a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8ac19d6-9217-4a36-b408-effb969d0152",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f3671f84-218a-41ae-8587-9d4db8dc5d93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9525be37-5dd4-4fa5-b2a8-e9f7ddf0e33f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e23ef94-2fb7-41be-b5d2-a47bb738c8d7"
            }
          }
        ]
      },
      {
        "id": "26a6e93a-8a19-41f7-a0dd-fcb112c8baac",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9e8cfac7-ebfd-4f0c-88e3-8b1e72d802a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6057784f-f898-4c5b-9181-da331ed1dc01",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4dc3459-418f-48af-bcb8-f062e6ba2b4f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3248cf85-6a64-41f5-a195-c25b53c663be",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb80434c-a138-4d2f-ad7f-d7a58e0c6c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cefa62-eb42-4e64-9ff4-3db56f1c3784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b85eff93-b2c9-45c1-8b76-7af800ad0d4d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5048108-eea1-4b4a-9e21-102b53fb4dd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "972019b0-710b-48a6-9270-11fbf7b364e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1ba3f2a-9314-4d34-b1e7-2d459b0e2956",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "953d660b-9c44-426c-a2bf-0e4baf18610a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a76d82ef-7e3f-463a-846d-ba6c455dbb16",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2ed8902a-03d5-49ca-b97d-25b76f8a253c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c5e5775-9758-457b-af6d-200afb9d8466",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f248408-f943-4ce5-890f-f17dbadb47ec"
            }
          }
        ]
      },
      {
        "id": "135df5e5-4910-4884-b54f-9a98b50d422c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1099bc2a-57a4-48ad-8849-9f23ff030544",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ae930df-2bfc-423e-9a41-88546bbc6e3f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41eb2583-a709-4f3a-9ffa-f162d63f7222",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03dcc619-4787-47c8-b6a3-703bfdcf81d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "235fda2c-1ebe-4598-980b-799a71fa8e5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d90c9b-0089-4c19-a93b-bfcbea6f0bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eed1e270-4552-4f80-80a5-91caa60b9982"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1935d70-665a-4363-95a6-89e7b418c521",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b955b80e-a1a5-4226-9829-56da88089db9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06765f9d-d876-4d49-940e-00d31d4c3878",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04c0be9f-0110-48c3-a66a-8a849b9c1b21"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adbfe4e1-42cc-4fcd-a73f-cb326773cbbe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eb141242-89d8-40cf-aaf6-efecd4bca2dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76111475-1ba6-4d42-a902-efe70737401d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a582670a-4248-4730-a9d9-93613b30e615"
            }
          }
        ]
      },
      {
        "id": "ddf04c4e-9338-4760-a801-f24611f261f1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc14cd96-9761-498a-928d-5dc520089224",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d0a7097-477f-4d0d-9bab-8e849d35ae7b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6759ff41-28b7-4733-8058-c8f872f397b5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21f26174-3772-4cce-b78f-4921428bdcac",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "604b6e9e-fed5-4816-9c78-428fefa37511",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 115.0436507936508,
      "responseMin": 11,
      "responseMax": 9191,
      "responseSd": 625.0066492339672,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718325472516,
      "completed": 1718325509894
    },
    "executions": [
      {
        "id": "62b58ee0-8619-4350-9fd3-5b1da2f81f69",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "16e737cb-ea7e-4b0c-8279-a01bb43e85ea",
          "httpRequestId": "17b06171-6614-45f0-8982-42d6a3eee96f"
        },
        "item": {
          "id": "62b58ee0-8619-4350-9fd3-5b1da2f81f69",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7bb301c6-efea-4387-9ac7-b7b01d85a4a2",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "5c8bb77d-74bd-432b-83e1-10381083646a",
        "cursor": {
          "ref": "18e47c6c-91d7-4dd8-8844-ba213ec5f886",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4e1565c2-868d-4d79-b2b5-0e00dd113b2d"
        },
        "item": {
          "id": "5c8bb77d-74bd-432b-83e1-10381083646a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fbe4a910-408a-4ff2-8892-eebd17354617",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "52e39a6e-7f7b-4786-8677-27722293a4d8",
        "cursor": {
          "ref": "6cedc82f-7db6-41b0-b038-d61ca2b823c8",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5bc2674f-3fe8-456d-aaf1-6096c2493fac"
        },
        "item": {
          "id": "52e39a6e-7f7b-4786-8677-27722293a4d8",
          "name": "did_json"
        },
        "response": {
          "id": "561f6221-38e9-4e70-9fc6-ed716add0fce",
          "status": "OK",
          "code": 200,
          "responseTime": 194,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8e3a78-52f6-45db-b2cd-17052547c8da",
        "cursor": {
          "ref": "5ac5ff11-cd77-4768-9698-e1fa8543a066",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "52680b65-46ad-43f1-a30e-d72428c0b9ef"
        },
        "item": {
          "id": "bb8e3a78-52f6-45db-b2cd-17052547c8da",
          "name": "did:invalid"
        },
        "response": {
          "id": "64b4a08d-8299-4930-bfb9-0558eb50ab5e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 399,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8e3a78-52f6-45db-b2cd-17052547c8da",
        "cursor": {
          "ref": "5ac5ff11-cd77-4768-9698-e1fa8543a066",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "52680b65-46ad-43f1-a30e-d72428c0b9ef"
        },
        "item": {
          "id": "bb8e3a78-52f6-45db-b2cd-17052547c8da",
          "name": "did:invalid"
        },
        "response": {
          "id": "64b4a08d-8299-4930-bfb9-0558eb50ab5e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 399,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734e97fe-7c98-467a-ad41-582278a52a50",
        "cursor": {
          "ref": "18c23a73-6abc-4228-aa75-f19ceb063834",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "02cf379f-66eb-40fd-8174-8ba66dba32df"
        },
        "item": {
          "id": "734e97fe-7c98-467a-ad41-582278a52a50",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "12297bf1-d431-4549-81b2-48704afcbe6c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5fb27f-d71d-49d7-bfe2-9cb07050a785",
        "cursor": {
          "ref": "4dea0197-86e5-4995-9e0c-ece38fd07785",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f413d9fb-0802-425e-b836-26ef1ac93908"
        },
        "item": {
          "id": "2c5fb27f-d71d-49d7-bfe2-9cb07050a785",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5da79bb6-20e7-4d1d-ab45-53dd4da9964f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719e766d-9e36-41db-8257-bfee34a4d9d2",
        "cursor": {
          "ref": "231252e6-81fc-4b86-9426-f4bb4b960f84",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4af644b1-7850-4345-89ad-81457fc8f193"
        },
        "item": {
          "id": "719e766d-9e36-41db-8257-bfee34a4d9d2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "059c6d1a-3b4c-4222-9ac5-684392ab1f80",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fb2b0c-f14b-4eaa-931e-0221f65a3e77",
        "cursor": {
          "ref": "6fb1c5cf-2f6c-4c29-a424-8e50dad2991c",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f73f4d07-a8a9-4978-9727-e289394bf117"
        },
        "item": {
          "id": "99fb2b0c-f14b-4eaa-931e-0221f65a3e77",
          "name": "identifiers"
        },
        "response": {
          "id": "e0bfaa43-2d5c-4e91-b409-ed05e59aa605",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f17e693-3100-486a-879d-43b4115a7fa5",
        "cursor": {
          "ref": "201f1078-0d1f-4ac8-b025-b7155bd8d2d4",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "43701bf1-e609-424f-9be6-719d0db6469c"
        },
        "item": {
          "id": "7f17e693-3100-486a-879d-43b4115a7fa5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c3f776bc-6966-460c-b412-85a336d2eb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c315f8-c3ec-4180-8f18-5fa5d68e5cfc",
        "cursor": {
          "ref": "1e2ea729-603a-4f1f-afe5-50acf16a402e",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "95706abc-d050-472d-9965-863bf5785b0e"
        },
        "item": {
          "id": "24c315f8-c3ec-4180-8f18-5fa5d68e5cfc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8dfd7e52-866f-4d0e-a752-4a252a6ef11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2448fb5-ae3b-4e56-a612-e271f42cb792",
        "cursor": {
          "ref": "a147b835-801c-4208-858e-03bf75f039f9",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a20f2727-3735-49af-8ad4-28ed183fc00c"
        },
        "item": {
          "id": "c2448fb5-ae3b-4e56-a612-e271f42cb792",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5e9710be-68da-4dab-9dc0-c747b90e114e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d814b9-541c-40e7-8886-18f3f5415f69",
        "cursor": {
          "ref": "2ca5c006-3cf6-432f-b127-195cb36d04be",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b4b07171-a462-462d-90bf-32e2b9b1a950"
        },
        "item": {
          "id": "94d814b9-541c-40e7-8886-18f3f5415f69",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "973b593e-f191-40e9-8e69-219613ec8953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21e83a3-26d1-44aa-b8f8-a295c781a772",
        "cursor": {
          "ref": "2c381aff-6caa-4a9c-8484-c979d665dd15",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1b4d444a-7eb9-43f4-a761-dd61d1f47b17"
        },
        "item": {
          "id": "a21e83a3-26d1-44aa-b8f8-a295c781a772",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "57172bb2-9770-4f28-a083-f0e98bfa93b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b286c6f0-157e-47bf-a3dc-426bf0bc22f4",
        "cursor": {
          "ref": "d3b71bc1-16a0-4a01-8a71-eeda511f1c27",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "533d62d6-045f-4227-a58b-d8ce570fa529"
        },
        "item": {
          "id": "b286c6f0-157e-47bf-a3dc-426bf0bc22f4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f877fe70-ec96-42e2-81ce-a9968a8b5bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e56049-6f75-4a3c-9649-934dbba98fd3",
        "cursor": {
          "ref": "37782220-06d7-48d2-9e72-5a4e5329d5be",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e1d2e683-21be-413d-ba2b-89049edeb589"
        },
        "item": {
          "id": "80e56049-6f75-4a3c-9649-934dbba98fd3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e069083e-68ab-46a5-9dc0-a912b86857b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c7fa70-f30e-41a3-b4a8-5929680e7fcf",
        "cursor": {
          "ref": "fcae997c-d26f-4173-9cfc-dda4b60ffc12",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8ed4135b-aa52-48c3-a2bc-ed5661ebeb66"
        },
        "item": {
          "id": "95c7fa70-f30e-41a3-b4a8-5929680e7fcf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0ec699a7-273d-452f-80e3-06ac34fc2e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f28eb6-5e53-4480-9fc0-a9cc71a8dd70",
        "cursor": {
          "ref": "ac07bb1e-1088-4d37-8183-be3ef021fc77",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e119538e-f8ee-4484-9db6-85ecc1af8d5b"
        },
        "item": {
          "id": "42f28eb6-5e53-4480-9fc0-a9cc71a8dd70",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5ff41423-7de1-428d-9007-13b2bd1cc4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ee79cc-1f3a-47a3-a311-8c9511efda2f",
        "cursor": {
          "ref": "ae0f2b99-34f7-4b42-a52c-1aa56a9ced11",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f06a61ff-3ac1-4c4c-8e91-f2254906b635"
        },
        "item": {
          "id": "45ee79cc-1f3a-47a3-a311-8c9511efda2f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a7938af7-20a6-47d7-b435-a2f9c8fc1416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6d2dba-adca-4d4e-8028-7da1f921af91",
        "cursor": {
          "ref": "3e8bdc0c-ef02-41c5-b64a-738f0154879a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a92b9da8-03be-49df-8da9-41cecc5f20f4"
        },
        "item": {
          "id": "bb6d2dba-adca-4d4e-8028-7da1f921af91",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0a97c7f0-e8bd-4ee9-8341-eeb57163200a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1829e5b-a466-49c6-a52a-396e79be9b33",
        "cursor": {
          "ref": "b2075586-5f59-4f17-b72e-9aa9cbaea75c",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e277001f-5009-487f-8aa4-74e05dddf02b"
        },
        "item": {
          "id": "a1829e5b-a466-49c6-a52a-396e79be9b33",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1d14c530-410e-406f-8ba2-bc02c896430a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3d612f-f34b-490a-abdd-3fcbe0f93371",
        "cursor": {
          "ref": "ab70aa29-1693-43fc-aa8d-2a6642098cf8",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0631f0c8-f9b9-4fb7-bcd9-1f83e711895e"
        },
        "item": {
          "id": "3f3d612f-f34b-490a-abdd-3fcbe0f93371",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "77cbaec5-08b3-4964-9f39-6049d3be1a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb658798-92b0-43a1-a2b4-2436d2d415fb",
        "cursor": {
          "ref": "b718d1bc-d902-4467-a63d-1ddf302ad760",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "004eb489-4768-49ed-a0ab-1d157ada28e8"
        },
        "item": {
          "id": "bb658798-92b0-43a1-a2b4-2436d2d415fb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5c0c7b40-3851-424c-96c6-a4463c188009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f80386d-6c33-406c-949b-d947abf36e05",
        "cursor": {
          "ref": "056f4835-4f2d-4b6c-b905-2495814e65ee",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5baa468f-25de-49b2-a509-ee85a2f11829"
        },
        "item": {
          "id": "6f80386d-6c33-406c-949b-d947abf36e05",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0345795c-b46e-4a94-b15d-094aa991dd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df4addc-e0ca-4b0a-8c64-a35cdb7393ed",
        "cursor": {
          "ref": "bee8295d-871f-4212-8527-81d8cde4311c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "35622e0b-3f30-467f-ac86-d07abc3da17d"
        },
        "item": {
          "id": "3df4addc-e0ca-4b0a-8c64-a35cdb7393ed",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9b1e8c9d-492e-497c-88c8-968c2d5739c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d1c1e7-13e7-47be-b1b3-2a3c6f7e706b",
        "cursor": {
          "ref": "ed16c33b-ac95-4db3-b617-fbe48879a890",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "02236eb9-6bc9-47be-867a-6026cf78ec82"
        },
        "item": {
          "id": "62d1c1e7-13e7-47be-b1b3-2a3c6f7e706b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e9ee61cf-ff3f-4ece-8764-8d5e33a8c7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33f6cc9-cc44-4b34-bba7-0f4605e4f3bd",
        "cursor": {
          "ref": "46896cd6-f4c6-4dec-8ae0-50dc9b2716d5",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "49d3adc4-e2f3-4290-9bbb-2677dd497785"
        },
        "item": {
          "id": "b33f6cc9-cc44-4b34-bba7-0f4605e4f3bd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "443b8490-edbc-4f72-a657-dfff8f035877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b3f0cc-01b9-4581-bba4-8d5811b55332",
        "cursor": {
          "ref": "cd4178ed-18b2-4372-809d-7f387f51da57",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5377b0da-a8db-4bb3-8e64-62c5a69142a9"
        },
        "item": {
          "id": "47b3f0cc-01b9-4581-bba4-8d5811b55332",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "62398377-7c20-4b1d-b127-ffc3f38b472d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28f1e9b-e7cf-4d45-8749-8038a1be1adc",
        "cursor": {
          "ref": "a08e0213-ff1f-4a5c-beb5-57488eb13d0c",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f53a1c4b-e069-4e3e-978b-924b928d5399"
        },
        "item": {
          "id": "c28f1e9b-e7cf-4d45-8749-8038a1be1adc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4c88deb2-beb5-4198-b3e1-1d6c38a1e8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ca30e9-b514-45ca-9bb3-b18e06f46eed",
        "cursor": {
          "ref": "90e6b477-3fc8-4656-8603-a91c26071b76",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1e3eba20-f621-4ce1-9a8a-92c1269de216"
        },
        "item": {
          "id": "45ca30e9-b514-45ca-9bb3-b18e06f46eed",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e0bab645-dff2-49c3-94c0-7782231d6dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3550bc2f-77ae-4e8a-9845-17ebc0fb0437",
        "cursor": {
          "ref": "1d1b89c3-ff87-4aaf-9fc1-ffd4cc2ab3ae",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "60bf5e3e-b98f-48dd-b814-4753a9f89768"
        },
        "item": {
          "id": "3550bc2f-77ae-4e8a-9845-17ebc0fb0437",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3e5dcb65-1170-467b-9971-62685fbe3c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a63920-ca93-47e9-bd0e-6960eb95f9b4",
        "cursor": {
          "ref": "65b59f9a-d6db-4845-92ae-721489183a41",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c339bb29-f89c-4350-b435-36ed78bf03d8"
        },
        "item": {
          "id": "43a63920-ca93-47e9-bd0e-6960eb95f9b4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "13cd4427-dafa-460e-881a-8fd9a2cd53c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcbf2a4-11d5-44f6-bcd6-72d40fd6d779",
        "cursor": {
          "ref": "d2606200-76e0-484f-82bc-e796adc09575",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "38ee316e-97af-4100-99f6-bb7e5663afb5"
        },
        "item": {
          "id": "5fcbf2a4-11d5-44f6-bcd6-72d40fd6d779",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0d8fcdc8-4d69-45bf-984b-6795fd8fd36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdb958c-45ef-4acd-9b4f-aa4382bef4bf",
        "cursor": {
          "ref": "8fc0cda7-ba30-4803-808c-a189ff303981",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7607a861-60c0-4d06-85df-ba394d7b4055"
        },
        "item": {
          "id": "5fdb958c-45ef-4acd-9b4f-aa4382bef4bf",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0bf62292-a180-431a-84ae-983372c53222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f074ed-46ec-4756-8a4a-799c2dcaa53a",
        "cursor": {
          "ref": "5434faf1-6a85-40e2-857a-f2271f9ed9d9",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a0e01cf4-c8f9-4267-8587-6a91a324d3a0"
        },
        "item": {
          "id": "94f074ed-46ec-4756-8a4a-799c2dcaa53a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e41e4ec3-8564-4527-89f2-ab66b297b3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35db0a17-4c41-41e2-ad45-3eaa9306a73c",
        "cursor": {
          "ref": "9c851648-cc9f-4531-bbcb-a00324363aa4",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "da918495-aad2-4172-88ce-90c1f5461c7d"
        },
        "item": {
          "id": "35db0a17-4c41-41e2-ad45-3eaa9306a73c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b6a028db-bed4-4e11-9e0d-09eb9f5903e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3359725-ceb0-49af-91a0-af86bb000f70",
        "cursor": {
          "ref": "822cf457-c4d5-4ade-a387-01b7b283c167",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bc9d8024-6bc5-4469-8b20-59a6883e63ae"
        },
        "item": {
          "id": "d3359725-ceb0-49af-91a0-af86bb000f70",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3b858267-a08f-4a75-a44d-237fa3087240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef809a4-5889-47e1-b675-2696a600ea02",
        "cursor": {
          "ref": "dd057085-b620-40fd-845f-ad6ed9945ef4",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e62fe9db-fd42-43cf-9d64-6073e8d82050"
        },
        "item": {
          "id": "6ef809a4-5889-47e1-b675-2696a600ea02",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7794d94f-60de-4bb3-8cc8-2c569c3da508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09323f47-5b47-4361-aa27-22b23d1e5c60",
        "cursor": {
          "ref": "fa870246-bba9-4250-8ec3-d34ce3534653",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d86b1b84-9a8c-425a-b1ca-eb74808ce89a"
        },
        "item": {
          "id": "09323f47-5b47-4361-aa27-22b23d1e5c60",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "acdec642-ec2f-46ca-810b-68551647dcbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04c220d-9648-42c1-9c76-1df8a8ea6b2a",
        "cursor": {
          "ref": "967926e7-e8c3-4dec-941c-b92203a13527",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "91c73e66-2a64-4cc5-8c6c-253371c4ce4a"
        },
        "item": {
          "id": "c04c220d-9648-42c1-9c76-1df8a8ea6b2a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "96f0ccdd-36fa-4217-a4be-8ac2e919ce35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bb12e4-2a27-4838-b609-463105c57ff6",
        "cursor": {
          "ref": "3f2bf435-2189-403f-9bb9-a2a3f639cca5",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "259de6a6-4fe7-4e6d-b54e-8b490bda13d3"
        },
        "item": {
          "id": "d4bb12e4-2a27-4838-b609-463105c57ff6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9e29c510-c711-465d-bd20-50baddee40dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55422179-76f9-4a18-b006-d5dfbb530129",
        "cursor": {
          "ref": "2943a4f1-6760-4383-b807-5c88a9aa2d4c",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6f9b4172-d579-49d3-a2d9-d298da0adcab"
        },
        "item": {
          "id": "55422179-76f9-4a18-b006-d5dfbb530129",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a2f87b15-e2b8-412a-8972-99ba7fa99a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357de8bc-d24e-4400-b05c-624033929271",
        "cursor": {
          "ref": "4e272d8c-526e-4a01-8462-f8e182f150f8",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "949e466c-bcb4-44e7-b7e5-7dcf931f09c0"
        },
        "item": {
          "id": "357de8bc-d24e-4400-b05c-624033929271",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "95c1bc54-6d9a-4bae-825c-8cc62f6c7174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42c0eae-2476-4681-a6d0-ed293b50e404",
        "cursor": {
          "ref": "329c6f1d-af1d-45fe-a5e2-88083cff5e8b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b855f96b-c5f4-4d91-b4ba-076daa28f1dd"
        },
        "item": {
          "id": "d42c0eae-2476-4681-a6d0-ed293b50e404",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b8311d4b-25e2-46ad-9e13-15af24d3252c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e88d49a-4222-41ee-a107-5b871fb34f8c",
        "cursor": {
          "ref": "c17b0546-47de-498c-8ca3-e6bb771813a4",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7c188c39-4f66-4346-a4f1-c4f0474d61fe"
        },
        "item": {
          "id": "5e88d49a-4222-41ee-a107-5b871fb34f8c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3e0d12e2-09cd-4931-8c9a-b7cf5d496bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39a47f6-1c86-49ef-a46a-8e90b43134d4",
        "cursor": {
          "ref": "a6275016-5b76-4973-8039-9fc853b0661e",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "49a48fd1-cab1-4972-b19b-2b703f25cedf"
        },
        "item": {
          "id": "a39a47f6-1c86-49ef-a46a-8e90b43134d4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c0fff13a-65f1-4aa2-bf2f-4a1ff5e696c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602c7016-92ea-4ffb-b187-1c22ee41369b",
        "cursor": {
          "ref": "1d19ec45-04b7-419e-b364-e1b96507fb6c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d4f57e78-65ea-497f-953d-fc50aa4c8bc9"
        },
        "item": {
          "id": "602c7016-92ea-4ffb-b187-1c22ee41369b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "078e132c-79eb-45d7-ac9a-f80c289a61f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69689d49-9b7a-45c9-bc76-19477d876165",
        "cursor": {
          "ref": "bfa3afe6-8955-44fc-9d53-d1b0ad03338b",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c789a1ae-3235-4252-aa5f-a8798599a615"
        },
        "item": {
          "id": "69689d49-9b7a-45c9-bc76-19477d876165",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9724f29a-4dd5-400a-8020-41486c7c6132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7453bc6-075f-415a-b574-adc58a8d6fb5",
        "cursor": {
          "ref": "b45491ee-3f25-46dc-b8ca-8f9b4bcc449f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0c21f153-e1e3-4547-a5b2-2f249471a9f7"
        },
        "item": {
          "id": "c7453bc6-075f-415a-b574-adc58a8d6fb5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f4d286ad-7530-4f1a-92fc-f8c18d78ff0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe43271-6f69-4f8e-a913-74ddbbaf10e8",
        "cursor": {
          "ref": "fe939760-910b-4eca-a04e-c857ab449f22",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9a811840-dbac-47f3-af9a-3953ad1c0ac3"
        },
        "item": {
          "id": "bfe43271-6f69-4f8e-a913-74ddbbaf10e8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b24239b8-dae9-444c-8e01-d52047bd3e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b42084c-3428-4b12-a84c-8fe03d4c5870",
        "cursor": {
          "ref": "19cd4dc9-a65a-46b4-9b9b-bed0983c246d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "124191fe-dd74-4df0-a205-97fc13ee208f"
        },
        "item": {
          "id": "1b42084c-3428-4b12-a84c-8fe03d4c5870",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "adf275b5-f177-4520-988a-01efde9d32e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7935536-f5e1-44ed-8e3b-50f1f177dd06",
        "cursor": {
          "ref": "939c79b9-691b-4503-887c-e3a842cabc3a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0bd11ffc-5a56-4756-89f2-1366d628280a"
        },
        "item": {
          "id": "b7935536-f5e1-44ed-8e3b-50f1f177dd06",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b3717cc0-a1c7-478c-9031-de6ac6236408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5e887b-fce3-4a04-8de8-d5e52359d5e7",
        "cursor": {
          "ref": "c5a4e5e2-ceb8-4f30-b263-e211951ee60d",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f3e28c82-2764-4df7-b6d2-6b251257c791"
        },
        "item": {
          "id": "bb5e887b-fce3-4a04-8de8-d5e52359d5e7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8e26c965-e1e9-4258-94d3-55a5f93f2971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89aa56d-50e5-45e1-acd8-d800dbbfbf2d",
        "cursor": {
          "ref": "f17531dc-0754-4f1c-81dc-7bc1043937f6",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e033aceb-b16f-4cbc-b263-fe69ed37223b"
        },
        "item": {
          "id": "f89aa56d-50e5-45e1-acd8-d800dbbfbf2d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a6baa966-257a-4700-82f3-8374674930a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73cbaa3-401d-4091-9a53-5d3bf10cac4e",
        "cursor": {
          "ref": "2c7fabd9-d5e8-4014-a29c-1e14fe4b81af",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e893e582-965f-4ca8-8cc4-db1e1efbff79"
        },
        "item": {
          "id": "f73cbaa3-401d-4091-9a53-5d3bf10cac4e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "eb7ae173-c9d8-4d4c-b74e-d6639989facb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b354175-6231-49b6-9984-3cd4f0f7dc8f",
        "cursor": {
          "ref": "aa6565ce-a10f-430a-9a5e-17df6ef4420b",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "39054da1-e489-4d00-ac88-8378f60ee947"
        },
        "item": {
          "id": "0b354175-6231-49b6-9984-3cd4f0f7dc8f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ea65e77b-002a-4789-8814-89e07e9dfda4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fca818c-0196-492a-bedc-ce1f9386f311",
        "cursor": {
          "ref": "ec27b47e-e7eb-4993-8b0a-524591fb1670",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "325a56ae-ffd5-4a91-acae-7608adbac81c"
        },
        "item": {
          "id": "8fca818c-0196-492a-bedc-ce1f9386f311",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d12ec72f-c5c2-4903-8735-75b694a68431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e6b4ca-9c92-48e8-8d26-41b945ec31b5",
        "cursor": {
          "ref": "e43be7a1-44c7-4e94-b9df-c18f621eb161",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2fe640c5-5cb2-445a-8231-06f51b3e270c"
        },
        "item": {
          "id": "56e6b4ca-9c92-48e8-8d26-41b945ec31b5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "073cca61-d511-4a4c-b4aa-6751d72e18aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cdf75d-76a2-4f83-9ff8-d40548b882fb",
        "cursor": {
          "ref": "d1a0a9a5-0a62-40d6-a2cf-41b61337c807",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "64339e4e-a040-45a9-a799-919576c7c073"
        },
        "item": {
          "id": "82cdf75d-76a2-4f83-9ff8-d40548b882fb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ea923c80-87fc-47f8-868b-e15044c4fea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76ec9c5-1207-47d8-a2d3-54cc552dba99",
        "cursor": {
          "ref": "e1aeb30d-a21e-4eb5-9fc0-c0f78a0ce285",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3d17fcf7-6117-48d9-be43-0f892433dc1d"
        },
        "item": {
          "id": "e76ec9c5-1207-47d8-a2d3-54cc552dba99",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fb0a2dcb-54c7-4fe9-877f-9bbc28b39209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13352021-a0a2-4c8f-87ec-5c587c6b07e0",
        "cursor": {
          "ref": "5509eccd-c2ed-40da-b0ce-3676013ab3b8",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "91c6284c-8951-40da-b693-0097916a7c02"
        },
        "item": {
          "id": "13352021-a0a2-4c8f-87ec-5c587c6b07e0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "577fc710-09fc-4280-b8e1-67795954f164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81693a8-cc8a-4079-b2eb-1201f2b34057",
        "cursor": {
          "ref": "cd2da7cb-e5b1-4d26-9f01-a00daec67f24",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "52c02f69-c904-4289-a0ca-5cd4e9a50ae4"
        },
        "item": {
          "id": "a81693a8-cc8a-4079-b2eb-1201f2b34057",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "42b36932-67c8-426f-a094-f9c4d0548efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4ba6d2-b278-4170-933c-cc161eb96b09",
        "cursor": {
          "ref": "da7bfcf6-3465-4c96-9c08-0a613ed19aba",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "dc818874-813e-4473-a829-e30f74ca1460"
        },
        "item": {
          "id": "be4ba6d2-b278-4170-933c-cc161eb96b09",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ed069e8b-c9d2-446b-9b17-45e9865008ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4527d894-3812-4fa0-ad37-8a3d0da9e624",
        "cursor": {
          "ref": "8d604501-1999-4587-8c27-bc18b096a82b",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "18742d4b-a287-4661-a428-28aa1acdc8e8"
        },
        "item": {
          "id": "4527d894-3812-4fa0-ad37-8a3d0da9e624",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "842537c1-0c2d-4924-a491-dc806482bf1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af17be58-23eb-41ac-91b2-de9d8d5a688f",
        "cursor": {
          "ref": "4f7b55a7-b1ee-4089-8208-9c58222e9322",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "42c0d169-5d51-4bc2-98db-df1c047942bc"
        },
        "item": {
          "id": "af17be58-23eb-41ac-91b2-de9d8d5a688f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1235722f-e87e-41e5-8a72-b2833b085219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a89b73-f7ac-4a55-ad08-64a5756b1205",
        "cursor": {
          "ref": "e89fe6f5-bc6e-49b5-ad86-4e23a7a1732e",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e1819d09-d564-4280-a4eb-48bc18b2d7d1"
        },
        "item": {
          "id": "b7a89b73-f7ac-4a55-ad08-64a5756b1205",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c8bdb587-78a7-4419-a75a-d41115ff7a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e769c64-297e-4779-8c2c-e47954ad2b45",
        "cursor": {
          "ref": "a38eb4ed-6504-48b4-b5fc-e444eb9a70e9",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "87a026f1-3719-42c5-8f08-21a68fb35d97"
        },
        "item": {
          "id": "7e769c64-297e-4779-8c2c-e47954ad2b45",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b042188b-c31f-4d00-8e43-babdc37c6b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf304e7-752b-445a-86ba-cb2aef43109a",
        "cursor": {
          "ref": "3750fa48-107b-472c-8543-53dadb2d8410",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8c3c02df-db43-48d5-b375-036a19d44975"
        },
        "item": {
          "id": "1cf304e7-752b-445a-86ba-cb2aef43109a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b91004e2-85f7-4077-bbbc-7fe076803139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c37751a-594c-43ff-8dfa-78f1ff769ede",
        "cursor": {
          "ref": "b0fe592f-d2ec-4e29-8ee6-6f1c50ce3ef2",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "018fd9af-fece-448b-bcd4-56a177f2f53d"
        },
        "item": {
          "id": "4c37751a-594c-43ff-8dfa-78f1ff769ede",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9662c797-7e48-4df9-8cf1-867a776f2f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3509e259-ec9c-48ce-a309-25e386302306",
        "cursor": {
          "ref": "452060ff-527f-42b0-9811-178d275c0825",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "42fb5ded-90a1-4981-9048-8bfd55c85f93"
        },
        "item": {
          "id": "3509e259-ec9c-48ce-a309-25e386302306",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ecfef945-003b-4f6a-8aa8-9dd67eca4b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd29a27b-eba3-49a3-8ff9-6e87db9780cc",
        "cursor": {
          "ref": "02e6136b-cb5f-41ae-a7f5-20d69ebf7169",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8cbcf304-161f-453b-87d0-eb47683a4ace"
        },
        "item": {
          "id": "dd29a27b-eba3-49a3-8ff9-6e87db9780cc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "97041e5a-7f20-4d8b-860a-21f780e86626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709a1e44-67e1-4416-8e63-305dfbf6ea13",
        "cursor": {
          "ref": "ca2d5101-d038-42ec-816f-beaa65aa0d80",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8dad05ba-853e-4f7e-94b3-509cc6b50a1d"
        },
        "item": {
          "id": "709a1e44-67e1-4416-8e63-305dfbf6ea13",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cb85c87a-40d1-4e9e-895e-3af6d4dc53ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d846fdcd-76e0-4166-b81f-09f9eac2f655",
        "cursor": {
          "ref": "12c23f56-039f-4b04-9dbc-834106ec3619",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cecee472-07f2-4dcd-9e05-3360dc332665"
        },
        "item": {
          "id": "d846fdcd-76e0-4166-b81f-09f9eac2f655",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cf2737e7-e53f-44f9-9f22-11914d7dcf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fe9508-5711-4042-9c7a-221413a4d8a6",
        "cursor": {
          "ref": "185be69d-73a4-42d9-b696-40621cc25aa1",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7c021647-9e7a-4ba1-8f66-11cfb33909c5"
        },
        "item": {
          "id": "76fe9508-5711-4042-9c7a-221413a4d8a6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1415ff22-8248-477f-a4fe-9cf20a3b962c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b9a8c0-27d0-47b6-bf33-b3e865019c90",
        "cursor": {
          "ref": "73d518e0-b4ab-4325-8268-e34d2473f5e9",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d7e23e96-3096-432f-9acd-c21b50d54dae"
        },
        "item": {
          "id": "b9b9a8c0-27d0-47b6-bf33-b3e865019c90",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bfce0c18-6c3c-4a1d-ac84-3e5d174e11f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf1f984-393c-45f6-a2a6-7abc6052a147",
        "cursor": {
          "ref": "371a0693-4de2-4cea-bd9a-d7d64d67c03f",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8c28c44b-76b3-46a1-885c-728313c8f537"
        },
        "item": {
          "id": "9bf1f984-393c-45f6-a2a6-7abc6052a147",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "027074ff-20f5-4585-b4dc-2af7e4e0535a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10c4e8c-159f-407f-8b8e-5f6c81d9ab48",
        "cursor": {
          "ref": "617b93b8-61cf-49ec-8b9c-ffc745759ec9",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0065598b-8c35-4608-82f2-e1b2dcbd76bc"
        },
        "item": {
          "id": "c10c4e8c-159f-407f-8b8e-5f6c81d9ab48",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0c535937-712e-415f-85e3-7ec27a9f889b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc3608e-b3bf-4dda-bfdc-5cdbe82a39d1",
        "cursor": {
          "ref": "ff79aa82-6571-42d7-8f69-10d0697bb8fa",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "93e85042-485a-45fb-a575-662ffcb1944e"
        },
        "item": {
          "id": "4bc3608e-b3bf-4dda-bfdc-5cdbe82a39d1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9f90d52b-7a66-4a65-a17c-d18101ac7cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe8328e-6b2a-47f7-a47c-13a1794bdd73",
        "cursor": {
          "ref": "e8151784-19d6-4e8e-a426-7dd4177d916f",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "61c4b94a-2fc3-4cdc-b814-2b71f6cff0fc"
        },
        "item": {
          "id": "7fe8328e-6b2a-47f7-a47c-13a1794bdd73",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "921691b5-745c-464a-ac58-97a7e1169715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ceca76-5af0-48c1-8bdc-8f10ba18150b",
        "cursor": {
          "ref": "fdcd7da0-ffb7-4329-92c8-1ba39c1a727e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "92cfef53-30e2-4420-bcdc-96d2dd3bff9f"
        },
        "item": {
          "id": "68ceca76-5af0-48c1-8bdc-8f10ba18150b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f38f3a43-df1d-4347-9ac8-7fe47bbbbef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a5654d-11c6-4a43-9ea2-4bc105e370e4",
        "cursor": {
          "ref": "2affca3f-a856-44d4-bb90-21c2f72813e4",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c9e27de7-34f3-4818-b421-764c5779a2ba"
        },
        "item": {
          "id": "e8a5654d-11c6-4a43-9ea2-4bc105e370e4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c7326b3c-034f-461e-9823-760f4dd74087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d15dab-e31f-401d-ad2d-50df179f157b",
        "cursor": {
          "ref": "79f2bf5d-d978-4b13-9c6d-a5b2bda827d6",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5ffea52e-37a3-41be-92f9-47ad8ba3778c"
        },
        "item": {
          "id": "60d15dab-e31f-401d-ad2d-50df179f157b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "173c63b0-6e3c-4309-bca4-0092e477261a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbe4b80-4c00-47d1-a2de-1a45cdb10f8c",
        "cursor": {
          "ref": "da9413dd-fa25-465a-ac32-da63a2b106bd",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bf56df1a-880d-4260-ab79-ff10debdc4db"
        },
        "item": {
          "id": "3dbe4b80-4c00-47d1-a2de-1a45cdb10f8c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "12433dac-e69e-42a2-b383-d69d44654313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06eed153-688c-4dbe-97d6-b50a9cd418ff",
        "cursor": {
          "ref": "bc9a3fb6-928e-4715-9719-53a3308f4d2b",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "aed9815e-a4b2-48b8-ba8d-7d5ecc9019d1"
        },
        "item": {
          "id": "06eed153-688c-4dbe-97d6-b50a9cd418ff",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1c272bc7-902b-432e-a6e4-9a1d0b2e2850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876e88f5-4e92-48d5-96cc-1667baedfca5",
        "cursor": {
          "ref": "9526d313-5d14-4b65-8299-a8ee668aca55",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "23b437f7-42c9-4b53-8960-adc41d7552cc"
        },
        "item": {
          "id": "876e88f5-4e92-48d5-96cc-1667baedfca5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "164d10f2-cc03-48df-9d3c-ecf0527a6b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129db37e-c0c4-40df-b571-82400c2b54bf",
        "cursor": {
          "ref": "130b691e-10e0-4540-8a6f-4c7645942a8c",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d3a28fda-c9ab-4a3d-8bee-ef99ee5c6b04"
        },
        "item": {
          "id": "129db37e-c0c4-40df-b571-82400c2b54bf",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3d6a2894-7cdd-42fe-b8b2-4e166ef801ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f733b2f1-1fd2-456f-b83c-a1c40cca2566",
        "cursor": {
          "ref": "c8ecb0e3-8765-4143-ad2c-e59525464abf",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5dc849c4-58cf-4a7f-9d62-b375823ce559"
        },
        "item": {
          "id": "f733b2f1-1fd2-456f-b83c-a1c40cca2566",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "78091ab5-e05a-4958-a7e7-1c97b4aa150b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fc74a4-6932-47d7-82df-b2265b7ba1ec",
        "cursor": {
          "ref": "0c331191-cab1-4b4c-842e-576b055aa2b3",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c9ea71ce-86d1-40f9-8f19-fd5f1a7bcdce"
        },
        "item": {
          "id": "e7fc74a4-6932-47d7-82df-b2265b7ba1ec",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1821ce9d-5777-4ef1-ba73-4d826682420e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46bef82-44ac-4221-aa87-614731366cbf",
        "cursor": {
          "ref": "51c003a7-e082-4b40-8a0c-f50330757175",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "92544ffe-45b2-41b7-a0d7-220478a555da"
        },
        "item": {
          "id": "e46bef82-44ac-4221-aa87-614731366cbf",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "638b62cc-2f32-4429-a498-2217c6c27c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb847d8-3762-45c4-b2a9-e91215297f02",
        "cursor": {
          "ref": "eed6feef-dbcc-400e-a601-934b98d3aecf",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a5d270a2-9653-43c5-bd88-838b5a432740"
        },
        "item": {
          "id": "bbb847d8-3762-45c4-b2a9-e91215297f02",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "99ae85a5-1ac4-4ce9-ae38-eba3fc5470c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b05e45-024c-493e-a0e8-7257763cd396",
        "cursor": {
          "ref": "38a03ae3-b3d2-43ce-903f-2cda457515c2",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "372ec977-ed77-498c-bb06-a328249e8bd8"
        },
        "item": {
          "id": "77b05e45-024c-493e-a0e8-7257763cd396",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "69e67901-f03f-4152-8cd6-d28cd5dc6094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb571d4-abec-42a3-9e41-832981daf52d",
        "cursor": {
          "ref": "df2631c3-fec1-47ce-8170-2446e6857254",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "68ee62f1-7da8-481b-962f-7dd518944c7c"
        },
        "item": {
          "id": "0eb571d4-abec-42a3-9e41-832981daf52d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "adabf549-71b3-456d-8083-16cc0758fbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5f4e8d-6f7f-4310-80d8-7d2500e52f14",
        "cursor": {
          "ref": "f79dd76c-dfac-4e1d-9baf-ca120cf1b582",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e826e4a4-306c-4994-aaa6-4740aaacb459"
        },
        "item": {
          "id": "4f5f4e8d-6f7f-4310-80d8-7d2500e52f14",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d3168a31-5db0-461b-8432-e7ebfea6c851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe8c248-fd93-4b46-aca1-85553d521702",
        "cursor": {
          "ref": "d1907022-5709-45ba-9e5d-e22899d44f05",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6e46e03a-0b0d-47fa-8505-b094e56122a6"
        },
        "item": {
          "id": "2fe8c248-fd93-4b46-aca1-85553d521702",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "49167692-bd14-482d-876b-adfa9af14ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59eb9175-ff74-4410-a741-ad67bd09d590",
        "cursor": {
          "ref": "8603eb77-112f-486f-b9cb-0b90f396f13d",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7f2043c4-7459-4d48-9fd5-e5b9ca255585"
        },
        "item": {
          "id": "59eb9175-ff74-4410-a741-ad67bd09d590",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a84c5aff-5dfd-4227-80f1-547d864079b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd72d37c-1f1f-4d11-ac8c-d974261c315d",
        "cursor": {
          "ref": "85b5134b-bd4b-484d-9baa-b8b237e16380",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "252d2bb9-5021-4aad-9b8e-4288523d3906"
        },
        "item": {
          "id": "cd72d37c-1f1f-4d11-ac8c-d974261c315d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3533073a-d376-473b-9272-d8524c557eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285063e1-3ec1-4508-b7d0-76595acfe811",
        "cursor": {
          "ref": "0eb3f79c-4806-4f56-948c-aab7a0975471",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ee116cbc-64d4-4d24-834d-22b065a8f215"
        },
        "item": {
          "id": "285063e1-3ec1-4508-b7d0-76595acfe811",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e13c6e22-7037-427f-a771-2760c381ce41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2b4efb-51b0-4024-92ce-4370e4109231",
        "cursor": {
          "ref": "b8ec3616-b69c-4019-916f-0c0fda97afdc",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8cb927ac-16e1-45d6-8b70-a2980f0b37ab"
        },
        "item": {
          "id": "fc2b4efb-51b0-4024-92ce-4370e4109231",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7f84cb98-55b3-4e69-9d88-082489431164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03201ffd-4a00-42b4-89af-4a9f0b6c9984",
        "cursor": {
          "ref": "50fabc39-d78b-4ce2-a4d3-c81d9edca3db",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "927f6c48-88e0-472f-947a-8846952c44f6"
        },
        "item": {
          "id": "03201ffd-4a00-42b4-89af-4a9f0b6c9984",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f11aa58a-68f9-4cf3-b722-3a044267ae87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df97208-8770-43a6-83cf-8fdd806c3e7e",
        "cursor": {
          "ref": "8d41f1bf-a767-4a8d-9900-149c1658bffb",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f4e500b7-d767-44ab-8b66-0f114d7992ad"
        },
        "item": {
          "id": "0df97208-8770-43a6-83cf-8fdd806c3e7e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f44bdf0b-e38d-4fbf-8aaa-cfb0af6e8bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427349b5-5b65-43eb-978e-fac3f671013c",
        "cursor": {
          "ref": "b0617735-31c5-4325-85ef-6801e227d936",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d374a3d9-e8ab-4fd4-8fae-a25b5166c9a0"
        },
        "item": {
          "id": "427349b5-5b65-43eb-978e-fac3f671013c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a49842ce-15fa-463a-8cc8-faea37b78d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36688b9f-b7e1-487d-ac86-887504f7108f",
        "cursor": {
          "ref": "9b8ce368-d803-40cc-8ae4-64b1b817786f",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a58b0d1a-9756-4aaf-bbd1-e15f0e028ec8"
        },
        "item": {
          "id": "36688b9f-b7e1-487d-ac86-887504f7108f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "82814c48-e3df-4370-bc95-dace84d3950c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db50869f-5b27-4a47-a7b4-c0b97c7b2289",
        "cursor": {
          "ref": "fce80ca3-4a97-401a-96c6-6b8acc5eb074",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "094fd290-dbb4-4fde-b62b-d83501ede563"
        },
        "item": {
          "id": "db50869f-5b27-4a47-a7b4-c0b97c7b2289",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "891de9cb-b086-494b-b6c1-63cd9b87f7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "57ef10f3-c78b-4de8-b477-2d52ffb7af18",
        "cursor": {
          "ref": "b564fe64-0360-42f4-88fe-142b5015fe0c",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6c5af583-c437-479e-98c0-f5839e4ba45f"
        },
        "item": {
          "id": "57ef10f3-c78b-4de8-b477-2d52ffb7af18",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c8071012-83a2-4179-a37c-bdf9729bef31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "f2a56154-c41c-41d4-89c2-e58c7040b277",
        "cursor": {
          "ref": "ae6de711-9b2f-456c-8782-33049fe28ed7",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "be22274c-1310-411a-bc1c-3e3db796bdef"
        },
        "item": {
          "id": "f2a56154-c41c-41d4-89c2-e58c7040b277",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5379460c-4917-4ce8-9367-b84572d523b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "00464c05-5a16-4921-ab1d-da591fff355c",
        "cursor": {
          "ref": "71d13c07-0f56-41c0-8cd3-e7eab4149d13",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b28e81d0-bc1a-4ca0-9e91-ff838a67bccd"
        },
        "item": {
          "id": "00464c05-5a16-4921-ab1d-da591fff355c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b4b04016-4cbd-4d45-8378-9646bd4b94e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "3a514ea2-7f16-4f2e-85b3-4e03c948fa84",
        "cursor": {
          "ref": "2023c126-a0dd-4d53-8033-11c6a70f6555",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "35176d0c-e1d6-4b04-9b1b-c216287faacd"
        },
        "item": {
          "id": "3a514ea2-7f16-4f2e-85b3-4e03c948fa84",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0d4e03fa-75b9-42b2-997f-2d992fa8a3f7",
          "status": "Created",
          "code": 201,
          "responseTime": 9191,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "957ed882-07b2-4035-9e11-dc494285f9b6",
        "cursor": {
          "ref": "bcd185bf-4814-4d88-a18b-2ee5c0ff148c",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4fe3b31f-9517-4b2d-8fb1-924b894e456d"
        },
        "item": {
          "id": "957ed882-07b2-4035-9e11-dc494285f9b6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2e1e365c-c102-4217-acb0-cebab92a2d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "71a1b4e7-9be6-4a8d-8578-144edb9116be",
        "cursor": {
          "ref": "3d4a5a33-a712-424b-8a04-b8933d41a099",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a09ee2ce-f45f-41d2-ab82-83b9c52af5a9"
        },
        "item": {
          "id": "71a1b4e7-9be6-4a8d-8578-144edb9116be",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "13c90690-30c8-4cfb-9f7e-1d640aedab5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "181bf07c-8b31-40a4-a472-c781b22e2383",
        "cursor": {
          "ref": "b910d065-be9b-42b9-84c8-5cefe508115d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8a3dc342-6b71-4b3b-b474-e3a11d645004"
        },
        "item": {
          "id": "181bf07c-8b31-40a4-a472-c781b22e2383",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "43a5f844-f56a-4b0b-9511-05f204608e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c364084-6d17-4baa-92bb-a5e8291dac34",
        "cursor": {
          "ref": "d38cbcc1-cad7-470b-90eb-be65faaa9220",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1a57eb97-7ab1-485a-b2c4-f1a9311451e9"
        },
        "item": {
          "id": "7c364084-6d17-4baa-92bb-a5e8291dac34",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4cf73025-c4b9-48a4-83c1-232b768be015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ed3a9b-6179-492f-afa1-27250a3607ab",
        "cursor": {
          "ref": "21b2c55a-916d-43da-b9b6-0156308ca8f7",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bb49ed64-986e-4621-a306-36abaa909e6d"
        },
        "item": {
          "id": "21ed3a9b-6179-492f-afa1-27250a3607ab",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4779f182-1747-42f3-9d9a-4a50021835ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a174dd9-b48d-4635-ad6e-3c11a7732522",
        "cursor": {
          "ref": "efef72a3-45fa-4689-bce0-53df5a84e2ca",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "15877c89-ccbb-4203-81ab-a2f15b53c69c"
        },
        "item": {
          "id": "6a174dd9-b48d-4635-ad6e-3c11a7732522",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a50b0d01-4469-4c02-9b72-9effc477804f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95941f08-f913-4c9e-bdbe-007c3b57ef7a",
        "cursor": {
          "ref": "f313e94a-1472-4974-a32b-12aafb973621",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1ccf04fa-ab9f-4fe1-a289-579872583093"
        },
        "item": {
          "id": "95941f08-f913-4c9e-bdbe-007c3b57ef7a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fffc69b6-8a7b-47a1-af04-f3477536370a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed389e1-1b08-4f91-8ace-55cb417e2ceb",
        "cursor": {
          "ref": "2705b3ea-c7cb-4b23-a5e1-aa79d6421693",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6415e8fc-cdcc-4372-8c54-ef2c31c92c70"
        },
        "item": {
          "id": "1ed389e1-1b08-4f91-8ace-55cb417e2ceb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fe7ce44a-c0c6-4340-8cbc-63e9f432cfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9854a156-7aef-4d4c-b533-5e0f688ed786",
        "cursor": {
          "ref": "45caaeaa-54e5-4b0e-807d-b12fdb494318",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dadebdfe-b357-4487-8e41-3e56b7cf1ba5"
        },
        "item": {
          "id": "9854a156-7aef-4d4c-b533-5e0f688ed786",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cc480a22-623d-432c-92b0-b4cbea1f6048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506cfaa0-e269-4afb-9109-7ac83c2ee714",
        "cursor": {
          "ref": "80644ec6-e63a-4bc3-a5f4-da42157afd73",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "692537e9-f606-4ed3-ad3b-b5600dfe1867"
        },
        "item": {
          "id": "506cfaa0-e269-4afb-9109-7ac83c2ee714",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a8810487-2c30-496e-baf9-9fd3f32a03df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32d9613-ec36-4925-acfe-c81ee84af3b6",
        "cursor": {
          "ref": "398c4380-7301-4a46-bf44-5ea10df92211",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "88a84505-721d-4b6f-a92b-ee22d7ba863e"
        },
        "item": {
          "id": "b32d9613-ec36-4925-acfe-c81ee84af3b6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9f232fb8-1150-497e-821e-6bb4946f0a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f459d8bc-a643-46e7-a943-d3d7118a0ff7",
        "cursor": {
          "ref": "0349f69f-64fc-4e5b-8fdd-549989784db1",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bb83ef3a-e0a3-43c3-8c7f-1d08a845c2b4"
        },
        "item": {
          "id": "f459d8bc-a643-46e7-a943-d3d7118a0ff7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dc51c098-9523-467a-ac0a-12fdabcba465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fcb303-cb3b-4357-abf0-37e982ab3207",
        "cursor": {
          "ref": "a6828b91-4c74-46f0-8dd4-94aa44327594",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "38f52aff-faba-4e08-89b5-8f0fad1b049d"
        },
        "item": {
          "id": "b4fcb303-cb3b-4357-abf0-37e982ab3207",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "605508c8-4ad3-49fe-94b1-946b753c5a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e49ae9-5bea-4c3d-9b6b-109867f9c5d2",
        "cursor": {
          "ref": "715f8e6e-2c4c-4526-8699-0771b7d9b0e3",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f4a975b5-ee3d-4af2-a7fa-35c427edac0d"
        },
        "item": {
          "id": "f5e49ae9-5bea-4c3d-9b6b-109867f9c5d2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8e3581ed-79d5-483d-a338-d535101c4d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94646de5-d05b-4bd6-b6bd-b5cfa50deda7",
        "cursor": {
          "ref": "cd71d6e3-f6de-4964-8c14-0200283a2d1d",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "70d57985-593a-45ad-8432-c17359ffddea"
        },
        "item": {
          "id": "94646de5-d05b-4bd6-b6bd-b5cfa50deda7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b1ae92c0-eef4-429a-8689-dbf55a521c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4d4e14-8655-4691-9c1a-64fb6a27e52b",
        "cursor": {
          "ref": "a484fc1f-9642-40e6-9279-ffff67fe97e6",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4ade8a15-78d9-45bd-83b3-a7d38caeba16"
        },
        "item": {
          "id": "eb4d4e14-8655-4691-9c1a-64fb6a27e52b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cda74363-f7be-4863-a260-8bb8fcab0fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105f871b-c2ae-4bc0-a213-a664815750f2",
        "cursor": {
          "ref": "8d5856e7-7573-4142-8857-1c4faa4b7887",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2acf5b82-ad21-445c-9617-a1158345f6ed"
        },
        "item": {
          "id": "105f871b-c2ae-4bc0-a213-a664815750f2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8638c0a4-0fc5-47f3-9b70-908d4089c102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a5f990-d226-400c-b31e-83d97b89f9d3",
        "cursor": {
          "ref": "6af14a56-779c-462a-b1e1-9a2583fe0e04",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bfd7dbed-8119-4798-8b3a-979393df9c1b"
        },
        "item": {
          "id": "46a5f990-d226-400c-b31e-83d97b89f9d3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b2f86298-de52-40cc-b0a9-ef0075877489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8895cfa6-cb3d-458e-a086-54ae3085092f",
        "cursor": {
          "ref": "a1b82139-f304-4274-9e1c-72bcf3a20c58",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "45de7d84-d16a-4a0e-b876-7da97f0e365d"
        },
        "item": {
          "id": "8895cfa6-cb3d-458e-a086-54ae3085092f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0b8d2adc-5d58-499c-8707-6aa6d4ebeb0b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "f256fc47-d320-4df1-806c-404f017d7411",
        "cursor": {
          "ref": "1f3b6cf8-6f13-4790-8110-210dbe17e6d4",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5ddd4454-448d-4ff8-843b-cb88a6ef2a15"
        },
        "item": {
          "id": "f256fc47-d320-4df1-806c-404f017d7411",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5f45c934-7183-445f-a64f-c05ada023565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f257e8bc-b207-4b07-91db-d8423412ce89",
        "cursor": {
          "ref": "7b466305-4128-4039-ace8-e2b11ec121b8",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b05ac692-8884-42ae-be31-b701193ff1a4"
        },
        "item": {
          "id": "f257e8bc-b207-4b07-91db-d8423412ce89",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f67ece04-4c53-41d3-a151-2e6e68ae592c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e0066a-67c7-4439-b864-85c77393a18a",
        "cursor": {
          "ref": "f9a0e9af-623b-4668-aee5-44c632f86ccd",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "392e9ecb-4b39-4828-b94d-cd377baefaea"
        },
        "item": {
          "id": "04e0066a-67c7-4439-b864-85c77393a18a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3d69c9f8-3ffb-40c2-b336-6e083927621f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15e3518-3275-4792-ae5b-776310cf9ae7",
        "cursor": {
          "ref": "2710b1cc-6cb4-4814-8bb9-d7454990797e",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8b48832f-95e4-4911-bd0f-b0b8590c16fd"
        },
        "item": {
          "id": "b15e3518-3275-4792-ae5b-776310cf9ae7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "892d1748-e574-442d-9587-ca16ac19e939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a92576-f53b-4139-a21c-9fca784f5b11",
        "cursor": {
          "ref": "1e6adda4-33cc-4dff-b749-863bc6c5d606",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b904a000-dbad-404b-9d0a-280fade0789e"
        },
        "item": {
          "id": "e6a92576-f53b-4139-a21c-9fca784f5b11",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "52529174-f11c-4d9e-a4d3-ed8a6e488736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473a67fa-064b-49ca-bae7-7fb322423392",
        "cursor": {
          "ref": "4371248f-65c1-4539-9369-33d32932d926",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "65a12dff-ab0b-4fb7-a7be-f91eb3fcb5cb"
        },
        "item": {
          "id": "473a67fa-064b-49ca-bae7-7fb322423392",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d4157c9a-1a5c-4a9e-ac1e-5bdaec227f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eaeef1a-17dc-4d6e-be79-38d749132ee4",
        "cursor": {
          "ref": "c3036f08-6930-4f42-bdb4-f768bb43cc32",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d88e37c7-5299-4191-ad1a-099f6cd0f9bb"
        },
        "item": {
          "id": "9eaeef1a-17dc-4d6e-be79-38d749132ee4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6954116b-848c-4e15-b08c-987a7d20406d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c9d4e9-08d3-4b61-bd7b-3079d2efe4e4",
        "cursor": {
          "ref": "97448fee-8ddf-41d5-be9a-667c3bbbbb58",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b29e3d88-b9d9-4056-8e1b-1ca0638d19f2"
        },
        "item": {
          "id": "69c9d4e9-08d3-4b61-bd7b-3079d2efe4e4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6df0238b-89a7-4d6b-b8d7-22996ee1dad9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "1724af50-7537-488a-849b-21d37fd63c69",
        "cursor": {
          "ref": "db4a435a-aa8f-4aa2-94b1-5723f7461a46",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "677e5112-7694-453f-a2ce-6cea40e1a2bd"
        },
        "item": {
          "id": "1724af50-7537-488a-849b-21d37fd63c69",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a18ebdbe-9da0-45f5-abea-45365ad6ea54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b862df2-8c40-40ba-9abc-6ae874c2a180",
        "cursor": {
          "ref": "df761506-ddcb-4e1d-8342-bf2be6942e17",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "67f337a6-41ec-4f3f-b642-efb0920414f7"
        },
        "item": {
          "id": "1b862df2-8c40-40ba-9abc-6ae874c2a180",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c3c9a927-874c-4be6-b9a5-e304c4cfc5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c7c307-c8bf-4750-9b31-7f710f7751e5",
        "cursor": {
          "ref": "d790c399-81ce-46b3-bfc9-49a5ab0a5534",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "043ed827-a171-453f-8fb8-9cbcec244800"
        },
        "item": {
          "id": "17c7c307-c8bf-4750-9b31-7f710f7751e5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f4790a2c-eedc-44a1-99ce-3ed7d05a995e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa243278-f255-47df-97d0-8447c600126b",
        "cursor": {
          "ref": "a86d3d26-ec9e-46cb-a4cf-c1829fd7d8ff",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "57be53f0-eaa7-4ce2-8d58-ff49e9b16c39"
        },
        "item": {
          "id": "fa243278-f255-47df-97d0-8447c600126b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9fe5415c-46dd-4410-b4e6-78ff89f48a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2b9b44-ff03-4335-9e1e-39c6840b4e9f",
        "cursor": {
          "ref": "c9f14a66-aef0-485a-ab14-e330b2df7dbd",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "41d93442-5374-4bd4-807e-0be457b0e998"
        },
        "item": {
          "id": "4e2b9b44-ff03-4335-9e1e-39c6840b4e9f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "47f2dc74-e88e-48f3-acff-cd5756182a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46dd0d8-b6da-40df-b66d-dd0b531bf3ef",
        "cursor": {
          "ref": "97852091-5323-422a-845f-d6f0e6d5bb2d",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6a6bdb53-246d-46aa-afeb-0b75d19dc1f3"
        },
        "item": {
          "id": "c46dd0d8-b6da-40df-b66d-dd0b531bf3ef",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "489c465a-a997-4c3f-bf2d-4e568a78a27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d42872-6c0c-444a-9926-545faf3bf730",
        "cursor": {
          "ref": "dcb8f1a1-8ec3-42e7-bb2e-466aaa025e33",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "561f1530-6f3d-4da7-b30b-bccb685a583e"
        },
        "item": {
          "id": "26d42872-6c0c-444a-9926-545faf3bf730",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0492c3e0-d296-4b7d-8541-1446adb3e4c1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "ec18e3ff-ee4e-4af4-b95b-030785a66bf0",
        "cursor": {
          "ref": "05590dcc-2208-4c02-abef-decfb77e9ed1",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "74c98fc2-9b49-4d9b-902a-656f7a0a350e"
        },
        "item": {
          "id": "ec18e3ff-ee4e-4af4-b95b-030785a66bf0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5ee95b79-4fde-45d8-9b30-7983cdeddd2d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "04431fda-09eb-4070-ae00-e50c5890a8f8",
        "cursor": {
          "ref": "3903c94c-fe4f-484b-97a8-6fd80e2040d6",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7cba49cf-9725-4dbc-9462-2728e0490ecd"
        },
        "item": {
          "id": "04431fda-09eb-4070-ae00-e50c5890a8f8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b96922d4-a18d-4558-9ff3-05a84c80a9ad",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "008e893c-7266-43b6-9049-d4278cdfd113",
        "cursor": {
          "ref": "3e25ed4f-72dc-44a4-8423-a4e65fae5759",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8149b2ab-b7c1-40c2-90a8-7b1547792276"
        },
        "item": {
          "id": "008e893c-7266-43b6-9049-d4278cdfd113",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "47ca933e-67a2-4cf9-a7ed-c18445c1d6b8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "519ed25d-87dc-4799-b129-de067e971e06",
        "cursor": {
          "ref": "9f65c690-aa9f-495e-9244-c26d3429df3b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ed688228-39b7-4422-9db4-985d30f458d0"
        },
        "item": {
          "id": "519ed25d-87dc-4799-b129-de067e971e06",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ce166b09-6e38-48ae-8b96-b474274f75a6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "defa2e2b-559f-4005-bcf0-dac30e2a71f8",
        "cursor": {
          "ref": "562360e1-a7ac-4c7a-a429-69813aeadee9",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "70d2adb2-1a25-4b25-ba4b-d503e0bd79df"
        },
        "item": {
          "id": "defa2e2b-559f-4005-bcf0-dac30e2a71f8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f11a8db8-0274-4253-9fe3-67af544b58c1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 50,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "cc976ee1-27b4-4e97-a7ff-469c4a08a320",
        "cursor": {
          "ref": "4f1b9ad9-9938-4c9d-aa50-886e53829bf8",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6dee2f93-e4c3-42fe-ab6c-3574f2619f3b"
        },
        "item": {
          "id": "cc976ee1-27b4-4e97-a7ff-469c4a08a320",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f6a0a40f-aaf8-4341-9c52-83b3753b6030",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e2f55a-4e86-40f9-a0fb-31b87ce4109d",
        "cursor": {
          "ref": "47b2a042-9313-41d3-942e-1e4da3b804fe",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6766def3-60c2-408d-b559-496b6fc681d6"
        },
        "item": {
          "id": "d2e2f55a-4e86-40f9-a0fb-31b87ce4109d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "694ee165-9524-4bd3-a0f7-f8e5cc99eea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f008fe-55bb-4141-a134-1a0ce9eb1e1f",
        "cursor": {
          "ref": "d341c763-bc3e-4c4a-8577-bae2d3c487f7",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e13dcc4a-a1e7-49fe-991f-0b43414b5590"
        },
        "item": {
          "id": "b4f008fe-55bb-4141-a134-1a0ce9eb1e1f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8c5ef00f-f890-4fd0-8adc-f61e6a9f9eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e267544-ba6b-4cc1-a261-41c426c989b7",
        "cursor": {
          "ref": "6480418d-df60-4f7e-8321-b043bf24ec25",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "933fabc2-b60d-4369-babd-8afba0404962"
        },
        "item": {
          "id": "4e267544-ba6b-4cc1-a261-41c426c989b7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "95f3ed72-d610-4bb1-b705-f2ec3911b376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482ef8b7-4f06-4cc3-bced-e8c4d7b404c3",
        "cursor": {
          "ref": "7fee671a-9163-4b04-902c-e0c150fb687d",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "51fcee4b-2d74-4b09-9179-c57e3c6c8d09"
        },
        "item": {
          "id": "482ef8b7-4f06-4cc3-bced-e8c4d7b404c3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1143ac67-9d5f-4157-8cb6-fbb9b718eea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7a1136-eb48-4fc0-97fb-06130eb68650",
        "cursor": {
          "ref": "76cf849e-9ede-4a28-b10f-709e1728aac7",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6ae28593-7286-4d55-ae97-d169eefdaf3f"
        },
        "item": {
          "id": "6b7a1136-eb48-4fc0-97fb-06130eb68650",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fc6d6fd4-27e5-43ee-b38e-a2b8295fb7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29001448-904a-49c2-a4b3-829903b3a20a",
        "cursor": {
          "ref": "d6dabce3-c113-4650-9b54-f40989ca875d",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ba08ea07-a550-4502-af1a-02a194545a36"
        },
        "item": {
          "id": "29001448-904a-49c2-a4b3-829903b3a20a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b3d59ae4-2d39-49ef-a80f-1c77aa55a062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73050c9-d4c8-40f4-a804-cc0ac8f8eb61",
        "cursor": {
          "ref": "16c99428-4d4e-4b66-99cc-5dbc05f1b0b2",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d93ec2a2-9ab1-4d8d-b855-bce3a0820913"
        },
        "item": {
          "id": "b73050c9-d4c8-40f4-a804-cc0ac8f8eb61",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1bf1369b-9257-42ca-8fa4-a1436022d645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d4ddff-f8d0-4843-895a-aee392616fc5",
        "cursor": {
          "ref": "93fd6c5c-d6a9-47a3-98a6-67bbe3e2e33a",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "febf8c64-48b4-4ef0-9a97-0f29f45be2cc"
        },
        "item": {
          "id": "79d4ddff-f8d0-4843-895a-aee392616fc5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0fcaff50-6f1f-4ba4-ac4e-f920f3abc163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df873f19-c1be-4e6e-b779-6f6477ee100b",
        "cursor": {
          "ref": "9f3cfee2-43c3-42e3-acea-014c70c8438b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bb4c5ffc-01bb-49a9-917b-c9f0f550ba2c"
        },
        "item": {
          "id": "df873f19-c1be-4e6e-b779-6f6477ee100b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f410fa2d-8804-4882-b3b5-579f5ae81e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e6abaa-c8f0-4bd1-84fd-5ff7ced3f593",
        "cursor": {
          "ref": "162dc3a2-1db5-49b4-b164-b77ad3021a28",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "621fc283-a2fb-41dc-9138-34c316d868f0"
        },
        "item": {
          "id": "a6e6abaa-c8f0-4bd1-84fd-5ff7ced3f593",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2d7b9778-9c97-4325-aa45-81287df1a907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be51975e-8540-4261-adad-5b4d2b03b782",
        "cursor": {
          "ref": "9c19a297-9e5b-4446-88e3-d0c6c1067137",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ae5c67ba-21cc-44e1-86d3-c80c53552e49"
        },
        "item": {
          "id": "be51975e-8540-4261-adad-5b4d2b03b782",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5853df8f-b7e2-43ee-bba8-ed7496936ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bb5406-3f07-415a-be03-c2738b4261b1",
        "cursor": {
          "ref": "dc216a54-78cb-474a-80a7-40d4686bf637",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5cb31e73-e8d0-41d8-be91-04b5f2593253"
        },
        "item": {
          "id": "08bb5406-3f07-415a-be03-c2738b4261b1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5a1f9f4e-569b-4692-9ced-a0952768adbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d44d138-2209-471e-971d-d5a10389d02e",
        "cursor": {
          "ref": "2f092b96-03b4-4d4c-bcde-61940ed3549e",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8ab5d804-411f-4e9f-87d5-4aa5265b0137"
        },
        "item": {
          "id": "7d44d138-2209-471e-971d-d5a10389d02e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "237d2fbb-33a5-4cf5-ba7a-57000b94fc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf8551a-a494-4b7c-86dd-a86454122e75",
        "cursor": {
          "ref": "03640449-2bab-4805-a2ee-a658a333abc3",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "50fa4ebe-717b-4d16-b296-3d5cf04760a2"
        },
        "item": {
          "id": "ecf8551a-a494-4b7c-86dd-a86454122e75",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ab4082bb-0c49-4f07-894a-38076b5f8d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e9aca0-7316-4496-896b-a5107d515868",
        "cursor": {
          "ref": "88da914e-823f-4c76-ab7f-bf63de3d89a5",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "38d900f1-8fad-4d99-809f-33b94767fb73"
        },
        "item": {
          "id": "26e9aca0-7316-4496-896b-a5107d515868",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f5029539-654d-453c-8272-67ae5a8a1685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53653c81-36cd-46bb-af64-353302bdf761",
        "cursor": {
          "ref": "e476ffed-782b-4143-9b7b-df3ff67d29b7",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b25f10dd-14a1-4c8c-bb1d-7da1b22c21c1"
        },
        "item": {
          "id": "53653c81-36cd-46bb-af64-353302bdf761",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7c9f15a1-0734-4fac-b74b-4f969a1e9c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e693e4f5-492e-4778-b02c-64baaee5dc65",
        "cursor": {
          "ref": "4f74afc9-6548-4522-bb2b-5ede98b4ab08",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "554793df-2f15-4ca0-9d36-e3939bb6040c"
        },
        "item": {
          "id": "e693e4f5-492e-4778-b02c-64baaee5dc65",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "03193cde-38d2-4c16-8ed4-deffa60f04d5",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "b014a55d-dfb8-40d8-a656-27f5a116c605",
        "cursor": {
          "ref": "8e1a6127-69ff-46a4-92dc-ff5d29c93f43",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c20b888a-10aa-4717-9cb5-e38730f6bd05"
        },
        "item": {
          "id": "b014a55d-dfb8-40d8-a656-27f5a116c605",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f2c27d3e-82db-4336-a6e9-b005ee17ad9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605b5b1c-9ed7-4cd7-89cf-40d2a5d17d96",
        "cursor": {
          "ref": "924cb891-69f7-4430-9655-804c6186cfbb",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "88bdca3d-79dc-4923-ac5a-65160c757c3d"
        },
        "item": {
          "id": "605b5b1c-9ed7-4cd7-89cf-40d2a5d17d96",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2049fa50-c31c-4c44-b97b-1a34c3c61739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfacf613-9827-4da6-be8b-43e8dfebe160",
        "cursor": {
          "ref": "42209a52-d33d-41a1-9017-d285255a6520",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e01357c0-67cf-4b17-b316-6c295436c645"
        },
        "item": {
          "id": "cfacf613-9827-4da6-be8b-43e8dfebe160",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b9bc8cda-58c4-403e-94a0-2666ce39e2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f76d9e1-dfa6-4e03-809a-57047a36d614",
        "cursor": {
          "ref": "f01d0933-ee8d-49c1-bf48-7b2ed8cef182",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "85aebf54-9653-4806-ace0-89200ab33e9a"
        },
        "item": {
          "id": "6f76d9e1-dfa6-4e03-809a-57047a36d614",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "10ff6d2a-2297-4a82-a369-23c69d63b9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651355be-0511-4a39-81b5-67072a2c1f48",
        "cursor": {
          "ref": "8daf4287-7e27-44b8-8d1a-d6331e55eddb",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5baf797c-8f79-4b77-b676-e6ae6f1573eb"
        },
        "item": {
          "id": "651355be-0511-4a39-81b5-67072a2c1f48",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2f721114-971c-4f78-bae7-0a302dd31260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e7dc40-2ef5-4cfe-9af3-7beb806ebea3",
        "cursor": {
          "ref": "ff6fe74a-5a87-4d5d-897c-1899322609a7",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "23c5cf0d-1c4a-4635-8179-abfe0a0eaae4"
        },
        "item": {
          "id": "c2e7dc40-2ef5-4cfe-9af3-7beb806ebea3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2cbd974b-f894-4bb5-9334-dfc42eb25c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abaa2149-e92e-4d88-9b7a-496d479548a5",
        "cursor": {
          "ref": "9074d661-9e98-4d8a-8018-3a99f072fb5b",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e2624ab4-c4b6-4a92-b42f-ffa1e1830c17"
        },
        "item": {
          "id": "abaa2149-e92e-4d88-9b7a-496d479548a5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3a786d4b-bf8f-4679-bd2f-d87016f31808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1073d3-8767-4b88-a983-2aa9fe9ee211",
        "cursor": {
          "ref": "bf1fef1f-8cf2-44a7-8126-5952e11cc391",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "562e3be5-6ecb-4521-a596-252c615e1da4"
        },
        "item": {
          "id": "3e1073d3-8767-4b88-a983-2aa9fe9ee211",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "655f2f3e-1b69-44c1-a8da-90a82fcd6c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b89c35-395e-4466-b27c-280f7d69ce6f",
        "cursor": {
          "ref": "48b9fbf2-e896-4f38-b035-11cbb5bcd412",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "99c85565-99cc-4392-8de9-0b68da17a4f0"
        },
        "item": {
          "id": "17b89c35-395e-4466-b27c-280f7d69ce6f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "09c11ab3-f9fe-4f7f-b361-4a727207e80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cede8c44-5243-48e2-8cf9-19c8494f3697",
        "cursor": {
          "ref": "69f0f06a-a678-4188-bc8d-20c3d98cb202",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "af9a4554-d011-4ac7-bba8-6cc0a153861b"
        },
        "item": {
          "id": "cede8c44-5243-48e2-8cf9-19c8494f3697",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "118b0878-628d-40d8-9807-1f3f97258511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753184a2-dbc7-4fb2-be25-15db79b1e995",
        "cursor": {
          "ref": "2c69735b-3b96-4a38-a26c-05693e94675d",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6985feeb-1785-425d-b3ec-5d41e60d94fa"
        },
        "item": {
          "id": "753184a2-dbc7-4fb2-be25-15db79b1e995",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2bcb2044-438a-45bd-bf31-37e47c3cbe18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f37fcd-7fff-4fd5-904a-e563b7ec7bcf",
        "cursor": {
          "ref": "5ebd108d-aeb5-4c0f-91fc-bc33edd5d005",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "de199082-f240-4f1e-9b93-f8c625495736"
        },
        "item": {
          "id": "83f37fcd-7fff-4fd5-904a-e563b7ec7bcf",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "abea9eb5-37f0-43c7-b190-82aca6563f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d95d00-8094-4a11-b5cb-e88370dbac1e",
        "cursor": {
          "ref": "3d22867a-de9d-45e8-be6f-9cb918e0b4c9",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "eecd94d8-8fbb-4834-8130-4fb7a9a77c94"
        },
        "item": {
          "id": "60d95d00-8094-4a11-b5cb-e88370dbac1e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4fc58bc2-b93f-4fa5-ae68-b52b5d23bde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8d6a6f-55a6-4e8d-acf1-cffc686bb040",
        "cursor": {
          "ref": "5f13ade7-5f91-4721-bf77-64dccb858d67",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7540bbe4-dd66-43cb-9be0-a8ed413ab7a3"
        },
        "item": {
          "id": "2d8d6a6f-55a6-4e8d-acf1-cffc686bb040",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c51f27c4-c730-4583-9f5b-572bb0396daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5a47b1-acf7-463a-adaf-822fffe44b9a",
        "cursor": {
          "ref": "8cbb27ec-0547-4f82-b739-93bc0ed3f259",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e0434b2e-6dc4-4356-89b4-9e19a6891727"
        },
        "item": {
          "id": "4b5a47b1-acf7-463a-adaf-822fffe44b9a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "685ec90d-bd98-46c1-870d-71c6944ea858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788af6da-694f-456d-8336-db22b1a09f3a",
        "cursor": {
          "ref": "6e7188f7-bd20-4b9f-987e-dc39bdf08422",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ba2b8284-a95d-4a81-bec4-3bfae32ec3eb"
        },
        "item": {
          "id": "788af6da-694f-456d-8336-db22b1a09f3a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4c5aa761-a5e4-4326-aead-a848cff0b558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5feb1e1b-cb7f-47f3-8d7c-53e570b562aa",
        "cursor": {
          "ref": "fc1bd422-b8d4-460f-b98c-9ca96c61bb27",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5e41625c-d45a-4185-a321-79f73ffcad10"
        },
        "item": {
          "id": "5feb1e1b-cb7f-47f3-8d7c-53e570b562aa",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "120882ee-fbf0-448a-8ea8-79d273d85043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0d0966-6ab4-42cd-9759-b996e983660c",
        "cursor": {
          "ref": "fd609e29-64a8-4e34-9e03-dd427b631353",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2d0de4ff-cab4-4f8c-9c5e-6ff98e45c215"
        },
        "item": {
          "id": "1e0d0966-6ab4-42cd-9759-b996e983660c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ceac8e50-e526-45ce-ae5c-9ecf6b5edcee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc01a59a-21c2-45ea-b987-143a09beb07a",
        "cursor": {
          "ref": "0b758105-df49-4d4e-8ab4-8fece58c3214",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "15b4becd-65e8-4f28-a0ea-62adae4cfd53"
        },
        "item": {
          "id": "bc01a59a-21c2-45ea-b987-143a09beb07a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1e389da4-7019-434b-94ce-de688f3a9214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d17d5a-de5f-4cdb-8dab-a94ba3531db9",
        "cursor": {
          "ref": "6c2b66f9-4a87-4a28-bdc7-56e5c9617d27",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bdcd4e87-17d1-4a48-9008-c7956ec77337"
        },
        "item": {
          "id": "19d17d5a-de5f-4cdb-8dab-a94ba3531db9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f03a03aa-6507-4132-9725-060ac593523e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f812784-52f6-4c03-9fcb-d6c0f7ba1254",
        "cursor": {
          "ref": "41f4ca3a-f501-4c56-8a63-023ac3cb9968",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1d6020f2-fbfa-408b-b68d-1af6a20082ec"
        },
        "item": {
          "id": "8f812784-52f6-4c03-9fcb-d6c0f7ba1254",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a7fb90d6-63e6-4758-8d3c-a5f38bb50501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3bc22a-0085-4a5f-a40f-edb63009696b",
        "cursor": {
          "ref": "ca954ec4-7723-425f-b9fd-eb2c4ed5bf82",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "88b29433-c5eb-49f2-ba33-60c030714b47"
        },
        "item": {
          "id": "be3bc22a-0085-4a5f-a40f-edb63009696b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b9d8630b-a07b-40bd-b6b1-c61bd531e7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859aaa12-95ec-481b-bad1-1192bdafda40",
        "cursor": {
          "ref": "ef7d444d-d113-42ea-8619-6e670ea6ba9c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4da5a151-19e0-490a-8330-b9a62b24656c"
        },
        "item": {
          "id": "859aaa12-95ec-481b-bad1-1192bdafda40",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ea712923-9286-4fa6-8ac6-061fd1008cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692c21a3-b3d9-4752-adca-75cf7f0d3af5",
        "cursor": {
          "ref": "1beacfeb-eb99-4883-863d-07e1395f382e",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fa78b281-bea5-4769-93ff-4fff003dee98"
        },
        "item": {
          "id": "692c21a3-b3d9-4752-adca-75cf7f0d3af5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b9dda5f8-e8ec-42e4-b70b-0620529fa2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a93c44-75ec-4751-9b22-2ec690ee5dfb",
        "cursor": {
          "ref": "104d165a-d6a5-4cf9-a5ca-88d3b3a6b6bd",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4768ab6b-679f-46be-89e3-7d486c45935a"
        },
        "item": {
          "id": "03a93c44-75ec-4751-9b22-2ec690ee5dfb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "50de89be-5ad0-4f22-88cb-844a781938db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839c78c4-b174-49eb-8c23-36c9a424de79",
        "cursor": {
          "ref": "40eb43ad-686d-46ae-954e-f5906634fcfd",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "73c47307-e3c8-48a6-9820-71d3813eba82"
        },
        "item": {
          "id": "839c78c4-b174-49eb-8c23-36c9a424de79",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7f559df0-2610-4c6d-9d09-f1e4234b464f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aaa56b5-a7cc-453d-ad1e-1340f9e2e6e6",
        "cursor": {
          "ref": "115f99ee-85ba-4992-8025-cb8bc241a2bb",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "97ce3013-3e22-4400-88fe-d2ba85172e1e"
        },
        "item": {
          "id": "5aaa56b5-a7cc-453d-ad1e-1340f9e2e6e6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b9dd5b35-d084-4d50-bfca-4105bfe476b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d88f1e6-ef67-40ba-9e3b-90507e4385fc",
        "cursor": {
          "ref": "56f8e841-8d15-4f24-b2fd-39d43111c790",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5fc2ce15-20a0-461a-826c-aa94f894a199"
        },
        "item": {
          "id": "0d88f1e6-ef67-40ba-9e3b-90507e4385fc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "45ece73e-59bf-4178-b180-e2227566508e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6ff134-b2c8-41b2-8cd8-ea6ca4bc3f0b",
        "cursor": {
          "ref": "a6eea45c-167b-47b8-a902-d1111b947427",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "863f2b56-53bf-499c-85f0-9707c9372a9b"
        },
        "item": {
          "id": "7d6ff134-b2c8-41b2-8cd8-ea6ca4bc3f0b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b0b1b180-8060-4438-b10e-8205bb7cc5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e10ae0-ca6b-4ecb-844f-010e5cc7673a",
        "cursor": {
          "ref": "aa70c160-678c-4ff4-971b-edc67f6ad102",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f3142ff1-1980-4b53-9f12-386791683b9f"
        },
        "item": {
          "id": "f7e10ae0-ca6b-4ecb-844f-010e5cc7673a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c71eb318-9abf-404a-9ad1-70457b7e6bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22931429-afa9-475a-bb65-16c473f0740f",
        "cursor": {
          "ref": "32a4cf5f-48ac-4e23-aeb0-850188ae8213",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5578ab88-4312-43bf-a686-d5657b779231"
        },
        "item": {
          "id": "22931429-afa9-475a-bb65-16c473f0740f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "16bf797b-5b24-45a3-bde4-a6d1012b0cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bebc1c8-38e4-43dc-818a-2f3d7cbae3d9",
        "cursor": {
          "ref": "f75b62d3-af0d-45f8-8957-7a3b0c10b8cf",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "227659c2-0447-4fd2-9545-9d255fd71a02"
        },
        "item": {
          "id": "1bebc1c8-38e4-43dc-818a-2f3d7cbae3d9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "12d92f3d-46c5-4a2a-b896-0c770bb7cc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7109991a-ba2f-4878-96cb-54a18686f419",
        "cursor": {
          "ref": "dc87ad57-42f9-430b-98a1-42c591e05068",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1ca0e9f6-8f3c-459a-a185-a9410fbf76a8"
        },
        "item": {
          "id": "7109991a-ba2f-4878-96cb-54a18686f419",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4c20afa3-9e2f-4015-917b-e5e404b9c84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e45d80-9b20-42d0-a72c-c318ff01df2b",
        "cursor": {
          "ref": "dafe84ef-fb96-469f-a1cf-6d3bc509bafc",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "136f7112-ffcc-4048-ac70-79629d2d97c4"
        },
        "item": {
          "id": "42e45d80-9b20-42d0-a72c-c318ff01df2b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e438af2b-d49c-41e3-ae10-66958408f32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ace6b8-9f00-4ac1-bca6-b2acde93cea5",
        "cursor": {
          "ref": "904e0ada-06de-4f3a-b58f-2d2a5c1558e2",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e6384652-b81e-4635-8bc8-d815d92741f1"
        },
        "item": {
          "id": "a1ace6b8-9f00-4ac1-bca6-b2acde93cea5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "091548fe-ee8e-4499-a740-17dd45cc6303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e007792a-a2f0-4e27-a7dd-165fc4ea3e85",
        "cursor": {
          "ref": "7913a37c-6458-4d4f-bbd8-5a6d61c57416",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3a57f905-e54c-4867-b7e9-f7f4bbddfb19"
        },
        "item": {
          "id": "e007792a-a2f0-4e27-a7dd-165fc4ea3e85",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5539b0ba-5ad6-442a-87d7-5e35e475c90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1971851-ed34-4119-b4d4-7742b2888d92",
        "cursor": {
          "ref": "3059b184-4473-4c9b-abf5-e3b027c0a06d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bbc3a8b9-4052-4df5-a3ea-ef6e2a654e4c"
        },
        "item": {
          "id": "d1971851-ed34-4119-b4d4-7742b2888d92",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a8536afb-99de-4c2f-a424-2d743c7a2ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450eb748-ab9d-4353-af30-b2f8c65aeca7",
        "cursor": {
          "ref": "0634e2e3-6a9c-4e2b-b68a-dc6a1b3d0263",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f14d7dca-9296-4648-875d-e3bfefe12d06"
        },
        "item": {
          "id": "450eb748-ab9d-4353-af30-b2f8c65aeca7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6bc2e248-9abb-4831-93eb-b7061e1d9e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcceb30-47a4-441f-9892-49a41936e327",
        "cursor": {
          "ref": "f89eaa3f-2805-45e1-8169-8615abac023f",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "32afab19-a007-493b-bfbf-7204f3896938"
        },
        "item": {
          "id": "9dcceb30-47a4-441f-9892-49a41936e327",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b4629e0e-1d05-46df-bb0d-8843014eb968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276a4df0-c161-4846-9721-d7d9ab9cfb0f",
        "cursor": {
          "ref": "bcf9724d-b3b9-456a-9c10-3ebb1b6405fd",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6fcee323-49fa-4050-a07e-28f180bcf943"
        },
        "item": {
          "id": "276a4df0-c161-4846-9721-d7d9ab9cfb0f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f41ccd07-ac57-4239-9efe-03e0e998cdc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6b2f6e-8ad4-45c2-a480-af51e98840ae",
        "cursor": {
          "ref": "7d070caa-533a-4d9c-91d3-c3f0959f2a52",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "409c9a99-95fa-402d-bcfa-4ff426568f2a"
        },
        "item": {
          "id": "8e6b2f6e-8ad4-45c2-a480-af51e98840ae",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "beee2363-7793-4ee1-b7c9-b396998d9e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bde95d-894c-43d4-a091-5105576ac247",
        "cursor": {
          "ref": "48f3efc1-d28d-4873-8fca-d5588f4d68c3",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c51bcea7-2350-4ef6-b846-e8e0d6d1c50e"
        },
        "item": {
          "id": "20bde95d-894c-43d4-a091-5105576ac247",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "24c4c8c4-9d18-437a-a1e8-6739bc2d2bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5651f1a0-5259-4874-82f2-029ceb900622",
        "cursor": {
          "ref": "7e053d2a-1454-4f23-a5e8-49cb60dfdd6b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "70dd3021-50f0-41d9-aba5-4098243dc8ba"
        },
        "item": {
          "id": "5651f1a0-5259-4874-82f2-029ceb900622",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4396367c-42f0-4039-9ccf-8cbd03ee9552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261c8716-4a01-4a1f-8369-c481e7fc0f2a",
        "cursor": {
          "ref": "456a8522-3c66-460b-a41e-1ff2d6feac3b",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "81125a94-d20d-423d-924c-651a243f048b"
        },
        "item": {
          "id": "261c8716-4a01-4a1f-8369-c481e7fc0f2a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a88966ab-5b95-4305-87cb-c80bad674289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d6fe08-fd60-41ec-ad8f-9896386c544a",
        "cursor": {
          "ref": "f4d87bd3-f8af-4bdf-8847-fc15fa6f2e8c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1bba4464-ba83-49f0-8387-c3b4302d0765"
        },
        "item": {
          "id": "72d6fe08-fd60-41ec-ad8f-9896386c544a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "64877bb1-cf6b-4668-928a-a9612f3f5f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae016c9-db56-40aa-a35f-a0624ce0816e",
        "cursor": {
          "ref": "272cb30c-1bc4-4c95-af8f-8e03cc00d5a2",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "dca4f8af-de44-43b3-85c4-0cc51a6d44e8"
        },
        "item": {
          "id": "6ae016c9-db56-40aa-a35f-a0624ce0816e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7ab4d60f-aec1-4285-a285-373c317a2f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9413a7bb-2eff-462a-a576-06ffaba94703",
        "cursor": {
          "ref": "9f832a4d-e994-4aff-b75a-6340a1c9e5b6",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "26e2aea6-8ef6-4482-9f41-c0b0be21822a"
        },
        "item": {
          "id": "9413a7bb-2eff-462a-a576-06ffaba94703",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c5bba2ab-713f-4de6-bb18-1559cf7ee28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95dd417b-cdf8-4f86-88dc-edaad0ce8481",
        "cursor": {
          "ref": "6971e4c0-0950-4ab7-84c2-742d60585373",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "db139733-2778-49de-bab2-de93715c868a"
        },
        "item": {
          "id": "95dd417b-cdf8-4f86-88dc-edaad0ce8481",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3f0dfe9c-a963-4c7e-a9f5-c212a191f089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a992ee7f-eb96-4d60-92bc-8d16b0922d87",
        "cursor": {
          "ref": "2d49fc2b-e59e-471e-88de-97aae5e7c300",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a1307b4a-a2ee-4c0c-b7f0-bdff9d75433d"
        },
        "item": {
          "id": "a992ee7f-eb96-4d60-92bc-8d16b0922d87",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4e21e407-6cf0-420e-b820-6cf919d398b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe6c9db-749f-4f89-88b4-b839e162901a",
        "cursor": {
          "ref": "6a9e35bb-b20b-488a-8426-7c6ba62f093f",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "043ea381-18de-4e18-adad-ba39c70b90d7"
        },
        "item": {
          "id": "8fe6c9db-749f-4f89-88b4-b839e162901a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "91fd3e1b-4174-4b83-8fe1-73bf7e38bcf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647aa3f3-952f-41ff-b394-a018c24b3471",
        "cursor": {
          "ref": "32dbd465-bc7c-439a-ae98-e8b1e66dff57",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d23b5bc4-d3ab-42dc-ac3a-8132f92a1793"
        },
        "item": {
          "id": "647aa3f3-952f-41ff-b394-a018c24b3471",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "999fa1ee-9151-4bb9-8255-1980c189546f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d034f3a9-fa37-4c24-bd9e-bc26815a6080",
        "cursor": {
          "ref": "71f72a66-8dbc-461d-982f-8df0a7ef87a9",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3ccabf4e-7f2b-4362-bebc-38f5d5d3e2bb"
        },
        "item": {
          "id": "d034f3a9-fa37-4c24-bd9e-bc26815a6080",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "06ea6c72-1df6-43a1-a8a6-12ca8a9c6e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1f66bb-fee6-4097-89bf-2fec2e5d4c87",
        "cursor": {
          "ref": "1bb6d5c5-a75b-46d8-a197-7fd13294dfc1",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "793e88ba-7bec-4ad4-8cb2-54ec36b4a03b"
        },
        "item": {
          "id": "5b1f66bb-fee6-4097-89bf-2fec2e5d4c87",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a56edf8a-8913-480c-baa3-845166f1cad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6046337a-8e51-4cb9-89fc-4754ff718b96",
        "cursor": {
          "ref": "06a863a2-ba11-49f8-92cf-609d05f1cdfd",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cfd53d64-a747-4b35-9e75-67552c76da92"
        },
        "item": {
          "id": "6046337a-8e51-4cb9-89fc-4754ff718b96",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f66bddaf-e331-4ffb-abc9-4aab118ea269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fb72a7-d9f1-4ef2-8e16-1f50ce10487c",
        "cursor": {
          "ref": "6a0a6284-49dc-49ba-a03c-cd265936559a",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "707d2856-2123-4bce-849b-3a953a37c682"
        },
        "item": {
          "id": "32fb72a7-d9f1-4ef2-8e16-1f50ce10487c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4046bb49-ff9b-4957-91dd-6aa4b6393de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475cab31-6741-40f8-8960-db167be33f42",
        "cursor": {
          "ref": "74351897-4a39-44ae-8804-9c08b1673960",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f38d97e1-529f-459c-9bbf-b879891b0969"
        },
        "item": {
          "id": "475cab31-6741-40f8-8960-db167be33f42",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b754b30d-f8f6-4463-98a6-c9aff9c21cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df0e883-9024-408b-a32c-f30f1b63a55e",
        "cursor": {
          "ref": "1457edf5-0aac-4a0a-8f40-2400ce86c7e4",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "00d448d6-ea00-4773-afce-60ba401ee232"
        },
        "item": {
          "id": "2df0e883-9024-408b-a32c-f30f1b63a55e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6071d338-196e-4c3d-9517-50dd6589f5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4df9309-c6c5-46f0-8fc8-c1ff80baf218",
        "cursor": {
          "ref": "e84fc531-8d47-457d-9f43-35a88e5acd54",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fb661ad6-6bb8-40f8-b02c-814332230b13"
        },
        "item": {
          "id": "a4df9309-c6c5-46f0-8fc8-c1ff80baf218",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1e802abd-353d-4140-8c14-bbe9d1a14850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51506f4e-8547-43eb-9b73-4bc697cb448f",
        "cursor": {
          "ref": "079fed1b-f6ed-4f78-9740-c5b7463a4add",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3c2b71d7-7f3e-4474-8c41-9678ea0c0d0c"
        },
        "item": {
          "id": "51506f4e-8547-43eb-9b73-4bc697cb448f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "25a11dd4-c4ec-4363-95f8-3bdc8005aedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be445bb-3246-4783-8d3d-2d3d14c30ad5",
        "cursor": {
          "ref": "98b1348c-5b97-4901-9785-2f3772a8fef5",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0f650175-ea63-41e9-bb51-7503aeb0c5ae"
        },
        "item": {
          "id": "9be445bb-3246-4783-8d3d-2d3d14c30ad5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3c0686a3-1665-4f43-8d08-1b781c9b42b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c45d0ae-224e-469b-947d-cbd527201464",
        "cursor": {
          "ref": "360a2dbe-8642-4692-ba90-7680187500fb",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "dc5e83fa-db7b-4a8e-8131-3aa8460f4607"
        },
        "item": {
          "id": "5c45d0ae-224e-469b-947d-cbd527201464",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "011d218c-64b4-4320-93e7-7487c34fe497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f9b377-77ae-41ef-b820-8d7e7eb9cbc0",
        "cursor": {
          "ref": "c7b32ad7-56af-412b-9280-2fa734f54b9b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a892afec-66b6-4492-a38e-0141b2fdec14"
        },
        "item": {
          "id": "c3f9b377-77ae-41ef-b820-8d7e7eb9cbc0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d86489eb-ea90-4100-a897-58e65b75a66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5f08a4-7ff7-40ac-8532-949a0469eae7",
        "cursor": {
          "ref": "97b2d032-0ef4-4fbc-af2d-837094e1c5ee",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "128da8fc-bd62-483e-a57e-96119e0657f5"
        },
        "item": {
          "id": "3a5f08a4-7ff7-40ac-8532-949a0469eae7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "89c72b84-0ad8-4274-afb8-3876343c37e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103b3fa1-6128-4f4c-a204-b207bb1e7597",
        "cursor": {
          "ref": "bee7be41-a2f4-4662-9d15-3b644618ad4c",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "30560122-18b4-4798-a74b-7a489c43b9bd"
        },
        "item": {
          "id": "103b3fa1-6128-4f4c-a204-b207bb1e7597",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "acded8a3-35cb-4151-8af7-5b61e860f210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9650e6ac-ca49-44ad-8666-bded411669c2",
        "cursor": {
          "ref": "2ed69abf-7ce6-4122-a374-192dfc7449dd",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "69169d34-894c-4597-82a0-19d665e33e05"
        },
        "item": {
          "id": "9650e6ac-ca49-44ad-8666-bded411669c2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6057dc62-c84f-4105-98b2-caa12fe3cddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f009c6-4c86-40c9-9903-b0adf1430b56",
        "cursor": {
          "ref": "a912dea4-aea1-4759-82be-2133f478e336",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ce198258-0cf7-40eb-90d3-430d4ed075bb"
        },
        "item": {
          "id": "36f009c6-4c86-40c9-9903-b0adf1430b56",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9326b230-1fd8-4c98-9d78-128e79dbdafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c952aa-f36c-41d1-90a3-cd53e122fdf3",
        "cursor": {
          "ref": "4de4c6ff-bb92-4505-a4f2-b9f5d3086076",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2618e7f1-ff2e-4697-b224-569e4c5a1d69"
        },
        "item": {
          "id": "43c952aa-f36c-41d1-90a3-cd53e122fdf3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "30c1903f-f01e-47d9-bf5d-bb6dadce28fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e0ffeb-cf0b-4b7a-9c36-fc1d938e683d",
        "cursor": {
          "ref": "31bd4716-a8f5-44c7-80b6-123b60963033",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8c9d3bcd-a447-44f0-b79d-34002ad750cf"
        },
        "item": {
          "id": "76e0ffeb-cf0b-4b7a-9c36-fc1d938e683d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b87c76e6-2678-46a7-ae11-0aeba56210fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04742ee-aef7-4334-9f73-f90333700996",
        "cursor": {
          "ref": "55883674-7561-4ce7-981c-9477020800e5",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4f4c42c8-9368-40ca-80cd-06938c19565c"
        },
        "item": {
          "id": "f04742ee-aef7-4334-9f73-f90333700996",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e332e000-5e99-4944-ab69-3fe0811ebb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a10fdc-f6e1-482b-95df-0fbc352e12fb",
        "cursor": {
          "ref": "2537b194-39a9-4231-a87e-b54e75ee9139",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5bbc6423-c90a-403f-8381-9d557fb83117"
        },
        "item": {
          "id": "a5a10fdc-f6e1-482b-95df-0fbc352e12fb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "080b605c-c5b7-4cde-be7f-04137edf8999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef81d4b7-f5d2-4037-81b7-6a502cbde416",
        "cursor": {
          "ref": "61a9ab44-e956-4450-bf19-2f04a292421a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2536139c-d5f3-4587-96db-d16ec5371330"
        },
        "item": {
          "id": "ef81d4b7-f5d2-4037-81b7-6a502cbde416",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1670756b-a2eb-453b-a0da-50eda3fdccfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88917039-7ae1-467a-a10f-c3122d183bee",
        "cursor": {
          "ref": "976e730c-7a87-466c-b61c-e08cd6a102b0",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "53b40d8a-df08-4c02-8098-51d5c3c606e0"
        },
        "item": {
          "id": "88917039-7ae1-467a-a10f-c3122d183bee",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "280d2f3a-33bc-4c59-b599-a5134913bf96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca8fbd3-afb4-4203-a739-dda8b99b0a4b",
        "cursor": {
          "ref": "4e2414f0-1f38-4ba7-bf10-577a5ace9b2c",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "46096fdd-6410-46c7-bc5a-8df143966f48"
        },
        "item": {
          "id": "9ca8fbd3-afb4-4203-a739-dda8b99b0a4b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8ef3ba6e-6f6e-4928-9938-9654a38de403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1f7fc8-d0e8-45c3-84d5-2abe101d8ee7",
        "cursor": {
          "ref": "b01e60ca-0a96-4f44-abb0-f204c4484619",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "56ac1a51-1a56-49f4-9091-8449d07947b9"
        },
        "item": {
          "id": "0b1f7fc8-d0e8-45c3-84d5-2abe101d8ee7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1ca5fabd-e666-4f45-b7af-2bf7cd149722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373528dc-3618-4cf6-ae84-db55908dab7f",
        "cursor": {
          "ref": "c9cee095-e0ef-4608-8085-964d7c0378c3",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "149c78df-adea-4130-9f6d-76842b2ac8f8"
        },
        "item": {
          "id": "373528dc-3618-4cf6-ae84-db55908dab7f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "615a7bea-ef27-4659-abb8-86dd912bd7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53d1be2-ac78-4a45-ade5-113adfc240c0",
        "cursor": {
          "ref": "dfc70901-3912-4b62-935d-46b6a9fab4fe",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "de0b4126-1c52-44d4-9eda-ffb86333adea"
        },
        "item": {
          "id": "c53d1be2-ac78-4a45-ade5-113adfc240c0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "74297015-03cf-412e-a1dd-a99e6b2244ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3378d6-6819-4380-85f1-e2ce957b340b",
        "cursor": {
          "ref": "6f8f142e-3ede-47ce-b952-e7152b7a79b7",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c99cb193-5a8a-4435-a71a-ea99980236c5"
        },
        "item": {
          "id": "fb3378d6-6819-4380-85f1-e2ce957b340b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7bac6209-cade-428b-8c82-edf7f5816f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631119b0-6956-46c3-b8c6-428e98ad222e",
        "cursor": {
          "ref": "f206670d-2ec5-4366-a2b2-0e78766314c1",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "218f2b23-4edc-4938-9743-3322b75436ca"
        },
        "item": {
          "id": "631119b0-6956-46c3-b8c6-428e98ad222e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1837dd00-cd93-4d81-83e3-ffe9edc0f1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80731510-f69d-4040-8132-b626e7cde04f",
        "cursor": {
          "ref": "24e2ab8d-34e2-40b5-9335-2fee421ed836",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4d64402a-95c3-4481-aaa0-8ef2a6fbf26e"
        },
        "item": {
          "id": "80731510-f69d-4040-8132-b626e7cde04f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "355cb6df-3d46-4987-a4c9-ba52011a1df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0c7fb4-6f53-4c1c-a8bc-a3ac5e809086",
        "cursor": {
          "ref": "cb29d59b-6837-4b25-9f0f-ebe49b9eac1f",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8cbb5a79-24ef-4912-87c6-876f581c9180"
        },
        "item": {
          "id": "5a0c7fb4-6f53-4c1c-a8bc-a3ac5e809086",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5198abd2-9ff2-4a26-80f6-39de65e76130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aafdc5f-1f22-4094-818b-97c0c4a786c5",
        "cursor": {
          "ref": "db37ee37-1512-486f-881b-8f7f8a9a5fb2",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "eead5552-90b6-4ec2-a9db-1965ecd59466"
        },
        "item": {
          "id": "7aafdc5f-1f22-4094-818b-97c0c4a786c5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "936006c6-5f30-430b-847f-63c11a209b1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2c92d4-fb59-4a4b-821f-e9d27854aa3f",
        "cursor": {
          "ref": "4d90070b-244c-43ab-9cf9-7183953ed250",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "17d12b2b-e76b-4524-9ba6-1fba0f9113ed"
        },
        "item": {
          "id": "da2c92d4-fb59-4a4b-821f-e9d27854aa3f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a28dc749-9219-4a82-853d-33a2b4d199b8",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "db43f08f-b140-40d3-a4b1-4f3f73c5d7e8",
        "cursor": {
          "ref": "0e7ff9bc-d939-424b-b4d4-a5202c5fc416",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e6f11a13-9fe1-4ed1-a728-87756f688f83"
        },
        "item": {
          "id": "db43f08f-b140-40d3-a4b1-4f3f73c5d7e8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "01aa7aa7-4049-4fc9-bb83-deec211f6103",
          "status": "OK",
          "code": 200,
          "responseTime": 2882,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd77b2d-4f2f-4a95-b266-52f42c396f08",
        "cursor": {
          "ref": "edb5e8c7-382f-4fc3-8bcb-fe8585e8864a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "75382b5b-512a-4b7a-a69a-caa37ca28750"
        },
        "item": {
          "id": "2fd77b2d-4f2f-4a95-b266-52f42c396f08",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c72e5793-4fa0-4438-aa44-9a66cd147eaa",
          "status": "OK",
          "code": 200,
          "responseTime": 2330,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b34af73-4501-4f62-bd07-263a7aaa5eec",
        "cursor": {
          "ref": "c39e01fd-8aab-4fa6-944b-0639974687b3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e9687464-11e8-4178-84c0-1ab691e6d480"
        },
        "item": {
          "id": "0b34af73-4501-4f62-bd07-263a7aaa5eec",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bea886e0-bb40-470d-9368-0d18e13f155a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b34af73-4501-4f62-bd07-263a7aaa5eec",
        "cursor": {
          "ref": "c39e01fd-8aab-4fa6-944b-0639974687b3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e9687464-11e8-4178-84c0-1ab691e6d480"
        },
        "item": {
          "id": "0b34af73-4501-4f62-bd07-263a7aaa5eec",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bea886e0-bb40-470d-9368-0d18e13f155a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dc3459-418f-48af-bcb8-f062e6ba2b4f",
        "cursor": {
          "ref": "4119969c-6133-424a-a96f-3e42d0251800",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "228d3232-3ed1-4c39-b757-0359b3197d71"
        },
        "item": {
          "id": "e4dc3459-418f-48af-bcb8-f062e6ba2b4f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "04554e1e-6e24-4a0c-8269-722e735738ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41eb2583-a709-4f3a-9ffa-f162d63f7222",
        "cursor": {
          "ref": "714ece75-33ae-4bb5-92a6-9e6c9a87ced6",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f459f6cd-fc68-486a-a520-a0a326267981"
        },
        "item": {
          "id": "41eb2583-a709-4f3a-9ffa-f162d63f7222",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8462b197-4d64-4927-9bff-e0c5510a2a26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}