{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "578e5af7-709b-405d-9f36-7e29c46ea662",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e0bb4671-9343-4e78-8049-3298c76d4ba7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2db18259-dbf9-43c9-b1f6-3c0d90a43289",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "175bd29e-7438-44cb-9b92-b56b9a927e44"
                }
              }
            ]
          },
          {
            "id": "47ab93e3-d1a1-4105-b43f-5edc1d806aa8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c8599f59-4f2c-4c7b-a0dc-02c2b98fb842",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5faacd27-6ce3-4b7b-8bcc-980d3a7aeba6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "98ce45ec-338e-49e2-86f3-1a4357a095c7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8f2ac301-12f8-449b-af24-20d78e7425d6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b79e1752-0f6b-454e-bb1d-97ecf47a5656",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6405441c-da22-40f2-a66d-6f6b2be5666a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e964a782-a7ea-4afe-bee8-a473a3133ecc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ceb314f-70f0-4941-98bb-7e9abdf20a0f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c585e917-425a-406a-b05a-90198c38982e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8daee64c-ec9d-4259-9649-4f79130070a2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "145b23e5-8da1-43af-b5f2-3b83255b6dec"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e433d6cb-4b8b-4299-bb1e-f3e0d3bd15b2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6d4ee7e7-6ee5-4996-81dd-9b4e25650810"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7934e98d-6009-4404-b28c-f542d09ddece",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03fc04fb-a7d8-48c0-b3f8-841f2c17f0b1"
            }
          }
        ]
      },
      {
        "id": "543a5dc6-9adf-4504-8bb9-75b3ccaad089",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "98e021ae-f4d8-4f3f-b5ab-c1cd5b7fca6c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a4dc257-8762-40c6-ad99-ee4f238dfb7f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "622e9d65-2f33-40f5-a43e-8433ee16be8c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2875266d-5181-4425-915b-12d474b2b7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af7bd93b-ecf6-4a6a-aece-b41b316074ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81882a0a-4e37-41a2-8341-e92edf45a0f6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc18221-98fe-4237-bf1d-5e8334887234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90a8fe90-e9dc-45ba-a31c-38fc66f947da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecefedd4-178a-409a-87a5-64b3fa2115f6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52560d6-5cc2-4aa8-89e3-ce7e807fca75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82d347cb-8aa6-4cf2-8e99-b78cf15c640b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ec48807-f678-48ca-8350-875454b3f3de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "367164d1-088a-47a0-b855-fc8bcd73751d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8570ddf9-15e8-4f01-9360-207577cd24b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49dc6bb9-5661-4603-b7ce-4dedc15df249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c472a46e-0614-4784-a5b5-47529e6e80fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb462645-6cf2-4991-88f7-189db87d38c8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "058464fe-a78d-4cd0-b3af-16696e2e040f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4545f1bd-0b01-43a0-91b2-6137a451722a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c0133f2-8ddf-4a18-8630-48db00abdc7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0a11e761-b616-4450-ae72-128a9c0082fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ff20866-2507-4345-8db2-d3bc50fbe7c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "78ad2d6d-42e7-49fd-b1d1-49af822cbbda"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4dd735e1-ed52-4686-aa1a-2458a400611e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5a0eaf5-bf88-4ad0-87e4-a39e3031b9b0"
            }
          }
        ]
      },
      {
        "id": "6230d3df-8964-4e10-8a95-a89e9dc2c524",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7e4efd8f-9eca-4373-9387-7c02f666a5a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4445fc2e-01cb-4dc4-84b3-933cb3e0d1b9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e58192eb-2302-4024-bf5f-627ae9477eaa",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf2383a-7da1-4fc0-a052-cf7c0f80e53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1413b8a2-aa27-4bb8-9a2c-89dc15f48b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a124fbcd-322d-48ac-b403-975674d88ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c614bcf-423a-4503-8b51-c698e6cbb1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a4d0fa-22eb-4720-845f-482d583f0d5c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ba2c77-2c1e-45aa-b0de-ce0f58fc7391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8258d2a1-d24f-4d09-b822-bb2defc77157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21830ab5-6bd0-4ed1-94bb-06484b183d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad48cb5c-ed66-4819-865b-60f81f7a4d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35305d6-c690-44a0-9da9-a2920ffc0e84",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fda6d4f-4f10-46d0-8797-bea03eef5039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31edd52f-7eb5-4ecd-b38d-503380bad59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4da6f7-4818-4a7f-862f-dc0f886a1fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "393084ac-c972-4590-8265-ba998fbda39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6173b9-708d-46bf-94bc-95e374b4b579",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddaf69c-e600-4b8a-999c-6646493b4750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f736edd6-9cc7-4543-8460-f0f7aa7b039e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d614b5b-9339-4c78-937b-a1176dad57f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59d6d8e3-993a-4519-8861-70c4366ccde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876589f4-dd91-4c51-b13d-7b6db860d048",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f43bda-855f-4a6b-b051-bef6ba1aa088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866dc519-f203-4e75-b978-4a48b2962609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c07abad-44e0-4fb1-8277-20f38ca7a6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e01f5a7a-8700-4b86-baee-9187f3c30f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e92a3a-ab29-4b2d-a1d9-7e3febb37fba",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9af24f2-9a05-4768-94cc-95413c41cb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7d733e-cbce-4eec-a98e-808a0f010add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa80bbdb-1573-4eef-81f2-f033601ac179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce9c8756-f112-4572-a7df-1006e86c4440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3faf290-13aa-4b57-a440-4860b0dc89d9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34a2687-92b6-41a9-8a6e-0aef59b510ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73969b08-826b-483c-91fa-f6e348fdd765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b380ac4e-d1d1-4b0b-a6ba-b5fa66ea5d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0799e531-46d1-42e1-b384-979751154568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c036aee7-8b1b-43b7-967e-ac016099bb49",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5d81de-a96c-41fc-87ab-43f581549c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c0ea2c-995b-4be2-95bb-6f00238c8064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634cf797-1fa1-4824-9afa-48d9c832f4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bee5fc3-988a-41ce-9141-e160dbeed2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9f324e-c6c5-4a37-80b4-d178a8288f81",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055fb45c-c375-4f57-bb65-a3a98627f412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6d307c-51f5-4a63-a98f-91e522ae5a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ba80a7-5842-4408-8088-ee78d7ea1920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "842b07ba-9892-4080-bec2-b3a0ab78f05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d1be2e-a73e-4705-97bf-5dc7e05f2294",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4646429f-adc2-48b1-b9a2-7290f6c04b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03f776f-d81f-4053-a8df-dc869d2b2126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dffb102-c770-4b00-ae19-18eceb940f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3431d34c-c699-4ef9-8829-568581f777e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b0d906-2c6d-4f63-9421-6771aac1dae2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d8bfbc-4437-4cf3-ba59-c27359a1b7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe3db58-fcad-4ab4-b3a6-98ac1c20772b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b634e1b-619e-44f1-b298-00576b898cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7d6a4c6-db0c-43ea-8008-6f2fd7832965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ad66af-1d4c-4761-bbcb-1f46574ff627",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e373f1-b3df-4a75-b66f-ba66d65ad4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0387bde9-acad-4fdb-9d22-eea9b2bf92bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f608eaa4-8f8a-4e80-8f39-34189f2d73fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d724c1c5-ee8b-45bc-a1f8-298dd2f36a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac3f4ce-d4a7-45c8-a265-15aaa436732a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114b62d2-53fd-4d5e-a237-17c05757bf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62137b63-3405-4b69-bbee-4976aa46336e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d1d548-f384-4df6-b12c-4d5fb8c9431e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "300950e4-d12f-4384-8a3c-92505f3e453f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce565db-c7db-4286-b4ff-94fefe8f6398",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ed66d0-775b-412c-94ef-72cae1229f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa05b38-18a9-4ee1-95b9-7d3f8e7d34f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc89266-a425-437a-966a-6dc4149d3a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a14d74a-f372-406b-b669-3f9b95c6f1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5be4a0c-a03c-470f-91ff-421185298f15",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4108c9ed-8649-4832-becc-d9e4b5cc67ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2559bb4a-cead-4817-91bc-e4a36ae78fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3140afa-7ff0-4b3d-b770-5bd79557d66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb1667d3-420a-465c-bbc1-425577df08a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a97c1a7-bf34-457e-abcb-2b540179f61d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7c45af-6ec8-4232-81ab-b0bf2bc69e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f91256f-46f6-4f9c-bb6b-2b71f8009ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32cdfd9-aaa6-48fd-b14c-cf944919e4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8026e698-4b00-41f4-a885-d4b92ae005f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf48102-3cb9-448a-9bba-3836801c8f4d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f049eb1-67d0-4a55-9f6d-97e773c0821b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4413563-afa0-44d9-b0c8-12d3df0fdf76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd1ef71-d331-451b-befd-c6f46ef64b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27a5167d-ac85-4f9b-8297-0eb72bd8f24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdf402a-95f5-4b99-8c86-155618303a71",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c133ae-fcf5-44d2-b26b-f48b03927882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "440b8167-2034-489d-a834-26a2d7768216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b593eb84-b029-4e83-8eda-046b4fca0e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "12d7c30d-ab37-4376-bb0f-0a6029282ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f98cf51-e36f-4a33-ba48-c0ef970d6567",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7532e8-0edc-412e-8d5a-8cbda15d8ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5fc30a-504c-4f73-940f-95028c9ef0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b7a7c4-9768-4052-b665-3442bf298a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "192879eb-c55f-4e49-aa7f-578f58d1e1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c15eb95-7199-4e94-a0ab-c6267995fff6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16466f58-1256-4c7a-b05d-7afc24c2204a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9248ae5b-9e12-4564-af48-0538a79eca3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c419a176-1e24-4c0a-9a63-582f892df7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86d03a06-7645-47c7-87d4-b675a7fe9043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9152654-fec5-4dbd-95a7-c33f8a99b6f6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ccf4cd-b78d-43b3-b2dc-33a1108f9e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81fd8c6d-ce29-4f84-bf36-e73ab613a958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81eec14c-76d2-494c-b751-b35e74465075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "382a55e8-60d6-4999-954a-7c9ed12ef98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703991f4-06e4-4729-914e-92043048bd78",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d33f023-35f1-46c5-a778-68faa7f1ea9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29bdea5d-832f-428f-a639-7b78d1622a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee7f1c2-314a-48b2-b055-3e0fdb9702ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c47d7ef-a273-489e-95cb-3ec41dc198af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d990a387-88b6-426f-b043-b4497800a8e0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ee046b-e90d-4437-9441-5037626d833d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3f2e94-1d05-415a-938e-47f955987ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6ea5c7-a431-4de0-be4a-765ddd850503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94f222c4-4bdb-46f0-abc1-8fd46de75f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08e22a3-8fcd-4ac8-b925-13ff1534f022",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7697919-e9dd-4725-8fbc-2516b81a4f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64b62c9-9453-45f2-b5dc-bfa6aa44876f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ed45cb-b0b0-4ef8-b723-04b9a8091868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "01a58e18-bd7d-4491-9530-62c60de3cccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149f8346-82a5-4053-ab16-be42db9e3f1c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a553849d-e6f0-413c-9e6d-a8166ab58357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c6e5ac-0036-4fae-b15f-b72feff6e44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d7d241-d326-4d1a-8e1a-fd8a271ba30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3494792-1e86-420f-bd22-80def00d1f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f30190-56ff-4f3f-992c-800587b05d5e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a10976f-bbe3-486c-92aa-e609fe1f71ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073cd471-0c86-4950-a154-e0337d6e6567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ec3eea-d18f-4782-995e-ef7d66616283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca84ccf5-5a50-46b0-9574-73dec980e7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33f6455-bbcb-4825-87fb-4a88206b51dc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46be3963-3fa5-44d7-ba18-f7979221c35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c388a49-e2c4-427f-a100-233d29b38e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4757287e-9d3d-4d37-8da1-6335932b9c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e64c6d9a-1c06-4383-82b1-901d009aed99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d71280-1763-4186-b6cd-1521d627c641",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9998ea0d-f27a-49b9-9046-a744cd9864eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c9388c-493b-46d6-aa4a-2712584d8954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1965a339-57e1-4ee8-8a20-e4f8c6e22938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b32c92d2-c722-43b2-80be-3843831e4a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b7601c-beb7-4e62-b6a6-fd28ebf462e3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093d3d15-dae8-4200-b2c4-f983c5fdc8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a342fb-41bf-46ab-869e-a15e17543122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ac291e-a644-4849-874e-837d11ed5a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9c80d4-5a41-46a0-aa1c-249bf993ca6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cab0a0f-c089-4de7-8fb8-c701b1772d25",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98491507-9a9e-4b63-ae5f-4ba9505bae82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d65ae29-c524-4077-a57b-96258f2cbbc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8b0726-448c-495d-ab17-d8335f7be7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c34ef593-0b47-486d-9e2f-38ec482c07ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d9a80c-4e9e-4580-94aa-a572882c5015",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c39bd0-01e4-46c1-8dd7-132c39fc5321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf31e4a-ae57-48e2-922d-6ede96385ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a1c8fa-e58e-42c1-8095-c1228ea3dd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "65af74e0-57bb-4440-a312-7010f6cc6f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51c38a4-77d9-4505-b1ae-92d94be3de47",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d1e3c2-86b4-4408-8580-0c1099885f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90444c96-919e-4e23-8648-8bf7ad1d5ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6771e1a8-824a-4d5f-b503-addcf34c3495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c094383-32b8-4c53-bfa5-2a144f080032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dde988a-d29c-4f48-922b-ed81a2b17a0d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff354671-6180-4765-8568-f06eff54b90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec01eac-c254-4106-a2f0-516426912dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77723ed3-1685-4541-8b3a-9b23f59c6a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f68932c1-8e02-45a6-9406-adee5e38f732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abb4550-21ee-4c1b-8c2f-8fcf70da02ff",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0b8871-ae74-48dd-a382-18890843084b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68e5f4c-17f4-44fb-8bbd-521d205231dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316d2a8c-fce0-43fa-83c0-8ec6859e891d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "673c3fd6-456f-4013-985b-29161686e8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32505251-6c7c-429a-8fa6-79eba8a406d2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d797e9-f3df-4fdc-845a-cc0d18efbc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7feb340-c80d-4798-97f0-226d81d37026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2001551b-d982-4999-822d-ec7941bc7ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b599cb77-33da-4681-8664-ecf873380115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c786827-4edc-463b-bcd5-1b2e88e38add",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99e209b-9b9e-4c18-86e9-38a21298f9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c9100a6-db6b-4508-be2d-57548a1b18d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7575b24f-c8fd-4400-8072-e571c18ee262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5af57a9b-d848-48d3-9520-9f7aba4dda77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cfb0cb-2a4f-4c0e-b36c-d80332d6a3a8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f692c560-1b69-40b5-9cff-0fd7dee27f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6c8744-b71a-4b5c-9c6e-4b881007b1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10c6739-1ac5-48e1-a928-c09845f873fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ba4619-8d8c-4c0a-bd2e-aa91e4681207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0420a174-21cb-479b-97b0-bfbc0a734b80",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2e6ca2-c44b-4aec-9a51-c7d55727207d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa29ee5-04b7-4975-b8f7-c6d893322ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3df38d3-87f0-4e55-8db3-0d69c74a58a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "53de54e8-db94-4a3d-9f95-0f2e5a1189fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0feedcc3-2ec6-4a50-a507-5ebec647c622",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cb5688-ba68-419a-9049-ecd342df8afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33cfa0d9-6ccf-43ea-9c41-74c44542b0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d3832b-611f-449b-b73f-b963939f562d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "facbfa94-8022-4490-8e74-bafdf4b800f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a79c36-a873-4a88-901c-6636fe98273b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401a30e9-496f-4cfd-897c-01d5118a7458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d548245b-69bf-421c-b7c9-336d2e6253da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eafe2f8-8958-4370-9987-20795201976f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6670085a-dd85-496c-9fde-74e4b6346748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6a0c5a-00b5-425e-a2be-29ae8bff89a6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9123b209-5a01-4f7a-a184-987cbcb4248d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eafb4eb-4c33-4640-93c1-590ebe9247b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdf87cd-5cdc-4ca0-9efa-81f5604350de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf02baf-8956-4c2b-9927-f07c904b50b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ce95c1-e9d0-45c6-b0b7-6c258f702265",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc870ea-0f21-45f4-90a4-1819af8a997c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04aecea2-96ed-4fdd-ac63-38a15c32d976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b35d2e0-cf3a-4bb6-a7fb-a33a9171948a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3be5c01f-c2a3-4f7d-89ec-6ef65da5293e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f98e59-b2c2-49ac-b95e-7a9a8a39e725",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b3299b-7685-41db-bb6e-7831e4354a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd6b8d4-7031-44dd-9c54-21edb76cf92e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04527a9d-3d08-499f-a0f7-e6e0931caa6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee2ca484-f01a-48e9-a4d7-eb92fe321e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2fb8b3-d9ca-4d74-9a65-8a04d619c91d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1575bd13-92d5-4300-8b2d-b904165f322c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f59576f0-3d30-4593-8a40-64192eb38b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0be6d4-bc39-4739-8dfa-a5767cdba478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "859f22fb-686d-451f-9580-3241f20e33da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e692f64-7777-4bd9-a5e1-02ceea06b1a0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8a302a-850a-4f2b-87ff-f0344a96aafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32482af2-7b45-43e9-8330-ab7e75dde187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d055902e-8edf-4174-a563-c4ec98b0811a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "485ea753-f53e-4d7f-856e-48ea557c2201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a3e75d-da8c-4d59-bbc7-cabfbf744c52",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e425c222-a15a-497f-a9a4-e5231a1e7f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1415f92f-64c5-4ea2-8571-0d11793183f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a10a078-69fa-45db-8726-3d09c2d865cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47028355-ca4e-43bf-aa7f-cc90d2ac7ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f874c2da-22a9-4512-8201-8e33ab91209b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2123f702-8d78-485d-9094-48b5247a217e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3243e442-8953-40c7-b52b-9658a6d388c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9127891c-2794-4d3e-9dad-11d382d8fccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00a5a3fb-f86d-42b8-b492-c5ffb3001531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a038400d-2da9-470a-b896-b028fdf2d378",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02737c1c-a048-4311-8349-c36d04b2b216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b2de52-1fae-4da9-b715-c0ca143a0f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbae6f7-409a-4192-a420-3b0373377f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be2bea93-04a7-4795-ad50-1b8ed2e441cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56530b34-3cde-49c0-8141-3829fefef686",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e5951e-5cca-45d6-b037-8f5ecc8b98e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de02fbfa-b94b-42db-aca4-db45df1d7a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13318f7e-1a97-431d-8c28-d1ddd0131797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3a1f34-38ce-4cac-9fe3-f2cdb15ab7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50d3620-8c3a-4242-ab10-bdca06b4158a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65fb407-3302-48db-bbce-aae0a2fc8f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2836947f-07ae-4666-858b-f44073c5c63f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a8c976-707f-4e02-8586-06b6c397b488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe2866f3-f25e-4ea2-833e-864181bb8877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf832f3-d231-4b40-a196-def2a7bc511c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b19ad5d-928e-4063-bd5f-6e4f1cb3f303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bedc625-1e8f-495b-b60d-8794bb4c63d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea86d97-8da2-4221-be17-240fb57ca000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2477c28e-ac14-4a87-bc4f-716e257df8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e98d7d8-2868-4f4a-be21-555a3a1d0154",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6598f6-cd18-4c8d-ba9f-c0f7521bb437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ceef7d-ef5f-407f-84f6-dae9c8910038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d80971-6c08-46fa-97fe-4e81117c97cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "94d0e935-59d3-46ff-816b-1fc2491acdf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1489c69-a509-4e87-b283-9dd9f6005379",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa0da7e-3c38-427c-a075-701ec889cfe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd15d62-5111-44d6-8ead-d2bbd159a890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67142c51-e3f5-4641-ad7f-13f470f11a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f63396d9-13f1-4ccf-85b3-fa3ebe1c6b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48942bf1-cb2e-4757-aa76-c23d434d104f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382f312b-4c16-485e-a1be-05fe94f8add0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3a80b2-e9f2-4737-ab32-c28efcc2ef66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d997759e-43d2-439c-8296-a1f2a35ae04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1b2493-a742-4d79-9922-4cbb9618b385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee104085-ba77-4fa8-85ee-ecec776ded27",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fc379e-a0ae-47bd-91b6-d7e862812807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6def0abc-c981-4b7a-8c45-512f3e166c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf180ca-c9bf-4a31-ba4b-a2e1b70b1b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6786ec-b08c-43c3-a093-92cc5fbbdc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944c85ff-ef6b-4b90-a0d1-f94bdcf29e5b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1228ce-fe99-48a9-9558-b4a3e433cbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28c17c6-a6c0-4f53-8ca2-b25e937f0cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c883ec-eb0d-465e-b798-12a3f55d8f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6804280a-ab91-4a33-8885-9e6456a63a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597de9b3-6f09-4ecb-84db-cdb76095b0ec",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62188b87-429f-412a-8d40-13ec252b39f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903d1ffd-1ea7-480e-b67f-89ab598ced32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fedc43-2d77-4e0d-81dc-afa83f8af931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6aea9daf-0989-4ed3-be1e-feea78817b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db66bc9b-ee7c-4531-bec9-af6a682e2866",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388e4ddd-6004-4c58-a732-9b495059e459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ae6c77-272d-4c18-9e91-09177d06e5af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be664936-f18b-4b99-926a-808894b72d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "89d74fcf-00f4-47e8-a780-b009277c1173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd52a7b-27d3-4300-be78-991e8c459642",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e66c15e-9a4d-4916-bb48-246ea4519c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b8775d-e42a-4d7b-830f-dbec0323e2d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb363ab-3e57-4be2-b76c-ddac1706d35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ca442e-656c-42c1-abe6-5a3ba607b393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63869592-f71f-4ecf-8ecb-8713f7722355",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7130eabd-4756-4b06-895f-d6189711f916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541ec1c9-1081-41af-9b6c-1e5e257b1235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29db070c-67cf-4d1d-8afd-9b54423ad0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7561509-6edb-4b49-93c7-4fca01228295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ac8b5b-5c8c-41f2-aab7-c86b669d2dbf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb4018c-4c66-45cb-b779-947044cdbc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b379e3f1-8aaf-4768-a3c5-a3319f80819d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0177b323-9fdc-4177-a38c-47a4d5e0a8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "71ab9c5e-9c61-4885-aa30-615910eb82f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c2a4f7-e637-428f-bafc-7fb94907f547",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48262a44-8323-4030-81fc-45fa77ec0180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c3482b-a0cf-431b-a3de-bdfcbb15afcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f23066-bfb3-407d-bc68-cfc083e8b462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "828f6bf5-e863-4451-91a7-dda869c197c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81e52cc-a946-42b9-b9de-bb5cdea9e009",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4a338e-7fa4-4936-8ee7-2da3b168f6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dd64e6-e80c-4b83-a866-07eab3b0af56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbeab96-6511-4795-93a5-9773f3a8a0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "252bb9df-6fc2-476c-9b75-458be77bbf7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4c98f1-b44c-46fc-add1-34f8eabd2d23",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965866bd-41a6-4a14-aba9-98d8f7c62f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366d2242-66b8-4fd2-a0c3-6e499e0f131e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3088c827-c7a1-42f6-85b7-6f98249cbcae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ed1cc6-ef4f-45b2-85a5-375834c6a0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3de7f7e-0682-4f30-ac9c-50cd292c91dc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbccd7a0-a917-47c8-b62e-88dd1d3059d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6bbe6f-0379-42f5-aa87-87dea54658c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caae27b7-c3b7-4920-83a6-2b8c023340cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eee03f7-d1c8-496f-89f0-dcef45ed4759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb41e41-bcc8-481d-b543-ddb565789cf1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cef256b-3469-4a76-b4a4-9e7004bee232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3627ce-5fea-4a64-85f9-f7fd3cf52583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da765ad4-e76c-4d5b-84e2-0615d1bcc25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35078df5-6059-4248-8ee9-42565f404439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac75151-1d06-48ef-8c90-798eaf7e4585",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4811d62f-9763-46ef-9fd5-40b15a79abf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c2a827f-06ec-4cec-93ab-29c800dccfb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc936045-f820-4068-a8fe-baaa1621b8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4140f0e8-119e-49bc-a79c-2d408dea2f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fd2cc0-2801-4bad-a9f0-942f26a9276c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ab51a5-f591-4654-8f85-7a9ea58f9d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f751962-0ca0-4a25-9e3d-808c5b69301d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310d6e27-7864-43a3-acb4-f2d608612493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cae4f750-be94-4276-abbe-150996bce8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75d48bc-6edd-4408-9b2f-010a536fe67d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225ab1f8-50c7-479e-8519-8eeb3e81fd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a0fa88-0c75-451e-b01f-8856d99713ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05493d0a-81d4-45f5-a4ca-948a7e9e1b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f004e25-408d-4a41-bb78-682621377649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b1e5f5-ad21-4596-95f4-a8e0acc44406",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b49470c-e934-481d-8ac2-a8dc1ed07bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c217694-dd2e-4a92-ad1d-8bfba87347a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a95e31-3593-4a17-8681-f346790fe965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fe6f437-2ab8-4aa4-baee-1433feb4dcc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bf01d9-a9df-43c2-a4aa-4a79a203036d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c80b08-b522-49f6-9481-396cfea050b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d6415d-2072-48af-9e44-a2910dd7a109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6ea5d2-1f46-4cfa-9639-94e99e0cb5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "defddec3-a632-4804-9001-f95f34327e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6c16c1-4525-4d8d-865a-3801ae0adc2f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb535e4-02b0-4137-bd59-1b27cce3ab09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d1b510-ea2c-48cc-be99-fb1f73dfaea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5c2769-e5be-4eca-826f-ce62ac28fff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f024d8f-8594-48df-abfb-6d2a79402e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbfe282-352e-47d6-b7af-f838eb6039ce",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8983dd7-cdb3-4ed4-9664-d928b583cf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba46909-62f8-4dac-9756-1215e800f533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e74d4f-24fd-4748-a9d3-0640c292f5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99c01af5-c5f8-4506-8120-cc70e2d86f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e557503e-3378-440d-a702-213d5450e96f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269d9ecb-d0a9-4763-8cbd-620cc346146f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2000cd3-fd56-4526-a4b4-767a78d5925d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4054d660-d2fb-4b3a-bf48-6becd6c58466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b842da2-33b6-47ad-9fcf-d009c72047bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af617eeb-8c10-4828-aaec-bae6ff2f7176",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b908ac4-a8ad-46c1-a8b4-3e62512677e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d242f85f-da08-455e-971c-e870ffaba644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf52c42-729c-467a-b27b-8017302f7575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15904c5f-4f81-470e-b128-c50e7cece9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb73223e-aae4-4f79-9166-b6c5561166b7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfad38f-8303-4aaf-8604-97ad7be7ba10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9bb5e77-273b-4e01-93eb-a4a7c72ba6ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f61d99-d578-4403-b59a-87d0a1279161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c82421cc-ed8c-47d4-ba5a-b2ba2c4ccf03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4238672-640b-4a2d-80ea-523b92d0b4e4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8399a4e-138f-42e6-9f38-cd43a4a20901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7feb9b52-36fe-4773-9e83-763dabfebadb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f70968-dae5-44b6-9d20-07e8978a220e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7340d22a-25b9-4012-835a-587ad5156dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9084b851-8b69-4d1f-9fc6-8fb9203374de",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d698186-d646-42b4-8266-375a21a8aaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76ea85c-d6b9-4c81-a8b7-da95a8c889b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adec794-8d4c-440f-9b05-cb4bbf92aea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ccf772-33e1-46ac-b352-d2d28cc3d449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5231427-3094-446e-8443-ff0eca9cfdc3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753f48c9-ee56-453e-8ec0-09f1c57e7b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72cc7a03-086a-4d3a-80f2-483430dc78a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4a0845-ca44-448a-9789-c1f0d4497ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38fed21f-8cb4-4e09-9c75-31393c8db976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486d504f-2f73-43c4-b686-7d623697a07b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bf1092-bf3a-4902-9baa-cda33ae101d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a62e9d-9e85-4fb3-aaa1-3abd400820e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523c90bc-17b9-42f5-a37f-2384e3c5090d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a00c46-11fd-48e1-a8d1-a479b7ff9253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaef8697-4c35-42c0-953f-61eb3889cfbe",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f53e030-0f1b-41ca-b096-4743abfc26dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00af19bc-fd7d-4746-a413-af661bff53c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1f6aee-30cb-45d2-8f0e-2b745b1c922c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf177add-c410-452b-8239-ac9ad557c544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeecdd6a-10cb-4e9d-b864-be392af603c6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b2c5d3-cc6f-4463-bbc0-e861bbf46cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff83684-4d76-49f6-82c5-2d067371d80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3ca424-a688-45e7-ad2c-10382136cf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4553670-94b5-4098-91fe-572ba73877f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ad15e2-8270-4355-a711-cbccec34e572",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12389e2-50f4-4d37-8401-1b5eead866af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c841bf-cebf-4d35-93a2-588032f34018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a4578e-f735-46d0-bc53-a8fa4cffff25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d7c8a9-6217-4dac-8b02-d0a81324ee3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e8fef3-f2f2-480d-af07-8505551b4fc8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99102967-8742-48d1-9a4c-9159c23dff21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73072482-4c5b-4820-a94e-256244428007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c565dfc2-e95a-4352-ae0c-f07ac16fc0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a196f164-e190-432d-8fe8-0fcc98ac1aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654b9eb1-a4c3-44bc-a9d6-3fa233eba2f3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0225ab7-951b-4b25-af51-8bd21cb6878f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb2c283-8e00-4681-8e11-fc55bb6118ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e589bb-7a1c-4248-9b91-87b5b104c7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8296e92-1ace-4b38-9f0f-7266d2c0e802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1026da4a-b698-4c7a-ad0a-c3d3499e4c9d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18e82d5-5550-415d-9eea-ba301389a64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a738a85-ccef-404c-b353-ee0422726ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6baa8c2-f991-4cdc-add4-4737450dabaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e654275-d04f-4eef-b33c-620f752d367b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07fed25-b114-4acc-aeee-9d9fa18b5f05",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed79652e-aa98-44e7-b0fc-e97d392c5dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f101de-8523-4a86-b40f-4f7bcc7ab1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a162c766-7a11-4974-8374-9e7e960cbe87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b63265c5-5a5d-4341-a0f3-73a645fa0e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc467db-4d2a-4f71-a08d-45e537654637",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ef3764-01b8-4881-a5ba-28c1896ab336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a6045da-1d08-439a-9d79-e6a45d65246e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94334b38-c3b4-4a16-bad1-cac66f5d2511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3508f4aa-51c9-4ead-99b0-b947dacf5bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3454fd70-1a44-4a11-9695-3f3af0cf3ade",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd578e5-6946-4c3d-9380-9a6c32b49dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dea3ab5-1ee0-4c4e-af9d-822a11a92ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca61f1b9-fc5e-4ef1-9cf3-a41f6aafd59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "46944ae6-1f40-4b83-bf28-83cf615c207f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42203178-221a-4c9e-bcf4-91bea581ba3a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4af03f-0c8a-4efc-bf1c-f49fb03c2d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf1bc55-659c-47fb-b32d-ee07b101b7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacf97b5-4bff-4fde-b12d-1b807e898714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea56bcde-3470-4f6d-8d52-e80d4d7278e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1e5135-bbfd-4867-97f9-040db8161e2c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe865fb3-8760-4353-8ea0-bbffbd6b6d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "891c9184-ce9f-47a2-a90b-8131ea6420c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14dee14f-6c53-4c62-bf48-8a4f874856ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b76d79-aec1-4e3f-82af-8f882f685e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653e4e06-98ea-495d-9188-f85b828c844b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee2c22f-b51b-4c3d-860b-b103d2f06c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d010fd48-b1fe-40a9-b19d-487e38a95d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbadf9a-8b85-4272-adfb-85e1bb2cf353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0820c6ff-5ba8-470c-96cd-dc48e9dddecb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2a506e55-7a7e-459c-8fdc-3a74a1707b93",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79cf226d-3c24-4fc3-bd21-9cf88a3188b0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c54d57-e945-44ff-9d34-7b4d4311dcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4338449-7e18-42b6-971a-1b56d13a8f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d62fe89-bd47-47b6-a9f9-b752fe652e59",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40c1d7a6-4088-4c20-ba94-561151ffcaeb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f14e557-e314-4158-8439-708a2590cbae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "985567a3-3049-4f6b-93ff-b94ca0845716"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56f885f5-fc93-4541-8609-8fb0e1536997",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b08e1cac-af08-4e24-81b8-26c2764fa1a2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "66995024-b937-4b8c-8a85-ab9ea7601b60",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a16686b4-7424-44a6-9feb-b2f8c0661fef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3b0d8432-ca1d-474e-adcf-242cfb6cdc1b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ba11e7b-880b-4805-bb6f-27bfe8eee0e7"
                }
              }
            ]
          },
          {
            "id": "db9a6d27-bf74-4cab-95eb-9667bdeaee5f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ecb10944-2662-4700-abfe-f5c8831e870f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6b90ec9a-5550-434c-8f2d-dd1cfe9c685e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76eda039-d0df-428f-8860-c94bbb5779da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e35b9c82-ca4f-414d-87b8-aed07446dc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61aeee29-a410-49c5-b1d4-58d5e05b06c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a532b6-5f03-4f74-a6f4-990e00c96c1a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e1b0d3c6-8a81-4024-8db7-f677ac16eba2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa10e0b8-90b8-480d-b964-d8a07f56e783",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72b5329e-61b6-4401-8c8f-a8f6a2c337d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "989b8cde-7060-40a4-979b-70b340bc0f93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "56bb0d04-5543-475c-91d0-08b0363e5df6"
                    }
                  }
                ]
              },
              {
                "id": "6d81f121-ca09-4d79-aad5-45a2998effcb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3ea43eb-e4fe-4650-af8c-dcc98a373d12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "17560f0b-b0bc-494e-a2a3-c42c646f0a7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82243158-55df-498a-ad86-fa9cc6be9849",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bbdb4a4d-4d72-49da-ba06-aa416ec0c7d3"
                    }
                  }
                ]
              },
              {
                "id": "54f84058-be82-43fe-9123-fd087aa847bc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3dce714c-6abf-49e4-b78e-d189cdc6ce10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76aa438c-c383-44b4-b884-c6a8eec200a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1020bf87-a91b-4302-92a7-161e32252452",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d11e9b57-26ee-4f21-a71a-2a24cd93cb7e"
                    }
                  }
                ]
              },
              {
                "id": "a5ea6bc9-05f1-4542-8507-a9eb219fbbed",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c2f8ba1-2ef8-4ee3-aef7-6cd4a479a7f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f687c23f-7bcf-4b2d-bee3-bbce2957e9a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19aeeb6b-c7e1-45f9-b205-a5a28eec8775",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "be080e4d-e7d5-4457-a5ba-59f4630e5e83"
                    }
                  }
                ]
              },
              {
                "id": "9f0fc9f5-cea5-4360-8cfd-ef4bee6ec5ec",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92060df6-935b-4bf1-b58a-134b856b0483",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4862ab18-e0a9-4bef-b4a6-8f61a601d659"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c545c06a-19e1-4d41-8e87-f784c071d6bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5fbb52ca-54a1-49b9-8b62-5d40431f63b9"
                    }
                  }
                ]
              },
              {
                "id": "739a3823-756b-4f13-86c9-6931e2115322",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf7e4f2f-1195-44ac-84b7-a3747db2b155",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62c64014-4dc1-44f1-907a-ebed6387ae7b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cd484f6-abcc-408d-8a37-42e7aea5ca90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "01a950bd-3f11-4f62-b6b2-95a07faaa9a6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce8a0a5e-4de9-47f6-880a-3e2f740c2e20",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fdd32b85-0911-48af-9936-3033ae02e8cd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "21d06782-d844-4891-a472-2c66d79dbcb0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e7fbccb-b57a-4d60-b637-759e20534986"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5ad7d9b-3331-4071-95a3-c2e34b3b99fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8e899c32-728f-40dd-b404-22f634ca5844"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f9e5ec6-4531-44d8-ad4d-940f3ac16ceb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a2b0a6d-e4b0-4c00-8926-21597ef9305a"
            }
          }
        ]
      },
      {
        "id": "3f8206e7-5b49-4b3e-9dd8-301051f63605",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e725ecbd-d74a-45a1-94f8-8bbb0889feac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6542a04-af12-4378-871d-93495d681543",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2f3b3010-d6f9-4340-b40e-4da17d829dcb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c48ef1b-98b0-4574-9169-fd2b4d1748ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69b82d4-a795-4a73-902c-1c6de67698e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6034a3-2d13-4b32-97cf-605328793bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc7228a-bbbe-482e-b122-42d4bfa330ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cbe88b-e1b0-43e9-ad01-f745122b1b20",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28e2c8d-2012-4036-8f66-3a304661f1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e0e272-e46f-4420-96dc-2382e9a4e95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc659806-217c-4d4c-9cf8-cc39fa814e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7638bce4-732c-4791-ad73-ad3edb0e4b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b2134a-9411-4205-9081-ed8c7e06560e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2f241c-a8f8-46c0-b238-2521e55a0d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3758bad-85ad-4807-9c67-a98b87610e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1255d2-43dc-4e36-a73f-de87ff8e74cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d03b5aff-39fe-4ff1-b3bf-7fb4a12ee126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55914a4-c8a4-4a9f-bea8-5c8da3102d89",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67138f6-9cfe-42d5-b908-e3f9d3ab6e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c55182b-33e3-49de-a597-17ed89d1a926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50f608b-0aec-4625-af06-c838ec59e662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d07f278f-3bda-42c4-b468-4fbc0d2a05fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999fc705-2898-4157-a16d-09ffa6068d32",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdc1d9c-f9d8-43b5-8528-36903e4b82df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ddd49f-1898-44dd-9417-33c8c528af66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf062ec5-cd89-4b38-9f80-caee16f77e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d47ec06d-5bda-4f01-959f-ecf55ad1cdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d1e5bb-50d9-4041-9291-715b4509fa4b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72794905-0f66-41f4-8b6f-9ea5418866d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee241c3-d728-4890-b740-4fe5147bb453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69922ddc-6e49-4722-b8ad-144dccf3c6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "165fa0f0-b182-4c4e-9805-5293afa1e309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6197fb76-3b3c-4cfb-be39-c03662063386",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a02a74b-9067-490c-bd3e-580c075469a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f28d7d-b482-44d3-b807-f18d14e061f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1a3d64-007b-482e-90a7-cab2d7537815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7309bff-fd1a-463e-9282-766596c88ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5009f7-7d58-4699-b310-692442c26417",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d75ab4c-4115-42f1-8984-aee65394c02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcfdf81d-a62c-4122-a091-30b8cea56ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09aa1699-e7c1-474b-9b4c-b186469ffb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd1dcac-738c-4d1b-a90e-fb3cb4e22408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291066c2-1895-4e90-90d9-9908bbcf3f33",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68882b3-b782-450c-a5e0-c6b1a5c10f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cfa244a-30ae-4ef8-817f-e3f7c52b9af4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cae505f-c44c-4cfb-8c2d-33b520fab46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd35183-1c55-40be-a39e-043d4d0345c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1cc829-cc04-4ac4-8e9d-fd4a54bd1347",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62bdaba-c90d-401d-945d-d89614eaaf9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b8097d-f065-4b83-8832-46dc3240d1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d812d17-1340-47a8-9dec-6066990ec55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "820a5786-103a-4891-9813-e595662decee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2dd95c1-622c-4b4e-ab9c-a85faefba136",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3e7ed6-fcea-46fc-986a-f17df6b4bc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba0b6ae4-0240-4fad-819d-8d7b16223579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1ba20f-ca82-4116-8320-fa4622b68678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "02d682e8-e9a5-43d2-9bc6-6275a96e6fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9034e6b-2a93-49bf-bdab-09c0ad762574",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdcb2a7-ae8c-4d74-868b-c32d6b713c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22fb550-0bce-495a-bc68-5d2e9b5f7145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b653dc42-c4fb-4f67-b663-4e439e4b6223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48835268-96f1-4510-9fb5-f710b3b37c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369f186b-9bd3-42e9-b23c-050ca520aad0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1b57c2-bcad-4097-9bb7-d06de9a7b779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ef2218-2269-4c19-8d05-ae8f0438d4cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a86694-d812-46fb-9585-34af248fc936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d040a80-08e2-4bcb-bcd4-7888754989e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f55df0-6ed9-4a0a-beea-259d6ba1b4ba",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdc17d4-977d-4d92-b6b6-bb5392219fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf75b73-4dec-43fe-8e2a-a1295344c98a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc86ce4b-73c2-4c0d-957b-8e376904a143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b17486bd-4956-4e0f-8bd6-9ff2a271cbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c930b0-fab8-4e09-84dd-95742556f05d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acbd779-4361-4cce-bdeb-eb2ff190629b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff334d6d-6595-430d-bab8-5bde62a401aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fc50ad-ace6-4de8-8704-f985f699227a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dac8ec81-debb-4b94-b21c-147ad3ad458a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe50c2a-be18-4cf4-9e7a-0a128b9bf4bd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb61ddc-cb51-4ed7-8a83-4fae8d1bfe12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2ebcc7-096b-4a70-919e-35d520121947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebecedb-ddf8-47eb-888c-205ef96e8418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f681bdf-a3b6-4911-a5f8-b9daa4a1c2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884303c1-fbe5-4472-bbc9-25cfd9a84227",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6d378a-12d2-431f-ac88-4dd231a55c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df8c886-d5d2-4f05-a947-9dca8b009aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7b7f4d-0cd0-4b32-926c-73877eafd7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e22a2b6-f001-4994-b537-98c3d934ea08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b20909-425c-468c-a262-94c738fcd9cd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c93ca28-a738-4ef1-b951-0e4db1ecad85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a57d3f-52fe-4d8c-9317-b84ab9f4c580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e780a6d1-beb5-4c32-8df1-dc9fa303de28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5611a02b-62c0-4034-be21-ed99c30961bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88a14ba-f0fe-4475-b43a-89e6b72d52c7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98868ce8-2825-4641-a2e4-a26e06c22543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d197a255-e4fc-409f-81f0-3268561b703a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1baf123-41d3-4b70-b5a8-9c4e7d833621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aaa8ae5-31c4-447f-a60e-4f02b1460c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee810a6-7c81-4e95-bfb7-0eb6a3491050",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d64ae78-60fd-42e2-b3cb-d2cf9224cb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40ea880-ce50-44ab-9720-041baae1b217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ff8456-8218-40db-bb21-7451fad2012f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a80ee7cb-7684-4672-84d5-ec7555a9d949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f292d00-e70f-4387-bc4a-b7d8c4e1ce58",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a1cd69-928d-4f58-ad8f-42ae53145c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "022f0930-86b9-421a-b4e0-2e0f6eaff87a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922893ff-f615-499c-a03e-3dac597063c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0068c1d-7140-4718-aa18-e8c092d45608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa53017-1468-43a4-976b-5f4c0f50f435",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d388fb-d91a-4b49-aa18-273b0fb2f2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6211701f-61d1-48be-a459-c32a8e3da8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29be6bbb-2a53-439d-be47-3df3bfe62bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c51c946-1fbb-4678-900b-e92cd2acc874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bc78be-b527-4504-9550-5ead4b4549ac",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8059c9f3-765d-41c0-8e73-6a1639ba98fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d102a12d-0cf7-4aca-9d64-561976b67fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689f93aa-b24a-4dda-80b5-c9b0cfa79c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41cb4d5d-ab9e-4478-956b-3f3169f11e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564fd954-d561-4089-9551-7981bf5fdf68",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4825fae6-7581-4cec-a382-63ad9303e251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e1ff15-1a97-461f-b970-3fe7eea42946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f18036d-cf25-420d-817e-ff7eb789d369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc193a10-b8be-45b3-9806-69727885370d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d531b0a8-549d-4146-8988-a8fc91f3b87c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4362b8ba-460d-4ee2-825e-cc4d434fa491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf43c002-f5b9-44f8-acad-bd796bd134a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a6679a-d47a-4e6e-ba7e-1f6c7485fe01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9164329-ec56-4c5b-be1b-afd7b7a825bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3de26d-81cd-4cfb-8e72-148ebb1a0ac3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1778c3b2-168f-49ec-956c-cc8909284ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d90d52f-46cf-4e0d-928a-c2b5c82a2d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635895d9-6a76-4f49-aa3e-0ac310ce43fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6854ce5-c75e-4b02-9f09-d7339790f2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89c9910-8b86-4986-879b-6017b413ab36",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6603fae3-c505-4e78-aaf3-8f2bfdd21d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde939bd-29a4-46a0-871d-98374950ba8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf12991-5381-483e-adb7-30ae96f820c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4841f7e3-ce50-4cf6-b16b-5b2f50131610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26555635-1031-440a-80fb-32813a512567",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4112c69c-2009-4ac8-a1f6-b96d4c58b2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a9955a-e1d8-40a0-b775-9a898b8054f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faaa5b1c-5d65-4a76-8756-9c489f078f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dee299b-cd47-40db-bf1b-e58781dc39ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f47b64-d719-47e7-82ef-ee732e5f6aef",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95669776-dc25-43c2-87a4-370001d6078c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4bbf71-8178-44e4-b0a9-02633c8f1fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65eab9c7-fbea-41f6-a316-0115b3dd1423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10559cbd-49c4-4e57-97f4-97c0289a0352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a604da0-60d6-4071-ad58-f41cedc020b1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305af36a-b7d6-46a1-9d3f-7bfd5256df90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce4eb9b-0517-44d1-b765-d9fd5dc3e457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76092ab1-5753-4b3b-8cba-e99772dcabab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74bc4913-7eac-4d80-a3ea-0c34cac17ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed456a90-0109-4786-873b-3e6f7b3a72a0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfe56c4-98b6-4e73-b9bb-07fa0a02b094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7292df98-9d1b-45fb-bbab-c3413b71ff43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d25d3b-cd12-4d3b-8b3f-165d8d57809e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "200102a6-0706-4e28-b0a0-bfdbc012c46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cc618c-3561-4f20-a81e-c78e0a3d49c3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4740e212-441b-4d45-93e2-cdae2fce5949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ad08e3-1b07-4924-9f2a-6f307f4cc203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd6eceb-16f1-4c17-af35-5a5fb67f07ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "375e6730-6b02-434b-aea0-84992d89e090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7d6157-76b3-42ac-9b74-e1cf48a13607",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4770d4-9235-4fcf-ac89-7d9c72f9d189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359932e5-6e47-41ba-9020-72bffaf758d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e29bc75-32eb-46b6-8665-4e997d3df78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d2c9bc1-cc66-4556-8b2e-fbdfae79e403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9551d3e9-2ebb-4657-b5ab-b36931f74d8b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a5e7ec-c443-435e-8e25-1829a1d12d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b135744-48cc-4713-8188-c5b0375cf017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a433a30-e701-40c0-a735-2c83ba0f3207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5875dd-d38b-4e31-aa8d-9be3e26ffc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e432da-3e8b-49ff-8815-cc39834c7934",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1086916f-fafd-4bf0-9080-465b74580de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98478bb-9964-4ac4-a2b8-0317b1d16fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4233a945-8c3f-4020-898c-8fc400a8812a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c9d7c6-afca-443c-bdef-e9b4f4a48dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b2a71f-5d6e-4313-9830-bc249aae2342",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a04ccd-a59f-40c5-9ac8-789c51740576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d328defc-3eb7-4aa4-b038-21e815f2a4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df468df1-762b-4582-b614-c94e900b1bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62118b92-9001-4519-ac94-bd97a437f117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f888e7ad-c0f3-4162-8812-041dd6ba1ca4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd2bcc7-c844-4b7b-b7e7-48b10a26ea31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55de58c-3e52-4539-ac0a-8493d2f1a7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8d2d33-3c36-45fa-8bb2-20826806b832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56c93135-a43a-4017-b387-b74151c6102a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed2a5ec6-af7a-4ebe-9568-12baa3e0ad4e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8bfc23c-4022-42a9-a96c-26f8f8bc49ee",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68c827b-1afb-4105-b900-41a3269df7c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "70791ddb-2f62-42a8-8458-f15214c96425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff659a4-599f-4d69-8586-cef2cda0085b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfc2dc44-1372-461f-95c0-4cf6e5efc1cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6daf5c5-4a21-4455-a034-2ad3abd782b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "213f3090-3b1a-48f3-89db-aefe2cbca0f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5eb28784-7eec-44b8-81fa-868cf4a5b4db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bcca128c-f7db-4e21-b5cf-4f1a4ceeac91"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3af079e9-cdec-41e4-842e-66ed827e6cf9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cb97521a-3d25-4b2e-8448-66bc6d0c4222"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ded98f6-25de-4c43-a3c6-fc2049676d7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b19a631-8fc2-435a-8bfc-180766a4298f"
            }
          }
        ]
      },
      {
        "id": "e23a462e-aa34-4276-9cc1-94f253d11879",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "12b145d9-40fb-4fcd-a3b1-642fbd3af908",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3bec4db7-020e-4c11-9600-c03b4dfc358a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c091d1f2-bf9d-40b8-9b6a-a6399fd68520",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54b0aeb-cd9f-434e-a9ab-1f6145aec5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a859f723-86c3-4af6-9dfd-d8bd7677bb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7644aa0c-c094-4e11-8532-291b64cff75b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e05036-2010-44c8-90c9-4fa29fa55abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387557f7-6fbc-402e-ae82-df80828b40af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b3aeda-2f95-45d8-b216-7238524ad31d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e14eab-510a-492e-aad3-6a1c8d8866ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6741a083-2572-421e-a862-859b504f90db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11717ed1-5b28-4dbb-99e3-37c3f9fc3ae8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e09a718-47f0-4038-ad32-97159e61f2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d40f28f-37bb-4594-89ca-cea542b4c527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac9600c-251d-4e72-ab53-763d52ba451d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7268e0b-0995-4709-8670-ca6610f164d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321553bf-4779-4e07-84f2-884542dcab0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61105b87-503c-45d3-a7ef-91c64886cfa5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323da6fa-11b3-4489-a3bf-c509ac3f0f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31dcbca-2c01-46c6-b134-22c591492db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa995db-cdcc-4946-bc22-6babb82409b4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd6a5ec-3e4f-42a8-a3a2-5d0c61b495e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10452ed0-d1eb-4d33-830e-bbc237a4f456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4230e6ae-f9c5-49b0-a357-1b0161b46867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b5d598-d676-4c56-abdc-7076c8870e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bf49d2-35dd-4616-afb3-f3d6ae8dd0e1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad734c49-1adf-4edd-908c-f1c7e6875fea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3a4a374-8b87-477c-a592-c1851ac7382d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff408a53-5a7c-4480-b3a5-7bc9aa815e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49c8c76-6025-4125-ab72-52b94f1c21a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89feff2-3c43-4bfd-8fd2-90d478c30ee8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc925e79-3e3a-4890-a5a8-7f427a51b105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dca85d57-1861-46e2-923f-4be2983a17f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcc9254-91d4-4816-aad5-a3b4360df964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3ec6e3-4ed4-4819-9c86-a91b21bfd4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82a748a-b238-45b7-9e20-5643a59ef8a9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e27b565-e9a8-4d7f-871a-985ea6132299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95a69e02-2e8b-44a3-9a28-133e29ffc5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2311eb22-6f59-4ac7-9584-dbf375be3a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76c9cee-d6d1-41a0-be1a-815d0bc18f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f11f9cb-da18-4a3f-a306-847cc3263c16",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2834a75a-aa48-4223-b315-2dd5e183602d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d53dcb-59b6-4307-b32c-b8db7e445277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad8444e-233a-453a-b616-fc447e8bec42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cbe3cf7-7d48-42a8-8ec1-e89c2481a946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351c5ff5-d6eb-4596-8a1d-fb296eab1c60",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad05b105-a05a-459c-81f2-6aa907ce92ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ff30e9-2926-4048-a73b-2d11342d6d70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bd83f7-f9df-40ea-bb57-12f2fc5b263a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63255bd5-86cb-43b8-a0b4-27f56fdb9888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c13a7f1-00e9-4836-84a6-5f53706ca66a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec79b8a5-b5a8-4b1c-a0c8-1416a99d88fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f01c10b0-ddd6-4f83-91ec-6ef43fbeeb44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4dc3bd4-a7ae-491a-ba16-a2f9cc10ed5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93f61b2-0c46-4ace-b014-91df0692328a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9fdd55-e091-4617-a2dd-e4d56d7d76b4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8712f21e-6436-473a-97d6-4565d230e10f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac24d84-ba0c-4a13-ba36-c067e54ac719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb36c677-8723-45ca-8d91-b1983db3c656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43261c5-f08d-4ea0-8c7e-cd5888e4e3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d52cd6b-944f-4581-ad1b-ec3a2a3ce745",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11153d53-6a9a-4ad4-b50d-2bd8033466f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4d17898-7942-4c4e-b960-82db0fd84e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa69f09-43d1-4c23-b545-389683d25a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d8e7a4-a79b-4c0a-b088-69b584377be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab294df-b02b-482f-ab6c-592ed3653292",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007054c1-2f06-481a-a7ef-fe597e24fb85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b52ab8b-8abb-473d-9442-f561ab190a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d669ee-6bcf-4274-89ca-89b952bd89be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3efa9d86-1dee-4bf4-8f9f-de0ebe255201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3d88eb-b7e3-499d-bd59-8d0a0586f1eb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae67b8e2-f27f-46d4-a621-7aa0a1c2283a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e45a5baa-d9f6-484e-a5b6-58d51779ee89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e212bf4-d4f2-447d-9b03-81669305ecfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd19db7-2906-4b81-a7ce-e49d34ca4107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ecd718-ee9f-459b-8116-0332580f7b40",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843c7823-22ac-43ae-81a8-f84336067b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a787d70-3d0d-42e4-8aee-1315c7c66f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "014ddc87-b947-4f33-baf5-0a20af7e7d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3127af90-f47a-40e7-93fb-bd569b93f4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87dfbb8-6654-4d2b-bf25-6fd378e8bf67",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cb5001-15f4-4aa6-a5cc-0db011e7e9f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52fe47d6-aabb-468a-8336-9c1f9e2a85a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0e469d-a1c9-4d33-b38d-0732b57d8230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10bc35b9-4783-4538-a565-a8024c9f07aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bda92c9-60ed-4807-a101-ea7cf784240e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3beab28f-3c65-4ea8-9701-8481794cd13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4923bcdf-7d7c-4236-88da-d65e937f06f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e841bcee-973d-40e1-95d6-fa164a113acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d196c9a-8c40-44f6-80db-a19fffb858b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396a9846-5a7b-4d2e-a190-cbe988583c01",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9822d04d-c858-4792-9b2e-bcdc82862433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360a0a4c-cbad-48ff-bd9e-a1a9a29087d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3479b0b0-537f-4196-86d0-b2f39ecb4037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10c292f-f7ba-4e66-b2c9-20712cf46ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471aea31-bd8f-4dff-b2bb-b1a1ed8b10a6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cddc081-5be4-4c6c-a3bb-d79f8f242bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce12a36-156a-4edf-b2ff-5e3f21471850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "426f6f44-7309-43a2-be75-57bd84813ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e52223-103d-4d8d-be73-8fc34d653316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f06655-ee52-4d99-bca4-db971ab5c9d0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb34b89-6d6d-4458-b153-2a06ec5dfdbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84afa827-c4ac-40fe-94b4-8b2c94b508fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "661063f1-9eb6-4943-bca7-633aef293a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0094715-ec58-4764-b24d-bb68fa51b448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37766c2-8db7-4f51-9f48-07d1dc55063a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0f1039-9139-44a7-9323-805b7c319db8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aa95b1a-74c1-431c-a701-7b219f46c1c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5989b4-4279-4505-9ca2-c2d5e07c0080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1069f208-a2a8-456b-ada9-75d440f041f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a026194d-ee5a-4710-bef3-3ee946c3f028",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399c693e-05f6-4ac5-bdd6-8740abed535f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b74bcc6c-3441-47f9-98b1-6930c9de8193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9069ddcb-e2fb-4a1c-b1ed-ccafc510c812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6206bb4e-1be4-427c-9ba8-3c9caf605207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14be22ac-e409-4303-817a-4e843ba75296",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436ca1ee-48a2-4a23-939a-9f7285be6e6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d8cdccc-b86a-4cc6-ab9d-c4d9e1d02925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855b0695-e6eb-49bf-8a04-a7a8399d6eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebed9ba-b18f-431b-94b8-e05d7fe12a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ab3cc0-e6a6-47e0-b05d-cae660d00a9f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f340fd39-1fb1-43df-be85-5f3eea2e55d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2ba96f4-cf9f-47a0-ac6a-990160db5f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ed84ae-d85a-4a28-9706-bac26515be56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408263a1-8485-4e0d-82e8-5cac9bc27883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0de11b-c793-4989-b72d-1b07b0925c14",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08785959-346d-4ce6-9e85-3fa415ef4502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de3bbf8-ca86-43a2-890e-d645303754e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad903da-fefe-4561-b524-ca28e095d122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59796b10-4a6e-4a47-a64f-9029f7470f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251bd6ee-acd2-4d4d-b93a-94d4396a97ec",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f91b95-481a-4295-b8a6-09da319430df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b04c853-19f9-42e5-8dab-a08cc9772089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a298799a-2881-474a-9f9b-5153ae16a1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136e7550-daaa-4d88-8474-4730ed8d353d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb19487-ad6d-4ba5-a3b7-e017af3fb181",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7562f7-fc6f-4f8f-a1c8-8c8f7ce6eabd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "201b41e9-d330-448c-9fa4-30f835e5f14f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3891c9e0-2284-46a3-9ed9-bdb400d263ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ce07f7-ce71-4135-b7a1-78ae3de28f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66eb7a2a-d00d-44c1-8205-15ddb5ca77b1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea3e32b-9556-4fa1-9b2e-037524d42cd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ad04de1-4692-40bc-b36e-8d4cf0df6967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400913f9-b157-4321-a8bd-e9a9600fe819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7564eb6-4375-4569-b772-734dc81705ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a988de60-a705-455e-a168-a2a78b950ef4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e45026d-dcd3-4bc1-85e1-b76861efdb6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ab8ae79-61d3-44d5-a622-3d29a77f982d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f42ed52-6e10-4858-9e2a-8432d366db02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53dcc11-da9c-422a-a6bc-6db59c835228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696e0cfc-1c15-49c5-bd6f-f2e6fc566924",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a8d785-80ce-446e-84a6-6d0e0b2e8079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f4a8ea3-8682-4cff-ab5d-8b90db27b140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07c6cd5-ed73-4f02-add3-e0b4183db95b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c639a2f-ab8a-47b8-98bf-eda9342fac75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2674f6-a74a-469b-9096-86da7ab69b17",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59cc3ae-d1b1-43cd-8778-c6de8859ebbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dccfc485-dba4-4301-b917-2d7154724a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6902912-d4ad-4427-bd8b-b6edb44ad45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a41e622-99df-47ee-8e8e-10f13082eeab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df046e44-2280-4a77-8d7d-0fa1b589d890",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db20283-bdf4-4094-9f5e-ceb6848c2955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf64c8eb-e9a2-4a5a-8512-f2c0493b72d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "683bd30a-df51-4d59-a713-f5569902a518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "542883a8-d64d-4583-b4b4-c4aca4841f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ddaa8a-f5c4-49c6-92fb-5fd30649d9a6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67acb903-b00d-4fb0-9e7e-a45a0d4eeefb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4ac729-02fe-4d55-ac4e-65ece9b1837e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ac671b-77c0-4a63-8cbd-819cba380ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66178ef3-a867-4bc8-ae42-b77984e4558a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28dd915-55e4-41a9-912b-6192a48c690d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5294e0d-0db8-4cb6-80d9-054fb72fde27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915d5e35-756e-4ecb-9420-33e33a24b432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b776f0c4-03b1-492e-bd23-6eca819d4ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca104dcd-b616-4187-b9ba-a8c97f06255d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bc5c99-ff10-4d8c-8d30-fecd684414a6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4531959-abc9-4b5a-be04-267b2f0f3689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb84e3dd-26e1-465c-9a18-5623ec44bfd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cadc5dc-a735-4558-beb1-8a70ea71f1e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5ef9b4-70cd-4e8d-bcf0-173f77c0607d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc2521a-6fc0-4f79-83bf-4f91a21ea7f5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4208cd-1404-4382-8e74-9a6bdae9bd2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e34a994f-8cf6-417c-9255-e6cc62484f99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "778cecae-2cfd-4945-a701-132f12824032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d3dd7d-4b9d-4c53-b7cb-372618b4a05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502a17ee-7e93-4b48-8c31-13138525bc58",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437b159b-e853-43d4-a605-90fa0072f93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4511bd-c2b0-424d-9fa6-6e3fe686ba0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abc33db-709c-4001-a1a5-2b0fb8e1cd61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ce31d2-24ed-4ca2-8757-77d95abd1198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386782c0-61ed-4d7f-bdae-4fc608392429",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880337e6-9c41-40d5-a204-aebdd7a7367d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda872c5-2c84-4e8c-aebd-ef3d96a01c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4c5406-8ccd-4af6-bf3e-16ff1326b324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19760a00-3b38-4735-94eb-214fe01387bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1b01f8-92bb-40da-b2ee-1408bd3bff66",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ff84de-462b-4bad-9554-aa4a82a4e5ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d26531-4a05-48db-9ca3-4fb80b8d38b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f5ab22-8713-4b31-add4-8a955f2c3e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8bc3b4d-0573-47d3-bdba-e567502699ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f17510-6769-4fae-a92d-136b72a04464",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0327884e-8410-4298-b4a8-47c49e8ca7ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7708b7b0-7977-4b74-9a3e-4d4e0bda9de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4d32b9-83da-465e-bf98-3d3824934d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185ff770-b304-406f-a72f-d2ba05e13934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c8a23d-9bde-421e-abd3-21a9494710e0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b5dd6f-7eb1-434f-8c6b-e1c11b20a0e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6478a3a2-bd7f-403e-a716-fed87ed1fc58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6576fe0a-aaa6-4fc3-88fd-6b1754c85c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3768ff1-8b2e-46fc-8514-ba56f40af500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b9be9c-7db2-4587-85cc-f647b1047080",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a5dfd0-c2a9-446d-a446-c11a4064d71f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2717af11-ebb2-4f8e-ae5d-f95382e50a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a1e382-0cfc-4364-a7ea-0931dbcf5eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6623f0-06bd-41dc-8e9c-e1b2fdc49a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f3ea93-ac21-4445-8e5d-a8fbb60765e1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac4808b-b905-4436-979e-d1311f91d975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a417daa6-8eaf-46fd-9678-9f0ec1be2220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "009d6cc6-94db-4172-b216-9358467a29d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da961017-bb8e-42ea-8e34-c9d59add52e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89275264-8019-48ee-8f76-7821625724ef",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2ff635-7a0c-450d-a594-12d1881e881f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317dafbe-ab08-47af-bfa5-6c9e41a1710a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84098f5-22c4-4089-8bc3-34966006a527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9864a53-e944-4dbb-9e52-faab5a80cc1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812ad6a4-d43b-4939-b302-e668cfd00b68",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4663e0c3-c9d8-440d-856b-1296e597e0ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e3ad2f-318b-4666-99c6-3430d4796fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff4ab2c-8540-41ae-8506-591e25046829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a5ae8c-2ee2-49ed-b08b-aa76bda90daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8257c73-574d-45d9-8db1-00c20b5b35b1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e3d9f7-550b-4990-bc13-760a952c94ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27416613-9113-4971-96b4-058963e2423c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d6f8e8-72d5-4163-9811-0db56b83e135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2226c64a-1b08-48f6-9ca9-9b616b76ea03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7fad103-9169-4e51-8887-979bf6c26af8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed95f37-6367-4fce-ad35-ed8b63478216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2ff0c8-804c-401d-890a-9612bfea5ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87da42ec-04f2-4efe-a3bf-5c81b0505533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24901817-1326-4ea7-b6b3-92964756e0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac40ea5c-fcaa-457f-bc06-adc5c48356d1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7168d7db-bdfe-4846-92cc-1697e6401a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2838a058-9be7-459a-a843-6947bfa966a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc87780f-d18f-43d1-826c-4fa9b718c23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "664fbf0a-9bf2-42e0-95a7-8db506489754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac92245d-42db-4637-a210-59f09a8fa7f1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79229fcc-2685-4f5a-b736-d977e6938e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc3147c-e392-4095-bae5-0ac239602355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e52a06-8a5d-4370-93e8-8ca06d437ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98845f46-e40f-4f08-8c2a-6c5b854ae188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98495d94-ea9a-4ba0-9d4c-d0ea7f7d918f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23406dc-1410-4c0b-9b88-ab0e9e918d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39012775-331d-49bd-8fc1-ce54f3f566dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e98134-49c3-4092-a377-622ae3908cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927a0bd2-cf3a-4c71-8519-c036912d8cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e273502f-62f6-41ed-81fe-cc9eae26b031",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e27de50-7d20-4279-924e-41895b34e0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "568d51bb-9208-4954-b364-1591520364cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "383cafb2-5188-4f0a-81f4-dd8aed2685d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4275fe9a-3b61-4cf4-9ff8-f7a5994eabae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39998e1-ffd8-40f7-9fa3-c87ba4160db4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c5ad8e-0d01-477d-a25b-ea0f4bbd88f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a00af1-8d3b-467d-a1f1-2aae472de72f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7882ef-4936-4102-b5b6-4adc138639c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ebf93a9-0525-44ae-a645-b1911baf551b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52fdeafe-a6b3-40d1-a8e6-d98f6f754afe",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed7428d-5cb3-4552-af66-358a68ea9130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97f25bf-1a2e-420d-a556-5b16477b9bb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd293a80-9be8-430a-932c-c1eb25d05f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f6ba67-018c-4749-8958-a2ae0a811000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74781f22-85f1-4f30-baaa-d7c339019258",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b38eac-e9c8-481f-a0b7-59199f09abc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60575084-d01f-47cb-bd07-22180bcc4485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6bb76b-a1ef-49d6-af28-20546299f4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a187bc-2677-4151-a510-3f56e3ae3c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8844b5f0-f716-4c24-8342-3d9ddb62eb65",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc1b098-a7f8-4368-9efe-d17554bd3c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4283216-9fc0-41a2-87e4-17336995cdd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76109032-05ea-40ec-b3ee-c71e71eb42a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e49be56-e11c-4a28-852a-05d3174c84cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6dc5530-18f4-46af-bfe9-b3641cc7b717",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ab96e7-0d55-4a64-be45-b6b5282deb3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd26038-ab70-4aea-8559-a959d6ebfda2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "282d521b-5ea5-401d-a1e5-cd532e875d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eba834f-0058-43e7-9322-b61ac664b552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3bb223-78a5-4d1c-95a0-64bedb3aa0b7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ae2515-1b40-4878-9f77-128858d2ef67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1961c99-97cf-4252-8c75-0ac5c4fd7047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88908367-243c-41a7-8429-673a417c6f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081ccc64-75f3-473f-af96-39f4441c33ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32985ce-2ddb-4454-adbb-749b93217acb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6750bb3a-5e17-4609-b0eb-de365990b6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8fcbf9c-bb27-42a6-8ba9-6496c14a7551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d54249-556e-454b-897c-32d70623f154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55049f4-e642-48c0-b790-8aed11b8412b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90e88e3-d972-4d51-a8f2-aa3af41f0fc7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255d619b-45c5-413b-800a-cfc0c476c35c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9e82a9-f4e8-46a1-bcdb-6d54f6e325c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebb3ca9-e5d8-467c-b31e-512a8e1c772a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36dcbf68-100e-4341-95d7-76cc5f53c171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b64a0ac-d871-4990-adda-a8514d6f120b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec88873-8843-4bd0-b03a-e3789bb44a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8dcfe34-973d-49db-9150-3d4254947fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8830fbb-e5eb-450e-8c8f-76f6ca1490f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377328ac-d6c0-41a9-88cc-0dd40f35c594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6a95c7-818e-4bf9-9ca0-8f29d651880c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac841e61-69ad-4dcc-a723-87b0423f3cad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "120b9769-1228-44e4-a943-1dd4c85389b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec807a3-5c75-40b3-a20e-4a5c869d7b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1afc96-36f9-4f3e-bcaa-9d81a1b04d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b5b709-1346-4224-8488-cc1e27e11dbe",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303c2719-2e00-461d-8e1e-02fc0833b60c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2efba615-de74-4b61-b094-1a39eee0267f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b82f5a-b541-4ca8-83a0-f18939c2c43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43083f4e-af67-41ee-8111-8c3524643efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588e35d8-0943-4ab9-845c-6ef2c546635f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14c65c3-7f60-4f21-ae44-8187ce55c95f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c936fb55-04f6-44bd-9159-7787e5748c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ad080c-4f58-48bf-ac4c-2b18c7be101f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60139e17-a041-4b40-a28d-45fda377bf32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9df7487-88e4-47e5-b371-da10628b0ecc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8940fee1-c333-4dc7-a4d7-1485f7f1205e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6971fff-d424-4519-8c5e-1d4f5ef6b3d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e726c6f8-70db-4e9d-9d6e-882d76829a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d9ba5c-e23f-428e-842e-a468feaa3c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7b5f92-6d19-43de-b8f1-e34f036b5626",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc54a4dd-27ed-4f5e-9650-0ecf2c622db5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38a14add-5493-465b-81e2-7933c8d9579c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2145bd3-b7a0-474c-85b3-95fd7effb0ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cfd1f8-397d-410c-ae43-3d76a0ba5424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d2a839-ac7d-4203-b8be-53bed2aeb51d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25341a8e-520b-4d1e-9a33-21da9037b4ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f6fbc3f-b4a8-411e-95dc-0c160e571346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb7d70e-e586-48d5-95d4-b6009bd99e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d473b4fb-e28a-4cc3-9967-c78c93b2384a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e6b357-d5ad-4e2e-b164-175794a37e0d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e1bb8b-5159-45e9-b05a-0a5e0a49f329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbe12503-6146-49ae-9343-0f64a32b0c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5834a055-d2b1-4707-9b46-ea9e474a8a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d5603b-a0b9-4394-a1db-80a81c2c5805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e871fa46-547a-4098-9fc7-6d8a08820f93",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01880e24-4e38-4b16-8e69-7eb46dc0fe5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ae1d411-10dc-4973-8a14-947385927150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85813b36-5af0-4855-b282-02c7c4d102a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a438cfc6-847b-4b58-b8a8-f3855c65c456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e2bc5d-bbf7-499b-8e4f-fd590eada4ff",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a2ae4f-6d63-43c9-88ac-ad49a4c53cc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "173af0a0-756c-4101-a5a6-1b986e612165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00af5bd1-6504-4f19-9637-a6c5d78a4640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90dc4996-e801-4710-8bc0-5bd00c6ace9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83438ba-7b0a-45dd-8ce1-ce302299ccd9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d52ae2-95f3-4399-bdf8-5da3fa0c60f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a30fbf2a-cbb7-48ad-9eb6-a81664b88352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "276c8b45-533c-45f0-998a-5f81d75a118a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295b4fd9-7982-470c-9470-735b2200d5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e080a1f2-05ca-4b7a-9b69-760f343df181",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9d8a56-54e1-4e1a-ad4e-c0d6e750815d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6f9a07a-1bca-4524-9fa3-4615685fb071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f968e21a-0a69-4ec2-ad9f-fb41459cff32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d70a6f-fd30-430c-a03d-a30a78b82e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795290a0-dbc4-4566-aec7-e1d74c36fc41",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900ac2cf-f7e5-471d-a3b1-1a8d9450113d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "880105a8-f557-46bb-a83d-681e8d143b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68da9968-8d2e-460b-87b7-fefdd8e7b9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e24fb1-5f2e-4f49-b3ba-4bf208f3dbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b05c25-b3a3-422a-ac84-994aca8b4f43",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8197dbf0-d399-4491-9889-be0c250c275b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edb33f6a-2fa9-4432-90ce-67250d43bf21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397e2db7-f06d-4780-a594-c8423aee69a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60c64d5-5461-45f1-bab6-2c4b56b798ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0c2c35-d82f-4151-bb1a-28d99cd680ed",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659decf0-a552-4614-b9cd-0f5ed64c23fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7377726-6db3-4c85-bc15-1b47a356e3a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e23f7f9-1043-4e1a-8390-8a246b5cd5fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8648f9fa-0158-403b-803e-f5e608fd2ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96c999b-26a9-45dc-bd87-0b4b8ecb4e13",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c916b05-e864-4699-8732-4cf6b79d376d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd2bc79a-75c1-4576-ae23-0015946fb26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af5c75f-14f7-4527-9974-dcc0a2e3b98a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e103c4-3799-41a9-9ad6-35f672333fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de17e4c-612e-477c-bbe3-3e2dd536d322",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623a46f9-4485-4ada-9783-8bc90199c7ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af4eb70d-9e8d-4548-be1b-b6ee1fd8eb92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd422115-f9db-443c-9daa-4163bd5cebe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a6fccc-ec09-48bb-8c69-104d810ac89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78b6a00-f419-4afc-9cca-a94048d16538",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1fe8a7-ad7c-427f-a789-93e28694862c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcdbb2b3-00ef-4d69-a5ba-289bf2cf30fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1545ed36-ce3f-440f-a331-a8d2b80ed370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918d4d9a-b7f4-44f2-b1a4-3dc292b4af1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e27cba-6322-4594-95b8-0f0d741f219e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25130255-8104-4e10-9c9f-9d95552641cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f45e298e-e1de-40c7-a8e0-0330b87e95c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b091b88f-6e8d-4c84-b16e-ec6873ce1e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e685ee9f-4515-4f3a-a5b1-f79e456883df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669aa14f-0bb3-47d6-93d9-218a6904ba04",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fe8cb7-9ec9-4e9a-9bd6-8a39a6f5cb31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ed31643-399c-42bc-a1e1-33ff9a7a07f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a553a3be-8f77-4450-9f34-65c936a892a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6dbc055-7ec9-44eb-9de0-2e601d171c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab764d00-4a37-4459-9908-f05f56cd7cc2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0feb4e3d-636e-42b6-887d-c3f66d02ae23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1102e7c-7de0-4035-bfac-364e5861ce8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4eae75-f8ec-4768-80c8-e4a129ac5957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f3c218-48de-4770-900b-94950fda1dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43434890-ff09-42e2-94fa-70a246ee0e33",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39776b99-0955-4602-bb9d-21a00c5b15c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3423485b-6659-4038-8187-cb30b9af0ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bad695-8f4f-46a3-b197-2d2761910d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffdf7e17-67c8-4e3a-a9c5-aaa91f2a5e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69e9818-71aa-41bb-a506-e2262755c5c0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edad495-735d-41ed-90cf-3e735ad1d3a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc6a09f5-4626-4814-9ea3-5b9b4fc78617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb05bf0-4962-4bd9-b77a-9ba8ca4a1fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eccd874-2c7e-42bd-a50b-099576707566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc26d10-29d4-4633-8d98-1832ea79b6c9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56238b0-4126-45d1-9c0e-b80e5cbd828e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b86def09-684f-4911-aed1-7187de98d9a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b1c3ac-313d-4706-96df-d7a405b581aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4120f4-79c6-4a08-9e42-54867f5a1ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd821c51-98bc-4a6d-b1bb-e4e4dd55318d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a448ab45-0556-498d-b721-01ea239d2232",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bceec41-0431-4c2b-9445-a5f85858cd2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85dd652-f7fe-492c-b2d6-193e062f135a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a68450-bb04-4599-9210-bab70dae7045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e2324c-d8bd-4336-a34e-50b09c7bacf1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3ec1d1-94d3-431d-94fe-f6d40739c953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f790f7ed-f74f-4cbc-b700-10ab5c4c8232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de9cc96-0313-4f9d-ad34-7c93bcec296d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e00d1e3-ef0a-4fa7-a4bb-ec9870fc8cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1133042-12be-4887-a6f0-1a33aee1b57d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c82241f-170f-46a7-a6f3-d30d54cdd52b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "638e3009-e2ba-4cd7-a4f6-fccacad8dbcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72613ed4-bba0-41a5-b113-60a999025ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ef6b6e-0475-45e8-aeba-74466a74c56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67f3a81-d1e7-453f-affa-364f0e84d2de",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f125f2-7f8c-4697-ac49-a730d89ae5b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77bbfddd-c957-411c-9444-30e02cf20de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca4ab57-2b73-4cff-b258-d89c5dcc048c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309162d8-7249-4d4b-852c-3c04e3190e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477e0ec9-fef6-4855-91bf-143b12879557",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b7da78-9554-46a6-a3d1-6f3b8ca8702a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d04ae57-6e5c-4d78-9c8d-c197160f24ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36de268b-6be6-462d-aa00-763d5c72a8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fba04c8-0fc9-41fe-a3ae-4f37d36332fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2dabe4-8ce9-4fed-88ab-2ea1ce6f47fa",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28452889-fd31-457b-a0a5-70a7f3c8a719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41d3ec2e-ed87-4aa1-ab54-4ff919b7890e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c86bd2a-8a54-44eb-bf2e-116e5d0b88af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e027a72c-61c7-4fb6-a173-0337a1c78a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cab448b-ca4c-415a-a642-e819eac1a22a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757a5394-c7d1-4a61-99e5-c2b8b2ec3d79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff2a4f56-89c9-45a3-82b7-69861631a92b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12874beb-5738-4af7-9a4a-325dbc046bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b20062-953c-4b76-b6d8-e8f3c249a04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916e851b-51ac-47bf-9061-23546b81033e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e734abf-516f-4154-b2ad-6cdb32a77aad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45eccc57-50d4-4575-b07d-c9cbef47cd71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b51e86e-2f72-44ee-91a7-c64d5339b5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7da5a8-ef28-4b0f-a45c-a2bded44c279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87938bca-6821-42f1-81e9-f44e59fc583d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f748f2a-ab05-4dc1-a155-a94b875689df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84b3172f-b92e-4524-9207-13128ec855c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53500df-3924-4005-8d10-ff68a7afb6d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593858a2-7858-4a3c-b6c4-b418dcd38d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000ddd01-0967-48f2-989c-5a2a1b53e4f6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bbff17-7aae-4ace-bac0-d1cee926125b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63aa687c-7efb-4907-ab0d-114258959292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0af79a-1bd3-44b4-bed0-a394e84ef14c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389d4b01-78b1-489c-9f5b-62e3c2e0e16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b95686-d398-43d4-a7b5-a98640cfe7a5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2deeba26-99d8-4dac-b5c8-4101fee16607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a3fcd77-2bd9-4cd4-ba5d-a4253fe40c09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b72e0a2-cd82-4484-8702-913f4d09b6bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe64f3e-b61d-4d46-a0f9-ae41345f1306"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4088d20-b4e7-407a-874b-7668e2a0adf0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d1fb26c-b903-46be-bab8-803de2d8e819"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca964f2a-9255-4f13-a2ab-f232a3357eaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9d62936-2fa7-401c-bd84-aafd9e14c047"
                    }
                  }
                ]
              },
              {
                "id": "d567323e-d588-489c-bf15-522952847d08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d500a0f6-edc6-4ab5-8d3e-b30bebdbd090",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6860926a-6de6-4a39-9285-a38140fa4888",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "da903937-f8ad-4fae-bbe5-a5994394fd0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e90b29-169c-4d04-8736-473559827b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce1e49b4-6e7e-41e8-8598-be6e8d3d7778"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7693a5a-4274-4708-9fc6-aff0abab6f75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c4a45ea-dddd-4c68-a84c-27ab23c7449c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cfc52ec-82a9-4196-9e6f-3b3bae1c3f71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc961712-42ab-423b-b9ed-b5c143b80d4a"
                    }
                  }
                ]
              },
              {
                "id": "6859baf3-18dc-41b9-83e5-d9826a28b56f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "86bfb2d6-8aeb-4182-8e2f-4a4cfb084dd5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2f29b5-4b8c-453d-9ad4-3bfca0070302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "49672611-3304-47e0-8257-efc6f1ce4ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfae31e-34bb-4ae9-ab6f-5a3b08dc0b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db35be06-9009-443b-a162-bbf961eeedf7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "733f7ae8-fc1f-4809-a769-086eb4f8f6f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "86c3dfdf-aaff-4f5f-8fbb-29dadffde347",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c54f808f-d3d4-41b8-9e98-a278155b7b27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7cf809b0-06f2-4852-9649-dd780bfab358"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17b18364-bff6-48ab-9a1a-9014fa4fc009",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1e45867-3cca-466b-aa20-e1fb01cff619"
                    }
                  }
                ]
              },
              {
                "id": "811506c7-7111-4a77-9e4e-cc446d2d12de",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff843955-110a-4709-b09d-bff248e27d09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7920008e-4de9-40a0-8bfe-28957faef363"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "767f20c5-ba1d-4068-82bd-c80596f2db41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9995cbb-76e5-4e28-b456-1e35593a51cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c279091-766a-4c6f-989a-11a8a1aa2b8b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9b43aaae-627c-4990-ba38-ae980d98fc8a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "349fd9a9-bda8-4c2e-8194-35479e5b80bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2cf9e0e1-bab0-4915-b468-3eed07d49668"
            }
          }
        ]
      },
      {
        "id": "3b3553fd-067c-4420-91b7-47696102b26a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "041197af-d363-4530-a293-5176edf20fb7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "606fc38e-07f1-40d8-98d2-6a8f32af944b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e51e96e7-a8cb-4aef-b423-5de26e4d09c5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbde853-f03e-4e75-b2fd-5b3adfa396e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c3682126-a77f-4ac6-b1b8-43e9279c53d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b59e9c-c463-4b13-8aaa-55acc7785f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7477b86-1f89-4a50-8dab-be00930cafb9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "811e06bf-c692-490c-ac19-5d63db35559c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de597932-4e79-4435-92d8-07e74fb9e91d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8672fe3-28c3-4be3-af81-01a250f48540",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4add3ec-e897-4bfc-bd41-9f3c414ce653"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e0f8586-0a94-44e5-bac9-3050b725febf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6db75978-4407-45f2-a648-56ae30a21b37"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8cc0474d-3ccf-49fb-98bf-c9b20e562364",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbb031d9-fa38-483b-bf6f-5be36880e85c"
            }
          }
        ]
      },
      {
        "id": "4c1b30fd-fb78-4ecf-bf69-a410602c102a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4540e55a-a6da-4bf8-98ee-4d526effdcc7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32fe8b80-4458-4b17-915c-913bae679f9b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f5addff-4bd7-4adb-9e89-4839ac52d476",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b89c89-5191-456f-9120-ab4ee3bdba40",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87bf6301-69e2-4449-bf75-f394190bf978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec38e4c7-7ddb-4ee4-b764-246d67d5238a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd0d270f-07a5-4236-98e1-f248165d5330"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d17fb248-0f83-4863-930a-0c2a6c8a9476",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b968a727-a600-4bf7-8e63-552025c9f916"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f520e44-74bc-49b8-9797-9422cef4aec6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54b80797-cead-41fa-a96d-74679f573abc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9abfe30-2648-4183-93ef-f032ac2a7c3c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5b36f8e5-09ce-4c86-a95b-a810ebfe014d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29ef2f29-cbe6-42bf-9118-465e70df05fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "430e5be4-1d88-4abd-81c0-95a337bca55f"
            }
          }
        ]
      },
      {
        "id": "e674fff9-f07e-4ffb-9b02-c67257f9d653",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d02ec3cc-4eae-4a99-95ce-a3c9ac770938",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1274443d-b30f-46f5-9013-6d3ed62a4c9d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7938882-07a9-44e1-b044-3fa6207a6743",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e37f2ad-ebc1-45c8-bde2-3405ab35a72d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44e4b435-66b7-4276-8ed0-2af5b9a6ae55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "347ed58f-86e8-41e3-971e-8954852acd46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1f5056b-0a51-4a1d-bab3-6a2c98621933"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b2c8c5d-116d-4ed4-9bdd-dd615629abfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34110568-e1c3-4aa2-8660-df15e7bdbb42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e1a6f67-e587-4f69-817b-4f938665a217",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df9645d5-9caa-4441-ac06-631acc3e9588"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9226a60d-b54a-4cd0-b35d-f535061c1eab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "076833f6-80f6-4790-9e6d-97d4f757faad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c60f9d7-677f-497a-9459-b8c196f6e95d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71d82c4c-03c0-403f-8f6c-2274e5970e8f"
            }
          }
        ]
      },
      {
        "id": "9d36adfa-6d2b-4b49-9006-496d599da858",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ccfb7aa-b448-41f0-89b7-bbf97bdedc7f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0434b9bd-8989-4c91-890f-91a81a841200",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "17b633b5-7e98-4735-b2eb-c02cd6229500",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73052954-373d-452e-be37-a4bdd2db374d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6f26c78-b138-442d-949c-93f0692777b4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 298.06746031746064,
      "responseMin": 7,
      "responseMax": 7141,
      "responseSd": 1081.1592687928653,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718325471965,
      "completed": 1718325555460
    },
    "executions": [
      {
        "id": "e0bb4671-9343-4e78-8049-3298c76d4ba7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "818eae64-3a30-45b2-971f-35af3db18318",
          "httpRequestId": "aa5abc8b-bd9c-4883-976d-1581c170bfdb"
        },
        "item": {
          "id": "e0bb4671-9343-4e78-8049-3298c76d4ba7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "89c8a654-7c49-403a-ab2c-eb94c3bee07d",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "47ab93e3-d1a1-4105-b43f-5edc1d806aa8",
        "cursor": {
          "ref": "1d6b48b3-97b0-4607-acdb-003c13870c95",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b9949dbf-ac2e-4fad-8f85-49d769e8328d"
        },
        "item": {
          "id": "47ab93e3-d1a1-4105-b43f-5edc1d806aa8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "810d0955-21d0-48ed-aac5-17dea949b8cd",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "b79e1752-0f6b-454e-bb1d-97ecf47a5656",
        "cursor": {
          "ref": "71b0f196-1d82-469a-8aed-a0e692e55e6a",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d506170b-7fc8-4138-a8c4-054b7455dcef"
        },
        "item": {
          "id": "b79e1752-0f6b-454e-bb1d-97ecf47a5656",
          "name": "did_json"
        },
        "response": {
          "id": "b42dbf76-0659-47dc-9e45-cc6a2f20722c",
          "status": "OK",
          "code": 200,
          "responseTime": 418,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622e9d65-2f33-40f5-a43e-8433ee16be8c",
        "cursor": {
          "ref": "391f7f45-760c-4265-9c6d-daace20bd976",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4e48d566-14d6-48bc-b9cc-bd673edec5cf"
        },
        "item": {
          "id": "622e9d65-2f33-40f5-a43e-8433ee16be8c",
          "name": "did:invalid"
        },
        "response": {
          "id": "a9a10139-07de-4a43-afed-d0e91c61b941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2365,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622e9d65-2f33-40f5-a43e-8433ee16be8c",
        "cursor": {
          "ref": "391f7f45-760c-4265-9c6d-daace20bd976",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4e48d566-14d6-48bc-b9cc-bd673edec5cf"
        },
        "item": {
          "id": "622e9d65-2f33-40f5-a43e-8433ee16be8c",
          "name": "did:invalid"
        },
        "response": {
          "id": "a9a10139-07de-4a43-afed-d0e91c61b941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2365,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81882a0a-4e37-41a2-8341-e92edf45a0f6",
        "cursor": {
          "ref": "f6d2db60-21ff-4088-99aa-758083a5df99",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3fad2942-958d-441e-a8a4-c15e89795193"
        },
        "item": {
          "id": "81882a0a-4e37-41a2-8341-e92edf45a0f6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ac1aac69-ebc5-4a82-855a-f1ce69d281de",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2544,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecefedd4-178a-409a-87a5-64b3fa2115f6",
        "cursor": {
          "ref": "6f89db1d-4969-4fb1-a947-89eccf1836cf",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b602187e-c263-48af-b979-2ae835bcde27"
        },
        "item": {
          "id": "ecefedd4-178a-409a-87a5-64b3fa2115f6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "20234bef-4d58-42a7-8ae8-bbc8c926a919",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2291,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367164d1-088a-47a0-b855-fc8bcd73751d",
        "cursor": {
          "ref": "d6a2920e-9c31-47f7-837b-09c20302f017",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8dbd1411-59b4-418a-b3e8-3c7760f35ce1"
        },
        "item": {
          "id": "367164d1-088a-47a0-b855-fc8bcd73751d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6d92d6c2-389b-427d-8a2c-622cba4e7094",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4545f1bd-0b01-43a0-91b2-6137a451722a",
        "cursor": {
          "ref": "577cb3af-9f77-4c83-9644-5f42b8ea1626",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "42371465-b304-43ef-8b1a-d6df27eb110b"
        },
        "item": {
          "id": "4545f1bd-0b01-43a0-91b2-6137a451722a",
          "name": "identifiers"
        },
        "response": {
          "id": "a404aa9a-b193-4bd8-97c0-4228cb716d60",
          "status": "OK",
          "code": 200,
          "responseTime": 2228,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58192eb-2302-4024-bf5f-627ae9477eaa",
        "cursor": {
          "ref": "b25e8c76-b7b1-46b9-8020-7a743132ccec",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "91246e9e-d701-4436-8397-8f0103fa569f"
        },
        "item": {
          "id": "e58192eb-2302-4024-bf5f-627ae9477eaa",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "523dd26c-4649-472e-96ed-a7854562e76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a4d0fa-22eb-4720-845f-482d583f0d5c",
        "cursor": {
          "ref": "d33ef66a-3feb-44b4-afd7-626e14d03d2a",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6b3a607e-0753-4aa4-a504-7c32c4a9ec49"
        },
        "item": {
          "id": "78a4d0fa-22eb-4720-845f-482d583f0d5c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d4096982-6906-4ef9-846b-293f96b89071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35305d6-c690-44a0-9da9-a2920ffc0e84",
        "cursor": {
          "ref": "af2bdb12-eb02-422e-835b-e2c4698578a7",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a54bc2a9-a7d0-4415-90d2-507701f20fea"
        },
        "item": {
          "id": "e35305d6-c690-44a0-9da9-a2920ffc0e84",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "704ae643-b11e-4d37-bf7a-8d3a8f6f2802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6173b9-708d-46bf-94bc-95e374b4b579",
        "cursor": {
          "ref": "e2018013-14ef-490c-9d25-0b609b02e3af",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6976396b-cb72-4cb1-8495-9561d165bcc4"
        },
        "item": {
          "id": "7c6173b9-708d-46bf-94bc-95e374b4b579",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3815d84b-eb01-4a2b-a944-85fcdf8d8026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876589f4-dd91-4c51-b13d-7b6db860d048",
        "cursor": {
          "ref": "40f22ed4-72aa-4337-9650-fae53f77a0b9",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "51eb9ce8-f44d-434e-9a54-85f8d7ae6b13"
        },
        "item": {
          "id": "876589f4-dd91-4c51-b13d-7b6db860d048",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8ae90a50-c43b-4c60-8a5a-067442daf45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e92a3a-ab29-4b2d-a1d9-7e3febb37fba",
        "cursor": {
          "ref": "4b54e394-1e83-4c10-9ec3-ffeb5f941029",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "00d5a225-3804-4367-94ed-0283f8f523c1"
        },
        "item": {
          "id": "d8e92a3a-ab29-4b2d-a1d9-7e3febb37fba",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7f633d9f-ae9f-4bb3-baec-3c2335ce2afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3faf290-13aa-4b57-a440-4860b0dc89d9",
        "cursor": {
          "ref": "17f032ef-7c8f-468c-a580-e9f688424256",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "403043b8-ee2a-47be-8e3f-4b69d5487c97"
        },
        "item": {
          "id": "c3faf290-13aa-4b57-a440-4860b0dc89d9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "239bceb8-5b52-420b-925b-96b104da1891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c036aee7-8b1b-43b7-967e-ac016099bb49",
        "cursor": {
          "ref": "1ec2dbca-d1ce-4a12-845c-14498e4399fb",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1ff465f5-1eb3-4f6d-b7ba-c6b4b0234a94"
        },
        "item": {
          "id": "c036aee7-8b1b-43b7-967e-ac016099bb49",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "070ac570-12a2-49b3-8b0c-411ce67f2fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9f324e-c6c5-4a37-80b4-d178a8288f81",
        "cursor": {
          "ref": "16732fa3-4e0f-4778-9a40-97cf88325ec5",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bf42d363-07d5-4583-8ac1-b94b1c1eb067"
        },
        "item": {
          "id": "6a9f324e-c6c5-4a37-80b4-d178a8288f81",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cb3950c3-db05-4ca6-9d5a-24eb6a428515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d1be2e-a73e-4705-97bf-5dc7e05f2294",
        "cursor": {
          "ref": "21e2264b-9e5e-4d6d-850d-f18fd4579f28",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "694361ad-2e9f-4c41-8fe1-b609d3b541ea"
        },
        "item": {
          "id": "50d1be2e-a73e-4705-97bf-5dc7e05f2294",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d2320063-d4fd-41a2-b131-275ebde38138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b0d906-2c6d-4f63-9421-6771aac1dae2",
        "cursor": {
          "ref": "52876ca3-255a-41bf-955a-2bad1ce969e9",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "10c8faed-acd2-4197-893f-dc6f0c12fb51"
        },
        "item": {
          "id": "46b0d906-2c6d-4f63-9421-6771aac1dae2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fb0aed1c-7b25-44ed-909c-6dd57427be5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ad66af-1d4c-4761-bbcb-1f46574ff627",
        "cursor": {
          "ref": "03676206-46cf-4b9c-9043-1b024b112490",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5ce9e7ca-5d4e-4074-881b-0a237b32a61b"
        },
        "item": {
          "id": "69ad66af-1d4c-4761-bbcb-1f46574ff627",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d6fbc6a5-30f7-4f38-aedc-2f0b2e517fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac3f4ce-d4a7-45c8-a265-15aaa436732a",
        "cursor": {
          "ref": "5f988587-38b1-43b2-9aef-90485c106507",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8f04dc16-a38d-4f95-b2e6-4268721a5bd3"
        },
        "item": {
          "id": "bac3f4ce-d4a7-45c8-a265-15aaa436732a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "dc2b8d11-bb84-4bc6-b2a7-03429deb64d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce565db-c7db-4286-b4ff-94fefe8f6398",
        "cursor": {
          "ref": "eae9b72e-a2bb-40ce-abbb-868dd9e3e9cc",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "056ca563-7324-42b4-8cdc-32516f69b7da"
        },
        "item": {
          "id": "3ce565db-c7db-4286-b4ff-94fefe8f6398",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b58c0c4c-1313-4ab2-9d3a-821eaba11f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5be4a0c-a03c-470f-91ff-421185298f15",
        "cursor": {
          "ref": "176fdced-3992-43e5-9d51-f6d5512a9631",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "33c8c8f7-3f8f-4d04-ad0f-4f8c9d180990"
        },
        "item": {
          "id": "a5be4a0c-a03c-470f-91ff-421185298f15",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8c4f6d12-9a51-4d38-9c50-e1bd7376c7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a97c1a7-bf34-457e-abcb-2b540179f61d",
        "cursor": {
          "ref": "b4cc2dc8-af49-41ae-a1ac-af46cde32914",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b55114b2-a3b0-40c4-a31b-d4578d6dfb9d"
        },
        "item": {
          "id": "9a97c1a7-bf34-457e-abcb-2b540179f61d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "18f515c2-1aab-484f-b294-ed8ad408578b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf48102-3cb9-448a-9bba-3836801c8f4d",
        "cursor": {
          "ref": "77076147-6c53-4ef3-b274-4d617d3e13a5",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8a1eb14a-d11a-4dbf-a66f-c9affff48c26"
        },
        "item": {
          "id": "adf48102-3cb9-448a-9bba-3836801c8f4d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "153cd501-e6f5-4cb3-8c48-1632acef56ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdf402a-95f5-4b99-8c86-155618303a71",
        "cursor": {
          "ref": "215ec522-1736-4a70-9903-f5e9959b203a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e985bdb6-9b50-4a40-a0bc-3660ec331a82"
        },
        "item": {
          "id": "6fdf402a-95f5-4b99-8c86-155618303a71",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a142e9e9-7d80-4bb6-ae6d-b2ceef3cb278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f98cf51-e36f-4a33-ba48-c0ef970d6567",
        "cursor": {
          "ref": "8a6768d2-02a1-405d-8096-01c5f694ae87",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "812ec645-2a03-4558-873e-0d8efeaf04b7"
        },
        "item": {
          "id": "7f98cf51-e36f-4a33-ba48-c0ef970d6567",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4fac6782-a6da-447a-ab31-48300142df06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c15eb95-7199-4e94-a0ab-c6267995fff6",
        "cursor": {
          "ref": "ff52517f-2d47-4e8d-bb34-5117ce361cd5",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "dcc8b2a9-dbdc-4fa9-ae0b-afdd7c42a99e"
        },
        "item": {
          "id": "0c15eb95-7199-4e94-a0ab-c6267995fff6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8629e945-da23-4bf2-ac48-d72be39f5ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9152654-fec5-4dbd-95a7-c33f8a99b6f6",
        "cursor": {
          "ref": "49ffa756-acd3-411b-aaf7-628e3d4263d6",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2a1ad1b5-8e5c-477a-acf8-e903e8f1aa9b"
        },
        "item": {
          "id": "b9152654-fec5-4dbd-95a7-c33f8a99b6f6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "df7077b1-96c2-446c-869c-ab731e426a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703991f4-06e4-4729-914e-92043048bd78",
        "cursor": {
          "ref": "fa569220-8f96-46a7-93ef-fef755b08677",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "008f2206-578f-4fba-9fb5-5cdf2af68692"
        },
        "item": {
          "id": "703991f4-06e4-4729-914e-92043048bd78",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a5f9a6a0-e607-4e9a-b875-095de4cd1f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d990a387-88b6-426f-b043-b4497800a8e0",
        "cursor": {
          "ref": "71f11543-9165-4871-a7fe-6359e7639608",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "061062fa-5e16-4ff4-9a32-1412a47651f0"
        },
        "item": {
          "id": "d990a387-88b6-426f-b043-b4497800a8e0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1f0659f1-5143-42d5-aa74-564efbf24b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08e22a3-8fcd-4ac8-b925-13ff1534f022",
        "cursor": {
          "ref": "37ac2e62-a5bf-4988-8809-78edbed175fc",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "956a1431-eb34-4b53-aeb2-2572fadc4b04"
        },
        "item": {
          "id": "f08e22a3-8fcd-4ac8-b925-13ff1534f022",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "76f03f0a-0ce4-4c9b-9160-c0d7ec31bc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149f8346-82a5-4053-ab16-be42db9e3f1c",
        "cursor": {
          "ref": "0d47a06d-4e17-478a-b548-198c8bda1d6b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "29216b5c-d242-4596-b9fc-e112576f5494"
        },
        "item": {
          "id": "149f8346-82a5-4053-ab16-be42db9e3f1c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d1f91c63-c943-4b65-977b-abea3e06563e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f30190-56ff-4f3f-992c-800587b05d5e",
        "cursor": {
          "ref": "2eeddb4b-699a-40d3-ac51-6562d16abf18",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "357347e5-7df0-45b7-a571-ba684892f98e"
        },
        "item": {
          "id": "37f30190-56ff-4f3f-992c-800587b05d5e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "59e8d65d-74e1-4e71-ad27-692c7a5977a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33f6455-bbcb-4825-87fb-4a88206b51dc",
        "cursor": {
          "ref": "fb02774d-4ce2-4e9d-bfe5-dd0ba8f1c549",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "227a839f-ea1f-48f7-a783-51af8154dae8"
        },
        "item": {
          "id": "c33f6455-bbcb-4825-87fb-4a88206b51dc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "98fa1972-e3f1-4442-875a-e547b1323cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d71280-1763-4186-b6cd-1521d627c641",
        "cursor": {
          "ref": "079ad2da-3c16-4662-9cde-e9e864ad9ad3",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7d8a17a3-b470-41e3-b79a-f9cc3251572d"
        },
        "item": {
          "id": "f1d71280-1763-4186-b6cd-1521d627c641",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f79827b2-2801-4de7-9fb3-567daf1cd973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b7601c-beb7-4e62-b6a6-fd28ebf462e3",
        "cursor": {
          "ref": "9f15fafd-999d-4eda-a3ad-240fdfebfd5a",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c016a6b3-98b1-45aa-a0bf-1d75ac3f3811"
        },
        "item": {
          "id": "89b7601c-beb7-4e62-b6a6-fd28ebf462e3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "be09a494-bed1-4ad2-97e0-af9b550fe61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cab0a0f-c089-4de7-8fb8-c701b1772d25",
        "cursor": {
          "ref": "6ad4dd5e-8155-4d5b-970a-2dc711fe8f0a",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "46ed81e6-958e-476b-9299-f3614aec545e"
        },
        "item": {
          "id": "0cab0a0f-c089-4de7-8fb8-c701b1772d25",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "150e8e36-d784-421f-af2a-0a81d6c5f04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d9a80c-4e9e-4580-94aa-a572882c5015",
        "cursor": {
          "ref": "256b95f1-fde4-4a24-b04c-33f7b054bb42",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9c6eb0ed-f3ca-40f9-85fd-01655bb6e2e7"
        },
        "item": {
          "id": "25d9a80c-4e9e-4580-94aa-a572882c5015",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e3f02945-258d-4d3c-ab87-9c0256f9b28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51c38a4-77d9-4505-b1ae-92d94be3de47",
        "cursor": {
          "ref": "047b1ca3-232f-46d8-b979-b767634a3f21",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "aedc7827-9d49-41ee-9e06-d697c84f3b08"
        },
        "item": {
          "id": "a51c38a4-77d9-4505-b1ae-92d94be3de47",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6e757fcc-af21-43a2-97e9-ed0c9c24d9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dde988a-d29c-4f48-922b-ed81a2b17a0d",
        "cursor": {
          "ref": "be59f4e8-907b-469a-a00e-af648a2c781e",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "43fcf6cc-4c83-4f9c-8348-5715e6ab66a8"
        },
        "item": {
          "id": "8dde988a-d29c-4f48-922b-ed81a2b17a0d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2ec3201a-47c1-48e9-a7b7-6d7613d80355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abb4550-21ee-4c1b-8c2f-8fcf70da02ff",
        "cursor": {
          "ref": "e1d7df29-02b3-4c2d-a42e-704d9a02f99a",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3576449e-7120-41ec-9da4-c27ca5f1b68e"
        },
        "item": {
          "id": "9abb4550-21ee-4c1b-8c2f-8fcf70da02ff",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8d9e9a46-b8b1-44a4-80e4-bd2c73b9aeae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32505251-6c7c-429a-8fa6-79eba8a406d2",
        "cursor": {
          "ref": "2da39aa8-affa-4200-a10c-65bf2bda47af",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "17c70590-6776-4f1d-b112-529f020daa68"
        },
        "item": {
          "id": "32505251-6c7c-429a-8fa6-79eba8a406d2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e5671813-36d4-4fd2-8d08-1f3ab4d2fe5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c786827-4edc-463b-bcd5-1b2e88e38add",
        "cursor": {
          "ref": "e495a8d0-1ec9-47b1-89a2-b5da07fbeedb",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "629bc574-617c-4ccc-be42-eeb6bcfee7ab"
        },
        "item": {
          "id": "3c786827-4edc-463b-bcd5-1b2e88e38add",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f7449746-76e6-4ec8-9db8-776beb74e290",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cfb0cb-2a4f-4c0e-b36c-d80332d6a3a8",
        "cursor": {
          "ref": "c9d605dd-80ff-4ced-b919-6b93094015f4",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7c514ddb-f79f-4597-b611-390c3145f2ed"
        },
        "item": {
          "id": "a6cfb0cb-2a4f-4c0e-b36c-d80332d6a3a8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cff526b2-0fc6-4784-8290-97f0ef06eedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0420a174-21cb-479b-97b0-bfbc0a734b80",
        "cursor": {
          "ref": "23c5836d-1e62-4aa4-84a6-5b5db57bf3a7",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "284678a3-cfa6-4b12-8474-5abd916c1b1e"
        },
        "item": {
          "id": "0420a174-21cb-479b-97b0-bfbc0a734b80",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "74734dba-9249-42f0-8fc2-0057ae0e3111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0feedcc3-2ec6-4a50-a507-5ebec647c622",
        "cursor": {
          "ref": "b063cd34-3d02-481a-b6a6-2f686e8f94ca",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d8da01d8-92e0-4292-9dca-78da4a65f9c8"
        },
        "item": {
          "id": "0feedcc3-2ec6-4a50-a507-5ebec647c622",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c5b5ce44-57b3-43fb-8762-4f8f3b140259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a79c36-a873-4a88-901c-6636fe98273b",
        "cursor": {
          "ref": "30d17a25-9093-4a84-bf67-201faef4cff2",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "69f52c64-253c-4e96-88aa-e22585650204"
        },
        "item": {
          "id": "25a79c36-a873-4a88-901c-6636fe98273b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "47ed0590-9e45-4bb6-8ffd-8e92a021fb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6a0c5a-00b5-425e-a2be-29ae8bff89a6",
        "cursor": {
          "ref": "6051daec-dad6-49d3-bd4c-f172a7b7e9fb",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "22d86885-b15c-42c9-aac9-b813e11f9896"
        },
        "item": {
          "id": "2a6a0c5a-00b5-425e-a2be-29ae8bff89a6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "22f5e6a6-341c-4460-9359-9272e5597464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ce95c1-e9d0-45c6-b0b7-6c258f702265",
        "cursor": {
          "ref": "9b9f3637-0167-461c-a634-892bc828083b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f169abfa-93de-4b4b-adf2-9e1156b1576b"
        },
        "item": {
          "id": "b4ce95c1-e9d0-45c6-b0b7-6c258f702265",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3e61817f-516a-4e0d-947d-202bbdb9bec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f98e59-b2c2-49ac-b95e-7a9a8a39e725",
        "cursor": {
          "ref": "21665bee-a596-4502-b367-7b9fd18ec521",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e7823550-e528-4f2a-ab12-ace605269b56"
        },
        "item": {
          "id": "39f98e59-b2c2-49ac-b95e-7a9a8a39e725",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ba5b4efe-856f-409b-ae1c-bb74412c22b0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2fb8b3-d9ca-4d74-9a65-8a04d619c91d",
        "cursor": {
          "ref": "cb2d6b52-0bee-4e0c-85df-9b5ffcad48bd",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d095f832-24d7-40c4-aa04-98dde40dfa91"
        },
        "item": {
          "id": "3c2fb8b3-d9ca-4d74-9a65-8a04d619c91d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6dd83b55-8f83-4c32-a913-eea86663f501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e692f64-7777-4bd9-a5e1-02ceea06b1a0",
        "cursor": {
          "ref": "5f4fc104-64fc-459d-a578-7ad7f1bc1923",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c6dc0070-ba26-405a-930e-ca1b81b6bc1a"
        },
        "item": {
          "id": "7e692f64-7777-4bd9-a5e1-02ceea06b1a0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "074bbb57-6593-4ae6-b346-c06bad94d28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a3e75d-da8c-4d59-bbc7-cabfbf744c52",
        "cursor": {
          "ref": "048fbb2c-a98e-4f00-ae2e-e0f01f5183b5",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c78521cf-45aa-48ec-bd30-f0cc3ea22dd2"
        },
        "item": {
          "id": "24a3e75d-da8c-4d59-bbc7-cabfbf744c52",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1de64366-5e46-4096-aac7-0f47fe3ad5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f874c2da-22a9-4512-8201-8e33ab91209b",
        "cursor": {
          "ref": "ab7e5086-69f4-411d-8d30-5205ac4ae90d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "31856ba0-3e80-47c2-a879-586bcc8d2d5b"
        },
        "item": {
          "id": "f874c2da-22a9-4512-8201-8e33ab91209b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "37a2919d-4052-480e-8054-edd26108d23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a038400d-2da9-470a-b896-b028fdf2d378",
        "cursor": {
          "ref": "330f25ce-18b1-42cf-bceb-5eda5d3d0a82",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "35aa3e11-394a-469f-b68a-ceff244ac7b8"
        },
        "item": {
          "id": "a038400d-2da9-470a-b896-b028fdf2d378",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3d9ad72d-3eb8-4443-b38f-2725eb160151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56530b34-3cde-49c0-8141-3829fefef686",
        "cursor": {
          "ref": "c68b61a7-d35b-4542-9963-79c3c06f5612",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3ecdc414-85fa-4761-8cae-1283e206bef0"
        },
        "item": {
          "id": "56530b34-3cde-49c0-8141-3829fefef686",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a046cee4-728d-4f44-b0cb-d67e1d1c4cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50d3620-8c3a-4242-ab10-bdca06b4158a",
        "cursor": {
          "ref": "06e95fa7-55b6-4e6e-aaec-033dd4c5532c",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a482e196-5ec9-4da0-8499-6d02be4e1506"
        },
        "item": {
          "id": "b50d3620-8c3a-4242-ab10-bdca06b4158a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "75521dac-a813-4a3f-a533-8d2062b4fb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf832f3-d231-4b40-a196-def2a7bc511c",
        "cursor": {
          "ref": "b0994dd8-38ce-428c-8580-d9a37391a1a9",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0a1743f5-c380-4bdb-85f5-7aa7b06f249e"
        },
        "item": {
          "id": "abf832f3-d231-4b40-a196-def2a7bc511c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f6f84fdf-9562-4721-98e7-71fb172e740a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e98d7d8-2868-4f4a-be21-555a3a1d0154",
        "cursor": {
          "ref": "7e40020d-e86b-4b5e-829a-ee0d0e415231",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4e596555-746b-4a35-a17c-e84de1cc9caa"
        },
        "item": {
          "id": "6e98d7d8-2868-4f4a-be21-555a3a1d0154",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8e99780b-35a0-436c-b6c9-3bbd559d9e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1489c69-a509-4e87-b283-9dd9f6005379",
        "cursor": {
          "ref": "45e067e6-bf94-4fc9-883f-96e509e3f088",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a0021c99-30a1-4df5-b19e-24698e32a5fe"
        },
        "item": {
          "id": "d1489c69-a509-4e87-b283-9dd9f6005379",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "45bed9dc-cb96-45f2-a747-269645e3841f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48942bf1-cb2e-4757-aa76-c23d434d104f",
        "cursor": {
          "ref": "19e87b44-29f5-4155-a0e6-4d62ac0f2d18",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "19abc257-86ca-4e1d-8608-c957c5362795"
        },
        "item": {
          "id": "48942bf1-cb2e-4757-aa76-c23d434d104f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "87ff685c-9314-46be-bd0f-3e565114ab15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee104085-ba77-4fa8-85ee-ecec776ded27",
        "cursor": {
          "ref": "bcdf8817-1568-4125-8f01-19bb9b442fe8",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "19ac7a6f-2481-4919-ae92-7b336ff5cbe2"
        },
        "item": {
          "id": "ee104085-ba77-4fa8-85ee-ecec776ded27",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b3451074-01e6-4ca2-a97d-dc7be133eb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944c85ff-ef6b-4b90-a0d1-f94bdcf29e5b",
        "cursor": {
          "ref": "41559562-5e1f-42ec-897c-6869c2955d5b",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1627e6df-0c95-4dd7-b969-2a303a3a1a66"
        },
        "item": {
          "id": "944c85ff-ef6b-4b90-a0d1-f94bdcf29e5b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8ff86204-8423-4d84-b567-849b510adf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597de9b3-6f09-4ecb-84db-cdb76095b0ec",
        "cursor": {
          "ref": "817a1a8d-53b1-4d11-9ee2-a0468db977af",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e983c92c-1055-4976-97d9-fd6d2621a319"
        },
        "item": {
          "id": "597de9b3-6f09-4ecb-84db-cdb76095b0ec",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a353ca08-9973-47cd-80fe-00fb159efa7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db66bc9b-ee7c-4531-bec9-af6a682e2866",
        "cursor": {
          "ref": "5edd610d-cf71-4eba-944f-4a72fc81513f",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d172a1a1-a3e4-4ab3-8066-03f2c2f587f0"
        },
        "item": {
          "id": "db66bc9b-ee7c-4531-bec9-af6a682e2866",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "63a68ad1-c6a9-4084-b519-8825b3a01961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd52a7b-27d3-4300-be78-991e8c459642",
        "cursor": {
          "ref": "df2be224-4fc8-414c-aeb1-e93f84a82ed9",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4f259294-6494-4c13-90fd-2b2788cf32d3"
        },
        "item": {
          "id": "fcd52a7b-27d3-4300-be78-991e8c459642",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f8180723-12da-4012-a453-93fc99701d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63869592-f71f-4ecf-8ecb-8713f7722355",
        "cursor": {
          "ref": "6e76f7cf-ee01-4b26-9f43-bd35fe3fc77e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d234d956-8d4b-4c95-9e1f-ace60aeec4c3"
        },
        "item": {
          "id": "63869592-f71f-4ecf-8ecb-8713f7722355",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5cfa906f-b1be-492e-ba1f-7df60530d092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ac8b5b-5c8c-41f2-aab7-c86b669d2dbf",
        "cursor": {
          "ref": "8977961c-0eb0-4aab-82d6-496062629eae",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ed67fe32-0f6d-41c5-be05-f5709d9875cb"
        },
        "item": {
          "id": "95ac8b5b-5c8c-41f2-aab7-c86b669d2dbf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f88d38cd-29c8-4506-b865-623ca524dd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c2a4f7-e637-428f-bafc-7fb94907f547",
        "cursor": {
          "ref": "40a2c701-9a5d-4d5a-bf55-6677298f8766",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "eb029e6a-2e7d-4f03-907e-16260f79570c"
        },
        "item": {
          "id": "83c2a4f7-e637-428f-bafc-7fb94907f547",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bf291e36-c7e1-40eb-bed8-c0cfe0e1aaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81e52cc-a946-42b9-b9de-bb5cdea9e009",
        "cursor": {
          "ref": "12b72ab0-0586-424e-b825-8453f3602507",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1c62509e-a113-497e-a0d1-6b088f1d6337"
        },
        "item": {
          "id": "c81e52cc-a946-42b9-b9de-bb5cdea9e009",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "828c5586-9926-4cde-8c68-ff063894d629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4c98f1-b44c-46fc-add1-34f8eabd2d23",
        "cursor": {
          "ref": "d56c373e-15a9-42ab-8daa-0349c644622c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "277560f2-a9a0-48ed-8f1f-ff562e62b96d"
        },
        "item": {
          "id": "cf4c98f1-b44c-46fc-add1-34f8eabd2d23",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9450d2ba-c5a1-4fa9-a67d-f7a6a6b787b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3de7f7e-0682-4f30-ac9c-50cd292c91dc",
        "cursor": {
          "ref": "d1dc9415-bbc4-4eae-b329-63a614d72749",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "328ffdb7-2f0b-4e98-948b-74a444a9674c"
        },
        "item": {
          "id": "a3de7f7e-0682-4f30-ac9c-50cd292c91dc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "01df0835-fa1b-40b4-ba0e-360d9d0f0021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb41e41-bcc8-481d-b543-ddb565789cf1",
        "cursor": {
          "ref": "d55cfd02-307a-4558-b527-341edf62ac41",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4f596e98-8312-46e1-98dd-937381d8bbaa"
        },
        "item": {
          "id": "3eb41e41-bcc8-481d-b543-ddb565789cf1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6a0a5a70-1842-4689-8526-b50651b6f59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac75151-1d06-48ef-8c90-798eaf7e4585",
        "cursor": {
          "ref": "da153414-de90-46d0-b5aa-27866eeecec8",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "881f602c-7f9a-4697-ad7c-f731eec63bd7"
        },
        "item": {
          "id": "8ac75151-1d06-48ef-8c90-798eaf7e4585",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8d21d74e-a60f-4905-bc2f-c428d4c8a629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fd2cc0-2801-4bad-a9f0-942f26a9276c",
        "cursor": {
          "ref": "c4417b08-0b30-4ff4-8f8d-9a275dac7b0e",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "dd059ae3-a055-42de-adc2-55cece9bf560"
        },
        "item": {
          "id": "e0fd2cc0-2801-4bad-a9f0-942f26a9276c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4e5dab3d-b4b6-48ae-8f82-75b512d587a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75d48bc-6edd-4408-9b2f-010a536fe67d",
        "cursor": {
          "ref": "93f2add1-ddfe-4a70-82b8-76617ab9b33d",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ab12ef1d-39de-4a75-8374-b17400425b02"
        },
        "item": {
          "id": "b75d48bc-6edd-4408-9b2f-010a536fe67d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "953b0857-6be2-401b-ae93-a362a791c8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b1e5f5-ad21-4596-95f4-a8e0acc44406",
        "cursor": {
          "ref": "d976093b-378d-4a48-865a-ecf1d86ec234",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "88af2558-bad1-4099-a9f4-7df21623df81"
        },
        "item": {
          "id": "13b1e5f5-ad21-4596-95f4-a8e0acc44406",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c7ad5df7-b0d9-44b2-8ab4-b1d673cea7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bf01d9-a9df-43c2-a4aa-4a79a203036d",
        "cursor": {
          "ref": "d3a7351c-bc6f-4ab7-93f8-a7ac6de36edd",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "84592b5b-1f41-4c19-aa80-ef404516e25d"
        },
        "item": {
          "id": "d0bf01d9-a9df-43c2-a4aa-4a79a203036d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d9ff46d5-0559-44dc-b55c-b16fbafd8744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6c16c1-4525-4d8d-865a-3801ae0adc2f",
        "cursor": {
          "ref": "e987483a-0b82-4159-a2ab-04dfcee00b46",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b989d19b-b15f-4598-899b-6c82ff4f7c99"
        },
        "item": {
          "id": "ea6c16c1-4525-4d8d-865a-3801ae0adc2f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "300216b5-f857-482c-a58f-38457994ec70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbfe282-352e-47d6-b7af-f838eb6039ce",
        "cursor": {
          "ref": "5ad658d3-6154-4892-99f0-9eb02652021a",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bca2e05d-a89d-4e9e-b437-c06511679a3f"
        },
        "item": {
          "id": "8fbfe282-352e-47d6-b7af-f838eb6039ce",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5fd5e4c1-fff7-4aa5-83a9-4797d405b6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e557503e-3378-440d-a702-213d5450e96f",
        "cursor": {
          "ref": "3d8f710e-c735-46d4-b111-1f0acb7ece9c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "82ed3a86-3291-484b-9aa1-658ca0771483"
        },
        "item": {
          "id": "e557503e-3378-440d-a702-213d5450e96f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8ad56f09-528d-4538-86c4-74f297cbcced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af617eeb-8c10-4828-aaec-bae6ff2f7176",
        "cursor": {
          "ref": "09c9f39c-8819-4ffd-9baa-4c099921ca7f",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e880c1fb-ca2c-406b-ba8b-29e1164c683b"
        },
        "item": {
          "id": "af617eeb-8c10-4828-aaec-bae6ff2f7176",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "44deef79-bd6f-498f-af3f-5ef3d065c28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb73223e-aae4-4f79-9166-b6c5561166b7",
        "cursor": {
          "ref": "654531eb-dc1f-459e-b841-46ac738e04dc",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d3b52251-8c28-4318-8df4-9d74e8951087"
        },
        "item": {
          "id": "fb73223e-aae4-4f79-9166-b6c5561166b7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "aa151b95-f5ef-43e9-a35f-16c2d1923f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4238672-640b-4a2d-80ea-523b92d0b4e4",
        "cursor": {
          "ref": "f3f4d277-1b69-4951-95c1-6dcd62115080",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "df6e24ed-5c04-4fa5-b403-34c562577bf3"
        },
        "item": {
          "id": "d4238672-640b-4a2d-80ea-523b92d0b4e4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "409d9d6b-c933-42c9-9883-efa11fe42f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9084b851-8b69-4d1f-9fc6-8fb9203374de",
        "cursor": {
          "ref": "da6f3e6a-64e2-4ac8-8c7c-0f221efc3dc1",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "08b2a79d-1d93-49ab-8a0b-12c6cf378210"
        },
        "item": {
          "id": "9084b851-8b69-4d1f-9fc6-8fb9203374de",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c61789c0-fda4-4028-9c77-1b553ba8e63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5231427-3094-446e-8443-ff0eca9cfdc3",
        "cursor": {
          "ref": "96742c70-4045-4a1e-b100-5490bd21792d",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "79fe8cee-8cbf-461e-b792-83a2994f3311"
        },
        "item": {
          "id": "d5231427-3094-446e-8443-ff0eca9cfdc3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "93be2a0d-3d77-403b-9cce-70bf08f5b3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486d504f-2f73-43c4-b686-7d623697a07b",
        "cursor": {
          "ref": "ae66e7d2-3105-4c60-ab54-bae91e7baa84",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ff6c32d0-5aed-4786-a6d4-9fd447a76fe1"
        },
        "item": {
          "id": "486d504f-2f73-43c4-b686-7d623697a07b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6485d173-4051-4122-9d7b-cc36f98c7476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaef8697-4c35-42c0-953f-61eb3889cfbe",
        "cursor": {
          "ref": "6acb8aad-7269-4961-85d8-3a697dbd73af",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "df89ab89-1986-4ed0-948f-c5ca186a9416"
        },
        "item": {
          "id": "eaef8697-4c35-42c0-953f-61eb3889cfbe",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c2d71c23-922a-411a-8afc-b10a3af0fbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeecdd6a-10cb-4e9d-b864-be392af603c6",
        "cursor": {
          "ref": "2b61b20c-409b-4f7b-8431-345339c36a23",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "20b07d6d-f0a8-4cc7-adf3-457f5a1bf4ce"
        },
        "item": {
          "id": "aeecdd6a-10cb-4e9d-b864-be392af603c6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "acff9d25-708a-4add-aab6-3f70526a3b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ad15e2-8270-4355-a711-cbccec34e572",
        "cursor": {
          "ref": "76a62249-797a-43d1-8051-c0dc9f7d26fb",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "14217ead-766d-4416-9cea-e74890b39cb0"
        },
        "item": {
          "id": "48ad15e2-8270-4355-a711-cbccec34e572",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "70dfe406-7a25-48ac-8c43-42a80d017c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e8fef3-f2f2-480d-af07-8505551b4fc8",
        "cursor": {
          "ref": "220b021b-83c8-4018-b920-ea90e93e9801",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c3965f74-9619-46b4-b9cf-7836d2547f22"
        },
        "item": {
          "id": "e6e8fef3-f2f2-480d-af07-8505551b4fc8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4f5309e1-845e-4167-9a28-311cb0deb4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654b9eb1-a4c3-44bc-a9d6-3fa233eba2f3",
        "cursor": {
          "ref": "b6c96f41-5464-477c-8555-85b1e6654f8f",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1a74383e-c98b-4895-962b-142ab452fc7e"
        },
        "item": {
          "id": "654b9eb1-a4c3-44bc-a9d6-3fa233eba2f3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "41559d29-2014-4a8e-8bbf-46fbc23bff58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1026da4a-b698-4c7a-ad0a-c3d3499e4c9d",
        "cursor": {
          "ref": "fc3d10f6-ec2b-42ae-9c6b-515be2b487ef",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0c822453-721c-4bb8-8ead-fd488b312fcd"
        },
        "item": {
          "id": "1026da4a-b698-4c7a-ad0a-c3d3499e4c9d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "35c7be07-bd89-4214-aa83-101b023a3140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07fed25-b114-4acc-aeee-9d9fa18b5f05",
        "cursor": {
          "ref": "f4345b6e-40d5-4876-90ae-68724078ec1b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "82363ae7-b4de-4e3b-abcb-52d6963ceb82"
        },
        "item": {
          "id": "a07fed25-b114-4acc-aeee-9d9fa18b5f05",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e47cd768-6976-4783-b603-cc8816a35282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc467db-4d2a-4f71-a08d-45e537654637",
        "cursor": {
          "ref": "3ecac37b-b2c3-475f-bdc0-e1ea4453ec17",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f29a81f8-ccd2-4088-92df-849581082789"
        },
        "item": {
          "id": "1dc467db-4d2a-4f71-a08d-45e537654637",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2ddb70cd-2591-4dd0-a6af-5f1c6bc9e974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3454fd70-1a44-4a11-9695-3f3af0cf3ade",
        "cursor": {
          "ref": "e53481b4-f400-4474-8695-67c215e746f4",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d3a58d7a-3af1-4836-8bcd-94ed51071368"
        },
        "item": {
          "id": "3454fd70-1a44-4a11-9695-3f3af0cf3ade",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6a14bf2a-e14a-4468-b374-bbf0ea83232d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42203178-221a-4c9e-bcf4-91bea581ba3a",
        "cursor": {
          "ref": "12de1378-4ee2-4dea-8000-0eed40d27eb8",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d012d3c1-86a6-460e-bd92-6ee0937e3ee3"
        },
        "item": {
          "id": "42203178-221a-4c9e-bcf4-91bea581ba3a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ec31d0fa-a834-4ad2-8840-e3698e99c27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1e5135-bbfd-4867-97f9-040db8161e2c",
        "cursor": {
          "ref": "66488409-3d51-49b0-bffe-75b2def0b100",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "45e3dbf2-4977-40ed-b965-b77df504c680"
        },
        "item": {
          "id": "0f1e5135-bbfd-4867-97f9-040db8161e2c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "170763de-5f49-4a77-aa24-cf2258d0874e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653e4e06-98ea-495d-9188-f85b828c844b",
        "cursor": {
          "ref": "237b336b-2969-4641-a33c-c80ade21e449",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7729b6b2-ff78-439e-9fdd-6ea734fba4d4"
        },
        "item": {
          "id": "653e4e06-98ea-495d-9188-f85b828c844b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0e51f16a-0754-465a-990f-4385c69c9157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cf226d-3c24-4fc3-bd21-9cf88a3188b0",
        "cursor": {
          "ref": "ce07c11e-4e9b-4668-b653-f3abd4c1552f",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c064d703-fd2d-46bb-bce8-4df95ecb47a4"
        },
        "item": {
          "id": "79cf226d-3c24-4fc3-bd21-9cf88a3188b0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6d9833b8-2a28-4f3b-8a6d-4c17b173340e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b90ec9a-5550-434c-8f2d-dd1cfe9c685e",
        "cursor": {
          "ref": "8822a8dd-243c-4525-9ab9-68d69ef8b325",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "632fd8d9-01d5-4983-9181-57615d42ae88"
        },
        "item": {
          "id": "6b90ec9a-5550-434c-8f2d-dd1cfe9c685e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a4f6ca00-b8b9-4f41-a707-1a2c4bb0d0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e1b0d3c6-8a81-4024-8db7-f677ac16eba2",
        "cursor": {
          "ref": "1da1cd83-786b-4576-8c17-f0d66cefab2a",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "567c4cd9-83ff-4a6b-83e2-c90ae1d56d90"
        },
        "item": {
          "id": "e1b0d3c6-8a81-4024-8db7-f677ac16eba2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "43fc57d9-53b3-4317-bcd5-a957b7e1b862",
          "status": "Created",
          "code": 201,
          "responseTime": 7141,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d81f121-ca09-4d79-aad5-45a2998effcb",
        "cursor": {
          "ref": "369f884b-68f1-43dc-87ab-767401386edd",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "74846627-0d63-4329-af56-caf801d7a415"
        },
        "item": {
          "id": "6d81f121-ca09-4d79-aad5-45a2998effcb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a2cab559-befb-47ee-be10-635962187e43",
          "status": "Created",
          "code": 201,
          "responseTime": 6168,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f84058-be82-43fe-9123-fd087aa847bc",
        "cursor": {
          "ref": "44d468e5-02af-41fd-b2cb-3a45cd02d9ff",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "71c278f1-e085-4389-985e-2fd9181524d1"
        },
        "item": {
          "id": "54f84058-be82-43fe-9123-fd087aa847bc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1f7be9bd-9de4-4100-b063-04a7be032ded",
          "status": "Created",
          "code": 201,
          "responseTime": 6982,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ea6bc9-05f1-4542-8507-a9eb219fbbed",
        "cursor": {
          "ref": "3e2e493c-26de-4261-a349-1a472076ef39",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ff5213cc-d95f-4769-b1a1-acc3edd47fcf"
        },
        "item": {
          "id": "a5ea6bc9-05f1-4542-8507-a9eb219fbbed",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "85de8546-50e4-42f5-9239-290b8a680e58",
          "status": "Created",
          "code": 201,
          "responseTime": 6617,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0fc9f5-cea5-4360-8cfd-ef4bee6ec5ec",
        "cursor": {
          "ref": "c5bde925-bb84-4d19-8706-5a7a2c9ca871",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f1c077c8-d47f-49c0-bff5-68ce25866a85"
        },
        "item": {
          "id": "9f0fc9f5-cea5-4360-8cfd-ef4bee6ec5ec",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1c8c69a2-1ae9-4696-b88e-e0c24a6b3f3e",
          "status": "Created",
          "code": 201,
          "responseTime": 6777,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-14T00:38:45Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-14T00:38:45Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "739a3823-756b-4f13-86c9-6931e2115322",
        "cursor": {
          "ref": "858bcda5-2ffc-487c-9d69-f2c2dec864d3",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5c742692-5c1d-41ce-8491-87c72a23fc54"
        },
        "item": {
          "id": "739a3823-756b-4f13-86c9-6931e2115322",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "750e50c7-cf5a-48f7-ab56-b6b597d1b987",
          "status": "Created",
          "code": 201,
          "responseTime": 6674,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3b3010-d6f9-4340-b40e-4da17d829dcb",
        "cursor": {
          "ref": "2b234d52-c5e2-49f4-88ff-66092d960e27",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6fbb4fc5-e24c-486f-aac3-872dbe999371"
        },
        "item": {
          "id": "2f3b3010-d6f9-4340-b40e-4da17d829dcb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "695acd8a-c35a-47c4-9c78-c61a7394fd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cbe88b-e1b0-43e9-ad01-f745122b1b20",
        "cursor": {
          "ref": "2c7bc38a-6d82-46c1-97d8-10411c7e19dd",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "58f8920d-de4a-40e4-8dce-0ea119d59830"
        },
        "item": {
          "id": "52cbe88b-e1b0-43e9-ad01-f745122b1b20",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6ec225b1-6973-417e-ae5e-c661d939cf75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b2134a-9411-4205-9081-ed8c7e06560e",
        "cursor": {
          "ref": "b0c52619-b87b-44fe-bdd1-13f68283f45c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bfebd27d-e0c1-4f4f-a619-d935dce59917"
        },
        "item": {
          "id": "87b2134a-9411-4205-9081-ed8c7e06560e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a3c77701-fc53-4ef3-9deb-4e09f17870ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55914a4-c8a4-4a9f-bea8-5c8da3102d89",
        "cursor": {
          "ref": "af76c262-cfb0-43d5-bfb7-ed59b428e8a3",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bf0e2261-f6b0-441b-8d61-d3c629317480"
        },
        "item": {
          "id": "e55914a4-c8a4-4a9f-bea8-5c8da3102d89",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b57f3142-9d82-49ad-88c5-7070615aee5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999fc705-2898-4157-a16d-09ffa6068d32",
        "cursor": {
          "ref": "4a619999-642e-48d8-99ac-1f02540ad5c6",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e09f511f-51a3-43dc-8e6d-d4e1a54baefb"
        },
        "item": {
          "id": "999fc705-2898-4157-a16d-09ffa6068d32",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5e98814c-fc57-475f-bae3-87c2f19ad78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d1e5bb-50d9-4041-9291-715b4509fa4b",
        "cursor": {
          "ref": "453d7980-dcff-493c-83be-d8dd990eab01",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3e840ca8-6b70-4aae-b2e1-2e77a0d8e4b5"
        },
        "item": {
          "id": "d2d1e5bb-50d9-4041-9291-715b4509fa4b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e4a1dd3b-84ec-4756-97a6-706ebad2b19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6197fb76-3b3c-4cfb-be39-c03662063386",
        "cursor": {
          "ref": "3a949a00-9827-422a-bcd1-cc6c91fb6c41",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "18864e52-92be-4ed2-bee1-765ab6ce5b55"
        },
        "item": {
          "id": "6197fb76-3b3c-4cfb-be39-c03662063386",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "869ca132-3de2-4dc0-8897-20ea68c1dd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5009f7-7d58-4699-b310-692442c26417",
        "cursor": {
          "ref": "5c5b3e10-7d27-425b-b744-f91044fd8c0f",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4d0c8750-9ba2-4cf0-bc3c-c7811d8b22fa"
        },
        "item": {
          "id": "6c5009f7-7d58-4699-b310-692442c26417",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5c5ad81c-88fb-4772-9f96-bde7b1711327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291066c2-1895-4e90-90d9-9908bbcf3f33",
        "cursor": {
          "ref": "746b0ed3-3812-44bd-a3b8-5178d42e6908",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "330d4fbe-80c2-45cd-8363-29f8a198872b"
        },
        "item": {
          "id": "291066c2-1895-4e90-90d9-9908bbcf3f33",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e00e146f-6a10-44c1-ba94-9ab4a21baac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1cc829-cc04-4ac4-8e9d-fd4a54bd1347",
        "cursor": {
          "ref": "1b774437-ae95-47af-b689-c84ef8b8c389",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b05e0ce5-ddc3-4c2e-935e-687aed37288e"
        },
        "item": {
          "id": "1c1cc829-cc04-4ac4-8e9d-fd4a54bd1347",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "db6740d8-efe4-4df3-9ba1-763d8700bd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2dd95c1-622c-4b4e-ab9c-a85faefba136",
        "cursor": {
          "ref": "83f1d85a-185d-41ec-97d3-7bd5f93f83f5",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "99ba5084-4b02-48f1-8789-10e09e8701b9"
        },
        "item": {
          "id": "c2dd95c1-622c-4b4e-ab9c-a85faefba136",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c48f5294-25cb-46a3-9b67-14b5ed8b846b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9034e6b-2a93-49bf-bdab-09c0ad762574",
        "cursor": {
          "ref": "32c3c1e2-6434-4f3e-a15c-723d74ea0c47",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d6806cff-3be3-4a4e-b748-680eb7dd9545"
        },
        "item": {
          "id": "e9034e6b-2a93-49bf-bdab-09c0ad762574",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "340aedfc-fb19-48b3-951a-ab7aca867abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369f186b-9bd3-42e9-b23c-050ca520aad0",
        "cursor": {
          "ref": "a3cef8f2-9e02-435a-b2de-6d3cd1b11237",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "47b7dcd4-04e0-41f8-9cca-956dc60889c8"
        },
        "item": {
          "id": "369f186b-9bd3-42e9-b23c-050ca520aad0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "433b5ae7-656d-419f-be88-e2743f83a9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f55df0-6ed9-4a0a-beea-259d6ba1b4ba",
        "cursor": {
          "ref": "1f831dd3-73b0-456b-a713-8f81b9aabe4d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3ea6d40e-a8e3-4fbe-8af3-4584b9ce9bbd"
        },
        "item": {
          "id": "58f55df0-6ed9-4a0a-beea-259d6ba1b4ba",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2003c0c0-89e6-445c-b6a6-b987034b52e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c930b0-fab8-4e09-84dd-95742556f05d",
        "cursor": {
          "ref": "327060dc-bbb3-4dff-ba35-58e050167d85",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "80697251-a2f3-4998-9d9d-c3ea31239164"
        },
        "item": {
          "id": "61c930b0-fab8-4e09-84dd-95742556f05d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0fd59690-8d23-4f9e-ad99-559bc1fecd91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe50c2a-be18-4cf4-9e7a-0a128b9bf4bd",
        "cursor": {
          "ref": "a3539a56-b564-465f-b26b-7b8a30ecff9d",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6a685544-ec16-4e73-9444-4fa4ca98e67c"
        },
        "item": {
          "id": "bfe50c2a-be18-4cf4-9e7a-0a128b9bf4bd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9d9021b2-64c8-4e06-846e-ab3e2f09b531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884303c1-fbe5-4472-bbc9-25cfd9a84227",
        "cursor": {
          "ref": "da00aa1d-28b2-466e-b2e1-f81b244eaffd",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "46b06dba-9439-49da-bb9b-1c3293f50853"
        },
        "item": {
          "id": "884303c1-fbe5-4472-bbc9-25cfd9a84227",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "554ce9b6-21d3-4165-bb7d-9a44b3e023bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b20909-425c-468c-a262-94c738fcd9cd",
        "cursor": {
          "ref": "6a819451-a48a-4545-8999-91dee1e92592",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "eaa0fb7f-2a40-42a4-bf4a-15ac8df62cf2"
        },
        "item": {
          "id": "a1b20909-425c-468c-a262-94c738fcd9cd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0524b48a-1a84-4848-b489-ba5a3391d2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88a14ba-f0fe-4475-b43a-89e6b72d52c7",
        "cursor": {
          "ref": "f040a36e-2202-4162-9de0-008074beca29",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "410d3e21-47e8-4303-8c83-f7a4c4d809e8"
        },
        "item": {
          "id": "f88a14ba-f0fe-4475-b43a-89e6b72d52c7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "97e2c5de-d617-4e5c-9501-f817204bdd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee810a6-7c81-4e95-bfb7-0eb6a3491050",
        "cursor": {
          "ref": "d2c3d36f-2cf7-44d6-a35b-a6167c580e07",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d3edab86-ea3d-4a13-9714-dbb97c4ddc8b"
        },
        "item": {
          "id": "9ee810a6-7c81-4e95-bfb7-0eb6a3491050",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2c1b8238-8dbf-4bbf-af1a-1aa8e024dbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f292d00-e70f-4387-bc4a-b7d8c4e1ce58",
        "cursor": {
          "ref": "3fd36626-6e92-4068-b90a-f234ca3765b7",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "10e7d959-d345-46a4-9a44-7d0a294acde0"
        },
        "item": {
          "id": "9f292d00-e70f-4387-bc4a-b7d8c4e1ce58",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a3410fd1-1fd2-49a4-b460-99eb200e00bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa53017-1468-43a4-976b-5f4c0f50f435",
        "cursor": {
          "ref": "9893fbfc-53d8-49cf-8f61-8e04955c3215",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8a496a90-3d82-49c4-86f4-7c51f6c85a78"
        },
        "item": {
          "id": "9fa53017-1468-43a4-976b-5f4c0f50f435",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "74b7eb65-dc79-41b2-9a61-40a0ccc2a0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bc78be-b527-4504-9550-5ead4b4549ac",
        "cursor": {
          "ref": "0419006c-6b08-4b36-bfa5-6e47b137c624",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d7727902-2a83-4f84-8240-e579fca716f4"
        },
        "item": {
          "id": "02bc78be-b527-4504-9550-5ead4b4549ac",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9eab6d75-d654-4b5f-8d98-1db61c06300a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564fd954-d561-4089-9551-7981bf5fdf68",
        "cursor": {
          "ref": "4945ccb6-9c02-4eb3-bba9-6be5978e71ed",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a6a72277-077a-4c75-a01e-7d47e5eedec4"
        },
        "item": {
          "id": "564fd954-d561-4089-9551-7981bf5fdf68",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "01f00dc6-1ce5-4795-b35b-fd1721f887ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d531b0a8-549d-4146-8988-a8fc91f3b87c",
        "cursor": {
          "ref": "22cdf4db-fa82-44c4-a2d3-160952742665",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "58c4af9f-9950-436f-8d20-9ce564ec6e1f"
        },
        "item": {
          "id": "d531b0a8-549d-4146-8988-a8fc91f3b87c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "68f93ad1-bdec-4522-b0d5-0c539c44dd33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3de26d-81cd-4cfb-8e72-148ebb1a0ac3",
        "cursor": {
          "ref": "f8152e43-eaf6-4e36-a0eb-9fff3e6083d4",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c08272a9-8ab6-456f-8328-51333f56a780"
        },
        "item": {
          "id": "7b3de26d-81cd-4cfb-8e72-148ebb1a0ac3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "10a79454-b7ae-4ee0-aa94-61a797bab7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89c9910-8b86-4986-879b-6017b413ab36",
        "cursor": {
          "ref": "3d7475ab-7d6d-45e5-9daf-b0513aefd99b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "328228a1-277c-4e1c-bded-11bb6f53b41d"
        },
        "item": {
          "id": "e89c9910-8b86-4986-879b-6017b413ab36",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3b19f1d5-2598-462d-b31e-9b8243ed0a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26555635-1031-440a-80fb-32813a512567",
        "cursor": {
          "ref": "58d510eb-7eac-4427-8c86-7a99c519fc5f",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "28bb1a00-4371-4c98-982d-68b694485274"
        },
        "item": {
          "id": "26555635-1031-440a-80fb-32813a512567",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "39f3577d-e34f-4727-80fc-db9ec9095ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f47b64-d719-47e7-82ef-ee732e5f6aef",
        "cursor": {
          "ref": "5312a00e-278e-4e0e-8b46-b86e074f59ea",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fe760a6f-73f6-4dcd-894b-bf48cef15e60"
        },
        "item": {
          "id": "72f47b64-d719-47e7-82ef-ee732e5f6aef",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "df3122f2-d183-4f3c-9389-5d4d6b194880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a604da0-60d6-4071-ad58-f41cedc020b1",
        "cursor": {
          "ref": "ac446526-5a86-4aec-a7f8-1f48b3f9a88c",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bcac7f3d-3c27-4f85-a18f-5047b7ade420"
        },
        "item": {
          "id": "5a604da0-60d6-4071-ad58-f41cedc020b1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "53461d23-6574-4277-8db8-f1f0c665ca5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed456a90-0109-4786-873b-3e6f7b3a72a0",
        "cursor": {
          "ref": "ca91cd98-5c7e-4ad7-b473-0dddb6163252",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a0ef2616-0b35-4dd3-8e13-3135d47430da"
        },
        "item": {
          "id": "ed456a90-0109-4786-873b-3e6f7b3a72a0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8a756786-8def-426b-a43b-f4543c02745c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cc618c-3561-4f20-a81e-c78e0a3d49c3",
        "cursor": {
          "ref": "25f3b5df-744e-46e1-95a7-900e08ef133b",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9c475f88-bfa6-4f3d-a866-f80f8825c9ff"
        },
        "item": {
          "id": "54cc618c-3561-4f20-a81e-c78e0a3d49c3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "be8690ed-2fa1-4817-812d-8ff0e7c7b9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7d6157-76b3-42ac-9b74-e1cf48a13607",
        "cursor": {
          "ref": "819499a7-3e13-4af5-b986-9b5163fb0ded",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d6741546-ca6e-42d7-8a51-d63754685fd3"
        },
        "item": {
          "id": "db7d6157-76b3-42ac-9b74-e1cf48a13607",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "18cb5613-80d7-49a1-8e47-c2c3b42edcc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9551d3e9-2ebb-4657-b5ab-b36931f74d8b",
        "cursor": {
          "ref": "bfc9566a-03ae-4181-bc8d-f0db2b8d2462",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "87e39930-db03-4f6f-a46e-8ecb52a1c078"
        },
        "item": {
          "id": "9551d3e9-2ebb-4657-b5ab-b36931f74d8b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "697d8db5-51f1-4617-b516-ddf31e9ac3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e432da-3e8b-49ff-8815-cc39834c7934",
        "cursor": {
          "ref": "7eac61da-7897-46cd-8c4b-9e715aad574b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4a5d0041-0f64-4653-b307-340fcdedd125"
        },
        "item": {
          "id": "28e432da-3e8b-49ff-8815-cc39834c7934",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c0063ddb-aab8-476d-b030-09c226b507d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b2a71f-5d6e-4313-9830-bc249aae2342",
        "cursor": {
          "ref": "d439ee11-a8f3-4327-8b55-abe8e40c8171",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "51fe20c2-bb4d-4b52-a954-2fe53c569d64"
        },
        "item": {
          "id": "b3b2a71f-5d6e-4313-9830-bc249aae2342",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ee6c92e9-dbf1-462c-9a52-34e211c25fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f888e7ad-c0f3-4162-8812-041dd6ba1ca4",
        "cursor": {
          "ref": "2829bd49-5d28-4d46-b161-d728f7982469",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "313600cf-b9b5-4976-bcfb-d54fbbc07e22"
        },
        "item": {
          "id": "f888e7ad-c0f3-4162-8812-041dd6ba1ca4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b2342f5f-c22e-48ee-9a44-2b5ea3858722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bfc23c-4022-42a9-a96c-26f8f8bc49ee",
        "cursor": {
          "ref": "c5f6244f-77d0-4553-b7c2-ce8ae9b98d26",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ff4621c6-ac66-40f9-8475-5060dda4266b"
        },
        "item": {
          "id": "f8bfc23c-4022-42a9-a96c-26f8f8bc49ee",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2fd80d52-3bd4-4882-bfb3-695349d05e5b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c091d1f2-bf9d-40b8-9b6a-a6399fd68520",
        "cursor": {
          "ref": "31808f30-a5d6-4a54-8ff0-7a21ebbf819a",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9b84afb6-39fa-4c07-a4da-6f739916455f"
        },
        "item": {
          "id": "c091d1f2-bf9d-40b8-9b6a-a6399fd68520",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4108cbbf-c95c-447e-8a8d-f6700b2e7f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7644aa0c-c094-4e11-8532-291b64cff75b",
        "cursor": {
          "ref": "d98f9cbf-f18f-488c-b482-5097a4b12307",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "415fd093-510c-46ab-9b60-47b21010f706"
        },
        "item": {
          "id": "7644aa0c-c094-4e11-8532-291b64cff75b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6b1582e1-f2bb-479a-ae13-9b62e0f704a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b3aeda-2f95-45d8-b216-7238524ad31d",
        "cursor": {
          "ref": "3347464d-d8ba-4393-9149-46dc7e2312e2",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "96cd049f-1991-4d5c-8cac-6eaebded90e2"
        },
        "item": {
          "id": "b4b3aeda-2f95-45d8-b216-7238524ad31d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7ae61fa4-9706-4c34-bf81-7774e58ee608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11717ed1-5b28-4dbb-99e3-37c3f9fc3ae8",
        "cursor": {
          "ref": "594112a7-013f-488c-a795-c99ee2e03dfe",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d24957b2-4547-4fed-8769-51d20799c058"
        },
        "item": {
          "id": "11717ed1-5b28-4dbb-99e3-37c3f9fc3ae8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "20f5bf3e-857e-406c-b9cb-0c040aafddd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac9600c-251d-4e72-ab53-763d52ba451d",
        "cursor": {
          "ref": "4b58137f-2d77-4cc0-b784-25306821fe41",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "976bf652-f74b-4609-9b0f-3499fca6b754"
        },
        "item": {
          "id": "7ac9600c-251d-4e72-ab53-763d52ba451d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0ce8b209-46a8-4056-9c24-5e13496f5c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61105b87-503c-45d3-a7ef-91c64886cfa5",
        "cursor": {
          "ref": "cd3e13ce-2cbb-4ad3-80e1-f5708fbe5c30",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e83642d5-9eb5-4c09-a160-2c25e82e9a72"
        },
        "item": {
          "id": "61105b87-503c-45d3-a7ef-91c64886cfa5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c0d3904d-ee13-4063-aa73-7281edec9e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa995db-cdcc-4946-bc22-6babb82409b4",
        "cursor": {
          "ref": "09a1125b-5d12-4812-a886-3fb1ac00fa27",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a8dbde5b-1cf8-4e53-8ffe-ba836e7d8ada"
        },
        "item": {
          "id": "0fa995db-cdcc-4946-bc22-6babb82409b4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f14da4b6-18a4-420f-bac6-1b65519ac8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bf49d2-35dd-4616-afb3-f3d6ae8dd0e1",
        "cursor": {
          "ref": "a47ab345-1b4e-471d-bc6e-846b23a11244",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b369f681-4125-4f2a-8b6a-78079b8c7d3e"
        },
        "item": {
          "id": "d8bf49d2-35dd-4616-afb3-f3d6ae8dd0e1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7952d24b-f276-498d-896b-4d9114b677cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89feff2-3c43-4bfd-8fd2-90d478c30ee8",
        "cursor": {
          "ref": "a5bf8aef-7d71-49b7-be69-57780d676114",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cdae7e05-e88c-4722-b781-1039414eb7ca"
        },
        "item": {
          "id": "c89feff2-3c43-4bfd-8fd2-90d478c30ee8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b59ca078-d2dd-4731-b9f6-84950c2b322c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82a748a-b238-45b7-9e20-5643a59ef8a9",
        "cursor": {
          "ref": "943ba441-3098-44ad-af0c-45cc9f244759",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d4280078-7446-4434-8026-8e8173f15ef8"
        },
        "item": {
          "id": "b82a748a-b238-45b7-9e20-5643a59ef8a9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "47e63053-ebb3-4792-8f43-4c728b80bdd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f11f9cb-da18-4a3f-a306-847cc3263c16",
        "cursor": {
          "ref": "4d5bcac3-5afd-484a-b8d0-cda0034b9a0e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bf788611-d47b-4d0e-9ef8-34286c6758b9"
        },
        "item": {
          "id": "0f11f9cb-da18-4a3f-a306-847cc3263c16",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0b10f06a-7b6c-43d1-90da-01d2e072b1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351c5ff5-d6eb-4596-8a1d-fb296eab1c60",
        "cursor": {
          "ref": "eb825754-dc9b-4864-a458-b45a438f11dc",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "65fcccbc-f9cd-4149-b060-0d8fcf1a1ef6"
        },
        "item": {
          "id": "351c5ff5-d6eb-4596-8a1d-fb296eab1c60",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ad4f8d0d-c6ae-40e9-be15-ebc40a8c00f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c13a7f1-00e9-4836-84a6-5f53706ca66a",
        "cursor": {
          "ref": "34cb5759-18d3-40b4-b110-265c96c6813e",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4ec47bc4-4383-4975-8b91-cd07de7a4d0f"
        },
        "item": {
          "id": "8c13a7f1-00e9-4836-84a6-5f53706ca66a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4f388232-0232-4007-8f8e-e4cc3ec74f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9fdd55-e091-4617-a2dd-e4d56d7d76b4",
        "cursor": {
          "ref": "17b0554c-b96c-4767-b108-d3ecec3621b8",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "459cd69b-8198-488b-ac1e-73665a01fcb5"
        },
        "item": {
          "id": "7f9fdd55-e091-4617-a2dd-e4d56d7d76b4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0a1c5588-e9bd-4b04-96b3-a66246f0c36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d52cd6b-944f-4581-ad1b-ec3a2a3ce745",
        "cursor": {
          "ref": "aad59f01-6188-4c70-b047-ccfc5b25721b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7448e5e0-303c-4269-845c-0e12968f8292"
        },
        "item": {
          "id": "1d52cd6b-944f-4581-ad1b-ec3a2a3ce745",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "797440e3-2d94-450b-869c-ff81def8d4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab294df-b02b-482f-ab6c-592ed3653292",
        "cursor": {
          "ref": "2aadd4e2-618d-4648-b00d-4f23c5984ecd",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c249b4a7-1835-424f-bc9d-796947e4ea6c"
        },
        "item": {
          "id": "aab294df-b02b-482f-ab6c-592ed3653292",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "348d93d1-b27b-4a4a-9d32-8a5530569912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3d88eb-b7e3-499d-bd59-8d0a0586f1eb",
        "cursor": {
          "ref": "23894bec-7ca1-480d-bc2c-e4089568bc48",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2b37a0e8-04ae-46dc-a574-94bf7dbda930"
        },
        "item": {
          "id": "fe3d88eb-b7e3-499d-bd59-8d0a0586f1eb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "316647bb-1fe1-4ac9-8dc8-8958c2acb1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ecd718-ee9f-459b-8116-0332580f7b40",
        "cursor": {
          "ref": "ec4cff43-2dfa-45a0-adad-b0720e266a27",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1a8342b8-956a-4751-954c-39ce95330f7a"
        },
        "item": {
          "id": "89ecd718-ee9f-459b-8116-0332580f7b40",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "97a40ac1-3885-4a02-a4a5-d8539ca28689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87dfbb8-6654-4d2b-bf25-6fd378e8bf67",
        "cursor": {
          "ref": "597e278b-b1cc-403c-88bd-bf9f638cc809",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ea2f5129-0fee-4f04-9360-44dfcad13eb3"
        },
        "item": {
          "id": "a87dfbb8-6654-4d2b-bf25-6fd378e8bf67",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "af164fd1-0a75-4946-be2c-177b057eb380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bda92c9-60ed-4807-a101-ea7cf784240e",
        "cursor": {
          "ref": "d8880c4d-ac92-4f87-a1a7-5afd733bbcfb",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a4938477-877e-4a3d-a5b3-a9bad6a5fea6"
        },
        "item": {
          "id": "2bda92c9-60ed-4807-a101-ea7cf784240e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "581c93b7-b42a-44f9-8f1b-a43f18aca02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396a9846-5a7b-4d2e-a190-cbe988583c01",
        "cursor": {
          "ref": "3c7d3ad9-4e38-4e79-b81c-edbc9ffda033",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2cd323bc-06c7-44b5-b15c-82d37d50ffde"
        },
        "item": {
          "id": "396a9846-5a7b-4d2e-a190-cbe988583c01",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c0108221-d85a-4186-89ac-4c4183719830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471aea31-bd8f-4dff-b2bb-b1a1ed8b10a6",
        "cursor": {
          "ref": "da6d12a7-7fac-42fe-8b37-6b9a0f74eb15",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8f9b0a80-a91e-4c50-afaa-4299ec6a9155"
        },
        "item": {
          "id": "471aea31-bd8f-4dff-b2bb-b1a1ed8b10a6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "363643b7-21a6-438e-849f-64a41e6e2aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f06655-ee52-4d99-bca4-db971ab5c9d0",
        "cursor": {
          "ref": "723cf74e-254c-4de1-8596-2e6c080f9ee4",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "dccf6b0a-4697-4f8b-a4cc-c290b4553f72"
        },
        "item": {
          "id": "56f06655-ee52-4d99-bca4-db971ab5c9d0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6600fc03-c38d-473f-afcc-44a2014f9859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37766c2-8db7-4f51-9f48-07d1dc55063a",
        "cursor": {
          "ref": "de40f405-a07c-4656-a85c-3ad36e43bce4",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a222b836-be31-47f2-ac64-5f0bac3f9d82"
        },
        "item": {
          "id": "f37766c2-8db7-4f51-9f48-07d1dc55063a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "94b175b6-4f37-4344-80eb-251615937299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a026194d-ee5a-4710-bef3-3ee946c3f028",
        "cursor": {
          "ref": "0172ceec-ae64-4164-8fe8-e0320bf28120",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b4bf11b7-ccd6-4d8e-b7d7-20ed2f827a7e"
        },
        "item": {
          "id": "a026194d-ee5a-4710-bef3-3ee946c3f028",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e19fe940-f130-4ff7-81b8-d44ef50ce226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14be22ac-e409-4303-817a-4e843ba75296",
        "cursor": {
          "ref": "fc81c73f-3fc7-4ca0-806e-fbfc7cca84a7",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "65be9d05-25c7-4eaa-b9f2-6e9b2c17d0e4"
        },
        "item": {
          "id": "14be22ac-e409-4303-817a-4e843ba75296",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bddf35ab-f79b-471f-a07f-d0218cad5bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ab3cc0-e6a6-47e0-b05d-cae660d00a9f",
        "cursor": {
          "ref": "982b0edf-d97e-4885-9f3f-efc6e455faf4",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "37cf8390-c6bc-4827-b076-94d5a352b82b"
        },
        "item": {
          "id": "63ab3cc0-e6a6-47e0-b05d-cae660d00a9f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d75b6e6d-f30a-4859-b8d3-c0abfab3dbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0de11b-c793-4989-b72d-1b07b0925c14",
        "cursor": {
          "ref": "dc174821-f99d-4a2e-85b6-073ce04fa3ea",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9e946259-eee0-4b25-9434-e978ca6c85cb"
        },
        "item": {
          "id": "cb0de11b-c793-4989-b72d-1b07b0925c14",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "03dc99d9-2402-4da7-aaa0-5b333f65d5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251bd6ee-acd2-4d4d-b93a-94d4396a97ec",
        "cursor": {
          "ref": "fe40c90c-93a1-41ad-8a9d-470da3585309",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5b558a62-38b6-4eb1-b181-b4684fef3507"
        },
        "item": {
          "id": "251bd6ee-acd2-4d4d-b93a-94d4396a97ec",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bf1321fb-e60f-49b1-aaa1-b8f65599d35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb19487-ad6d-4ba5-a3b7-e017af3fb181",
        "cursor": {
          "ref": "a752afb9-e1fe-464b-a7de-965f9489fd3e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "938185fd-2f5c-4eee-a6f3-32b7fb0d02e3"
        },
        "item": {
          "id": "5cb19487-ad6d-4ba5-a3b7-e017af3fb181",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "87d69e6f-d517-4547-8704-ed63e9849b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66eb7a2a-d00d-44c1-8205-15ddb5ca77b1",
        "cursor": {
          "ref": "51cdfa29-d32b-4620-baa1-96a709c9d3fa",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "06b02c86-2cf0-43be-b11d-fadddddd763f"
        },
        "item": {
          "id": "66eb7a2a-d00d-44c1-8205-15ddb5ca77b1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "50b83303-4478-4224-9acf-c481fae820ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a988de60-a705-455e-a168-a2a78b950ef4",
        "cursor": {
          "ref": "6377fec6-cb33-40dd-8e11-99b7c5ec6f7a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d814a5cb-c92f-4ba6-9702-1c2e8de56739"
        },
        "item": {
          "id": "a988de60-a705-455e-a168-a2a78b950ef4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8e465c44-83fe-4c4a-a5b1-76aa433568f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696e0cfc-1c15-49c5-bd6f-f2e6fc566924",
        "cursor": {
          "ref": "502bcd28-8474-4623-a570-d5fa32b9b50c",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f2d0ec5e-1752-48ac-97e6-e6fc1bafe59c"
        },
        "item": {
          "id": "696e0cfc-1c15-49c5-bd6f-f2e6fc566924",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1df9b449-49e8-4612-b4eb-a8ade6b282cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2674f6-a74a-469b-9096-86da7ab69b17",
        "cursor": {
          "ref": "5949c686-b7d6-490d-98fd-f6930cc6488c",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6857f1a9-7d0a-4ec1-b816-beb7f067c211"
        },
        "item": {
          "id": "bb2674f6-a74a-469b-9096-86da7ab69b17",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "86f29694-d918-43e8-a5a2-6d0ce91ae68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df046e44-2280-4a77-8d7d-0fa1b589d890",
        "cursor": {
          "ref": "22a6994a-1d3a-4c1b-aa18-e6b850599e78",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "45be7c79-a138-400e-bcee-042c49e90dc5"
        },
        "item": {
          "id": "df046e44-2280-4a77-8d7d-0fa1b589d890",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2b401770-ee31-4510-abbf-a111a423cd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ddaa8a-f5c4-49c6-92fb-5fd30649d9a6",
        "cursor": {
          "ref": "3a12ece1-cc67-4434-8051-74e39dc839ab",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6b088115-e5a8-43b0-996d-7cb2bae76997"
        },
        "item": {
          "id": "e6ddaa8a-f5c4-49c6-92fb-5fd30649d9a6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fac48f9f-0265-4334-ad56-1d5fab8e6499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28dd915-55e4-41a9-912b-6192a48c690d",
        "cursor": {
          "ref": "a173145d-d9f5-4eab-8666-332b5a5bbcab",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2ab3ca6a-915b-4f9e-a594-4fa3a3924a3d"
        },
        "item": {
          "id": "f28dd915-55e4-41a9-912b-6192a48c690d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e7157f98-0c0a-4039-b08b-8d7c745fa01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bc5c99-ff10-4d8c-8d30-fecd684414a6",
        "cursor": {
          "ref": "60fd3dfe-6d22-4090-b03a-ba9de90bda5a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "96b971f2-80a4-44c2-bee7-703a0e7dfc8d"
        },
        "item": {
          "id": "67bc5c99-ff10-4d8c-8d30-fecd684414a6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a6cb79f2-817f-4d29-aff0-0a855b942a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc2521a-6fc0-4f79-83bf-4f91a21ea7f5",
        "cursor": {
          "ref": "e5e5f847-c5b2-4983-a69a-bb5d2104de56",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "32e2417b-b42d-426a-a58b-eaa9203430d9"
        },
        "item": {
          "id": "3bc2521a-6fc0-4f79-83bf-4f91a21ea7f5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "aa415c21-c41c-48de-9a85-d97f804b6e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502a17ee-7e93-4b48-8c31-13138525bc58",
        "cursor": {
          "ref": "802a3b3e-71d3-4076-8d15-e997db631d32",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4d535963-ff4e-47b0-a1ae-9f30cd4da982"
        },
        "item": {
          "id": "502a17ee-7e93-4b48-8c31-13138525bc58",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b43771be-d5c0-465f-9fb7-246617bc90f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386782c0-61ed-4d7f-bdae-4fc608392429",
        "cursor": {
          "ref": "cdf944e8-c097-46aa-bf4c-8dcc5d91d766",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "35564e3f-19b4-45c8-ab35-04cfa26b2cd4"
        },
        "item": {
          "id": "386782c0-61ed-4d7f-bdae-4fc608392429",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b1213de5-3a4d-464f-9560-77ac1d23db4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1b01f8-92bb-40da-b2ee-1408bd3bff66",
        "cursor": {
          "ref": "4e4a36e9-ed59-403c-b2ff-ba41bb937478",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "39d2fa5d-0e0c-4eb2-a272-071fd12adce8"
        },
        "item": {
          "id": "9e1b01f8-92bb-40da-b2ee-1408bd3bff66",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e01e066b-7b30-486e-922c-bdb6212effc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f17510-6769-4fae-a92d-136b72a04464",
        "cursor": {
          "ref": "6f0c6bba-b1d2-47c5-8578-3dda2157cacd",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "04237e1a-4bf9-4454-ac54-ed3186f5bdba"
        },
        "item": {
          "id": "88f17510-6769-4fae-a92d-136b72a04464",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1d676ecb-499b-41ed-a39c-5b52563fed9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c8a23d-9bde-421e-abd3-21a9494710e0",
        "cursor": {
          "ref": "bef99ce3-5009-44e3-af82-aa0076e93353",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e9ef7eef-0136-441b-a649-1a9dcd5bcc63"
        },
        "item": {
          "id": "08c8a23d-9bde-421e-abd3-21a9494710e0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d18f5391-3a5f-43bf-bd8a-71dc93286d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b9be9c-7db2-4587-85cc-f647b1047080",
        "cursor": {
          "ref": "d26bf444-c06b-4cc9-bfd9-5d5927bff30a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4bd5ecdf-90ec-4d1e-b963-9f0d0f303d09"
        },
        "item": {
          "id": "24b9be9c-7db2-4587-85cc-f647b1047080",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9a31884d-ba56-44c4-9456-6541e92f749c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f3ea93-ac21-4445-8e5d-a8fbb60765e1",
        "cursor": {
          "ref": "1e18e2ed-4503-4d30-8d56-476142897615",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ed4fb99a-a304-4cf3-abfd-f5b87f84e692"
        },
        "item": {
          "id": "c7f3ea93-ac21-4445-8e5d-a8fbb60765e1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "14137ae0-2385-48b6-b921-2be2880c795b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89275264-8019-48ee-8f76-7821625724ef",
        "cursor": {
          "ref": "54e9c8dd-9d03-44d2-9faf-c08e442cfbf4",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2c1fc42e-f0e9-418f-b061-c72d4b6e564b"
        },
        "item": {
          "id": "89275264-8019-48ee-8f76-7821625724ef",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7a3d2f90-3fd4-478c-a8e4-809d445ba405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812ad6a4-d43b-4939-b302-e668cfd00b68",
        "cursor": {
          "ref": "afd626cc-051f-4d93-8eff-032a04f91615",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d03e2f0c-75ca-4c99-af15-0c4e2ac86c97"
        },
        "item": {
          "id": "812ad6a4-d43b-4939-b302-e668cfd00b68",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6297208b-9189-4c30-88fd-ee92120dba68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8257c73-574d-45d9-8db1-00c20b5b35b1",
        "cursor": {
          "ref": "688a55d9-f75b-4384-8528-902a92e8241f",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "26bedb95-6423-4caa-bde4-922dbce31e4c"
        },
        "item": {
          "id": "c8257c73-574d-45d9-8db1-00c20b5b35b1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "43a9b19f-e325-4dd5-a476-8016c8af5677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7fad103-9169-4e51-8887-979bf6c26af8",
        "cursor": {
          "ref": "95f0789f-df60-4cbc-8647-b34e64341963",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3c44f6e5-40ac-4758-8fb2-50b625ad519b"
        },
        "item": {
          "id": "b7fad103-9169-4e51-8887-979bf6c26af8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f1a963a2-0395-4cf1-84b6-6ef6b72f9aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac40ea5c-fcaa-457f-bc06-adc5c48356d1",
        "cursor": {
          "ref": "25542fb5-7a20-4658-8e1b-391bbadeb9b8",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a3e26c75-1744-455b-880b-dfbcf247dd48"
        },
        "item": {
          "id": "ac40ea5c-fcaa-457f-bc06-adc5c48356d1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "026fabed-2580-4eb2-af73-4e33e13e7478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac92245d-42db-4637-a210-59f09a8fa7f1",
        "cursor": {
          "ref": "fd8e5675-a297-430b-92db-ca0751655e19",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f7228c66-58ae-48b6-801b-650fffd201d0"
        },
        "item": {
          "id": "ac92245d-42db-4637-a210-59f09a8fa7f1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "50940713-24a6-433b-83b6-42684a137f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98495d94-ea9a-4ba0-9d4c-d0ea7f7d918f",
        "cursor": {
          "ref": "01625bf9-589d-4ab3-b5df-abc3f4ede179",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "006de6ef-9dcf-4e1b-b2c3-d5447a64887d"
        },
        "item": {
          "id": "98495d94-ea9a-4ba0-9d4c-d0ea7f7d918f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1af22873-a3b0-4367-8278-6144dbf947c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e273502f-62f6-41ed-81fe-cc9eae26b031",
        "cursor": {
          "ref": "e9336bbc-5af1-4e0d-864b-d71be753ba8f",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b6e67a70-8732-4fc9-9056-4f8fdc0f1a91"
        },
        "item": {
          "id": "e273502f-62f6-41ed-81fe-cc9eae26b031",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a67a69c7-6b91-4b58-9b93-ea313a46e05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39998e1-ffd8-40f7-9fa3-c87ba4160db4",
        "cursor": {
          "ref": "1cc45263-fbfc-44e7-89f0-d5faf64ddadd",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3d35c124-374c-4e7f-a8c1-858d39a9cc5e"
        },
        "item": {
          "id": "e39998e1-ffd8-40f7-9fa3-c87ba4160db4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "91b782ac-b5c2-4609-9a46-c831bde62faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52fdeafe-a6b3-40d1-a8e6-d98f6f754afe",
        "cursor": {
          "ref": "2f53ea2e-f493-4763-ba32-8d82c88a3555",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "56c1efd4-1450-4d7b-b3ed-3369897da7e3"
        },
        "item": {
          "id": "52fdeafe-a6b3-40d1-a8e6-d98f6f754afe",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "13045350-b415-4d9c-b35a-30b83ff581e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74781f22-85f1-4f30-baaa-d7c339019258",
        "cursor": {
          "ref": "a51cd496-16d0-4cbf-afe9-af9c22222335",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d5af143a-a975-478b-a03a-8180620f54b9"
        },
        "item": {
          "id": "74781f22-85f1-4f30-baaa-d7c339019258",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "72d975ab-7fbd-4d21-82b9-1815345f315c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8844b5f0-f716-4c24-8342-3d9ddb62eb65",
        "cursor": {
          "ref": "3d7bbae1-ba5b-47fd-a6b3-edf1c697ef99",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "79e58204-0501-40b8-b9e4-02f707c92647"
        },
        "item": {
          "id": "8844b5f0-f716-4c24-8342-3d9ddb62eb65",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3b148203-9978-4b25-9994-2d492c1fbf61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6dc5530-18f4-46af-bfe9-b3641cc7b717",
        "cursor": {
          "ref": "3b8bb51d-3bae-4b26-b289-2148a0f5492f",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6f7607b4-3fc2-4537-a3ef-84939795d507"
        },
        "item": {
          "id": "d6dc5530-18f4-46af-bfe9-b3641cc7b717",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "020dc35b-9605-4346-b813-59de5667440b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3bb223-78a5-4d1c-95a0-64bedb3aa0b7",
        "cursor": {
          "ref": "ea823bd1-48e5-48f8-914c-dd4569af3f92",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "30f329cf-3dbc-4e27-926f-a59d614ae6b4"
        },
        "item": {
          "id": "dd3bb223-78a5-4d1c-95a0-64bedb3aa0b7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "65b3915d-d776-4d2c-bc63-556722a39d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32985ce-2ddb-4454-adbb-749b93217acb",
        "cursor": {
          "ref": "fec180f3-29fc-4400-b63e-8caa90de8023",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2bf11832-faf6-4fb1-b31b-ba018dc9ccb9"
        },
        "item": {
          "id": "e32985ce-2ddb-4454-adbb-749b93217acb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "959816d4-94dc-4d94-bc56-88a00ea07cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90e88e3-d972-4d51-a8f2-aa3af41f0fc7",
        "cursor": {
          "ref": "7b208e3b-d395-4eae-a283-616e30c25f9c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d1b5320a-ad67-45a9-82b5-cf82b8eee3a4"
        },
        "item": {
          "id": "f90e88e3-d972-4d51-a8f2-aa3af41f0fc7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9b674a6d-7dfc-4098-8ab2-3728c71e31c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b64a0ac-d871-4990-adda-a8514d6f120b",
        "cursor": {
          "ref": "ff4263c8-dffb-41ca-ae0b-8861dbe9a3c9",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1dd31880-57c5-4f6f-97c8-64940edefbcd"
        },
        "item": {
          "id": "6b64a0ac-d871-4990-adda-a8514d6f120b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f0abd387-dea2-48ad-b94a-e19dd0d58602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6a95c7-818e-4bf9-9ca0-8f29d651880c",
        "cursor": {
          "ref": "962d80f9-1213-4b37-9e63-37e235372763",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "187ad31c-4557-460c-a305-cebf364fa291"
        },
        "item": {
          "id": "8d6a95c7-818e-4bf9-9ca0-8f29d651880c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f60195fc-7317-47ad-9af3-0992e6501ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b5b709-1346-4224-8488-cc1e27e11dbe",
        "cursor": {
          "ref": "7163e15e-6993-4191-ad28-34e29c7df5df",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "617a8f17-5d55-4cf5-883b-6b1f69ee0e3c"
        },
        "item": {
          "id": "c1b5b709-1346-4224-8488-cc1e27e11dbe",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c266d624-a50a-4958-8381-2a0229ef3bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588e35d8-0943-4ab9-845c-6ef2c546635f",
        "cursor": {
          "ref": "d000c3a5-ad44-4a00-b713-7ff884c8f904",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e0980b65-4085-4ef2-8212-04141628e13c"
        },
        "item": {
          "id": "588e35d8-0943-4ab9-845c-6ef2c546635f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2a08d326-48bf-4cd1-b1a6-105b922bb2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9df7487-88e4-47e5-b371-da10628b0ecc",
        "cursor": {
          "ref": "79a97919-17a5-44f6-872f-22f071a5b4ab",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "94a364b0-35d0-4e16-872f-fb1eada3937a"
        },
        "item": {
          "id": "a9df7487-88e4-47e5-b371-da10628b0ecc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5151cbcb-f838-4d65-b12b-39849731a19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7b5f92-6d19-43de-b8f1-e34f036b5626",
        "cursor": {
          "ref": "99fa817d-f3c0-48cb-81d3-b3e26b29df3d",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bb4f49d8-82da-4d18-bdb9-c9f20acb1cd7"
        },
        "item": {
          "id": "2d7b5f92-6d19-43de-b8f1-e34f036b5626",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fabec262-bfa9-4a5d-9112-d0d679a0acb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d2a839-ac7d-4203-b8be-53bed2aeb51d",
        "cursor": {
          "ref": "0d01d009-1974-419f-8f55-4ded6cfd228c",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "32647e70-2fcd-4b45-aa81-49227a8432f9"
        },
        "item": {
          "id": "c5d2a839-ac7d-4203-b8be-53bed2aeb51d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "eb04f510-d48d-4f67-93d2-8c8dfddb8cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e6b357-d5ad-4e2e-b164-175794a37e0d",
        "cursor": {
          "ref": "3d84783a-0d80-47b2-a8c0-503b74dc6732",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ee2fe55b-e6bc-43f9-b05e-484d48eab80f"
        },
        "item": {
          "id": "e4e6b357-d5ad-4e2e-b164-175794a37e0d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "33aaef47-76c1-47a3-824f-e17728c84b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e871fa46-547a-4098-9fc7-6d8a08820f93",
        "cursor": {
          "ref": "cdd2b317-c19d-42f7-85f7-84468be54a9c",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c52f243c-b6fb-42e1-9f00-2a8e7dc5ca1d"
        },
        "item": {
          "id": "e871fa46-547a-4098-9fc7-6d8a08820f93",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "716ac861-e588-40e5-acbb-35cf919e9c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e2bc5d-bbf7-499b-8e4f-fd590eada4ff",
        "cursor": {
          "ref": "f5e1012d-ce00-470f-80ba-8f7c612dd47b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4bc6d245-b11c-4fcf-8351-709a07aa8d7e"
        },
        "item": {
          "id": "d4e2bc5d-bbf7-499b-8e4f-fd590eada4ff",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2af04685-8a1b-4ff2-9274-e3b283df2085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83438ba-7b0a-45dd-8ce1-ce302299ccd9",
        "cursor": {
          "ref": "c8dd86bc-43fe-4c75-9349-56409f70dfc8",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "258a2880-36ba-4cc4-bcc0-2cd9f9466b8a"
        },
        "item": {
          "id": "f83438ba-7b0a-45dd-8ce1-ce302299ccd9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0c0e2641-9c73-43e2-8a34-8f8bc22ae0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e080a1f2-05ca-4b7a-9b69-760f343df181",
        "cursor": {
          "ref": "4e6322bd-6adb-4841-aa61-b37655f896f0",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3debe2c6-d908-498a-b72d-474c9e9c04d0"
        },
        "item": {
          "id": "e080a1f2-05ca-4b7a-9b69-760f343df181",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "efb191d6-9e7e-48ba-ac88-5af7125178dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795290a0-dbc4-4566-aec7-e1d74c36fc41",
        "cursor": {
          "ref": "dfb77e3b-5cdf-490e-9ff0-5102138df1f3",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c4b7920a-9098-48da-9eef-b9903d6b5008"
        },
        "item": {
          "id": "795290a0-dbc4-4566-aec7-e1d74c36fc41",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "845980e7-e78b-4d11-bc5a-2e3c1160240a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b05c25-b3a3-422a-ac84-994aca8b4f43",
        "cursor": {
          "ref": "9f5a3446-aa5c-49ae-a48a-b4303775deec",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "edfaeb2e-5cdb-41e3-a83f-3af33cb80ff9"
        },
        "item": {
          "id": "83b05c25-b3a3-422a-ac84-994aca8b4f43",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f531aee3-9460-4aca-84f4-28fb96f7972a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0c2c35-d82f-4151-bb1a-28d99cd680ed",
        "cursor": {
          "ref": "737765ee-362b-4c8d-ba04-83475de6beb6",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ef8130bf-f159-478e-b78e-3d4e3e8c052a"
        },
        "item": {
          "id": "9b0c2c35-d82f-4151-bb1a-28d99cd680ed",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "929e40ca-e565-4a34-8da4-ddab20a2738e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96c999b-26a9-45dc-bd87-0b4b8ecb4e13",
        "cursor": {
          "ref": "dd503431-ef05-4158-8d14-af99c4422b41",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7bc66371-992d-4984-b372-c2b0dde43d9e"
        },
        "item": {
          "id": "b96c999b-26a9-45dc-bd87-0b4b8ecb4e13",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "34bf5303-501a-48eb-a100-6eaab1c983da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de17e4c-612e-477c-bbe3-3e2dd536d322",
        "cursor": {
          "ref": "aad25b5c-04fd-45f5-9534-b6a83e5c39bb",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1590b9d4-773a-4917-8364-567df7305bb6"
        },
        "item": {
          "id": "8de17e4c-612e-477c-bbe3-3e2dd536d322",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "89c7c4fe-c8a5-441c-ae01-0fb850fad422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78b6a00-f419-4afc-9cca-a94048d16538",
        "cursor": {
          "ref": "ef5e8f5d-a392-4309-9697-576c638f99f7",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bee17c8f-9b7b-4701-8ebe-9d9631c68820"
        },
        "item": {
          "id": "f78b6a00-f419-4afc-9cca-a94048d16538",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "080a7c21-7526-448b-9d21-b067f23df538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e27cba-6322-4594-95b8-0f0d741f219e",
        "cursor": {
          "ref": "44d7eeae-535c-4f82-98b7-667da5776f2c",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ee7260ed-e2f8-4103-8eac-d8cfd573c389"
        },
        "item": {
          "id": "f0e27cba-6322-4594-95b8-0f0d741f219e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2dbdd7a1-4cb5-4d94-ba6c-b720077e8a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669aa14f-0bb3-47d6-93d9-218a6904ba04",
        "cursor": {
          "ref": "cd17dd0c-3df7-4af3-bc6d-e68b85d4e990",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "220a7a11-cb6d-40f0-b19a-35fcf70a5c43"
        },
        "item": {
          "id": "669aa14f-0bb3-47d6-93d9-218a6904ba04",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8afddafc-4040-4159-81db-0ee7a53cf4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab764d00-4a37-4459-9908-f05f56cd7cc2",
        "cursor": {
          "ref": "d9295ad7-db45-4d6a-b44d-3c08f30b2b97",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b78b53e1-89b0-4099-8980-d868fb0e1503"
        },
        "item": {
          "id": "ab764d00-4a37-4459-9908-f05f56cd7cc2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "81ab1d21-852c-469f-ba8f-464782fa0998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43434890-ff09-42e2-94fa-70a246ee0e33",
        "cursor": {
          "ref": "4ce7fbca-5aa5-4f30-83d1-1b4e6f9ac249",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "600049ef-ad68-49b6-8ca8-488053b56f6d"
        },
        "item": {
          "id": "43434890-ff09-42e2-94fa-70a246ee0e33",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fd6f4220-d00c-44da-803b-32641a6ec62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69e9818-71aa-41bb-a506-e2262755c5c0",
        "cursor": {
          "ref": "a337b024-99ad-43ae-9f86-19a919964c11",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "63026b0b-6725-4db8-b522-f9f4f9782850"
        },
        "item": {
          "id": "e69e9818-71aa-41bb-a506-e2262755c5c0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3448bf94-1a92-450a-b741-7989097c8029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc26d10-29d4-4633-8d98-1832ea79b6c9",
        "cursor": {
          "ref": "39523bf0-3f72-4fb7-a42f-6ed706f018f0",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7b2f7ceb-b0e8-434c-97d4-efb1e07bb7d3"
        },
        "item": {
          "id": "1fc26d10-29d4-4633-8d98-1832ea79b6c9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c9a775bf-88cf-4ff6-a700-a4384408dfde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd821c51-98bc-4a6d-b1bb-e4e4dd55318d",
        "cursor": {
          "ref": "d3b03b86-c387-4252-9eea-7cd6dd515b20",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5c95be42-9a0e-4e1f-95d7-c08300b2e765"
        },
        "item": {
          "id": "bd821c51-98bc-4a6d-b1bb-e4e4dd55318d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2bd9efc7-1380-48f3-bfda-7db373f50b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e2324c-d8bd-4336-a34e-50b09c7bacf1",
        "cursor": {
          "ref": "cd211e69-274d-4b0b-9529-dc8dbe09946f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5c147452-a936-4e78-866b-7719089a4255"
        },
        "item": {
          "id": "12e2324c-d8bd-4336-a34e-50b09c7bacf1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "48430c59-19ca-45f0-91b7-0d13d00afd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1133042-12be-4887-a6f0-1a33aee1b57d",
        "cursor": {
          "ref": "c7bb287d-ed54-4d87-897f-081c7339dcd5",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "94a34a1d-9932-4b51-b3ab-a71797cf993d"
        },
        "item": {
          "id": "d1133042-12be-4887-a6f0-1a33aee1b57d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b8053fa1-4191-4553-a3de-c8cf7437ce9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67f3a81-d1e7-453f-affa-364f0e84d2de",
        "cursor": {
          "ref": "64739af2-a5d1-4b98-8eae-bba5353e3bf3",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "33cd9184-89a6-4c3f-8264-35a0d98158b0"
        },
        "item": {
          "id": "b67f3a81-d1e7-453f-affa-364f0e84d2de",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "18d87064-efc8-42f8-8ef7-264481883cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477e0ec9-fef6-4855-91bf-143b12879557",
        "cursor": {
          "ref": "97bbc36a-b462-4c4a-b31d-da93b5d0b538",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8104c841-708b-4f3c-8fdb-5d4833c1d4d5"
        },
        "item": {
          "id": "477e0ec9-fef6-4855-91bf-143b12879557",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2e461c24-98e1-4b8f-9305-40cdcf82cc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2dabe4-8ce9-4fed-88ab-2ea1ce6f47fa",
        "cursor": {
          "ref": "75941661-bff1-4581-9f22-d22fb7fbf5b3",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d64595e2-7a02-455a-82fd-29c47d92a91e"
        },
        "item": {
          "id": "2a2dabe4-8ce9-4fed-88ab-2ea1ce6f47fa",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e9f006b0-4e8d-4b16-8d35-56855676f95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cab448b-ca4c-415a-a642-e819eac1a22a",
        "cursor": {
          "ref": "e0e636d3-f8e7-4e12-b697-8b5c14dbfcef",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "586c3e4f-a48a-4a48-abfd-8407fccb59ed"
        },
        "item": {
          "id": "5cab448b-ca4c-415a-a642-e819eac1a22a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2003fb8f-5330-45ce-aeca-d4767873b943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916e851b-51ac-47bf-9061-23546b81033e",
        "cursor": {
          "ref": "258fc321-f1ca-4ed6-8288-489357b7c306",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "477e53a2-12e6-4721-9f4e-8ba7a6cbc32d"
        },
        "item": {
          "id": "916e851b-51ac-47bf-9061-23546b81033e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b85d12fa-bc07-48b6-858c-66b6cdfb6be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87938bca-6821-42f1-81e9-f44e59fc583d",
        "cursor": {
          "ref": "3e228e96-0d3c-4533-9e33-d24e68df26c0",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "52d1f083-ad04-41a3-add4-b35e8bdae279"
        },
        "item": {
          "id": "87938bca-6821-42f1-81e9-f44e59fc583d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "096dc301-66e5-410e-8c90-1383c38a8d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000ddd01-0967-48f2-989c-5a2a1b53e4f6",
        "cursor": {
          "ref": "17714010-f9ff-4911-ac0b-545bac1df175",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0e9a8c74-8485-46f4-9a38-a49dfb3365d8"
        },
        "item": {
          "id": "000ddd01-0967-48f2-989c-5a2a1b53e4f6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "99370871-70cd-4b05-8fe7-0b036ad55542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b95686-d398-43d4-a7b5-a98640cfe7a5",
        "cursor": {
          "ref": "a107f273-6ca7-48f7-afed-4f70862d598c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6c6c8e2d-f36a-48aa-9c59-0cb90a0364b5"
        },
        "item": {
          "id": "18b95686-d398-43d4-a7b5-a98640cfe7a5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5b513915-512b-4f3d-9fca-b8cd6ed5dd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d500a0f6-edc6-4ab5-8d3e-b30bebdbd090",
        "cursor": {
          "ref": "bc13d478-f944-4330-b566-3223d5781d05",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e81dd93a-ce3e-41ab-b600-49e1e3999590"
        },
        "item": {
          "id": "d500a0f6-edc6-4ab5-8d3e-b30bebdbd090",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c762d87e-26c1-4f8a-bd76-973ec50ced50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bfb2d6-8aeb-4182-8e2f-4a4cfb084dd5",
        "cursor": {
          "ref": "4d84580f-787a-46f4-92d2-bdf8cab026c9",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6abc4e2a-3754-4bb7-9fd3-7bdb3fa4c76d"
        },
        "item": {
          "id": "86bfb2d6-8aeb-4182-8e2f-4a4cfb084dd5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b9b998cd-9554-4878-aa67-557b6cfa1bd3",
          "status": "OK",
          "code": 200,
          "responseTime": 2430,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c3dfdf-aaff-4f5f-8fbb-29dadffde347",
        "cursor": {
          "ref": "9e76aba9-ee39-4553-86b7-08e9b8f4ee62",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "959a1290-f3d4-4357-808e-025121ce2463"
        },
        "item": {
          "id": "86c3dfdf-aaff-4f5f-8fbb-29dadffde347",
          "name": "credentials_verify"
        },
        "response": {
          "id": "594e5162-8241-46e0-abc1-3d01f634ce2b",
          "status": "OK",
          "code": 200,
          "responseTime": 2870,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "811506c7-7111-4a77-9e4e-cc446d2d12de",
        "cursor": {
          "ref": "5e2aef58-7f3d-42df-b3c6-f8cd73abd52a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1a07a8a4-df9c-4282-aa49-dc4f77b5d66f"
        },
        "item": {
          "id": "811506c7-7111-4a77-9e4e-cc446d2d12de",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0cd996a5-2643-49a1-ab8f-5a2ba857ebd3",
          "status": "OK",
          "code": 200,
          "responseTime": 2648,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51e96e7-a8cb-4aef-b423-5de26e4d09c5",
        "cursor": {
          "ref": "d65294e1-7c88-41c1-bb9a-88ae66244f43",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bd3bf622-c393-4d3a-8908-57940e74b2dc"
        },
        "item": {
          "id": "e51e96e7-a8cb-4aef-b423-5de26e4d09c5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9ab43096-7408-4e7b-aab5-5b93db2fea36",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51e96e7-a8cb-4aef-b423-5de26e4d09c5",
        "cursor": {
          "ref": "d65294e1-7c88-41c1-bb9a-88ae66244f43",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bd3bf622-c393-4d3a-8908-57940e74b2dc"
        },
        "item": {
          "id": "e51e96e7-a8cb-4aef-b423-5de26e4d09c5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9ab43096-7408-4e7b-aab5-5b93db2fea36",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5addff-4bd7-4adb-9e89-4839ac52d476",
        "cursor": {
          "ref": "1138db3b-0c19-4c6d-9d0c-352028fe3292",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3a05fdd9-166e-4082-9b46-ee52e530500c"
        },
        "item": {
          "id": "9f5addff-4bd7-4adb-9e89-4839ac52d476",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "267f0b10-9f93-4721-955f-fc8e4b37a74a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7938882-07a9-44e1-b044-3fa6207a6743",
        "cursor": {
          "ref": "d38a9e63-3f12-4601-8343-2e4801682708",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f5fd92f8-1b3c-4e9f-b7b4-7db341d55b86"
        },
        "item": {
          "id": "f7938882-07a9-44e1-b044-3fa6207a6743",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "66f478d0-d913-4c60-8635-e94afc1a38a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}