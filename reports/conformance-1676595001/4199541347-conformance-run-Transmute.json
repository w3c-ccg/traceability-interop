{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "21fa5ca3-9cd1-44fb-94b0-e3906f4d40be",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0fb24b47-b45b-4796-8762-144ec1ff954d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cae63154-c707-4e5f-8164-2873c20c1aa9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "00e7bcd2-3972-44dc-9510-38b24daa35c7"
                }
              }
            ]
          },
          {
            "id": "c629691a-537e-4d94-bd5a-86346b82219c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18a4677a-d9e5-4ac6-9532-9076545d193c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "772f15b2-a088-4e0b-bff1-90a537b92f64"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5b127b58-7214-4f97-94e3-778defcb7c45",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "07be4f88-11ea-451e-8a6a-a292d1171371",
            "name": "Positive Testing",
            "item": [
              {
                "id": "99acb6a7-50bb-474a-a179-fff1d612f13a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0997761-58e3-45bb-910f-14d4f67f6096",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b08059b4-a7ff-4bdd-9f20-616fa17f562b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11dd19b7-6bd5-45d6-846e-f013025badda",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0db6eac1-556a-48ca-8f4b-b033cf6346e9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "92253f89-b53a-47ba-9100-425abc2a4982",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b24976ae-314d-4eb8-b7a6-5b81c4a344bb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21698968-466c-4896-8b21-60ccac30b662",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5b29d067-6b0e-4c2e-a97b-620e1760f8dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a75075b5-4ac4-40f2-abc0-7a2dc614a10d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ec42545-9184-4d80-a4bb-a2d8cffd637c"
            }
          }
        ]
      },
      {
        "id": "417efdcb-ea8f-4ab9-bbaa-1012b1a0511e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "003d3b9b-eb56-4095-b8c5-67af2083c5d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72713ffe-4d1d-4796-9b65-eae2d55e2d6e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4ed4f4fc-ebee-4cf5-8a1f-afb09a46cf34",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412802f8-d86c-49a5-b760-6090e9882a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "122a1ccb-6917-4265-8dc2-28dc03fa5f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84fdba5-401d-4dde-958c-567ef7d4d741",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6150601-9311-4757-9db3-419f73eb7758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "011550a2-1f0e-437d-b91d-7002f58c26cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c72fe49-7716-4ade-8970-3e97cd296530",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d59eee5-ed83-4ac4-849c-17db2a5dfa56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e264fa61-1638-4e37-b043-ee17d6f92a6f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2e437c82-03ce-40bb-a5e8-66ba7a04bb97",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89bd5280-1a3e-4189-9296-a9dd78b1be78",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9dd10c-60c0-47e6-82ff-e5ff1b0e49bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1799e13d-d7de-41d5-a1f7-28ef24e70d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476fff83-5e21-4b2b-be86-59cce3d64dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2446af-7389-4d94-96e4-53687be45cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31729bb4-f764-46b9-b828-bf4686160a7a",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f537826-8122-4614-b66f-ad2dd680db8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88a2d4b5-d130-471c-904a-f5fc91559124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fd5ca6-4b85-4244-8bee-e0900164d4f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "3439e978-1e3b-4971-8b90-daae2fb8cfc3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "22dd0df9-1831-49fd-a139-547127561201",
            "name": "Positive Testing",
            "item": [
              {
                "id": "57c70d05-1475-4e22-9b71-bb3322eb935b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1a718d6-3fca-4e99-b9bb-e3044f1eea8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "07968dfb-90cb-4331-af21-f1c7d23c4c3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10b0903e-a71c-4d1e-a5f9-85380975e2ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "448e7150-708c-4c0d-98b6-1bfa14b6e9ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b88cc2f-a88b-48e8-a1ab-cba67c93af6e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b6d43b6-5fea-41fb-9098-4b4fa9e91d9f"
            }
          }
        ]
      },
      {
        "id": "f418acea-d504-4133-896e-0af61636d55b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fa4d1e0e-b2ab-460b-bc0f-4fa7c80da474",
            "name": "Negative Testing",
            "item": [
              {
                "id": "995f6e09-e8cc-418c-a34d-900138891294",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4afcff36-889a-487d-9e48-56121e63e182",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2403257-13d5-4ee1-b99a-57554396a4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e533e80-a23d-40b3-8a09-aa7e4a097810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462f85e2-ade9-4db4-a883-50c9050d57f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0f0ff16-78a7-4533-a78b-6aecab39350c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18711cab-dc0e-462b-9a45-5dfee1340b4e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c90a2e-dd9d-4b03-aa62-c741035b0f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3b8eaf-40e3-45b0-8924-42e32cafaf66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf2141e-42d9-4aa0-97d1-10eaec080c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39a27b4f-0e62-4867-850c-f7bae2ee17ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3d61de-8bb4-4a09-95d4-1e3501c2d332",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188aeaba-6b31-4a5d-8d71-39850589c19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c91ac22-f081-4877-95a5-9d852f2f30d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825249a4-a976-4ce8-b4d0-400af5cef565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bc0f057-730b-43ec-85fb-beb44a99f8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f19f95-bb23-4b7f-b667-0007d8cbf458",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bd4636-e9f9-4789-b323-67370a5f86c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31afe3f1-9313-440f-8ba3-b16125ee8483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3f80d0-2e92-4c2c-af62-665c525af153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc3f5605-685e-4439-a56d-6830fcffdfef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff7f429-0f3d-49f9-a012-8ddf354592c6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba67d21c-284d-4c37-9a7d-7d1c53590963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a845e7-f41b-4063-a48d-e898af6e260e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b6d54d-81d2-46e3-9138-8c9ca4fd8224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bc87c0f-de6d-4de5-ae12-387088e60a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9ecc07-51ef-47eb-9a2a-705a05d16d42",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f302dfe-3452-440e-979e-76f4997d2741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6952946a-77d6-4fa9-9517-1fd58527976e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9303d9-f545-4f8c-986e-c3f67804130a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ac6e758-e380-40a8-892d-7be46bae35cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd86ce44-7228-4a3a-86e4-4bffeeb803fe",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378873ef-b837-4815-8252-a65211189ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4625d14-38af-46ea-afea-58fa7f1a2601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adbb398-2e41-4ddb-b743-d2af5bfb4f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d035284-5b3c-4b3f-86ee-b50c2fd42029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30c4aed-526b-4d39-8898-47fa09fe8217",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88227e82-bba7-4e6e-804d-9990b8428608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e68e7e77-03f0-476c-a6de-9d983ca948f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd30ad5-5c7a-4c99-bc46-8e8cbd2f776b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d825059f-0ecb-47fd-9b4b-4ce161bc96f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14303eb-db01-4be2-8c2c-81aee2399573",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d0095c-cd56-4f6c-b3c1-7709bdc74e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d58c2e-e2cb-43a5-acd7-139ebc7b67f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec1dbf3-1bf8-4f24-b07b-957027f32229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91c01b64-be9f-4dde-89ab-7345ca791737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28c5fc6-9e53-40a3-92a4-068533bbce39",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d64adb2-bd34-4af9-9c94-dace68de0e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6fbe8ad-88c2-4c63-a2d4-4aef44ba4c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2b421c-f282-46bf-9ee3-8ae2522097d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "694d0b74-28c5-4613-8d56-1f19ea889649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f19111-ff32-48a5-9db8-13e8cda8f28e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6dfc2e-5385-4cd0-bcc6-586078894b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb258e71-e6ff-4af4-8314-8e391590a75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def8fa6a-4f26-4791-85c7-ed06a53a9b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e3f90f4-ad81-4588-baed-6f48609e7fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a52e284-955c-425f-bdd4-9938da63c32b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c356eb4-cf03-4a57-a020-39cdc7615226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbb297f-ccbb-4cde-a8e2-87d7509e8954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46abedd-e037-4424-af9a-1f29ccdfffec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e1b58a6-c4a5-439a-b8ed-d88c18fa3225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f6fa49-e466-4d93-b3a8-ff6391a6348a",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0faec333-f055-4a9c-b541-19796b04a3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236a5cc8-8487-42e9-8bea-6bf50a983c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2965aea-7b4a-4439-9f46-05fc1b230fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "279acc24-faaf-41fa-ae72-de748d480c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ecbf3e-16e2-4ad4-8785-c1fed2a7aef1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d9f132-d175-499f-8f07-10f58c8de289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b83b95-cd83-45c5-85c7-5503f3b0fd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4302c6-58a3-4859-80f7-292cc696be1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf00dc7c-9b42-4370-bd7f-4188e2594a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb01e553-7296-4419-b05c-84a989351633",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4262a4a4-1bd0-46f9-8849-c12438509419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f241f9ca-945a-4cc2-9831-2a24eecc9748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7962dde-85cf-4d74-9d33-6bda1dbd8c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18022150-1d40-40e2-87fb-ff7284b8bdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e361325e-0d74-448e-ac79-d0e78d787df6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e699fb-adcf-437d-90ee-0a878624b40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380c0159-8cb7-4ced-8cd8-7ca6bf6c77e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498bf768-dcf2-47d1-b3bf-ed60d6816b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c0f6a0f-4579-439b-843e-1c8c94de5e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f237ec29-758e-436a-92c1-56bf9c931e3b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a61cef-f622-470c-a6dd-47fbd715456e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f087e555-2ec4-4d01-892d-28fae3357cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23ba04c-3310-441b-b20c-461a1d33523c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccd418d0-84b7-4e06-b277-6c6c3192b1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be82d8e6-fbe6-4e86-a629-0d2d923e71e0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42159e7a-70e8-4e8c-9288-dd25807f2b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b577afe7-3695-49fb-a477-2bafaec4cdaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b39e7a-d1e5-43c6-9bda-c81d4b41d7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75cab1dc-57dd-4d09-9e0e-ee9eb14ae376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d060a86-5e96-4c68-871d-3ad97e1c922b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fb0734-c767-4e0a-9e7e-a580ba10aea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d3f531-5749-4fb0-998c-e546ffc6ea6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28525338-c1c5-45f1-b795-17aa365667e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5640b31-c991-4bac-b41b-7ad77cd03739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecce7e9-0ef7-47b6-822e-822cffb41d6f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc62735-445e-43fc-b647-e046730d903e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2b75f9-081e-453d-a4b0-56d986ea9084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18ab821-a577-42e2-b863-04e7fadcabbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8758ed40-b5b4-4bee-844d-2e395ea599e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3891ac03-ddf5-40cf-9911-e8b07cc92f37",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f5a268-bd3c-43a1-82a2-a42824cf5d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e333ba-95f5-4332-84de-a2de55d7be88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd354c8b-515d-449a-af2d-ccb06ac6761a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad156d5-4f3b-4d49-a529-5c0745cc6a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe93af2-ce3a-4cea-927f-89cd466c5bd6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae4f3c2-63f4-4e02-88be-31405b8543d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54f08a2-8ebf-408b-878e-2908d6d4d76d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e122dc-5773-4c9c-bf2d-ef5ddeb1c688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51059bba-f8bb-4221-92a7-57ef44e34c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616cad92-d228-47c1-a468-108e45215306",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec27c6b-846b-407e-aef9-6869eed866dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1be1337-f34b-4f2b-a945-5ab03ed56270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd47d19-5e32-4980-a57d-3b41feacd42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "088218c1-4763-4383-a977-8b550395f7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceef2336-b468-43ce-a7ee-41e0b1866198",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7358b4-9220-43cb-afd8-71b90f3e3229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43cbc15b-2f6c-46a1-912b-b2da11f0f135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f04b15-cd1a-499a-a131-d2fe54a198f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4eefd91-0dab-4749-b307-cc66b9791ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c203e5-09cb-4e94-bee2-5af059a4fcd1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17caf3e6-ac0f-425c-9d75-a27db4303028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd63d288-1740-4bcc-a871-0b8c4f0d5cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76aa7f70-bf3b-4fa2-913f-a3bfa0498bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca11764a-c399-404b-873b-520df0453eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeaad64e-29f4-45ba-9b1e-508e6acdf65d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6706083-64d2-4e51-8fd5-6578c487bae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9ca236-8f97-4ded-8f51-5d7ac9d68d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813642eb-1512-454f-9bf9-316a4351d92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fddc5266-752c-45d4-a31d-8cd8eda802a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b05a05-2844-4223-8667-4a1addbbe679",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324bbdc7-c3b2-42b2-8319-beec0c18b77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d7cfc0-4c2d-4494-8cbb-9c5835228bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1be38b5-3332-46ca-a37b-9cd811ecc894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "263a41d8-fb5a-49f3-bae7-3453a960eeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7074629-9f85-443c-8d3c-123fac60272d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edb2297-4af8-48b2-b580-10136ae05f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5980eb00-d6da-43fc-991b-0c6994dda9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3065cd-b92c-4941-86d8-7a923dce43b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9a588f-3d49-44e0-8516-3ca922737832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688610c7-39bd-4099-8126-97368b6d7751",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbddc7ea-d07c-49d2-a32d-d6cd912eda81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5c47d4-54fe-4007-966b-9d8f2c064620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a4c269-b52f-4204-bc1b-7457bcb349d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5da6f5-1d4e-444a-b1ca-c5306b3b0405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d154bb9f-0fb2-4221-aef8-565a9b9ff574",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9bf402-6778-4e31-bed2-1deb85cee1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6134e4ad-6db3-4cbe-95e2-705feb59aac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d024bf6-f6a2-4945-9dbc-675c9a90047b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20a0d321-ba08-4b0a-8dba-9d363363ea5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261974f0-3d34-40d1-954a-885809cd584d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7e2100-cc2d-4f20-9874-8d3cca8c2b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e379ffb-04e8-499c-8764-9e571a92670d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab001cd7-de0b-4ca5-889d-b1465100a6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff5e72b-bf64-4064-b41a-ee686bf2fdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a596eeda-f66e-4303-afd1-bf81edda0670",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47af426e-7e16-4f0c-a25a-ec26d1592a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50200ad5-723d-4857-a54f-42bc9f80cbed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92031843-f170-432f-85f3-fccc95f1aac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "797fe04d-51d6-4d6e-8eef-23578ff93081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02de35ce-c16a-4f41-b27f-47ab560ed8ef",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9f8044-ad09-4cef-b069-ef75f20f5911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d48a97-7eed-4992-a9b7-b09aef6a3e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3abff8-4e4b-4c95-bfbb-84a7822cb3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "045bf3df-c10e-4c9a-af3d-f33a466c4997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0534ced1-a0ca-4be4-8b46-314d3215cc70",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd810bb-49a0-4ee5-89f3-22606dfe2c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a29310d-78ad-4fcd-9aa2-495f317b9c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e8f0ad-986a-4c46-b88d-aee2bdc77ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57c3d40c-faf7-4367-9276-17297d7eb308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0e7d07-e4fb-49f9-83f5-e963ab52d3a0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bd592f-bf7d-4cec-a85c-bf2efa7fd832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5ae9a4-2c8a-4472-987d-98ca8da36a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570d0555-8509-4ebe-9dbb-185e0d2f28d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6186ae-9dac-472a-bbfe-609a0c15e7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d78f161-ebc1-449e-81ab-f95f4adbf295",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7164048-f5f0-4c75-8c68-b753cbda8878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57598300-ff11-48a2-a00b-c4496405d7bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929677db-137a-47eb-9ef9-171ce423e3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e18172f7-4bec-4b1a-a040-0847af1ff178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508c1318-9cd6-44f8-85d0-56911f3ec0ad",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99667149-5b33-47a8-8fb5-41c28f63b653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7642ae33-78e6-467b-8a0c-360ae5729fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611fb044-4bca-4a67-9321-1fac89019d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d72c39-ba21-4e0e-9c3f-d70c8e8f5d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d9478b-777d-4ba6-9790-9fb181a21319",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c873a12e-c4fd-4f47-8d4e-cbef8fe1b0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05235120-f158-44e0-87b0-2f374643b363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fd356a-011e-4caa-8318-b92fb1e63ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "efeb90c1-7a55-4144-9215-0d0119a22d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30129856-d932-4adf-b4a0-75ed4829882e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8457a2-f1b6-4005-bd75-481f2b377f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f235284e-f8f9-436f-b0d4-0ac45d3238c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e355335-4666-4c16-b3e5-9f7d579b044b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "19248189-ae20-4d27-b792-73580d545177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddebe624-4e38-4c4c-b130-a738931c032b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9df6f26-953d-4783-adbd-d786a3c4f40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5bbe3af-2f11-41d4-a6d5-0d26af760cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cf3495-e0fd-4d6c-a328-dabc277c09d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd452c9-c61c-415b-aadd-7e33a4c16bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cdb850-bb9a-4d11-808e-68c5a8e029e4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9c7217-3db0-455d-82c5-84e1f1725a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e39c89-b1e1-4d8b-84a6-e71fe0fdc154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32934d1b-a55b-423a-9f09-42382db6cc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd3daa0-a64c-4a63-ad18-e331f76b585b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d03c8f-c15d-478d-832a-59b0d209f058",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb40e03-78b5-4fe2-905e-c5c19c3f05ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa40d90f-d1bb-4fea-92e0-b8775e583964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59867bf2-31a7-4755-ab13-e730dae85240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d6d4d7-e57f-4043-82af-210d904f52c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2584d845-5f26-40ef-9147-689595759205",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1604516-96d5-4a92-9b66-f2ec0ed73ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44620712-4f54-45d8-81ed-7a7c661d3143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d69244-0a6d-4fce-9175-747d57148fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e49972-3c5b-4da1-83fa-1df1b9fca9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba16da7-bc93-4149-9196-aa225b07354e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242dccf8-db5d-4671-b98d-1f8b9f3777ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bbf365a-174a-49cd-b839-c0fb60a3f5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a255dd4b-c74a-4ff5-af95-bbaa7cbac4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f83ff68-eb57-4b66-b386-c43eed2543fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cececd-fd9c-4969-9374-82a00a857e31",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4678c9d3-c10d-4cd6-aca0-a5a2251fdb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14297fd3-c740-45fa-8895-352b4f8d1118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ba8814-edb7-4f58-b4fa-fb1442959d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd50792-1105-4a2c-881f-53023a379abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef488cca-ac0a-4eb2-875b-adf922b3a6d3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113be5b0-a3b5-4b59-a68b-f0ec6418fdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01900ef2-6f13-4bfc-b744-87ca9537c350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a553d01e-d3b9-495a-8728-eeb96070280e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f19a9e4-e8ae-4284-8e4d-cabed820d556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923ed3be-3a0d-47cd-b077-f18da381fedc",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ad94e4-91e2-48be-831e-2246215fd8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e6a05c-1c9a-4283-893a-df4a7adb5281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8875a723-ffdd-49ae-a73d-0b74f99e5943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "788d4007-ef72-4e80-b986-ab3a9913440b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cf86f7-a304-469b-9d87-3e67a2bef0b1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eab9424-b391-48b3-96e7-aafa96ce14cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f244185b-1d1d-40e2-b851-351db5b704e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3679f997-114e-4738-a49b-91a0c3266ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43336474-96eb-4974-ac52-0b94a9fe4f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bd8901-2c97-4542-8580-fec0499e0067",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb521b2f-d15c-4f79-ab4d-13fc1cfe8393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac8a7b9-109d-48e7-9db2-7d5abe6a5bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5c0319-4c3f-4b74-ad97-386f8f1d4a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91367619-4635-4e71-85e9-d87915e0b23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2119cc47-7335-46b9-92b7-faf1fc473f39",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f32e5af-26ca-42c9-9744-e027eacaf9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21e2f92-d973-422d-98b7-3494f078a3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2874be-aa94-4d2c-a71e-dd265b2d3a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3fdec5-38f7-42d6-8a4f-a9abcdb05fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df335e03-a19b-4dd1-9888-6e9e7406f194",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c5dfcb-d072-4a4a-80ae-4d78ea1ada36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4216650-0ca0-4733-8e01-a6d35cd54eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ba26ac-0953-4119-aaf7-557279848d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27e8b7a6-f8af-4aa7-9e7c-79306548bcba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19538a5f-6d85-4b8d-9984-1532fad83609",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf33af0-49b1-4dd5-aa88-3c72c5d72887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcbe2d61-e61a-4b1c-97a4-8e14133477a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cba07c-016b-4906-a7bb-5c28b1450f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f08ead5-15b6-4ddf-92fb-3155962f4fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52447e4c-17d4-487b-b07a-fc0df5cf2a14",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8c20f3-f894-46f3-ba68-5f3720653646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15ca7be-5326-4dd7-a8e2-cafcb613c99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ca74d9-8dfd-46b9-8170-9477e1a304c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3381ae4-0e70-47d4-9ef5-41f757847fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d454140-57c0-4d21-89ff-e1c6cde94b3a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a468b3f-789d-4afc-a6ba-a362c25a540f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "459fdd01-71cf-4e9b-a62d-4259b4b06048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0225f1-8f79-4c1f-873d-0f8c80edae38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "972fa744-55c1-438d-9539-43e58be8c64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de39b92-c8e9-42dc-954f-59c1761534a0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81e8514-b7c2-4b79-ba7f-eb0afbef5f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ac0e9c-513d-4a85-9ff4-1c219b905597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8099d3-32bb-40ea-8c37-67aa7aeb883e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc8f645-094b-4ed3-9f36-7da289346ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4903f194-9f5c-4f4c-8961-ac230fbdc035",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f2933e-ae32-4742-b393-781a6d568d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e77a6e6-f90c-4067-b23f-abfaaed48c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0c3201-7f86-4086-8ac2-096056475002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5de5d9b-b47d-42c8-8eff-35e3bb845bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a7f48e-7827-494e-9a6f-492b0d8dfd98",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303fd47e-2cd4-406a-ba94-2889f3d1a509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f696c2d3-caf8-4253-8e41-e4e1ce92dab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dad6459-c260-4039-9504-481ebdd577e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8450846e-8de9-43c6-ad9b-ca2a3e084c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1264d708-d352-40a7-a7a3-396b6a208621",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b735302-df8d-4ff5-b7aa-2a5ce105faa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8630c35-afbc-4855-b4b5-687f5a791f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aada522-855a-400f-b0dc-bceb0e06d807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "97d9d34c-e55a-4dd0-968c-4f58efe755b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b81205-7dd5-4d97-b70d-ef55054d9b55",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea1f3b5-6a3f-4696-94c8-a5ff4b986460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4904523a-afc8-47fa-b332-7b63c1f252dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e9bff6-5bcf-462a-ba13-2b53eaa23812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8276a087-feb5-4036-a0be-1be8aff9a8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0b863a-948c-433a-a1b1-21c081e3a608",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c110ccf-a18d-4f6e-a23b-42f0cd00e120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40fa4ed-281e-4a7d-961b-7e4e4e7df239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01b1256-0f7d-44cc-9515-027c59d97856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d03e3923-c584-425c-b6bf-fdf9887279de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5b1726-2f80-4f2b-b009-0f3bc35eaf0a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76bc1c6-c035-487e-931f-f198e6457e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4c823f-3756-4459-8432-e9101ddc51f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72befd6c-e038-4d44-8aaf-cf5fdf87e861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8354af-7bc7-42c1-96f5-ece4be6712eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9034bc3b-bfba-48cc-865d-76789917f638",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fad2376-6a38-40e9-8b6b-c44b51c27ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e65fc1-e171-4a24-b658-8fe8f8c63d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e122884c-07cf-4c73-8040-2f05a96e01a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "18098e0f-2aa9-4299-aedf-2435415dbd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5406b379-dbd3-4d9c-b70e-b758c717b27d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2715642c-da96-4235-b0e3-ee9d4b1e99ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43bc5d6-d93b-4c8c-a9c8-72ffd73765b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ccf48c-302a-4817-a47e-3f213dd37494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bd5c75-9d56-4aa2-83ff-71f9cdfe7caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9e2ff3-8022-4ba0-93b2-2251ee4dcf2b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6232eee-64b2-4a47-88e2-fbcb1a0407a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5afa355c-cf15-472e-b767-71e0a47e8ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af67e37d-ca7f-49f1-b740-3d26904e55d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "091d1740-4408-431b-b6bf-7a7abbc4283c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0f48e2-b1da-4d00-9db3-d7f9cc63ca38",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c45f782-c590-4636-a968-ef23bb5ecb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993fa3f1-a3a8-4325-92ae-370c696c3a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbc5b7d-3985-4ccf-a866-b52c9dc91056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d01240-12bc-40df-af0c-8ddd6006bfe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36587106-3e94-4026-bdd2-0d8354e8e85c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7bd80a-43b8-4fbf-9c56-f4766ed197b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc693d7e-0b0b-4731-a90c-e59070037c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e04484-fe3e-47b9-a61c-6706a7b53bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "445293f6-aca6-4e09-8e24-4a9db0a15a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3c66f8-185c-4370-b742-adf2b04b3716",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db467dff-cfd2-4112-a39f-cd8d8759f9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f7d806-ca7c-4b0a-938c-5172070975a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aad67a6-a40b-4bd6-b06b-a8ff6aed8eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1097b2c4-113c-4f2c-82df-5d24a8b71d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91dd0d2d-22ac-481b-9f3b-da879afe39af",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ca17f5-bc00-4700-afa3-65c3c8faf793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f04ab1-c2cb-45e3-b3f0-6c7101cd9589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634b70e4-8915-450f-bdfa-6a4f68a8793c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "421a93bb-536c-4058-84e5-23debb5de78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a66e1e2-63de-4795-ad8c-c993390dfd7d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04dfca9-41f4-4c22-ad17-ba186b34b575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfca997a-fb83-4a62-8215-09caa574c9f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2eaa115-a675-41d7-bbc9-e71087dc2ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ac53ee-6c34-4bdf-af16-69ae332ac579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef1e43c-558f-40a0-b5ca-dfc7b4109cb8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6001bbf0-5623-46bb-b5f2-d175d89158da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577526a9-8a6a-4bb9-8c77-0a4fea53a0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517e0ba6-9e41-406c-9199-ecc96c8ce8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "19602e53-f26a-4593-bb26-efde1c3817eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3795880e-9172-420f-a43c-b0421bd49787",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6868df-fb60-43fe-bbb7-6c868359b792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce1b743-1e9e-4c0e-876b-b2fa89e514db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e22542-be96-432c-8247-615909a65119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44f07fa2-516d-487e-8d4f-0db29f5d63c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812310a0-e519-4b6b-a709-17645fd0a9d0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec5bded-79ef-465b-96c2-8ce85189241d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2776988f-5d58-4590-be2d-26f78c4ee5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9282bc-8e83-4b41-9785-0e67b26e6ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c51dbcbc-1c42-4c98-8e06-8d05fba573fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da183efc-1cac-4c0f-af0b-661117126d79",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c6e703-6036-41ba-88f8-0fd8004080e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3963b02a-0e3f-4d58-bfba-05579c72dfae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad98734-5834-4a9c-a8cc-0a0b73f1eab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "502bf46c-2b51-494f-907c-c3941a67b518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f041fe63-db29-488d-aa78-dd3dea1dd65e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a971d3-ed55-4dac-9916-be5767c112f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6626b2-d157-488d-bb97-6314ad1b8d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddde09c2-fcf0-4ab1-9b58-bec8b2386be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c64fb91d-5e55-4e15-9c13-6f5267e8a0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940813b6-6963-4263-ac0e-368a461ebc08",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a9212a-64cc-41be-8d36-c53f38ec26ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855798b7-6afc-4884-a51d-386c751d12c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4e3ae8-3c85-432d-864c-b8d6021b0d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "714ecef3-0ea0-40b9-8971-4019dd068d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3c340d-501e-421d-ac7e-56b6b3c6f59c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1ce4e7-ccfc-4da1-ba40-70aaff092d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95575936-ec4a-4c5f-89b6-f62b11741633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d08470-eef9-4b1b-85ed-3fe32abdd918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aff878b4-9b96-4e53-aa76-5dd8d1da17d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267b5ee1-2186-43b9-bc94-fbc006da28f0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7de6f0-cd33-48e0-b2da-bb5dd413a94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52aa8c3-2133-4a3a-82ef-aa838a26ab38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37193676-03a3-4e4c-8dce-11151c265706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a608277b-86c3-4d65-a506-3bbb0678fc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20788bb-4ea4-4d78-9353-432ff7477e40",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8b773a-1458-415b-812a-70a5223766ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec174e4e-4f68-4e49-8b76-dc1f7d6b6785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc4b6db-279b-4b99-ad89-8b678cac13ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a1d3fb3-7d48-4b39-835c-41967f611ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69030acf-1c33-4efb-9a05-fa8c59be7b4c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5098f4ac-3f86-4b8c-a767-d36ef244d7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375f4613-c01e-423e-8228-9aaf69900483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecfbd70-3221-4b58-a37f-3284a3b33e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6daa3e0-aa4b-446e-8143-a319ad678dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63177801-d854-4f90-890f-24a7d9596243",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0c4d95-a50c-4c66-94a6-8ed9d02bfcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3a2f28-10f9-47be-974f-2d1e75ff4d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6430bfe4-014c-4951-8a70-de0da078f940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "083d2f48-c39b-4678-9f61-43baeb33c86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b412b27-71e7-4cba-96b6-f39ebee33224",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad7d5a8-7573-48cf-a129-35b7c5586d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb4d5de-51bc-4094-b214-211506ab5b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7458eed-e062-46d1-9ab3-0b7bd26886e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1d00ee-25fc-49b0-b028-f1cd0622544f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6fee9b-c415-44ad-b4bf-9c6f2ebd0eae",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d789bd89-40e7-4001-a585-b32dfb79ad34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b2e604-c98b-458d-aa2a-5bb836d4243f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4456f5-51da-46fe-a784-9566a7ef40f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab934f8-8289-4063-9c49-50a6b0395534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c49977f-27c1-4d08-ad52-4dfe9ab1ac22",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ebf98b-06e5-42e4-b190-40dc80bddb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa104af-0bcf-4971-b93b-0e0738857819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62c9035-f17c-4cb0-91b0-bcaa9f5ff31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a98ee473-5f56-43b9-8e7f-a72ba077f629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bf7d8c-1919-4d3b-8293-a55ae5a5adf4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b06e453-0ffd-428b-af8a-cd3211172362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1998f8b-e023-4472-ab69-a3dce37ebf38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3e4d3d-5bef-467a-9f8f-9420dd4f00b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48a4b87e-e9d0-4ed7-9edb-f02082b043bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524f1045-8673-4f82-9b50-8dc6653e3fe0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcea9e3d-90d1-4048-9e96-93c1c6213db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa4fdec-56ad-4334-b514-200bc34ab3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cfdd86-1be3-45aa-a143-e68d5dd15086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad24a5b9-c682-465e-aa1d-962d195bf169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8978fd-4484-4259-8ff1-15e6889f63f3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd691d4b-f05a-4208-a1c1-a06275c76c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ce310c-9d83-476e-a245-cb3b1db178de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f89b0d-1aa1-4c2e-ac86-cd9d1d11aff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4448da02-dc00-474a-97c1-07c57fa4b0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d739e8-8a5e-43e2-b40e-890f58210e23",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b217d117-1829-42c4-823b-ac64cbbdff1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99a501e-83e7-4b94-b082-7894727593ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2256b5a-aa63-414d-95d0-036c62ac2789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cba364d-1da2-4ad4-a68e-5b6f85de6ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35770d40-fa85-40da-a529-57f2f52c771a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2e5ed8-ff48-46a9-ac74-db9377c8f1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7885cc8d-f4f4-448d-844a-ff3bcd9851dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5ee071-0245-4d79-b750-acf462990d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6ede3c-e079-4b90-a73f-22ac3a6781fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f048a9ba-be8f-497a-a197-b984981d794e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5beca6-f27a-4d6e-be03-2052c44f2035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d81c34-eda7-480c-8ba3-dafc82501c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85635bd-ac78-4d13-b6c9-8dad5be229bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d53575a1-9e18-4a3a-9bcf-091bb8a7413f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61a3197-1b2f-40e1-9973-e8ee25798ed7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a02fdd1-a4e5-4e9e-a279-b25e238ba3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cb0691-9eb9-4851-9223-9c79d21f3823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3d6c28-4da7-4c4a-99e7-805e01a43eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd147fee-6b48-46a3-97e1-beaab05ca497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158150b6-b9e8-4664-a844-3ea2122b9c7a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8690cb4d-1253-4f6a-a14c-cecac253ad07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8eb446-22e2-4b89-9aca-bfaf5bdff682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0631b6-c501-4da2-b4e8-30fa4924ed75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "35383a79-8f1b-439e-9a87-a10ece2b5896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6e5a80-9fe6-4c6d-9dd5-8caa7151bb47",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b935670-9aaa-4cef-9ac8-10edd81cfbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49683a6d-8e95-4615-abcd-a06b165fc308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712546a4-6248-48ce-a2d5-b969f9dd031e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4bb392-1f3c-42f9-a819-866ded1b6ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d06cb0-fe02-4fba-bb76-b41315e10de1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeae1881-de76-4c51-a462-0993889c20d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d985c155-d2f9-4dee-93a7-71513f9fd1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535161cc-1217-4f4d-aee2-d88063c438a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a97f00c4-cb0a-4207-a322-54dbd78a255a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b8d2519f-e462-431a-a89f-7a3bbc4cf962",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b222f38f-e8a1-4671-966a-15b0f0b7c8ca",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bd3b71-c864-434a-8d37-fe9b5df93515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5062eefa-f316-4163-8bb5-3fe9fa799787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d61108c-6ee2-41df-8719-96fbaa7fd998",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "51f53edc-c982-45a6-a7cd-08347d010799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad568812-3cc4-4942-9a4c-786f418daa9b",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bb9777-9ad1-4c10-b0a5-7ac6ff4f1e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1d1436c-75d9-4fab-8de1-ebd8d7fd707b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18465486-e7e7-43a3-bcfd-1e2afcd965f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "53a070f0-7cd2-47ce-a530-b2eaad840ccd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43128a67-4385-4305-b6c4-4404067cef89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22ea5128-5377-4c77-9fd0-f4b6f3fb7090"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50219bea-cd90-4996-82a6-d799f39a1e88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e401bcf-e88c-4dae-b22e-48108e9075f2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14e481e5-1357-4d03-a203-a9956321fd3f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8cc81ed9-e1d6-44e5-abab-e6b4eb0d62be"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "15cf6161-2ee6-4406-ba32-55b0fce57c1b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c2721c3-e85e-451d-9262-1881946ccecf"
                }
              }
            ]
          },
          {
            "id": "fe374330-40b4-4097-8fd3-f025615e47cc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3cddbfb0-8da6-42d9-bbe9-aa0f8c01d87d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3440757-88f3-4ccc-b982-ed35521f7bc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a94988fa-d5d1-4cdd-98ea-6b2fd5192e39"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a96d2f5-bc48-4571-b228-b066b6681173",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "14e00a85-1e24-494d-bc2b-eacd222cc44d"
                    }
                  }
                ]
              },
              {
                "id": "b3520d1d-0bb5-4882-b784-53a0662259ac",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5560f5b-7dc9-4512-b9d6-e456ce2bcba2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c5f9d35-26d9-41b5-a72d-fea293f3d86b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b84ee843-ff1c-4517-8fd4-b9c1f0bf9276",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "25f3830c-0af2-42b1-bca6-28b13fa4c909"
                    }
                  }
                ]
              },
              {
                "id": "ae77ab4b-2d74-4cc6-8fe9-cb86fca47bf1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f888ee77-78ce-4d8a-90e0-87ee7efd6099",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5115ed10-010e-451a-88e5-1a64e97d7b3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b81bf6f-3334-4113-9fa6-4f41e2989a30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e4233041-1b7c-4833-84db-c2ad7ac1c4a2"
                    }
                  }
                ]
              },
              {
                "id": "0fdf3126-a605-4659-b3a2-75ac515ab366",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4df5d5e2-ef77-41a9-8402-469a0bfa01ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84c571a3-58cd-4a74-b3fa-111cae28a26e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ced2bfe-36a6-4bef-b032-916d57d718f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e0befeae-f0a0-4a62-84cb-07e650baf59e"
                    }
                  }
                ]
              },
              {
                "id": "e9f9495a-d544-4c08-bec4-819eebb4643e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "905e55fd-b269-4deb-907a-739220783db4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6e74fbc-3b42-4fba-baa8-623897e30cfe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d063cf4-5ee8-4a54-a755-a97a3eb5e55b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa7beca1-13d4-4936-ab34-a5eb1793d8e3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f14b773f-f23c-42a0-9577-a029af7a2d94",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a5a9b549-6d86-4ad3-b1d5-550d46a1996a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "db0b427c-18a5-452a-93a6-8174b6c3ea89",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78d6c089-e582-4be0-b1fc-16442b0c4f4e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eef2a909-16c4-4c66-8df2-9a8f6ec0d98a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7179ed3c-add4-4afb-be78-da481ea9a35e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "296758a6-fbe2-4e90-bdbb-bbaf1292cc5f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e72d39f-3714-4af7-94ed-e4855de24eb2"
            }
          }
        ]
      },
      {
        "id": "5c008425-55dd-43ec-b2d2-397a0a39c616",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cf18d651-36af-4c54-8370-d8b9a2c5838d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f17416c1-f5c6-4f7e-b5bf-1be99a12357b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b6821c77-f479-4e7c-a1ce-d8b7f825bc65",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e1a86c-37f6-4b5d-9256-bfe180bb1c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb37f1cc-9cf1-432e-8d81-e8a6bfc25bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7a0ac3-3ce1-4d11-a52b-8ec2ed4cafec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5d388a-afa4-438a-bd62-a11c9ba093ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d10b46-32dd-4ee2-83b1-ec145d8a8540",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e42ff2-8c43-4c72-bb3e-f2bc5cb9f9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c58d25f1-268d-4579-8731-a7928ac10cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f21f86-aee7-4887-bed4-6005b02622ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "730dc50e-bdbb-42dc-95cf-fa7dfe0ded44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbdb5d7-b02b-4419-801c-7087e3741685",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dba6c71-24aa-46dc-9986-4dcdd745f4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225d01b4-e91f-4af2-bf7d-9ec1efbc58c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f615c007-1eef-4ea1-a186-179ec277bd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bbfdd3b-55fe-46ac-af08-2e8d2c577024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c7bb4d-195c-4fa1-a8dd-27a7e605c7fa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56e2cae-be2b-4741-ac1b-1479533e5cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7b1e53-96dd-45fa-a0b0-03c8ca7eca23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e654699-bfc3-4a88-9d0c-ba77364e6399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb9364d-1384-494f-a362-a5180e896369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b037dcc-9688-49e0-b9e3-05ace0d4eb0c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d408a924-863b-4fcd-a790-67fd589d53d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc284ed1-22e8-4c6e-804d-31559fec5006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9831de-3072-4422-98f8-a279cbbfcf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b02e1b7d-c77a-40bf-9f08-9568c3e3e573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a101084f-d813-4271-a632-1be1346bf479",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed772e1d-964c-45fa-82b8-d8f6dd5bb86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a001a71-80d8-461f-a838-81828effc446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12adc80b-f052-41e8-8f1d-1bc9efbd9187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "795c8953-bae0-4fb8-9983-886124a41ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e2b343-58ba-47e9-8b74-42c494890c1c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f23dcb-835e-4d38-8eaf-d946eb851ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2faf5a44-f847-4061-85d0-b223bbc88271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d252176-0c00-45a4-91d1-6ed5a481494e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c090897-1fc7-4147-aff6-b314e00b707a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d66995c-1def-4228-a57d-b5249504d49b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158da0f7-7e24-4ff2-b1d6-afefd4eb663f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053127df-9686-40e8-b51e-49f0cfb7bd46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8c2554-97b1-47e6-a3dd-80ca20d0341a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01abd643-8052-4811-a7b3-916289eabe91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632c6c7f-37a7-46ed-8715-ed067e8a74e8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9cfe24-0e45-4a92-98f0-3e49b50717db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5ec82c-56e1-450b-ac14-c046e411ffcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b74c4e1-29f6-4a52-a400-8602f3a3548a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95def0c4-9936-4a79-afcc-c32fbd5f7500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d31a0b-735d-4829-94fe-a928b3e7a325",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a6c0ba-e2f2-474e-99f3-85d6cac00718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5667ede-c81f-4786-acc8-16ba5957451a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d42113-1730-4789-810c-90b2713f3329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78b57d78-982a-4d74-b0f0-2a871bd974b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349333b4-23ba-48b9-9b9a-86c724d96eda",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2d6b86-1539-46d9-9ea9-eb17793a91e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed47c64-2970-45f3-a2ca-fa5dd80dcb3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c6aa94-9631-417d-8eb0-8e1a2aadb2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "78fe7552-5f05-445d-9792-2f7a91bc9866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acfade0-19e2-4cca-b66f-f8e583808e0c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66363e88-00d4-4032-8637-4dac0206c9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d27669b-6f6b-4009-9f49-a38a1643ecff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0991a4-90b2-4e5b-8c51-ec24926ed8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13824ce8-0c5c-401a-8420-ace226f138ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de38f4e7-eef2-416b-9177-d7e4460b2284",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666b4204-ab90-447f-97ca-c1d816d28eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d970bb8-c41b-4f2d-b18e-f09b87913013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750726f7-bf49-4d59-8239-a58193d167e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1037a02f-daed-4710-b775-fbb337277404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac18ba98-cea1-4134-aea0-df27e91f73c0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f224c4-e889-4275-b81a-7eea0aaaa219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba9aa85-1384-43ef-bcb1-2f30b64d58df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c77955a-5172-4b60-9070-b1e4ddd686e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a80306b-4314-4f68-a060-1bb0ed1bcb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9a0727-a040-4233-962e-6be1871982ad",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a33988-5ec8-4c22-a940-da5f15ac81a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b7a5aa-b5ab-43c7-8f68-e242bde25a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78c0675-8483-41ac-ac72-14fcf9231a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c94c4bcc-3ee3-4ded-9b1b-ef9bc12471aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8dbfaa-a795-4104-a30d-29e24bae1795",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ade7eb7-5405-4e3e-acbf-e692cb4312cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f8e2a6-cb52-46f3-9fe0-8f6aa101cda7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e086ef8-2aa4-44be-9ce5-2e83f45b99c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4495c6-ba89-474e-bc62-45705c7dcd0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6713cc-ccb3-4781-9830-8aa8e567f5b0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1483983f-735d-44ff-9b10-6d15e186291a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c629b3-57bc-497f-b00a-2447a8d38a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c010d0-d971-458d-af38-975d24a2f4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "125ccd8e-f329-4e21-b38b-35609d76d821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d386a9-8f50-471a-af2a-3d125cc75f12",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af45bfe-539c-4935-9d4d-a404a8e017df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dffa5fd-0a79-4dad-b232-11e5e6cfd4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb44b54-d415-42b4-af36-45269be2f987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e50598-74b5-4209-973f-39e5dc4603ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda7a762-43ef-4782-8ee8-c279c8ebb6c5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2ed8fe-9f58-4327-8272-61c903d0b462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26251ee0-6eb6-4198-b24c-d892dee1407f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824c6496-8e99-4a66-a266-bc619987fbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eef5d65-c855-49a5-872c-22f6cf920dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad362a87-955f-435c-b711-d099412407e8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461e953d-ba02-4f8b-b4ac-445aec280458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87db4e44-34dc-4945-a695-e1b031e23d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791d886a-4a74-4150-b30c-c1e4a23f2e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8580d8d6-308d-463b-b32d-017d6c2667e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18085726-ae44-43b9-ad23-b1ca8339ceb0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af67815d-d45c-4815-a0fe-cb43405906a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e89003-76b0-4e6d-b623-d2d5f6e8c813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdb1811-a3c5-4555-9981-c596cf8b61e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcdc694b-8c5a-4011-bd90-6360e8adabce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61674965-53b0-4f7b-bb68-d4d0cb3602f4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c21fb50-250c-41d5-a78c-a8d568b10371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e57caf-2dd8-4694-b19f-f159b0d1caff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edd0c47-76b4-454d-af85-dd2f4ff83d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82e2cb83-74e8-410c-9745-cdd93b9146e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f94aef-5b1f-4f25-b6c9-b48ed3d6d408",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1cb456-d096-4c1e-971e-846c426700a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb351e66-5d64-492e-9de0-afced52524cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0656ced9-cd43-4652-b075-e07610674e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b055bd6-a3e5-420d-9ae6-b06b43d36c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d9bc71-1a7d-4314-b577-ff858481799d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541a7cb3-7523-4db2-b4f6-ecebe330af58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bddaba3-efaa-415e-9568-92831a4994cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7980cf2-7196-4b18-9c9c-fc0092796f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83d4fe52-e499-4b70-a911-ead77dd91e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dc8666-2afb-4456-8ab4-8f567bda347b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac2c343-f00c-45a7-8c05-c69c0c75cc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979270c4-668a-4e31-bcbb-bc47f70db33b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042bb22f-b648-42e3-8dbe-c1138cf46822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f944120f-87cf-44f2-acda-850c2e67273e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44737a0-ad4e-4c56-af2a-c4a672b36a6e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f663572-3f5e-4636-b4db-eb3127185403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18434643-1770-41b3-8f08-50c33299ab3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedc88fb-e1d6-4fc5-a16c-dbec6efa0554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53689085-1423-4d09-8333-da85d7268f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e98e21-8058-4747-be35-a3328e34fa03",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc48392-0fc4-4ca7-b1b9-30d3a93d08ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67715e9e-a7ae-48c5-97de-057141be7ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329c4c0c-17a6-4e91-aee0-7ad0966ee4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7828cd8-1912-4d3c-bbc1-e23f9545e5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8759f339-a5ba-461d-9f69-27b014ef04bd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9458836e-a9ae-4bd7-9679-aaf733b925da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4bf916e-a4e1-4cc5-a525-f7757282a6dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112ca52a-9a44-4555-af4f-8d498fa204a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ecfd562-544f-445d-ae40-339ac5503396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f41714-e73e-4d8e-910c-cde96e9cd993",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1d38ab-52f5-41a7-bf9f-ae6a02f681a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d1d3af-6802-44ff-8b11-6db19f16b405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c78d9e-036c-40a2-ae4a-d228562353f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6b1440-a1a7-4afc-98c2-49c022d7d7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3db6e89-2824-48fd-a98a-4aad5adeff0e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765534bd-802c-486d-8456-c02c1b0b2a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4058f127-e75a-4f85-9c2a-de13fdcdc578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c01e9a8-b596-4d99-b6bd-b1010b41b8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb68572-fa9f-4b8d-9821-2156192cb299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a49d65-a5ae-4723-a6be-02db026944f8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5ed20b-6f0c-4001-ac6c-013df12db96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e91c14c4-e778-4b9f-8578-1f4ed04c98c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df0f392-093c-408b-b94e-86f7ade080fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e3554bf-7f10-45a9-9d24-12e2647005fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac41bb09-301a-4d8a-816c-4feeb16b49cc",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46beb879-00e2-48bd-9972-46bb643f1f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840a384f-77a6-4350-9957-3894e90a106e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d519d3c-fb89-4891-a79b-7b94ec6c63e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94155ba3-a327-4980-8268-23ac8fe23445"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aa138289-b9c6-48f6-9d67-b09e5b257e19",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ed922aa-feae-4293-a58d-8e1b9b17cd65",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6253f9a7-bc65-4b4c-9e48-10e183ae838c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0349d6b-c2de-4b87-874b-4b031dd2e717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "733d49c3-9676-4f97-b78c-2cf6de1a19c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e30ed1ad-a489-461c-85c7-86406cd704c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd91b3d-0bb8-47b2-abd8-13d8f7f89073",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfcda594-3631-4422-bfa3-ed611eb4a5f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "c1af9e4b-9d7d-4477-b1d9-9cc047c65ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774a4fc5-a1f6-4e1b-ab5c-20834d1a2b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9063edcb-64d0-45d9-803f-b3a1f41ab571"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c89e14f5-dccf-46e7-af96-d398f4f49664",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db2af878-3150-49c5-880b-b15ed9506b8f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2c0811e-edbb-419e-b964-3724828987a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b34a427f-55e3-47a0-aad6-ebe7906ba2d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "593dde8a-9742-43b6-a74f-583ffe6edfb6",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0d073c9d-157b-49fd-8dff-8caa5e706a41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b50d05c4-c582-42cd-ae60-990db751d286",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7813b8d-4758-45c2-9741-be3dc9de84b8"
            }
          }
        ]
      },
      {
        "id": "a3493b96-37bf-40e1-b1e0-aa6d4bda3337",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1dee7be8-156f-4fbf-b31b-43a13c76ab01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9bc7a8af-4c11-4373-a5ff-3a8f66e1fb7d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d875190b-f3b2-4259-aa10-87bba24d00c2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5026f973-e3e8-4284-8856-73add86329f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb64e660-b018-41bb-88b7-aacae3367bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc232722-f469-4ef5-95ac-684e20bbf05e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4798b0dc-fe9b-454a-82f6-adfc8950b6d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfbc36f5-6c8c-49b5-8dcd-dc5375008ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfa29cf-6a64-4327-b5d3-2bf2b97e132f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edded3e-8ec0-4906-bb44-6968db0ad8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d4a653-d3a4-4026-b042-ecd1116cd5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45ed755-5b5e-4721-8132-d13880ed7590",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec94d5fe-10e2-4056-a2f6-266fc1ab5d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd68fd49-bff4-4e75-bdca-be587e4bf651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4910057-6bc3-4257-a7d6-025a8716fdc3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d18422-c313-4c54-9ec9-cfe25e9927af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b5b6c3-0c85-4f20-a6c6-a03d46e1d965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb1658a-f723-49b6-87d3-4c956e65bc93",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3487fbbb-1c70-4d64-8c75-1d681f951bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca2d4ab-6596-4e66-9902-411a98991750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743eeb95-d5c5-4547-809f-3a9a8a2f028e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3bf962-fe99-4ca9-b0b9-dd0ff556a950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a41b6f4-4d20-406b-897a-f3c147cc86c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedc24f2-074e-43e0-99de-7129d4d3b54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5342a7-ddf0-43b6-bd4d-4950716dacf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e92817-188d-46b5-877d-608d6cda4539",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac95b00-8264-45a1-855d-683c95c47c66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4375df95-b6a0-4765-b728-a09f1207a568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f5ba84-06b5-43c6-8c47-e14d6786c81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6df083-e1c2-4d9b-8141-65c9a65f10e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94ff977-f7ea-485f-aa8e-80cb7344b763",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ed00b0-c9e3-4cb0-97df-0b3082c8a222",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dc33886-fdd6-46b7-9caa-78a29bfe2c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d70b0a2-4822-4bf6-8f0e-ec37b128fbb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51eb5e82-abd8-4bc8-89e0-4b3e94019888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16af582c-f3b5-4a22-a7f9-6a633a32ab68",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be09f9f7-55b9-4703-b05c-a4d78e68d35f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e606d39-f7bc-47d6-ab6b-5c995c412ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350e1122-972d-4a19-8f16-edeb22282f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5550be40-b9cb-491c-9254-ea17259b73dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05dadb8-0786-4595-b916-6081d2d58635",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0eb0c4-60e0-453d-be4e-f9d6d24d6b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7d0b09-5d1b-46a1-b678-db239b83e699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e35e67c-d7c9-4f41-966b-c91991cfb9fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65015f7f-6b08-49c3-91ef-1753d34f2923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b26d7f6-df72-44dc-aeed-44ab7dffc3a8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6922c61b-9768-4fdf-b050-4f9da406b123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6a0322-fb6b-4dd1-9cd4-340e1bce950d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa18e50a-73b2-4a8c-907f-977d1d97c91d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c29da0-2f44-4ebe-a5a0-870c32149bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e7573f-2e21-4e47-838f-a9a350f76e1a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e416d9-38eb-4e41-95c8-6b05c45fc639",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "164f2d22-8996-498a-a200-553e8531fbc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11383994-03f4-4025-ba2b-1bd7ee2a6f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff298d9-a055-4763-a261-31b361885122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838284c6-7d9e-4d74-8c2d-ca40818bc5f5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12a2b75-d667-4862-9535-a0d6a81d919c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6758ed9-aaf4-43cc-91e1-6f11f6e1a09b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6594cc97-1d66-4fa7-8238-1cde166c0d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a2f7ba-59ac-4fc9-b487-291360c48ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab951196-0b1c-4fcb-853b-c8d1902359fd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa3d1ec-9530-42ff-acba-4413ea2f8227",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bddcd5a-bbe2-4293-99a2-bd7e569137fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acd3f18-5eda-46e9-bb95-a2b18fb60abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed2d31d-001f-4d7b-afcb-8e8dd24cb8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12f8891-8809-481b-b384-b5debbf297fb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e3e4e5-241a-4a22-a2ae-aaab384d8937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb417ad0-300d-49d9-8754-02b6801ca7bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b13bfd3-6547-42ed-b733-82850c36bd17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4158752f-6a41-485e-a4f5-fe02554f36cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f66e93d-57b0-4350-9961-624b75e60e5a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4909d21-27fd-478d-9e8e-287b1f318534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600a63f3-b704-44f6-ae95-2ac507c6f447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc971bf0-ab48-49f3-a79f-d6cd8d42898f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadccf3d-f81d-4e04-85ac-4741c5b8f381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e27a42e-ebfa-4979-acb2-3f6d8276b048",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f8f3e1-0df5-4ab1-8e2c-5b1f7a4a90bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05eef29-daae-4f94-b44f-9851b8047758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bb1394-89e2-4517-89c2-e5cc31526fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45023719-04a1-4cb0-8376-b2c4564b6bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a497bc86-5343-4980-a51d-00882d8bb3f3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d0f7cc-1cdd-4b99-b483-c6d4d370f975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33576ea-31a6-44de-836e-07737de57d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b18572-d8d0-4416-9dbb-d2251871b3a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952bc956-3890-44ce-a5d9-6aeecf7c485b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a88840a-5c14-4267-9417-c43aacc58153",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550e5e60-77a9-4a59-acf2-7769260f817a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a449b97c-89bc-4c95-8b8d-c5fe992feb66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71384ed9-a285-48cb-815b-47e819b38bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f34bf1-50a2-464e-b2de-e374697431e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419271f8-09a4-413d-8df8-000b2a3fa4f2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005bd7ff-eda5-4bf6-8fbe-9f7c84ce751b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d6c030-a44a-4408-8995-82b85924c539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd9c35a-192d-4b61-8a0b-0d29288548a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e1a5cd-bfb0-48a7-a551-b7da3d3c91a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d676a912-34c6-4ef1-bc13-6d57627cb29a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a28468-2e65-4bfb-b8ef-7352d7d68032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5c2efb-5459-473b-b4b8-f383be1b5647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5568874-71ec-412e-b566-1eb3f3bdad5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39208ed-b0d1-452f-ba18-81e511a5c761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83dc19b1-023d-416b-9f69-23bc657db900",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7472ba-9243-417d-9ae9-c0b79df9455c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17d3de9-7382-4d5e-a185-7e4bdc7b6437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13837f14-b9a2-4f0f-98c1-c852892664de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79422457-8272-43a7-af79-ca6bb2d88a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da68ee46-b597-4a98-ab3a-afb2ec64a2f4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac10108f-d1da-4ee7-839e-dc80ee580c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89bf0f24-42e2-413b-84e5-edf881425b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1edc37a-324e-4552-8a54-439e68131d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf746de-f7d2-46a1-ab8a-815790337926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf33f361-676a-4d14-bef7-b520e7bff264",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fb4959-8441-4211-9592-9cf3bcb8bace",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aba45fa-2ce1-402c-a2cf-4d0e4ddef543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7693dece-00e9-4e45-8455-917b09c915cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e015cf5-1b8e-4e3f-97f2-f65cfb646107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92132a0-c8de-4e66-a53f-be94b6c8c670",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d0c39a-0c1d-499b-b245-35b613bc127d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac0b79d5-9a66-4c2e-9bae-49ad6bd3eb89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974d4b6a-77cd-406b-951b-ea27f9679500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc6b4a7-73fb-4f4e-9008-390a0296f741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3cd0a5-79f9-487a-9e06-6a24425f148e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b6f846-2f68-410c-8e39-32f289750cf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfb4f225-caa4-4c80-8249-e288a895f271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "442023ca-e45e-446a-8f7a-348ce0fdd8e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189b8c1f-e29e-4d43-a689-9de30e8960e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5173d2-bba8-46d6-af10-9c669e2a7bec",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba62a2bb-0382-40d2-817c-eeccbf4b667c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db0ffff8-b315-474f-a93b-aeb7a495691d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd11cf7-bfc6-441e-baf1-8c98764e2d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ffa1e97-906d-4c0e-987a-5912ba531955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25541e3-7b80-490a-9e87-428a52fa37e7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84213ac-9b02-4174-a6f3-47c749b47046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005e170a-7ee3-4553-920e-d5320489ff01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c95d3a-b151-427d-b793-f2ab29c8c3a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66a6dc8-f169-4c75-97c3-a748959d8816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c759bd-ab84-43f7-a7dc-edfa67af794a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3737dba9-bac4-47d7-b831-2721835d7137",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "002fe2fc-f7a6-4368-bc63-ff02dd742e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "819b2d72-60fa-467e-8db1-0eaf05c809b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ed7098-cd1b-4f7e-8400-b0acfe78fff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b20dfd-a821-41f7-b619-6af1332b751d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f706f18e-b521-478e-98f8-00e01f7e07c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cb7e226-02f8-4c47-b13b-92b5fd64913c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "868e6864-18ed-49ae-8bbd-c222fd419362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4772804e-51c3-47e2-b833-4e3483ec50cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712b9bb5-9406-44d4-9d12-d7ac4e50e2be",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4c4b5c-8f82-456b-8a1f-073e4970b379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64380313-2ca2-4bdd-8fe9-dcd08d32d170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a226aed0-330c-40ef-8abf-1b876d7d796e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c008e954-3e7f-4b72-9378-9cd7f37721b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bacd45-9b90-437e-a5da-efffd3b86dbe",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838b936d-5fe4-479a-8798-339695440c05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "954887e2-e9e4-4af7-86e7-dbb70d2eff19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca148392-a8f6-48b2-8e86-f83cc3dc1afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35b34ed-0a10-497c-9b77-d20944507732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a302b7c-a863-4c88-8694-e8abb4d1f1e8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d97056-bcae-48e1-9377-3f05d83040de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04160253-78ed-41fa-b9d7-6cf5079dd1ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea15fff-8f96-457f-98b0-d7b60b96f6be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1370ae9-9c27-4b9c-8b0a-2c5d7cfcfedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a8d227-c4a9-4abb-8ffb-cb0762584eca",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9e41dc-61d2-460c-980b-16d6cecd553d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93d2de25-f3cc-411a-a89d-55849348a556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aadd529-4ffe-4a64-86e0-e3c919651895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d53021b-d05c-4b26-a39a-d726a6df2433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a6c8d0-ae70-4d65-92e9-a7a8e089ec37",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5845089-340f-4ebe-80ad-84cb60cd4288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8445e93-b49b-4080-862e-436f5a335abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed55625-afd9-47ee-a138-59946d7a31e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5324f97a-5bcc-4f4d-acdd-5b955c7a8a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d8c8c2-0a3f-4e18-a51d-b9a3abdf5328",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bb804e-2a45-4734-bec2-d6399c941450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d44ce0a-12c7-41bd-a5fa-d25bdfd1b010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4cd467-d2fc-4e50-99dd-534102f95ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36471eb4-bc59-4aa3-995f-fc8ad1a2fbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5c3579-3052-431e-80a4-c2b897c78e0b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2a7fb1-ac33-4e75-97d8-7082a0261a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bbaec84-d714-4035-bec9-9b806d8fd382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e35fde-63d7-49c5-9fa0-f33444a4d987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78011b73-8c8e-48a8-bad2-21e59b942cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c25b9b-de7b-4059-beff-781ce9b5fba2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ab861f-4d3e-49fa-930b-e8b834ddf92e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51489bad-e2ed-49f1-8b8d-f984c65fba23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efeace01-9ef0-4182-9c76-f5707ed33218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0daeeeda-e9bb-4da1-95d1-297d6708e408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31dcf4c0-7386-47c2-8959-318dbfac3bdf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bf12f9-3116-4e7e-919a-2be3444c1ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c041a090-393d-4215-b9a0-d56f0aae3b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4bb766-53aa-4ba1-bf11-74fe0dbca423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84b991e-7425-4b86-afe7-2f8061cd19eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72658800-6cb3-4ca7-aac2-72ee3e55b0e8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e138eeaf-2242-4788-9ed7-c848db88a85e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86356a16-c81c-4993-bcb7-bfa39ef6bf42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f58c44-be0b-48ae-9cca-8444c03165d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27acf5e-269b-456b-92f0-90c67716925a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17198662-c0ab-462a-8f19-5e3cc4cb97c0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9c5e8c-31b1-4094-abce-af7a50b0f626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ca01e6-5df8-4bd1-a15e-adfa26bab25a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70b8983-b0f5-4ee9-8caf-835305b3e85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2413a2a0-1cc1-4628-bf47-3aeeb48510fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf599732-d72e-40c0-ad16-2713967decc7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e752354b-5576-49ef-bfa9-1ab279c6b040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32d451b-a901-4a5d-82e8-c0212db6b96e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "217a5aff-05ba-4d80-b97b-139975dda821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302a52b3-60c0-4fa7-879c-81e6cc6f4229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893a24ef-d755-4ac0-8432-8dd7118f869b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a27eaf-ce7b-4410-810a-9d5480b05410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5488f96-d4d5-4ca6-a39a-8925ae34fd6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "242b41af-c2fa-49ac-a69a-916a6acb3d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73d7c02-21ee-49a7-8452-6a1a73026246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90294448-24fc-4a5d-b9f0-82a6fab51efe",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4561d2-8d3c-4f67-95fd-900356b6a335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923a55fc-405c-48b8-81b4-cf5ebb7741ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "968ac5bb-c46a-4f4b-91ff-2efdd3e429a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c7e884-8d39-4975-aec6-98a3da4c202a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55770bf1-d923-4b1b-b74f-44c8d4fa116d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6cae9a-e299-4e0a-ad32-2434d5504273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f3aa0c1-7d32-45f9-9854-2bb9a361f5b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bd9ec2-5fc6-40bf-9074-4d7a8c65d600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b12cdbd-5226-4375-b45b-89aa14d838da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4687f471-c6a9-4ff9-8681-ef32ec0667bc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573b7ce5-9e6b-41ef-b822-268b4c73a877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "204c95c2-e97f-48c3-a46c-d601438d1c4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3062e43d-4c94-4357-a81b-9eef21fa8300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9af992-63ef-4f68-85e2-4deebc2de146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112bf8bb-2c31-4c59-a3d9-460cc11e7592",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5b052d-f7c0-4e3a-9548-a9d5f5b0419a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f2cf6f-9937-4b9e-b792-334a4f97135a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd74e4a5-9265-4f97-8669-db17cb23c226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca77b90-f6e4-4f36-b2fe-01bc0e5a23b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97fdf0f-3607-4946-a269-47246bd35deb",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a88227b-cd3a-4763-a262-adfb7d4a0391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0a2015-db97-46f7-a224-ef899f8f266b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "916abb8f-698e-4061-9f17-cc8ee40b8de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42cb5c4-c53d-4742-a64f-2aefcac81756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218eb3ed-5ec3-4cd5-b12f-838a8653b970",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97261d92-d4c0-4b70-b0cb-e7e75c5e7741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0123e8-e072-4a9e-9c4e-17775b3824eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6daf1c58-ef4f-4ab3-b7c9-a9e3a4bdaac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9bbcde0-51e7-443e-ba5c-87d7c94aa77b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00093cde-17d7-4495-9165-e40ad189b88e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf1cea5-d5c6-4395-ab1c-e3d2c4283563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4da4548-0fcb-42b6-952b-61546d580476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28e81ea-a763-476c-8380-50d12a91ae37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab79053c-addc-4472-889a-e8cacc4c001b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd12fdb-7305-4f06-9e2d-a50914ede496",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c399e132-008f-417b-9bca-e1b1f55fc779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ddbb319-1e25-409b-9b19-d6e8019684e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d43ef0-4006-4fa3-9f6c-ab3ba2806401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7967ac1a-d35f-4165-a771-41a5fcb81703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ff0d75-32cc-44a7-be03-26ff3d7b0187",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f410c3-047c-45be-96d5-61a45a255b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09898c4-7f3b-4c68-b9a9-23547ab4caf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ad7ff7-ae00-407f-aaf7-47991e3ddf92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d56da58-60e4-4461-82ed-6fd08d05c48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcca2fb-1c9b-464f-b222-92dadfc867cb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c161e42-1ea7-46a8-9dc0-c665cbf3bed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba43df1-8719-4569-aab3-5cb3e51294ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756db469-5e3b-4a9d-bcea-49ddba76e9c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929bee16-b657-4030-8017-3e72c3ebce9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91749c99-07ab-4f1e-b7b6-6e60e3e8367a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaf2c9f-ffd5-41f8-b5e9-2422f5f1689a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb05ef4-e1f6-4010-b3f2-d05104acbf94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c10fed-0661-4df5-90f3-5f572e9e008e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5f83cd-c1bc-4a5a-8fc0-72738521f4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807a1378-0e46-4d7e-8a4b-0c0431e6b837",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2b9f46-f8ba-427d-bd5e-a97036f15ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7454bf08-fa59-494e-b506-477d2cf2e446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c4e468-a866-449f-b567-f868d84cdb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ea8436-acc9-4b72-81d8-a6382cb4a9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19b152d-f709-4461-9aa8-b50da9d607a9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8190041-77b2-4f78-9bda-3c31b86649c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f71e46-7f68-4c86-9197-722c3032e303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e2a1b7-b119-4750-9bb1-4d44bcbffa9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef01a3ff-bc02-4cdb-b81c-eda59bc38e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46728244-7589-4442-bea1-ac9c018301e1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2918ba69-1aa2-4b1c-9ae3-b6ed59f8f6da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f13226-92a3-483f-8db5-7506dbab4c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4c30dc-d32c-4023-a166-e40a65baae32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581fa531-f73a-44ce-bf9a-40fead68344d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3e1ce2-ef7b-4aa4-a0c2-f9d3f71e0cc1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd44bc8c-870e-46cf-ac6c-ffe3559b93ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2efa5cb-b93b-4df8-9f7a-42ae3b92ab2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "007de6b2-a74b-445d-bbb0-72a867944085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36eaf93e-cdad-49f8-8089-cd0713b4644a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0833d8-d38e-47df-ab04-0e0ad87e33d7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b9aa6e-9287-45c5-a25f-3dbefdadf6a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14435c1a-e9e1-42df-bc7f-633c1be511bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4264ad2-c893-4fab-a582-a68a6223221d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eda2c37-b6e7-48b3-874b-97d201dacf4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19da712-f57e-4269-93eb-035c486f98ae",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73e894c-65c1-4be4-bca5-54cffcceedc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77af747d-0c7a-4c67-a43b-b14ac50d37af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb50533-671e-44aa-ade7-f5a313dc3d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5d129b-4db0-44fc-9e8c-07730f95ffa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f22b7cb-a3c1-482a-a311-da01dd84f6a0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29c426b-4337-4677-b6d1-d5a7d2a9ab44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c6a5ca-c2ec-4831-80f3-df10e9605643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f9cb90-8d65-401f-a425-786bc907fc2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a31f48-7aa6-43a0-a16e-942f0b649a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e67a4e-6560-40ed-bd0b-72260f929b19",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d5dd5c-a30e-46e0-8467-5d324c2c5c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aabdb504-096a-47c6-a1ee-3500dc44ffe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0edb10f-9877-4f75-b975-e34ad06b363c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a905f756-6692-4bb0-86fe-4b477586424f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92956609-68a8-403f-9c23-2a6acf469016",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa12005-365f-4ecb-9803-d0ab6a671d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b64915e-ecd7-4f5b-be87-e0976f13adba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a58d628-dfb0-47bd-8a25-15169191368c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6245dfbe-e785-4466-b03e-7a42592ea4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea556d9-1907-4c54-9a8a-c0387e6d18fd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8b2c61-6fea-4c75-8563-d1f974155e4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71932e3d-1fd1-47fd-884e-a56ef591e6a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fd49e1-5b31-40f5-b9ed-c1c9fc7b28aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e8b73b-96cb-471b-a0ca-819018b323c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810d64cc-372e-4797-a685-77faf8dfcec5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63600c1-7aa6-4e5f-88a1-becb820db9cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b70b3bfb-c40d-428f-8519-b05e71becdd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "934bf3da-e009-4ae2-a18f-7376ee61b12e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6ff894-e35c-4b48-8c5a-c1e4d4973ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4230ffd5-0a4c-4285-a1a6-9e174d36b6dd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f07bb7-8b5c-44a3-a091-3c23b26115fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "786cf240-2518-41f1-bd19-d9dee8dbb42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c38d28-795e-4eaa-9518-fa95ff708859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fdbf636-684f-4c42-98f5-1078e36e1b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e891744-0672-417f-a931-349a9b30dc36",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e3675d-f265-4fc6-b8cc-e58b7ccf1446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "818c5187-e88d-42a7-bf3c-50642b5429ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f23a22-7e64-45f4-9262-a4d79f09b64c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16837e4a-f41c-4fd3-8f53-0020529470a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1aaaa8e-fdcb-432f-8f7c-4a89c23e96aa",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57541eea-895c-43c7-96e2-6c2b7f4607f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4d68f51-b667-48e1-88df-e7f07d047304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d231b7b5-0bf5-4884-9715-a572eab9128e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54b5b2b-8ea6-4bee-83c6-6005894d4f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca686ff8-1102-4c5c-8c72-56498d986205",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55afbea-8d63-4d8d-aa75-64e7fff714f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0fcdbb3-c2b6-4d6c-8d49-8569b0664b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c06f17-fbbe-44e1-95dc-a37eb7a99ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59cd5ef-d2b8-4d87-93ec-f4fb10801e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d56d4d3-bf56-48ff-9b81-09277e4b3690",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc035172-7ef7-4a13-a1cc-cf887f7d07db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37f74a09-fcdd-43d0-8afa-e6bbd9f26458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78ccbab-713a-4a54-a701-0378783b4ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43684da2-26bd-4231-a2dd-fdeddd3cf726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd5c9ac-a5c5-4b48-a12e-45ed83c54d4e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064d5872-1f40-4a7f-b022-7308c12ff4d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14fb97eb-8142-4b6e-a12b-372dbe3641e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2110cb-b4cd-4be2-bb1f-1bc9d4bff66e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d91d79-2427-451a-ba17-62ccef9e7729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af746ff1-bb74-470b-963a-5f03ce0fa91b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07de61dd-9084-4edb-8011-55a4103e5d51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aabf9281-75ba-4cbd-b4b1-13d2c9b449a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00b7daf-091d-4582-a4f3-344faa5c78aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95e25ba-21f4-402e-9fdc-cdd99b960a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5ea75e-47cf-42e1-a104-0facb7af0d27",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fb35e1-122a-41c1-ae63-bb0ec1364f1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7a62239-6839-4e01-9a61-e40ec23b9345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e1d6c3-f477-43ea-a5ba-02f5b07e5fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8891d185-f490-4d15-b1f9-54e823a692b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c077ad-aea0-47dd-9781-6008a147e9fd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6698c7bd-310b-45bd-bddf-e02f49a887f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab11c3bd-158f-451b-a18a-e9834111628e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c94740c-f947-4995-b2e2-35b200999387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324ae9c8-e168-4dcf-b75a-a5f8eb9fe2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ec7d97-8b8d-41ec-bef8-023c497eb06f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdeb6828-2a08-4da9-87bd-183682cecd54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "494b3241-893e-42f0-815c-e334a9e419f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c613df8-ccda-4bad-8625-50700635ca06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261e8fff-ba04-491e-929d-308963a70fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d47021-5200-4de4-9bab-5cc6a2984b6a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fb246b-4a67-45a2-8301-56a080409747",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdccce48-1b37-4159-b4ba-b2169cfef991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e334ea-a299-444e-858d-2572e32fd180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182cc468-8b58-4279-a159-f798b1690bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b3788f-2eb7-4e02-807a-ec256c28fb5c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67e4e65-b915-42f2-9efe-6aac36dc7101",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fbc95b4-3793-4902-a306-18927b6e36c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8c85ec-2ca2-4d80-bde0-39503a1bf26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a2a42b0-9fb4-46fe-9b30-27e6dd51ec07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e8e01e-2400-4d9e-8616-60e818d3136b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbf779f-98f4-498f-8d7f-35bef313293e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0d0474-18df-479a-9abe-9297ce2bac52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b92b2f-d4ed-42a6-9186-70b997eb297e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5bdf044-1f5b-4618-86a4-f2e953709693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27d5db6-53e9-4c48-a3ac-a91053543610",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8055143-a680-463f-92c0-63ef7ab5076f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0757fd39-ea41-4689-a191-bb31e66b802c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166199e1-759b-4985-9f9d-c39f0ac771fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa1dd0f-4e12-48a6-85d3-2c00924df670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d4bb44-01e7-4e30-aed5-41ebc3520f2e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b1ea9c-bdad-46a2-9e85-9e89e53f9286",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dd8dcee-4bb5-4ba3-9b0d-f513b37da0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c33a67-3fed-417c-a655-0084caeb9af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b235519e-8106-4699-afa1-dc88deb3fd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45f8fbe-a46e-4870-a394-16b26646aa34",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4f6291-6fcd-4128-8c0d-d3e8c1c77e12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dd03696-6491-4186-b2b0-c0abad7f03ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9d65ce-9e7c-40e4-9081-ec661fe9555f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f7c5bf-7b4b-422b-b5de-3e5b758191b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5842ad78-084e-4b35-9fed-1646388eb6c3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7dbdc5-2d5d-43c5-bfd7-98dfa45b0b8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5208f030-fd2d-4757-8cec-487a6873985f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf6d3a3-e40e-46e8-9a6a-6e199af0d06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dcc7fd0-005d-44ed-b61a-9c639cc75abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a16bbe-a08e-4dbb-8b62-8fcb33a74352",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310c19c7-5dcb-43de-afcc-305fae2baef4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "792fe85d-26e8-4f97-9a9a-bb926de7b5aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "013dcf25-bd45-45f3-9023-efeb14e4913c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b425c1-a4fb-4a27-a520-6a551fa611ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a0ec5b-df0b-4a43-a461-47220f1ada07",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0926798e-fb68-4990-8870-f9adaf298558",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da680e0e-d644-4081-82d4-456cb8c6282b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "858f5e70-3093-4419-a7cd-ea3aa9ab0374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74e59b6-99ad-475d-8282-7d624f460629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde0d5d4-9d3f-42e5-87ca-c9a895c39ce1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ed1f34-8067-409f-b49e-3eccc7208e8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c8b3e9d-2fc0-4650-84d2-2d8911cd4a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a3f8ce-37a8-472c-89c5-2c34872e5646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b38f57b-c3fc-4792-b717-dccd46b38c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fd715d-bd69-4c6b-9c25-26ddad5a501c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78313df1-71a4-4f45-af87-5c3c1e7ec425",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1f5334d-6e27-4194-b754-c0c2eb02f568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3766af-d907-4491-bcb6-b9b8118e9f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1901cd34-4c13-4e5f-871e-4688a374a294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c26f8bd-0937-4857-8e00-a91ef052173a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93e80d3-dbf7-4e39-a166-a1b5c7ac8e24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "905ca9e8-a835-41b8-b0e8-de45c548757e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bafd18-950a-4a40-a55f-ad346e34a5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6857d7d6-a9a9-4a5d-ade3-74c66d5122d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b65fca7-4aac-49bc-9f6d-3afd32e674fb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369c6aee-0efb-4ad2-9bd7-4f0ad786c99b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef437dec-4f1d-47d0-973b-947750f828dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465c8b3e-49c5-45e3-a031-27f39b21fceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f82aff6-0c2d-4738-95db-aa276504d7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bdede2-b202-4b1c-866d-72367e663c3c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5de643a-6cd4-4170-9cf9-6fc1928fcf9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a753f21-459f-4e11-9649-03e6b235e6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fbb26b-9093-4d28-9ab5-ee32b347c383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938e8f57-3b1c-4cb0-b0c0-22a05845704a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9017143-6975-4006-a79f-088771f82d17",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a787e5fa-7623-4c08-ae2c-a0e17d6f64c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17955fcf-87e6-4599-84c9-4d1d6e9b2a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe2b9e8-c11d-447b-af4f-1bcf867963d0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c421fd8-4f4a-4508-add3-4eb7be607c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644ff400-4db4-47ea-8851-6413ccf51ef3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37172ef6-dbe0-4c43-b021-98ba52d40426",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51b45af1-8829-4088-9c31-9c15bf94d6e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdf8545-7d3f-44b5-a888-644a4516d61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aad6dba-131f-40de-84dc-8756244e2b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2044c0-d445-453b-baa2-ced89da378ca",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e27aae6-2f82-4b0d-b341-774e078ee6b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a958a3a9-894e-4336-8125-a2b1fbb4f9fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbfb591-89be-4c84-86cd-5ef58b5385a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46cf5492-0ccc-44a8-a636-03fc33e93ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86aea7ce-782b-4eda-8b8e-5b6c7bdc187f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77a86b0-9914-413b-bf14-d82849f86b1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0439f653-286f-4d4e-a8d0-be370db64c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5e797b-d7a4-48b7-b9d0-79b6e2526e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021f980d-5416-4b03-a5f4-dad35a2f4545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55dd8b92-4ae7-4cd1-a6a4-acfbab031c84",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474d8e59-3d59-42d1-b8b7-98986f62aece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb9c29c2-d3bc-487c-8d1a-01cdb3c51177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c79f32-4aef-49ca-b45b-f610b3cd2d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5717c229-abc9-41d3-8d99-fe6c16df588f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b1e39f-94aa-4eb5-a710-bd6bccd363e9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84ac7b8-f954-477b-889c-84aede39b5e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "891af03b-4d73-4b83-a948-7fe41ba49eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "483d1ada-5ac0-4be7-843d-15adc2a1e557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef33699-2640-405b-9d77-340ce515ada9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff789a9e-1517-455b-89c3-fc4114c49d60",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a31a9f-3d9f-4e56-9824-eeb2bba72216",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecd43533-b8ae-426d-86b7-b3df76827d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d427ea7-4133-4b47-b147-cb98be8eb5c8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74cf56f2-be41-45b6-9b15-2100efd78562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58728b78-4bac-4d37-a1b8-c8c68fc9c29f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7df95b7-205d-4677-9abb-69b58823e571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2a5ca25-4d6d-4176-9f64-64e7857c5369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2569869a-b744-42f9-866c-c5d239a96461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5e1744-e38a-42bb-b0c2-a4c40c0c33cb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a7ec380-5c5e-4690-9b4c-dc0e30a5057b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddecc9fd-5b4a-47b6-a118-d53fd78a7952"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b419b12-cb42-4b28-ab45-24ac652b1b57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e5b153ee-cc2e-4865-9977-c6d312ebb17f"
                    }
                  }
                ]
              },
              {
                "id": "1d3a5ff6-4f9e-4fbc-b20f-28d48f812a3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53342f3e-e548-4f6c-9917-4e8196f7f54a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142aabc0-a8c5-48fc-bf17-3ae1bd79f470",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b62584c7-975f-430d-b4c3-5c7ce547eea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b53fd8-b237-4403-b1e8-2077c45dac4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04a4e13e-26c2-4438-b411-f310143a22f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ef2360-f359-4a12-a72d-6e59e393bd2a",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82246d18-604f-48b6-bcda-ae6a4da4eddb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7875a9d9-0852-4e8d-b8f9-715e0692e5c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30b974a-f174-46f3-a162-f2a9a13ef3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57f6c4a8-d72e-4ae5-98ae-8679ebeb0def"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8235fc14-a30e-4092-af2d-7e768179e22f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34d2ea72-d879-4505-be73-8ef6c8d68914"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c43dc760-34ad-49ec-9514-8d571dd16aa2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80ea47c3-2717-4d12-ab77-4dd0f4df7f99"
                    }
                  }
                ]
              },
              {
                "id": "b85c0b65-ea66-43c5-9f09-78340693598c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5397facd-0da5-46c8-b3fc-b4514c5d7ef3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c7ca67-5000-46f1-a761-43c5461140b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "dc8bbb82-2676-40d7-add6-788ca26baa20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a904a11-667f-44b5-bf54-fd331b5582d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203352b0-1a21-44f6-aec6-c89a2fed3389"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4eb6b38f-06a7-4087-9a8c-5d2fd45d889c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "602fc59e-9cec-4dbd-829f-7553dfc32542",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "367a948b-6f1b-4bf5-a3fd-6d4519f3557c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9a443c49-7606-4b94-abb6-204a6a1cc8de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e28f5372-a6fb-4cd2-a19f-928299f35a2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3079ec0d-3454-4579-94f9-c933fedcd38b"
                    }
                  }
                ]
              },
              {
                "id": "14007b7f-63a4-458e-8690-c8463e30b941",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e70c2412-1ffc-4482-8522-a3611c48fff8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "48498f3b-aca2-4509-8e57-92c40b95bcfb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35245722-28b3-4656-b65b-89c61214e1d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fabe703b-730d-4fa4-98af-2e187fb9ead8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9947da44-09c7-4e41-997c-ce252d3ef7ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "68019e96-9931-4799-8caa-40dce4d957e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52974b89-2834-4f78-bba4-1447b4b9b550",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "867453ef-535a-4c5d-b4f6-22244e9f615b"
            }
          }
        ]
      },
      {
        "id": "97d33e7d-b68d-447f-acf1-7e2e1b64f0fb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "98e05ec7-f047-4950-80a1-cbe56a8fc79b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4983c2bb-fd73-431b-85bd-2f9934402657",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f5bfaad-0bd9-473b-8b69-e3aa80c726fd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d9f9c4-4999-45fb-b878-b2c4b3533af6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "121290a2-29e4-4c30-b616-05f5de05aa7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a201250-4c89-4de3-9453-8e332aed267e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8596012a-a689-4d51-9480-97165b4a671b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81dcb8f7-34e9-4a16-a008-b040cd1ebd34",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ef3637-a3f9-4ef5-80e2-1d7286a32eef",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "28a066e3-387e-4f1b-9ae8-86382e59941b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d48ccb-27fd-4425-b274-38fa2adb146a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93a9f41e-d8cd-4e41-ac7e-2b3e58a7bc37"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e0d7ab6-185d-4e82-9d45-bcbcc7b48df4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95de675a-211d-4057-a7ba-8e8730a75a76"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c73398de-8d58-4318-bac1-63dd78a08da8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fe0247d-2981-453c-8bec-b38135e85c64"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f68e7a5-36f2-4302-a3f5-8a15957b46bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9e990274-a06c-4b2a-af21-d1e5753bf851"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e65b4f3-5175-465f-a319-bd5b0ee81434",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0839a37-05cc-46d5-b901-67250a40ac17"
            }
          }
        ]
      },
      {
        "id": "45455768-bf57-47f5-b14d-d866f7ed7888",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8519c952-b822-45b6-b921-ee39703f1ef1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e42dae26-d4cb-439b-9026-ceec7f39d6ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ef43dcc-4cb9-4dff-b8c8-117996886371",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad857ecd-9b47-4c50-a449-bb2b5bd38e05",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1e34e4cf-fc0d-4c5a-a196-2e05dab1f070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ec1d2a-4ea8-44b0-8454-3536a1628969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca0df5e4-6287-4d38-9268-a0efa7f91f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54915df-3f47-4a3a-a644-e6cf09387538",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cc8d18-0484-455a-b709-52882e7ee591",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "49c4511d-28a3-4365-9a97-fc375d2097f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4067a4db-dba0-4f0f-90bc-2d95239a526c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55d268e1-b151-4078-b818-8892bded3e92"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe98d6e1-c369-42ac-9bcf-364aadee80e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bc0c71d-6ff3-4308-9372-9f7148a48812"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e67ca6d9-bc9b-4a77-8ad3-da9156f0b3a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17472fa8-abce-4d71-afde-4b731715b226"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d5d454e-feda-41e0-b48b-b4a888a5110a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d6ae7b4e-ff1e-475c-b4f7-86e0e24ed1e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31f14d71-575c-4806-8c43-264240eb648f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb387258-4803-4d4d-ad63-91458e5aecb6"
            }
          }
        ]
      },
      {
        "id": "09e32fa1-234f-4c7f-978e-ca99a56e18ac",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3647f0d3-b5e1-4ce3-84ef-b24faa8e3bad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd2494c0-acf5-4843-b6fd-bd298d71d3ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db3a1ccd-3e3d-4619-a262-68dc3d44c00a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3fc4b5-b8c6-4d76-827b-19aac048071d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6961bfbd-8596-4bb0-b13b-970715dea6d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc79eb5a-d3eb-4b61-90e3-3d8cc9dae082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ebe91cc6-04c2-402b-83e7-42d9b26097a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694457e0-3864-491d-995b-ca62d712acd1",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3e484d-49a1-4445-acf1-0a3885988223",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "08ffcd8f-5585-4641-b5f8-3701f6c3c543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9030ec99-cdf2-480c-a066-21a6854fd6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1033ae14-4918-4b05-af7f-fcfe9c70e2c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43476c39-58b0-42d6-a563-0148b9c2d0a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab457a7c-52aa-452b-9f53-f9405c6e9515"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10454692-6f51-494f-b38f-9d97686311ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8232dbc6-a300-427b-a5f4-6c1f78981063"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b634922-097d-4d3e-903a-b4a288e61f20",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6e422f16-9f44-4e94-a8a9-f635b6dfd2e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f2663a6-e450-4198-a22c-60e9fd1c2176",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c2724c2-7fdd-47cc-81ab-c8a456cf8d0b"
            }
          }
        ]
      },
      {
        "id": "76f085f9-89d5-4188-a27f-e6293f452efa",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33ed9f5d-9d9c-4d15-983d-e51a1f48e0b9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc996970-d451-4f9d-ae94-72c3902a57b1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "09f05ef0-ff3d-4d49-a252-f3b32cb7d091",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0cb8ce0f-4d8d-4300-a05b-f62b33fec146",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d203efd-f84d-4a8e-80d2-62653a309f59",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1917,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 515,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 963,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 954,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 633.3026819923372,
      "responseMin": 23,
      "responseMax": 4807,
      "responseSd": 677.48618367703,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1676594638161,
      "completed": 1676594814037
    },
    "executions": [
      {
        "id": "0fb24b47-b45b-4796-8762-144ec1ff954d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9f6a1852-e535-48b1-a426-8be538c48aea",
          "httpRequestId": "10dc8b50-9102-499c-8e46-8c09be1a0659"
        },
        "item": {
          "id": "0fb24b47-b45b-4796-8762-144ec1ff954d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0eec018f-3024-4e11-ac2b-a94b6f2437e6",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 0
        }
      },
      {
        "id": "c629691a-537e-4d94-bd5a-86346b82219c",
        "cursor": {
          "ref": "7d48b204-433b-4090-8fb5-be3c2b8aaf64",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5d1df577-6100-4772-856f-d643ef8e9192"
        },
        "item": {
          "id": "c629691a-537e-4d94-bd5a-86346b82219c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "297cd794-18a3-45c7-afdd-ac9c8ef2534d",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 0
        }
      },
      {
        "id": "99acb6a7-50bb-474a-a179-fff1d612f13a",
        "cursor": {
          "ref": "2fb2fd63-cc76-42b0-be4b-7333f3709e7d",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2072f82c-8220-4463-81c3-93fa4021da1d"
        },
        "item": {
          "id": "99acb6a7-50bb-474a-a179-fff1d612f13a",
          "name": "did_json"
        },
        "response": {
          "id": "5974846f-24b5-4d95-9b05-d916b3bbaa0a",
          "status": "OK",
          "code": 200,
          "responseTime": 937,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed4f4fc-ebee-4cf5-8a1f-afb09a46cf34",
        "cursor": {
          "ref": "3ec38466-08c9-46bd-983e-77107244c8c0",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "972c9821-0d6d-49d9-8b99-ffc05651b374"
        },
        "item": {
          "id": "4ed4f4fc-ebee-4cf5-8a1f-afb09a46cf34",
          "name": "did:invalid"
        },
        "response": {
          "id": "a469d9ff-6cf8-4540-82ad-0a45ce82d163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed4f4fc-ebee-4cf5-8a1f-afb09a46cf34",
        "cursor": {
          "ref": "3ec38466-08c9-46bd-983e-77107244c8c0",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "972c9821-0d6d-49d9-8b99-ffc05651b374"
        },
        "item": {
          "id": "4ed4f4fc-ebee-4cf5-8a1f-afb09a46cf34",
          "name": "did:invalid"
        },
        "response": {
          "id": "a469d9ff-6cf8-4540-82ad-0a45ce82d163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84fdba5-401d-4dde-958c-567ef7d4d741",
        "cursor": {
          "ref": "04264ee5-241e-4c38-aebe-43e3c8a9fd33",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b204591e-152f-4956-b23e-44bc0df2762a"
        },
        "item": {
          "id": "d84fdba5-401d-4dde-958c-567ef7d4d741",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fe8727d8-8b90-4429-8c84-0c91d005b344",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1015,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c72fe49-7716-4ade-8970-3e97cd296530",
        "cursor": {
          "ref": "ae06a2ba-858c-4fb1-8e09-377399b31ea6",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ac58a6a4-f9e5-44e5-80a8-8c025781b144"
        },
        "item": {
          "id": "3c72fe49-7716-4ade-8970-3e97cd296530",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b6124d08-9db3-4c5a-9fbb-b2a10f157bd1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 584,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bd5280-1a3e-4189-9296-a9dd78b1be78",
        "cursor": {
          "ref": "2f9e3bf1-6e59-4c53-8060-644c1ff189de",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ca7dd247-e390-4008-813a-6b6f1fb5e89e"
        },
        "item": {
          "id": "89bd5280-1a3e-4189-9296-a9dd78b1be78",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9fd01b78-b2e3-457c-9c9b-82fc4b188c1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31729bb4-f764-46b9-b828-bf4686160a7a",
        "cursor": {
          "ref": "4daddf79-5be9-464b-890e-d4f1c301d975",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f96f6001-c224-4b34-8b50-8afa960b2311"
        },
        "item": {
          "id": "31729bb4-f764-46b9-b828-bf4686160a7a",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "025430c4-0042-4a3b-a5d1-55ea07ac7e86",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 513,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31729bb4-f764-46b9-b828-bf4686160a7a",
        "cursor": {
          "ref": "4daddf79-5be9-464b-890e-d4f1c301d975",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f96f6001-c224-4b34-8b50-8afa960b2311"
        },
        "item": {
          "id": "31729bb4-f764-46b9-b828-bf4686160a7a",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "025430c4-0042-4a3b-a5d1-55ea07ac7e86",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 513,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c70d05-1475-4e22-9b71-bb3322eb935b",
        "cursor": {
          "ref": "5b96c9da-f99a-48ae-bbe2-09d2c94d7702",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1c1b3d9f-d5eb-4731-ac0b-c477e5e7d509"
        },
        "item": {
          "id": "57c70d05-1475-4e22-9b71-bb3322eb935b",
          "name": "identifiers"
        },
        "response": {
          "id": "ac490de6-744b-4174-b5cf-bd4fdd2850c6",
          "status": "OK",
          "code": 200,
          "responseTime": 872,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afcff36-889a-487d-9e48-56121e63e182",
        "cursor": {
          "ref": "f109ea77-d9f7-4c20-9296-1157d1077df9",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d5dc4c9b-1f2a-4f06-a0c0-c0ad8885615b"
        },
        "item": {
          "id": "4afcff36-889a-487d-9e48-56121e63e182",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bffb67db-e214-4652-9f56-a5aa69d7607d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afcff36-889a-487d-9e48-56121e63e182",
        "cursor": {
          "ref": "f109ea77-d9f7-4c20-9296-1157d1077df9",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d5dc4c9b-1f2a-4f06-a0c0-c0ad8885615b"
        },
        "item": {
          "id": "4afcff36-889a-487d-9e48-56121e63e182",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bffb67db-e214-4652-9f56-a5aa69d7607d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18711cab-dc0e-462b-9a45-5dfee1340b4e",
        "cursor": {
          "ref": "4600085b-6ec8-42b4-a8fb-12c12291dbf7",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ba2ee398-a733-451b-8e0a-7ee1d21241ea"
        },
        "item": {
          "id": "18711cab-dc0e-462b-9a45-5dfee1340b4e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "630ab78c-890a-4997-87d3-f3acb1affc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3d61de-8bb4-4a09-95d4-1e3501c2d332",
        "cursor": {
          "ref": "48199293-4f35-4aa8-b6e5-0a01f896a5d1",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f531063d-6491-4585-91e6-53fc7c53c9be"
        },
        "item": {
          "id": "9a3d61de-8bb4-4a09-95d4-1e3501c2d332",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4565c7a3-3ff1-4d9e-b511-af21196ef181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 867,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f19f95-bb23-4b7f-b667-0007d8cbf458",
        "cursor": {
          "ref": "968ffdb9-2d8c-4a55-ba4b-d13ac835a2ed",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3d944656-5dc9-4621-a839-8c60de044415"
        },
        "item": {
          "id": "c6f19f95-bb23-4b7f-b667-0007d8cbf458",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b677a42e-459d-4cf8-84c8-a8877c68551c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 940,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff7f429-0f3d-49f9-a012-8ddf354592c6",
        "cursor": {
          "ref": "854baac1-1b06-4316-9e52-ad532ee910a1",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6280ab38-4b79-44e8-b8fc-613a6d91db35"
        },
        "item": {
          "id": "1ff7f429-0f3d-49f9-a012-8ddf354592c6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "78b43ed9-ff52-4605-8b46-8c56da6754e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9ecc07-51ef-47eb-9a2a-705a05d16d42",
        "cursor": {
          "ref": "d0ed188c-cac6-411c-a28a-43ad1bfbb28c",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3c5b6bbc-1e39-4305-aabd-79e1ced1d281"
        },
        "item": {
          "id": "ed9ecc07-51ef-47eb-9a2a-705a05d16d42",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c075d348-27a4-4e8a-8c0c-abd8dbcf676d",
          "status": "Created",
          "code": 201,
          "responseTime": 2988,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:15)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:15)"
            }
          }
        ]
      },
      {
        "id": "fd86ce44-7228-4a3a-86e4-4bffeeb803fe",
        "cursor": {
          "ref": "5ae141f4-2671-4478-a001-26a994e1b98d",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "25cd062b-d218-4a27-a541-0f15228bcc23"
        },
        "item": {
          "id": "fd86ce44-7228-4a3a-86e4-4bffeeb803fe",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6671045b-288e-49dd-b4eb-269ac8fcb8e4",
          "status": "Created",
          "code": 201,
          "responseTime": 2796,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "c30c4aed-526b-4d39-8898-47fa09fe8217",
        "cursor": {
          "ref": "617556d0-d597-4070-ad7d-b02039b48923",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c1363785-2297-48cc-9f72-c87a6560eea1"
        },
        "item": {
          "id": "c30c4aed-526b-4d39-8898-47fa09fe8217",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d4c3f90d-c7d5-45b8-8744-16fcde6c59f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14303eb-db01-4be2-8c2c-81aee2399573",
        "cursor": {
          "ref": "18ff8cd7-f1ed-44ef-8e0d-925827fc9e16",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6e8e5e67-ec3a-4f3b-b45c-818da5e7fa93"
        },
        "item": {
          "id": "f14303eb-db01-4be2-8c2c-81aee2399573",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dbadba9c-15f0-443d-8b5c-ab6fe2f3a616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28c5fc6-9e53-40a3-92a4-068533bbce39",
        "cursor": {
          "ref": "57263190-9e7f-4789-a462-3756fac48f40",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "25ebb12a-7da9-4f36-a0e4-6c6101bdb7d8"
        },
        "item": {
          "id": "f28c5fc6-9e53-40a3-92a4-068533bbce39",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "321b2aaa-7b12-4fe2-90fe-42d3327e357e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f19111-ff32-48a5-9db8-13e8cda8f28e",
        "cursor": {
          "ref": "419f3946-3eb4-4959-a45d-f9aa5741489e",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "190f70e1-a914-4f37-84c7-f2134a74e5d4"
        },
        "item": {
          "id": "34f19111-ff32-48a5-9db8-13e8cda8f28e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b5918411-ce82-44fe-b7a6-457da9c8b8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a52e284-955c-425f-bdd4-9938da63c32b",
        "cursor": {
          "ref": "2d76aa27-4299-495f-89f9-624c9f572e5a",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5e8d8a08-66c1-4c70-9460-deafb5ba5296"
        },
        "item": {
          "id": "7a52e284-955c-425f-bdd4-9938da63c32b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3b67bb4b-f495-4a34-8356-3d577bd02765",
          "status": "Created",
          "code": 201,
          "responseTime": 2837,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:21)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:21)"
            }
          }
        ]
      },
      {
        "id": "11f6fa49-e466-4d93-b3a8-ff6391a6348a",
        "cursor": {
          "ref": "275d13aa-fdc8-480b-a314-dd2590b30aba",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6b06deb7-e714-45a6-856d-d0dd4d573b3d"
        },
        "item": {
          "id": "11f6fa49-e466-4d93-b3a8-ff6391a6348a",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "df1b237a-9dcf-4c55-bb10-2b9ea1a062b1",
          "status": "Created",
          "code": 201,
          "responseTime": 4503,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "e5ecbf3e-16e2-4ad4-8785-c1fed2a7aef1",
        "cursor": {
          "ref": "7aaa65e8-d118-445d-a42d-a9f4046d177d",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6f05fea4-549a-4c88-9014-fbc5819f9021"
        },
        "item": {
          "id": "e5ecbf3e-16e2-4ad4-8785-c1fed2a7aef1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "63677eea-5704-4ad8-938c-09de0a8e6bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb01e553-7296-4419-b05c-84a989351633",
        "cursor": {
          "ref": "5817dca1-5b62-4409-8709-e6154298748e",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2c1c4e97-55f5-4577-a206-1da0138ab202"
        },
        "item": {
          "id": "bb01e553-7296-4419-b05c-84a989351633",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "33f73c51-2cf8-40f4-864b-efaf0e7532c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e361325e-0d74-448e-ac79-d0e78d787df6",
        "cursor": {
          "ref": "4ed2c0ad-f28e-4531-9f16-33302050f598",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cc02a51f-8a12-4e0b-96af-42afaea42760"
        },
        "item": {
          "id": "e361325e-0d74-448e-ac79-d0e78d787df6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "63a38f5d-e626-4ee0-9e54-5d8c84ba11d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f237ec29-758e-436a-92c1-56bf9c931e3b",
        "cursor": {
          "ref": "469e4004-4225-4924-a832-31143fd3eb29",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "070763e2-6e12-433c-81ca-f6f61c9d74f2"
        },
        "item": {
          "id": "f237ec29-758e-436a-92c1-56bf9c931e3b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f6e56b37-9e92-46bb-b84d-54312e2fbc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be82d8e6-fbe6-4e86-a629-0d2d923e71e0",
        "cursor": {
          "ref": "14119c52-f833-459a-ad5c-7902b3793f48",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f6554306-89df-4a39-9be7-df426e9119ae"
        },
        "item": {
          "id": "be82d8e6-fbe6-4e86-a629-0d2d923e71e0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "44adebde-396e-4ff7-b5d7-0284cc389846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d060a86-5e96-4c68-871d-3ad97e1c922b",
        "cursor": {
          "ref": "1b140df1-9235-49cf-9b60-62a708338498",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a42637d8-3090-4e35-a223-9cb062779ff1"
        },
        "item": {
          "id": "6d060a86-5e96-4c68-871d-3ad97e1c922b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "750d36df-7d8d-4233-ad45-4560b149a5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecce7e9-0ef7-47b6-822e-822cffb41d6f",
        "cursor": {
          "ref": "523c2d56-4610-410a-b8ce-592f10d14c68",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6eb268ef-426b-4789-83af-4b3bf2c1c505"
        },
        "item": {
          "id": "cecce7e9-0ef7-47b6-822e-822cffb41d6f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1460831f-82d1-4a3c-9013-cbda636fdb1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3891ac03-ddf5-40cf-9911-e8b07cc92f37",
        "cursor": {
          "ref": "639a748e-cc8c-49ac-a927-7e78683b82ec",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a41c16ee-d9e6-4724-b5bd-be1aea3fc025"
        },
        "item": {
          "id": "3891ac03-ddf5-40cf-9911-e8b07cc92f37",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "78ab9400-7e7e-440d-9585-0744be8f721a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe93af2-ce3a-4cea-927f-89cd466c5bd6",
        "cursor": {
          "ref": "b2a3bb29-2754-4383-a21e-f3f3ece34ba1",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e61df1ef-db71-439d-b2cb-4545cafd33d6"
        },
        "item": {
          "id": "3fe93af2-ce3a-4cea-927f-89cd466c5bd6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "70de76f8-c6cc-446b-ae8e-d787337472b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616cad92-d228-47c1-a468-108e45215306",
        "cursor": {
          "ref": "189db4d3-a6c9-4e72-b7d5-0e67e08919d4",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1e62f8a6-91ae-4a26-96ca-eea28eab20d6"
        },
        "item": {
          "id": "616cad92-d228-47c1-a468-108e45215306",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3a9fadab-30a8-403b-91fe-2730eb1367ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceef2336-b468-43ce-a7ee-41e0b1866198",
        "cursor": {
          "ref": "6916727f-2d5d-4419-be6e-2d24151a49f3",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f34afb96-3650-42b6-a88b-8ca25a88b2d8"
        },
        "item": {
          "id": "ceef2336-b468-43ce-a7ee-41e0b1866198",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f897f86e-9656-4e5c-9502-52eebc978c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c203e5-09cb-4e94-bee2-5af059a4fcd1",
        "cursor": {
          "ref": "e2bd677c-1dd6-4be1-b3ce-44e4d3a85295",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7f947a8c-f293-4df5-bf49-867de641afcd"
        },
        "item": {
          "id": "50c203e5-09cb-4e94-bee2-5af059a4fcd1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "24e6fafd-5764-4958-89ee-ad6e54c78b31",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2435,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:34)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:34)"
            }
          }
        ]
      },
      {
        "id": "aeaad64e-29f4-45ba-9b1e-508e6acdf65d",
        "cursor": {
          "ref": "d5b1fd96-dea5-4b75-8e70-d3f18a2f6861",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f5871d49-b7f3-4644-8994-3baea5c32b43"
        },
        "item": {
          "id": "aeaad64e-29f4-45ba-9b1e-508e6acdf65d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8af7445e-6ec9-4569-a85d-fb885cfb22a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b05a05-2844-4223-8667-4a1addbbe679",
        "cursor": {
          "ref": "823867dc-b634-4bd2-9607-6dbbec4311a6",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b25c970a-3369-4c74-91b4-8d828edb6a13"
        },
        "item": {
          "id": "37b05a05-2844-4223-8667-4a1addbbe679",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "09959541-f68b-4db8-a80b-fa8bcff464ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7074629-9f85-443c-8d3c-123fac60272d",
        "cursor": {
          "ref": "3f789857-e887-456b-bc9b-d0198c2ba4a6",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "be375058-890e-41d2-8bae-41bb9f0c384e"
        },
        "item": {
          "id": "f7074629-9f85-443c-8d3c-123fac60272d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4ef01a3d-e3a7-4aac-a107-964407325afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688610c7-39bd-4099-8126-97368b6d7751",
        "cursor": {
          "ref": "ea4aa61b-dd6b-499d-ad35-a3ffdead5d2b",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0df0fa7d-cdc2-450b-8413-96548b7de13f"
        },
        "item": {
          "id": "688610c7-39bd-4099-8126-97368b6d7751",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5697a4a0-f67e-47e6-a800-1fbf339ec900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d154bb9f-0fb2-4221-aef8-565a9b9ff574",
        "cursor": {
          "ref": "6dfc7eb5-5fff-415f-bfe1-58d72c1f6af5",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3d80b2f1-4cd2-4034-9b5d-3b5ddf32aba6"
        },
        "item": {
          "id": "d154bb9f-0fb2-4221-aef8-565a9b9ff574",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "cf5ac4bd-a980-42d3-bc09-8d5171cf9c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261974f0-3d34-40d1-954a-885809cd584d",
        "cursor": {
          "ref": "fc02f1cb-4f2e-4b4f-80f0-141310dd6993",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9c34d33e-b9dc-4f4c-add1-5f6286bedce7"
        },
        "item": {
          "id": "261974f0-3d34-40d1-954a-885809cd584d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ce53ce72-9b50-485e-99c7-9bd9310d7c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a596eeda-f66e-4303-afd1-bf81edda0670",
        "cursor": {
          "ref": "23c9ff5e-ff05-41b5-9e51-d5c26bb74d80",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "482e7d3b-6d84-4970-8034-10dea21e1f5e"
        },
        "item": {
          "id": "a596eeda-f66e-4303-afd1-bf81edda0670",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6f2c9e19-1241-4614-91f1-92af9b973464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02de35ce-c16a-4f41-b27f-47ab560ed8ef",
        "cursor": {
          "ref": "380434e4-f174-4edc-b70e-00ba049ee20b",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8c6521b2-c911-4973-aa92-968219440c44"
        },
        "item": {
          "id": "02de35ce-c16a-4f41-b27f-47ab560ed8ef",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "78fc9fca-9e12-46c0-9b0e-ed99b91850c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0534ced1-a0ca-4be4-8b46-314d3215cc70",
        "cursor": {
          "ref": "a3e5edee-58c3-48b8-961a-9ff526bee10c",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4d77e940-d4c0-4189-957f-ae74cc3adf38"
        },
        "item": {
          "id": "0534ced1-a0ca-4be4-8b46-314d3215cc70",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "efd9dd75-1f49-466d-8a02-b06d1fdaeacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0e7d07-e4fb-49f9-83f5-e963ab52d3a0",
        "cursor": {
          "ref": "4a8c0e64-c8b9-4228-8255-4a1038251d23",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b92376e9-7a0d-422c-98d8-3ae6d919cbfc"
        },
        "item": {
          "id": "3b0e7d07-e4fb-49f9-83f5-e963ab52d3a0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c9228d5a-a89f-4f99-aff5-061b0888d2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d78f161-ebc1-449e-81ab-f95f4adbf295",
        "cursor": {
          "ref": "e64fee87-1650-477b-851f-825cc55fa9c4",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c92c1f30-795a-4c7c-902d-f265cb8639d7"
        },
        "item": {
          "id": "3d78f161-ebc1-449e-81ab-f95f4adbf295",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1acc7269-51c9-469f-9819-c62511ddda60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508c1318-9cd6-44f8-85d0-56911f3ec0ad",
        "cursor": {
          "ref": "ecaa5d83-a95c-4a5a-a2bd-4017a4a47790",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2c741802-cf34-4182-b507-a9afe08b3b45"
        },
        "item": {
          "id": "508c1318-9cd6-44f8-85d0-56911f3ec0ad",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c981a330-6d7e-4bf9-bd7c-3041dc16e758",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 631,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d9478b-777d-4ba6-9790-9fb181a21319",
        "cursor": {
          "ref": "0fdf4424-1cf7-42a1-bfe4-3e79ec5169d6",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "751018f6-8397-4589-8778-a721ba58070d"
        },
        "item": {
          "id": "e2d9478b-777d-4ba6-9790-9fb181a21319",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e98f14b3-e0fd-4ee8-923e-cbde551ae7a8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 531,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:47)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:47)"
            }
          }
        ]
      },
      {
        "id": "30129856-d932-4adf-b4a0-75ed4829882e",
        "cursor": {
          "ref": "31a97636-2d98-49e3-a5a8-fa51c6f2f36c",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "74ef1e49-901d-45c7-8aea-afdf42e3f3a6"
        },
        "item": {
          "id": "30129856-d932-4adf-b4a0-75ed4829882e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "342ebbda-6e37-45ee-9e06-93366dc11d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddebe624-4e38-4c4c-b130-a738931c032b",
        "cursor": {
          "ref": "fee9b89a-1648-4491-a68e-6f9e55544757",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e418bc81-9cb3-4c12-a855-762a8e816119"
        },
        "item": {
          "id": "ddebe624-4e38-4c4c-b130-a738931c032b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0eb8c611-86d9-4798-b7c1-5cbe4c2782b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cdb850-bb9a-4d11-808e-68c5a8e029e4",
        "cursor": {
          "ref": "233d9565-d44c-4db1-a336-a9c8547cb97f",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0f5dd82e-6538-485b-92f1-3c69ce89a58b"
        },
        "item": {
          "id": "a7cdb850-bb9a-4d11-808e-68c5a8e029e4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b1494504-7dd1-4671-8c60-340f488eeca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d03c8f-c15d-478d-832a-59b0d209f058",
        "cursor": {
          "ref": "487e79cb-0621-49f1-9783-8b432bf790c8",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c3e51b44-51b3-4fa2-943f-5bc9fa2b813d"
        },
        "item": {
          "id": "d4d03c8f-c15d-478d-832a-59b0d209f058",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c03f000d-5567-4c72-95df-f4e03eaced0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2584d845-5f26-40ef-9147-689595759205",
        "cursor": {
          "ref": "fd30bb9c-bbee-41fc-a343-3cb397c7aa01",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "20887a78-b35e-4089-b8a8-3b214fa5cd08"
        },
        "item": {
          "id": "2584d845-5f26-40ef-9147-689595759205",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "747696cd-fd33-438b-8d22-e9a590e36419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba16da7-bc93-4149-9196-aa225b07354e",
        "cursor": {
          "ref": "dace9e7e-786b-4ed8-983f-41ef303cb05b",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "640f9b9a-1a8f-44c2-a314-301e27eb7f5a"
        },
        "item": {
          "id": "2ba16da7-bc93-4149-9196-aa225b07354e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6cf3f349-ae04-4c3e-b56e-c4b1a67c48c4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 564,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cececd-fd9c-4969-9374-82a00a857e31",
        "cursor": {
          "ref": "6965bc1b-b4cb-4d18-aa34-b1fba99e7b73",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3fdb7b48-1b08-446d-9778-4c5e9c98c067"
        },
        "item": {
          "id": "75cececd-fd9c-4969-9374-82a00a857e31",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "df1205ed-c9f0-494c-a4bf-2cf4610eb072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef488cca-ac0a-4eb2-875b-adf922b3a6d3",
        "cursor": {
          "ref": "5d8709ac-8378-460c-b30a-784077f25c2d",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a63a779a-2ea3-4afe-b578-f21f13660bd2"
        },
        "item": {
          "id": "ef488cca-ac0a-4eb2-875b-adf922b3a6d3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1342616a-b921-4c89-876f-20fd2e1b9af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923ed3be-3a0d-47cd-b077-f18da381fedc",
        "cursor": {
          "ref": "c9c771b1-fba2-4b77-a111-3538800bf625",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ab7b95d3-84d0-4da3-9290-9067da42bcce"
        },
        "item": {
          "id": "923ed3be-3a0d-47cd-b077-f18da381fedc",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c80e7e45-c742-412b-b644-a2d5b943dacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cf86f7-a304-469b-9d87-3e67a2bef0b1",
        "cursor": {
          "ref": "1ae73397-dbe7-4121-9544-df81c3a08b9e",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4e9f56bd-1f64-4a9f-a186-e44b49dfd67d"
        },
        "item": {
          "id": "66cf86f7-a304-469b-9d87-3e67a2bef0b1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1ad869d1-c690-49cd-950f-ae30fb2cee29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bd8901-2c97-4542-8580-fec0499e0067",
        "cursor": {
          "ref": "1366749c-99a9-46bb-849e-4175f4bdb49a",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "98b31c1b-87e3-4a51-bdb0-05101063fd7f"
        },
        "item": {
          "id": "96bd8901-2c97-4542-8580-fec0499e0067",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7613db04-1099-481d-9c83-39eb6cd522e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2119cc47-7335-46b9-92b7-faf1fc473f39",
        "cursor": {
          "ref": "fa115e7d-5ca4-477b-82d8-78a87bac0a7c",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b26105a8-7728-49c1-94d3-cd518d6c29ae"
        },
        "item": {
          "id": "2119cc47-7335-46b9-92b7-faf1fc473f39",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bd379d63-b018-4cbb-95f8-c6519d3d0916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df335e03-a19b-4dd1-9888-6e9e7406f194",
        "cursor": {
          "ref": "40625214-515e-4951-8500-04504fc09b09",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "41c543b3-6928-498c-90a4-18753d350c10"
        },
        "item": {
          "id": "df335e03-a19b-4dd1-9888-6e9e7406f194",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b1cf1ee4-95af-410f-99d0-b0cf0aa3a548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19538a5f-6d85-4b8d-9984-1532fad83609",
        "cursor": {
          "ref": "4f5e4d66-aecf-4587-94dd-78497ea649c1",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ea1c40ad-22df-4b21-87f6-8c5c347e1672"
        },
        "item": {
          "id": "19538a5f-6d85-4b8d-9984-1532fad83609",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fe727376-0f75-41e4-917d-3b1b295eb1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52447e4c-17d4-487b-b07a-fc0df5cf2a14",
        "cursor": {
          "ref": "76175202-4111-4214-b4ae-562cfd39d723",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f8b81597-d738-42e2-8011-7e3d7bc056a8"
        },
        "item": {
          "id": "52447e4c-17d4-487b-b07a-fc0df5cf2a14",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c830213f-cb85-4afb-a695-8f24f4ac62ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d454140-57c0-4d21-89ff-e1c6cde94b3a",
        "cursor": {
          "ref": "09e51a55-8be4-48c6-b0fb-70d8a0489b7e",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ae7e34ee-a97a-4f36-8792-6141e257f94b"
        },
        "item": {
          "id": "7d454140-57c0-4d21-89ff-e1c6cde94b3a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9511dcf8-abfd-4ac2-833d-37939cb2ae9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de39b92-c8e9-42dc-954f-59c1761534a0",
        "cursor": {
          "ref": "5cde8408-9004-44bc-b8b8-693ec53f1305",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2cc7c2d5-b0fa-4868-a1f3-f7a3c839901d"
        },
        "item": {
          "id": "9de39b92-c8e9-42dc-954f-59c1761534a0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6154d3f4-6216-4181-a597-47dba80d95c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 995,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4903f194-9f5c-4f4c-8961-ac230fbdc035",
        "cursor": {
          "ref": "6ffdd12b-df26-4d37-a537-d679130d756a",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "41988d65-9d81-4821-89d4-551066ec4d71"
        },
        "item": {
          "id": "4903f194-9f5c-4f4c-8961-ac230fbdc035",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "21aee854-e402-4d3c-8821-93bdd473f2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 926,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a7f48e-7827-494e-9a6f-492b0d8dfd98",
        "cursor": {
          "ref": "cff1b4ba-9c59-4e68-9bbc-74d4c049f0b1",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5cfc5b57-a8ac-4d7b-b880-39e4bf176bbc"
        },
        "item": {
          "id": "09a7f48e-7827-494e-9a6f-492b0d8dfd98",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d63f1ce7-5920-4b10-b4ab-be7148538d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1264d708-d352-40a7-a7a3-396b6a208621",
        "cursor": {
          "ref": "04549de2-4f13-4610-a098-cf6f2bba2b14",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3e1d800d-8fc8-436c-89a9-ae9e979ed866"
        },
        "item": {
          "id": "1264d708-d352-40a7-a7a3-396b6a208621",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e1ddee55-650a-431b-aca9-0ab835c834c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b81205-7dd5-4d97-b70d-ef55054d9b55",
        "cursor": {
          "ref": "5ce2bd21-b6cc-4249-b26c-985324fefd85",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9f74b173-c8a2-4625-8aa4-c3f4eb03f43a"
        },
        "item": {
          "id": "89b81205-7dd5-4d97-b70d-ef55054d9b55",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "84f83b42-31b5-4df3-89fe-3cb98495022a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0b863a-948c-433a-a1b1-21c081e3a608",
        "cursor": {
          "ref": "3bc61779-d069-4ba7-96ff-4f3b9d5d0b1a",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6c3cb84c-ee7f-4dba-b707-1505f85846be"
        },
        "item": {
          "id": "6c0b863a-948c-433a-a1b1-21c081e3a608",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d8ee7a48-5bf0-43c6-ae21-91b5141dd910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5b1726-2f80-4f2b-b009-0f3bc35eaf0a",
        "cursor": {
          "ref": "1b627cf1-7fd2-477d-b187-cb22b88efe1c",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c7ce5cd8-61a9-49d4-bbaa-d40d3f624bf2"
        },
        "item": {
          "id": "ed5b1726-2f80-4f2b-b009-0f3bc35eaf0a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6823a5ef-8d8b-4780-bbf8-38f1ef63e9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9034bc3b-bfba-48cc-865d-76789917f638",
        "cursor": {
          "ref": "4831ec6a-5925-455c-a006-0d31be17a7ef",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "43e94eca-db98-493e-b72c-8b40ecb6e2aa"
        },
        "item": {
          "id": "9034bc3b-bfba-48cc-865d-76789917f638",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fab41218-cf5d-4bab-92ce-c543d83e1bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5406b379-dbd3-4d9c-b70e-b758c717b27d",
        "cursor": {
          "ref": "4b149c26-6520-4415-b1ea-43bca381b1e6",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7320b37d-d47a-4fa1-b52f-7f49f1cb3cab"
        },
        "item": {
          "id": "5406b379-dbd3-4d9c-b70e-b758c717b27d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f7e1e0f4-487b-4478-accf-4f6f31f35189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9e2ff3-8022-4ba0-93b2-2251ee4dcf2b",
        "cursor": {
          "ref": "57bd10c3-a749-417e-9a8a-a88f91ed6863",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b2714425-62e8-4917-9057-a484eb4755ec"
        },
        "item": {
          "id": "8b9e2ff3-8022-4ba0-93b2-2251ee4dcf2b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c7a523a1-53bf-463f-b89c-3ee092908176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0f48e2-b1da-4d00-9db3-d7f9cc63ca38",
        "cursor": {
          "ref": "26d6cb7b-2929-49f0-8825-f4e4fc2253b3",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a8f4fa8b-4b27-4dea-88a4-bc784cd26d3f"
        },
        "item": {
          "id": "1e0f48e2-b1da-4d00-9db3-d7f9cc63ca38",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0a8f6889-b7d0-46c1-bcda-a89057be1625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36587106-3e94-4026-bdd2-0d8354e8e85c",
        "cursor": {
          "ref": "671d9063-c7a2-4751-82e2-dca9237cafa3",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "076ee92c-ac52-46bc-aa70-254fc05cfe55"
        },
        "item": {
          "id": "36587106-3e94-4026-bdd2-0d8354e8e85c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "99cf73ab-8c30-4181-b74e-b4da8956d087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3c66f8-185c-4370-b742-adf2b04b3716",
        "cursor": {
          "ref": "d895758b-5386-40e6-9d39-26172db036e6",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "aae44a9d-ce83-477a-b393-a70a4d35875f"
        },
        "item": {
          "id": "bf3c66f8-185c-4370-b742-adf2b04b3716",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f2c63276-4cc1-4d48-be12-ed4844b17eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dd0d2d-22ac-481b-9f3b-da879afe39af",
        "cursor": {
          "ref": "7e6b3216-9112-49c7-8c62-c8271ed482c1",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8509c5fb-47db-4534-baee-9741f9841351"
        },
        "item": {
          "id": "91dd0d2d-22ac-481b-9f3b-da879afe39af",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9102c7f4-a862-4034-a8be-d0d7eed9d671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a66e1e2-63de-4795-ad8c-c993390dfd7d",
        "cursor": {
          "ref": "fe10ccdb-8218-4cbe-915c-7743c931a1db",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ef892951-f1d4-4386-b878-b7472ecc7c91"
        },
        "item": {
          "id": "4a66e1e2-63de-4795-ad8c-c993390dfd7d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "83003f6f-103d-4950-8e36-3305c45d22ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef1e43c-558f-40a0-b5ca-dfc7b4109cb8",
        "cursor": {
          "ref": "f7f15e6a-a27c-4db5-89c5-9cea23028586",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "735f366f-d0af-4516-a132-c5d7bc89b04a"
        },
        "item": {
          "id": "bef1e43c-558f-40a0-b5ca-dfc7b4109cb8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "06282e61-9a5b-4666-843d-b67bf681ac13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1032,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3795880e-9172-420f-a43c-b0421bd49787",
        "cursor": {
          "ref": "5da20475-2c02-453d-a51a-5a3d8faae445",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "01143131-04a2-4045-aa95-6722cdddd289"
        },
        "item": {
          "id": "3795880e-9172-420f-a43c-b0421bd49787",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0ce41633-c949-43ab-98bd-c45e70701859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812310a0-e519-4b6b-a709-17645fd0a9d0",
        "cursor": {
          "ref": "9ecac468-361b-4676-87c8-5213abd758f0",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e48b2e79-0002-4651-93d8-47a5caf240e0"
        },
        "item": {
          "id": "812310a0-e519-4b6b-a709-17645fd0a9d0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "eaea7836-a5a8-46d6-85ee-7bf6b1cf2622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da183efc-1cac-4c0f-af0b-661117126d79",
        "cursor": {
          "ref": "598bbe71-a7fe-4b32-9a80-4a95147af063",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "33c9fb88-ada6-48cd-baec-9c0b312fdb66"
        },
        "item": {
          "id": "da183efc-1cac-4c0f-af0b-661117126d79",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "69852596-a7d3-40a4-8eb2-c18eca4ffb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 859,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f041fe63-db29-488d-aa78-dd3dea1dd65e",
        "cursor": {
          "ref": "5f82ced7-ebca-48d6-ae90-73ca7c76be42",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a9b16d40-546f-4fc6-ac59-ba372abc2341"
        },
        "item": {
          "id": "f041fe63-db29-488d-aa78-dd3dea1dd65e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "de8c3800-06a5-4cfc-9eee-06e60fe83de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940813b6-6963-4263-ac0e-368a461ebc08",
        "cursor": {
          "ref": "0d0ba941-ae7a-48f8-a4c9-5ce531bc2557",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8a25a342-8633-485d-899a-63e231e8d76b"
        },
        "item": {
          "id": "940813b6-6963-4263-ac0e-368a461ebc08",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9b1fb43c-88ee-4bef-b125-b77c7a109531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3c340d-501e-421d-ac7e-56b6b3c6f59c",
        "cursor": {
          "ref": "7556d515-e39c-4e7b-a770-51e19062cf37",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fe85dff6-632e-42f0-b40a-bd180cd7c2c4"
        },
        "item": {
          "id": "0c3c340d-501e-421d-ac7e-56b6b3c6f59c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3526a88f-cd5e-4150-ac99-673691117dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267b5ee1-2186-43b9-bc94-fbc006da28f0",
        "cursor": {
          "ref": "ab829e76-98c9-4455-9884-239bb1fbaa1e",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "81e35fe5-2794-4c86-ac6f-ac0466e5a5aa"
        },
        "item": {
          "id": "267b5ee1-2186-43b9-bc94-fbc006da28f0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4d3f65ce-2687-4dd5-8e1e-ed35d2da22d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20788bb-4ea4-4d78-9353-432ff7477e40",
        "cursor": {
          "ref": "d3290f5d-a5f4-4e2f-9425-00855e18b917",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cec9c8e4-d8b4-4ec8-9745-f975b8b957f8"
        },
        "item": {
          "id": "d20788bb-4ea4-4d78-9353-432ff7477e40",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "27a35988-210d-4a42-8ded-a5730d3c1310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69030acf-1c33-4efb-9a05-fa8c59be7b4c",
        "cursor": {
          "ref": "8bcff08f-fa42-4e82-97e1-42841b232a56",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0b2a2083-7374-48f0-87df-dfc4dd3b2ecf"
        },
        "item": {
          "id": "69030acf-1c33-4efb-9a05-fa8c59be7b4c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f720afa6-3180-4422-bd26-58f96f824f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63177801-d854-4f90-890f-24a7d9596243",
        "cursor": {
          "ref": "218f6c75-44a4-4585-858b-3972373b1019",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "64f61e8a-e663-4d41-a890-f0793c8b7af1"
        },
        "item": {
          "id": "63177801-d854-4f90-890f-24a7d9596243",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0841af94-6f1c-4902-9218-3036a96fdc37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b412b27-71e7-4cba-96b6-f39ebee33224",
        "cursor": {
          "ref": "146eb39a-7b0e-4008-b2c1-78e2ec368ffd",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cda74ca3-1616-498e-a43c-4b91ecc6f7d6"
        },
        "item": {
          "id": "9b412b27-71e7-4cba-96b6-f39ebee33224",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0ca47056-abf1-4cbd-b015-f4bf495109c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6fee9b-c415-44ad-b4bf-9c6f2ebd0eae",
        "cursor": {
          "ref": "7643497b-f73f-4940-ace5-9a2e08714a7b",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dbe411e4-2269-41b6-b369-82ed57c58999"
        },
        "item": {
          "id": "fa6fee9b-c415-44ad-b4bf-9c6f2ebd0eae",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "45d6d56d-df0c-4ff0-8dc2-8a44ec61f7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c49977f-27c1-4d08-ad52-4dfe9ab1ac22",
        "cursor": {
          "ref": "3d8f70cd-53ec-4641-b4ad-3f8b65da6ad6",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d4cfa01a-f8ba-4507-ae7b-b48aee800b99"
        },
        "item": {
          "id": "6c49977f-27c1-4d08-ad52-4dfe9ab1ac22",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "012e069f-cecb-4035-a05a-674fd6165188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bf7d8c-1919-4d3b-8293-a55ae5a5adf4",
        "cursor": {
          "ref": "d91b699a-bdfc-48d9-9f92-4b00eb15c757",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7d9db937-a2d1-4d04-b0b4-e28ae4fbac61"
        },
        "item": {
          "id": "a3bf7d8c-1919-4d3b-8293-a55ae5a5adf4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "01e612cd-71ff-4cf9-ab09-d319857f5447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524f1045-8673-4f82-9b50-8dc6653e3fe0",
        "cursor": {
          "ref": "ac6e8ef6-93e5-4a18-a70e-eb889b1804ff",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e2cc5097-65ca-42a0-8096-a44dad2653ce"
        },
        "item": {
          "id": "524f1045-8673-4f82-9b50-8dc6653e3fe0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "48a97508-ec81-4320-817d-dbc55f0ca936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8978fd-4484-4259-8ff1-15e6889f63f3",
        "cursor": {
          "ref": "ad3d705c-2c64-4290-a9a4-32ba15e22d4c",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ae98d751-1347-4b45-bdba-3458489f7da5"
        },
        "item": {
          "id": "4f8978fd-4484-4259-8ff1-15e6889f63f3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "930d38b3-2151-41ea-a853-d5b1726b3c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d739e8-8a5e-43e2-b40e-890f58210e23",
        "cursor": {
          "ref": "19dd0da3-7f34-4fbc-bdef-1868c178da9d",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "379902bf-b780-4f79-a24f-1564232175f9"
        },
        "item": {
          "id": "e2d739e8-8a5e-43e2-b40e-890f58210e23",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a7f1b43b-57e1-4baf-a8e7-df5124d269b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35770d40-fa85-40da-a529-57f2f52c771a",
        "cursor": {
          "ref": "6484ee29-8a1a-4086-a717-1325f85f0b29",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c0cefd3e-7900-4f6e-b98a-e8b49a2ca419"
        },
        "item": {
          "id": "35770d40-fa85-40da-a529-57f2f52c771a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c5d986c5-598a-4a14-9810-27b237834fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 904,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f048a9ba-be8f-497a-a197-b984981d794e",
        "cursor": {
          "ref": "7b121c8d-b5c8-4715-9546-3be83633f5d3",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a205746e-0363-4926-92ca-1c1f085c3c38"
        },
        "item": {
          "id": "f048a9ba-be8f-497a-a197-b984981d794e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "81aa360f-4b0c-4827-b38a-446023b0b6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61a3197-1b2f-40e1-9973-e8ee25798ed7",
        "cursor": {
          "ref": "723e41bb-267b-48b5-9ac4-2ed3ae506288",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "247f4270-a594-4e34-9474-879564e86b1a"
        },
        "item": {
          "id": "a61a3197-1b2f-40e1-9973-e8ee25798ed7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4f4589ff-7ec8-4558-b6fb-c998b2fe6066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 900,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158150b6-b9e8-4664-a844-3ea2122b9c7a",
        "cursor": {
          "ref": "d4affc78-575c-46b6-a7f7-f5a09137c32a",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3378cd0b-cc7c-45d0-b922-37e742baffd8"
        },
        "item": {
          "id": "158150b6-b9e8-4664-a844-3ea2122b9c7a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5cdccaaa-4dca-4a29-9c14-9b49e059927f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6e5a80-9fe6-4c6d-9dd5-8caa7151bb47",
        "cursor": {
          "ref": "317ff9f1-b000-497b-9588-e14c3afb7098",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d8df3c7d-23b2-427d-a4cd-dc7c1e2ddbf1"
        },
        "item": {
          "id": "4d6e5a80-9fe6-4c6d-9dd5-8caa7151bb47",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2f0dc8ff-5d06-406f-b3d7-d7530e46d4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d06cb0-fe02-4fba-bb76-b41315e10de1",
        "cursor": {
          "ref": "4f98f8c5-c75e-473a-93e8-481a388e6dcd",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "96511fa7-32fd-4401-853a-d5063d4a3516"
        },
        "item": {
          "id": "05d06cb0-fe02-4fba-bb76-b41315e10de1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "80bf8554-1858-4147-9ca7-ab3343c08aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b222f38f-e8a1-4671-966a-15b0f0b7c8ca",
        "cursor": {
          "ref": "f75e9143-bac6-4031-8b73-7613cd46facc",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ea64c1c8-a5e6-46d7-a180-235ddccb6a67"
        },
        "item": {
          "id": "b222f38f-e8a1-4671-966a-15b0f0b7c8ca",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4c3f2558-2acb-471e-b2df-7fc773e35aaf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad568812-3cc4-4942-9a4c-786f418daa9b",
        "cursor": {
          "ref": "0b2ca139-e611-4622-8093-8f9a4018826a",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "eff0c49f-4868-4da7-aa6e-d3df988e877d"
        },
        "item": {
          "id": "ad568812-3cc4-4942-9a4c-786f418daa9b",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "f4019403-e614-4eb9-9a0e-e690528fb945",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 543,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cddbfb0-8da6-42d9-bbe9-aa0f8c01d87d",
        "cursor": {
          "ref": "910d63f0-7488-48cf-ab0a-f615c6328fbe",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "983e2d49-7dc2-4d3f-abf6-976e99f26ffc"
        },
        "item": {
          "id": "3cddbfb0-8da6-42d9-bbe9-aa0f8c01d87d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "76cd3541-4971-4234-b760-d0412088b71b",
          "status": "Created",
          "code": 201,
          "responseTime": 4249,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3520d1d-0bb5-4882-b784-53a0662259ac",
        "cursor": {
          "ref": "929b94c2-02bc-49b6-9506-47bb5d1b578a",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "68a5ac8e-2feb-4a00-afbd-9e328b6fe013"
        },
        "item": {
          "id": "b3520d1d-0bb5-4882-b784-53a0662259ac",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "889b8e79-2968-432d-bda0-9fd72e5e3a40",
          "status": "Created",
          "code": 201,
          "responseTime": 3867,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae77ab4b-2d74-4cc6-8fe9-cb86fca47bf1",
        "cursor": {
          "ref": "68ab43d9-1bfa-4cb3-b11c-ba39f25c00d3",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c68c4c29-7243-448a-b404-5431af464041"
        },
        "item": {
          "id": "ae77ab4b-2d74-4cc6-8fe9-cb86fca47bf1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9f92400d-79ef-47d6-b745-a334ace31755",
          "status": "Created",
          "code": 201,
          "responseTime": 4071,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdf3126-a605-4659-b3a2-75ac515ab366",
        "cursor": {
          "ref": "f7622b47-a609-4a32-8ff9-60a5e9542a23",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "82bf2ce3-904e-48f5-9c2f-6cc267d1720e"
        },
        "item": {
          "id": "0fdf3126-a605-4659-b3a2-75ac515ab366",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a4cb7234-8939-4e97-bd2b-02bf2b35131c",
          "status": "Created",
          "code": 201,
          "responseTime": 4499,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f9495a-d544-4c08-bec4-819eebb4643e",
        "cursor": {
          "ref": "b384011b-c2be-458c-bbf8-9d99a863b080",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "80b95157-69f5-4b4e-9bc1-e0a838bcfdea"
        },
        "item": {
          "id": "e9f9495a-d544-4c08-bec4-819eebb4643e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "364bc4e0-6725-4e47-885c-2f7edb1d3fdf",
          "status": "Created",
          "code": 201,
          "responseTime": 4807,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6821c77-f479-4e7c-a1ce-d8b7f825bc65",
        "cursor": {
          "ref": "ac1a8187-913f-4f73-8838-9dd0ab0061ac",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4d3a9624-f11b-4bfc-a94d-c66c783e3461"
        },
        "item": {
          "id": "b6821c77-f479-4e7c-a1ce-d8b7f825bc65",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e7a48d71-2588-4b9e-81a0-7b0233a4d39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6821c77-f479-4e7c-a1ce-d8b7f825bc65",
        "cursor": {
          "ref": "ac1a8187-913f-4f73-8838-9dd0ab0061ac",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4d3a9624-f11b-4bfc-a94d-c66c783e3461"
        },
        "item": {
          "id": "b6821c77-f479-4e7c-a1ce-d8b7f825bc65",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e7a48d71-2588-4b9e-81a0-7b0233a4d39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d10b46-32dd-4ee2-83b1-ec145d8a8540",
        "cursor": {
          "ref": "77b970bc-aee5-4b32-b347-54a003c23c8a",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8685d591-2dd9-4385-86a6-7db4dd872fee"
        },
        "item": {
          "id": "b8d10b46-32dd-4ee2-83b1-ec145d8a8540",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cfef13f8-9eb9-40c0-ac60-97bac7b39082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbdb5d7-b02b-4419-801c-7087e3741685",
        "cursor": {
          "ref": "54250b91-5546-4fa3-8f49-56b1c75ce0ae",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b9bb4042-7163-4807-9298-96d3021fbfc3"
        },
        "item": {
          "id": "9fbdb5d7-b02b-4419-801c-7087e3741685",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7717f6fa-f4fe-4ac0-8537-dd3e7877f39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c7bb4d-195c-4fa1-a8dd-27a7e605c7fa",
        "cursor": {
          "ref": "7b8f1203-a7ab-4055-84e5-7cce759adf12",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "132ff4eb-5458-49f3-8ebc-e78b2bc98339"
        },
        "item": {
          "id": "82c7bb4d-195c-4fa1-a8dd-27a7e605c7fa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b8a5c9b2-0ad1-4aad-8946-7d2f67864a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 875,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b037dcc-9688-49e0-b9e3-05ace0d4eb0c",
        "cursor": {
          "ref": "e047619c-0b83-49a4-abf2-0400099413d7",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ff152986-06bd-4b11-96be-8e9c05839e59"
        },
        "item": {
          "id": "4b037dcc-9688-49e0-b9e3-05ace0d4eb0c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "eef19790-6786-453e-bfdc-c725bce1374f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a101084f-d813-4271-a632-1be1346bf479",
        "cursor": {
          "ref": "904fbe75-dfd0-4fc9-9977-c2500102cdac",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3b96cfae-b718-432a-b2a9-c9f94d6449dc"
        },
        "item": {
          "id": "a101084f-d813-4271-a632-1be1346bf479",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fc483679-4aa7-4506-8ebc-24947b28ca2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e2b343-58ba-47e9-8b74-42c494890c1c",
        "cursor": {
          "ref": "be1207c1-aef7-456f-83cf-06a09cd92502",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a7f9261d-47dd-4eb5-9c82-2522bad3c34d"
        },
        "item": {
          "id": "25e2b343-58ba-47e9-8b74-42c494890c1c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a5c5587a-8ff0-4137-bae4-5faf8e7a0931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d66995c-1def-4228-a57d-b5249504d49b",
        "cursor": {
          "ref": "8db25eff-091a-40e0-8775-f43d5231a2b0",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "95edd282-ecc1-4f20-9482-e75d0e35322c"
        },
        "item": {
          "id": "0d66995c-1def-4228-a57d-b5249504d49b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "791a8e1d-8b53-4365-89b2-3f5fbff54907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632c6c7f-37a7-46ed-8715-ed067e8a74e8",
        "cursor": {
          "ref": "5587aa62-3aa6-4541-a76e-a8b0bd166fe4",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0a5dcc9a-ce00-49ef-8901-09716de72418"
        },
        "item": {
          "id": "632c6c7f-37a7-46ed-8715-ed067e8a74e8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "92b92927-37ef-48cb-9f8a-5c7021f11ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d31a0b-735d-4829-94fe-a928b3e7a325",
        "cursor": {
          "ref": "d3f2ff9b-081b-46b0-85cf-40206d84152c",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f21cee07-797c-4450-a65c-27d5ddaf1bb8"
        },
        "item": {
          "id": "33d31a0b-735d-4829-94fe-a928b3e7a325",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8748f13b-6ee8-4f24-9600-74a1e26493b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349333b4-23ba-48b9-9b9a-86c724d96eda",
        "cursor": {
          "ref": "1bfd8c87-6d9d-42de-9561-198a875a06d8",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "40c0245c-3a05-428a-868d-b38da18e0278"
        },
        "item": {
          "id": "349333b4-23ba-48b9-9b9a-86c724d96eda",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "810a3e24-a782-4bd0-8abe-1ad2031569df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acfade0-19e2-4cca-b66f-f8e583808e0c",
        "cursor": {
          "ref": "6ae3405c-6506-4c03-a694-bddae8c9aced",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5779cc4c-e409-44b7-9d15-0d8b215a5043"
        },
        "item": {
          "id": "2acfade0-19e2-4cca-b66f-f8e583808e0c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b449cae1-895c-4c95-81eb-0d68a5b76f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de38f4e7-eef2-416b-9177-d7e4460b2284",
        "cursor": {
          "ref": "9bca2944-9336-4117-aed8-a9dbc37e12b3",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "31bdd8b5-be6f-4bc6-b6d5-8d7fb00380dd"
        },
        "item": {
          "id": "de38f4e7-eef2-416b-9177-d7e4460b2284",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b9e005ae-8895-4f29-8af1-2f5c3282921f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac18ba98-cea1-4134-aea0-df27e91f73c0",
        "cursor": {
          "ref": "0a1afb31-a6f0-45d2-964c-05dc173bf4c0",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "aaa5f13d-7739-4e3b-87f8-af61ce5d9128"
        },
        "item": {
          "id": "ac18ba98-cea1-4134-aea0-df27e91f73c0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "85ac6f9e-355e-49c5-8194-426630b9a56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9a0727-a040-4233-962e-6be1871982ad",
        "cursor": {
          "ref": "9616a3ce-8e8f-490a-b49c-55098f77adb3",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9bb630f0-4ea5-49b9-a521-cfe8304b9702"
        },
        "item": {
          "id": "9f9a0727-a040-4233-962e-6be1871982ad",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f7f778a0-b70f-470d-b540-55359dc0e146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8dbfaa-a795-4104-a30d-29e24bae1795",
        "cursor": {
          "ref": "30b9752d-a94f-4226-8771-9c28b383767c",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "48c79b3f-199e-4f41-8309-1d45862450e2"
        },
        "item": {
          "id": "3a8dbfaa-a795-4104-a30d-29e24bae1795",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e19ba7eb-4cd0-415a-9baa-126fff66d15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6713cc-ccb3-4781-9830-8aa8e567f5b0",
        "cursor": {
          "ref": "065d5cbd-d1f7-4281-814f-c1eef7e0f26f",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7b02dd2b-76fd-428d-923e-f59f90457a96"
        },
        "item": {
          "id": "9b6713cc-ccb3-4781-9830-8aa8e567f5b0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f48d195d-3321-459e-ac85-493ca77e8fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d386a9-8f50-471a-af2a-3d125cc75f12",
        "cursor": {
          "ref": "b7d646da-1c9d-421a-a3f7-c32407110b1c",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3882e5b5-90a7-4cb9-a17c-87a53e402b9c"
        },
        "item": {
          "id": "e0d386a9-8f50-471a-af2a-3d125cc75f12",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7cfa2779-8dc0-42ea-b316-2e97ad26732e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda7a762-43ef-4782-8ee8-c279c8ebb6c5",
        "cursor": {
          "ref": "8381a67e-e539-4fe3-918b-8d5d4f7442f6",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ced86c0d-6017-4b0f-90a2-3617c0791fa3"
        },
        "item": {
          "id": "bda7a762-43ef-4782-8ee8-c279c8ebb6c5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5fe00b5d-33fb-415a-8df4-2997445b6b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad362a87-955f-435c-b711-d099412407e8",
        "cursor": {
          "ref": "68318d0b-61e3-461f-9665-a06336ce94a6",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e9cd0907-50bb-439a-86ed-a0337f5ab0f7"
        },
        "item": {
          "id": "ad362a87-955f-435c-b711-d099412407e8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b8b787f4-521e-40be-b555-edc3bd734ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18085726-ae44-43b9-ad23-b1ca8339ceb0",
        "cursor": {
          "ref": "29064d11-a3c1-43a6-9b0f-ef964fce4c5a",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "06a8dde7-5253-41d7-9675-f3bd7391aea7"
        },
        "item": {
          "id": "18085726-ae44-43b9-ad23-b1ca8339ceb0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "29077340-afb2-453c-8347-44faf91fcace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61674965-53b0-4f7b-bb68-d4d0cb3602f4",
        "cursor": {
          "ref": "52ef6869-3e18-4fb0-a93d-68d82d637066",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2c4f6479-90ad-4732-bd87-bbd4582e5626"
        },
        "item": {
          "id": "61674965-53b0-4f7b-bb68-d4d0cb3602f4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3d5a6f46-3255-41fc-97d8-4f30a4eacc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f94aef-5b1f-4f25-b6c9-b48ed3d6d408",
        "cursor": {
          "ref": "8227a9a6-8ac7-4b24-b448-5d0aec24f0aa",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "20e52925-7155-4dde-9bca-059068ae6901"
        },
        "item": {
          "id": "41f94aef-5b1f-4f25-b6c9-b48ed3d6d408",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "85b08f18-5b90-4ac9-8d30-5f144dbd4db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d9bc71-1a7d-4314-b577-ff858481799d",
        "cursor": {
          "ref": "a806102d-81d1-4d4c-b2f6-67337a644961",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8c5903bd-1bc1-4487-8b09-59be9ad53991"
        },
        "item": {
          "id": "e1d9bc71-1a7d-4314-b577-ff858481799d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9c71e1ce-bb0d-4372-b668-9639edb7142b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dc8666-2afb-4456-8ab4-8f567bda347b",
        "cursor": {
          "ref": "8c7c6b00-9d83-4d4d-a3cf-6224e36b779d",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "23d9488f-96a4-49e6-9118-d5bd18a91cda"
        },
        "item": {
          "id": "f3dc8666-2afb-4456-8ab4-8f567bda347b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a45856ae-25e2-4f85-b497-cbcdc95f95fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44737a0-ad4e-4c56-af2a-c4a672b36a6e",
        "cursor": {
          "ref": "db83e7f7-7c74-48b4-ac99-52925e3a0806",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d8b5f838-807c-4e59-aab7-ec9e26e2502a"
        },
        "item": {
          "id": "c44737a0-ad4e-4c56-af2a-c4a672b36a6e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "57dea55b-4fd0-4934-8c78-a07749521edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e98e21-8058-4747-be35-a3328e34fa03",
        "cursor": {
          "ref": "7f5c2ca1-3094-438f-9675-1d11df715bdd",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b3f69078-49e9-4dee-8bd9-09d0e54f01b9"
        },
        "item": {
          "id": "c5e98e21-8058-4747-be35-a3328e34fa03",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9bdf032e-9ecf-4a70-9fbf-5120ea10be6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8759f339-a5ba-461d-9f69-27b014ef04bd",
        "cursor": {
          "ref": "054da8e0-848c-4628-ab05-3c70b9949b59",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "72288f93-8461-4259-b838-0a88a2dbd119"
        },
        "item": {
          "id": "8759f339-a5ba-461d-9f69-27b014ef04bd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c3aa19ee-4721-4da1-8d57-689c85d8c818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f41714-e73e-4d8e-910c-cde96e9cd993",
        "cursor": {
          "ref": "90d80d69-8626-4056-b427-703aa2f9cc66",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c1836243-5388-4e09-97da-cfcbaad70ad7"
        },
        "item": {
          "id": "b6f41714-e73e-4d8e-910c-cde96e9cd993",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9b7b04f4-d722-4ecd-8776-30de98eae944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3db6e89-2824-48fd-a98a-4aad5adeff0e",
        "cursor": {
          "ref": "a02aca77-c5f2-4f8d-a604-055a732aa948",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "83f44df0-1e4e-4f5b-86ef-14b8f264402d"
        },
        "item": {
          "id": "b3db6e89-2824-48fd-a98a-4aad5adeff0e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "14345c6c-ab72-4535-8890-24e33c4b85aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a49d65-a5ae-4723-a6be-02db026944f8",
        "cursor": {
          "ref": "88a1ec7f-0018-4dd2-99ec-842bbe6938de",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3f7600d3-37d0-447e-a13a-9a5b4737962b"
        },
        "item": {
          "id": "35a49d65-a5ae-4723-a6be-02db026944f8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b42c9288-e1e9-4282-a518-b0a4afc1054b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac41bb09-301a-4d8a-816c-4feeb16b49cc",
        "cursor": {
          "ref": "a3a59726-9ba9-4467-87d9-4da018bf5b81",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "27bdfb71-9005-4e78-a7a9-ae809a5e653d"
        },
        "item": {
          "id": "ac41bb09-301a-4d8a-816c-4feeb16b49cc",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0dfed6d2-2806-4606-a7a7-12bb6c0df4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed922aa-feae-4293-a58d-8e1b9b17cd65",
        "cursor": {
          "ref": "dd572892-89cf-4ed6-ac25-b649b9f62ef5",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "dd3936cf-d4b2-464a-9e64-82875b66b519"
        },
        "item": {
          "id": "2ed922aa-feae-4293-a58d-8e1b9b17cd65",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "21226f81-2634-4962-9ddd-3394edb50c28",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd91b3d-0bb8-47b2-abd8-13d8f7f89073",
        "cursor": {
          "ref": "4f16f4b3-356c-4845-91e1-de52679533ed",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "561c144e-39b0-43be-93ba-5c24e1135ed1"
        },
        "item": {
          "id": "5bd91b3d-0bb8-47b2-abd8-13d8f7f89073",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "3a2df5a8-d685-4b00-a351-03f074b35f85",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 770,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d875190b-f3b2-4259-aa10-87bba24d00c2",
        "cursor": {
          "ref": "4cdbb14e-9359-43d0-952b-0a9af5ba5849",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ba9509f1-5ed0-4f91-a807-b05b97c89cd1"
        },
        "item": {
          "id": "d875190b-f3b2-4259-aa10-87bba24d00c2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f24d7109-b4e6-4040-a264-763424bd60e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d875190b-f3b2-4259-aa10-87bba24d00c2",
        "cursor": {
          "ref": "4cdbb14e-9359-43d0-952b-0a9af5ba5849",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ba9509f1-5ed0-4f91-a807-b05b97c89cd1"
        },
        "item": {
          "id": "d875190b-f3b2-4259-aa10-87bba24d00c2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f24d7109-b4e6-4040-a264-763424bd60e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc232722-f469-4ef5-95ac-684e20bbf05e",
        "cursor": {
          "ref": "1b922cd4-2f90-47cc-9f0c-1c300e7b340c",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5c689ab0-3fa8-4a23-84e9-3cb3edd32a84"
        },
        "item": {
          "id": "fc232722-f469-4ef5-95ac-684e20bbf05e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a8395736-1236-476d-a39c-fe4f565690b5",
          "status": "OK",
          "code": 200,
          "responseTime": 554,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "2bfa29cf-6a64-4327-b5d3-2bf2b97e132f",
        "cursor": {
          "ref": "27d9a0f0-2534-4985-bd94-f79b56a1a5e4",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b6428361-f859-4fe0-871a-2460dc24701b"
        },
        "item": {
          "id": "2bfa29cf-6a64-4327-b5d3-2bf2b97e132f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e2478d5a-df64-46f9-84fc-c32c8fe9f3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45ed755-5b5e-4721-8132-d13880ed7590",
        "cursor": {
          "ref": "5ca8fb47-db5a-4dcc-8ae4-55fcd73b6cdf",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2f321329-07e0-41c1-8b1b-042f5eac8402"
        },
        "item": {
          "id": "a45ed755-5b5e-4721-8132-d13880ed7590",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d84575cf-fce7-447a-8cee-db4b65abe9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4910057-6bc3-4257-a7d6-025a8716fdc3",
        "cursor": {
          "ref": "c25bebc6-d19d-4501-9a4b-d988a243a009",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ab2ac1c2-9afe-46a1-a5a0-5aa68c4ee6c6"
        },
        "item": {
          "id": "e4910057-6bc3-4257-a7d6-025a8716fdc3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0787507a-e6b1-439d-975d-c5970ef7fcbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb1658a-f723-49b6-87d3-4c956e65bc93",
        "cursor": {
          "ref": "222b1f18-d3b4-4d04-8af1-5fdfd7be5556",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b6219a89-bc7c-4171-b309-f47f8866d01d"
        },
        "item": {
          "id": "abb1658a-f723-49b6-87d3-4c956e65bc93",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c6ac01f3-4526-4202-93cf-63e1812bb083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743eeb95-d5c5-4547-809f-3a9a8a2f028e",
        "cursor": {
          "ref": "f9dee272-eab7-4ab0-b442-69440b161b4a",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "16721349-e6b5-40ee-994a-4799c271a1b2"
        },
        "item": {
          "id": "743eeb95-d5c5-4547-809f-3a9a8a2f028e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "36d9fe86-f62e-42c9-bd87-72f7e0559a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e92817-188d-46b5-877d-608d6cda4539",
        "cursor": {
          "ref": "538f0d6b-a897-499b-97de-00653a31f458",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "92c3ec2c-3671-432b-b906-754d4fa39c29"
        },
        "item": {
          "id": "d1e92817-188d-46b5-877d-608d6cda4539",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "328ce55a-1b47-423e-a801-483796e49236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94ff977-f7ea-485f-aa8e-80cb7344b763",
        "cursor": {
          "ref": "6ac7902d-3ac5-4f69-94d8-832b444f3fc6",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cbb6c0a9-9a0e-4702-95d0-2892d8e7455b"
        },
        "item": {
          "id": "f94ff977-f7ea-485f-aa8e-80cb7344b763",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "27616d15-1b22-47c2-8510-bf61bc4d8049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16af582c-f3b5-4a22-a7f9-6a633a32ab68",
        "cursor": {
          "ref": "fecdd518-6394-4fbc-8d5e-b9a0b5e5dd39",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fb0474c3-e98e-4cd1-ba53-6ac3ad167181"
        },
        "item": {
          "id": "16af582c-f3b5-4a22-a7f9-6a633a32ab68",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "89e2bc45-1bd5-4f49-913a-60f3f4e78086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05dadb8-0786-4595-b916-6081d2d58635",
        "cursor": {
          "ref": "3eb59774-8770-4da4-9143-0bbbda3857cd",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "39087b95-e261-4316-aa15-016902b33eb7"
        },
        "item": {
          "id": "a05dadb8-0786-4595-b916-6081d2d58635",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0b30d614-2704-4378-8eb4-05fa0d99da88",
          "status": "OK",
          "code": 200,
          "responseTime": 646,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "4b26d7f6-df72-44dc-aeed-44ab7dffc3a8",
        "cursor": {
          "ref": "5b26073d-44e0-4478-bf58-e59fbc49efa2",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "37b87156-5a1d-4e7a-ad9d-75464189d586"
        },
        "item": {
          "id": "4b26d7f6-df72-44dc-aeed-44ab7dffc3a8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4fe0f398-44ea-4765-aba6-9c80021b2282",
          "status": "OK",
          "code": 200,
          "responseTime": 422,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "27e7573f-2e21-4e47-838f-a9a350f76e1a",
        "cursor": {
          "ref": "16d7937c-0d69-46cd-98ae-3d4f994e1d21",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "831d2987-d3e8-4f90-90b4-f9561a7ed05f"
        },
        "item": {
          "id": "27e7573f-2e21-4e47-838f-a9a350f76e1a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ba518ae5-6d81-42b2-a1a7-d9f69a8df263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838284c6-7d9e-4d74-8c2d-ca40818bc5f5",
        "cursor": {
          "ref": "5a3123b0-5ce5-4656-9f4c-40e6534aff0a",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b7e04fed-ba16-41df-8078-b07bed25a83d"
        },
        "item": {
          "id": "838284c6-7d9e-4d74-8c2d-ca40818bc5f5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "342e4e46-606f-4616-bb5f-122cd7aa1c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab951196-0b1c-4fcb-853b-c8d1902359fd",
        "cursor": {
          "ref": "191bf306-59d8-4256-a4b0-917af0d4f9de",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "da7094a6-5aac-498a-9dd5-029203889382"
        },
        "item": {
          "id": "ab951196-0b1c-4fcb-853b-c8d1902359fd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7a143762-507e-4776-9c25-561f9f2d46ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12f8891-8809-481b-b384-b5debbf297fb",
        "cursor": {
          "ref": "249aab7c-8868-448a-9764-b9b847edba55",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2cf99722-0070-4ad1-a8cd-d523cc27b26e"
        },
        "item": {
          "id": "f12f8891-8809-481b-b384-b5debbf297fb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1d6b4aae-648f-47fc-8712-f692edaafd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f66e93d-57b0-4350-9961-624b75e60e5a",
        "cursor": {
          "ref": "1fd2fc9a-5638-4e4c-80db-c93889bc892b",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4ed2009c-62e5-45cd-9a69-ef88e4149c77"
        },
        "item": {
          "id": "6f66e93d-57b0-4350-9961-624b75e60e5a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bd8c63f3-b878-40f8-a80a-ab7fff9a1e97",
          "status": "OK",
          "code": 200,
          "responseTime": 357,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:160)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:160)"
            }
          }
        ]
      },
      {
        "id": "6e27a42e-ebfa-4979-acb2-3f6d8276b048",
        "cursor": {
          "ref": "c612a507-099b-49c0-a228-74bb34c79799",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f4941449-d826-4aec-87b5-a1a31b3bb03a"
        },
        "item": {
          "id": "6e27a42e-ebfa-4979-acb2-3f6d8276b048",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "6e83f9ab-3921-4081-816b-bd1ff555792e",
          "status": "OK",
          "code": 200,
          "responseTime": 2050,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:161)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:161)"
            }
          }
        ]
      },
      {
        "id": "a497bc86-5343-4980-a51d-00882d8bb3f3",
        "cursor": {
          "ref": "2a580e55-5a58-423a-b1cd-0d1712fb568f",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "67c88914-7b57-45c2-bca8-a60d7082f86d"
        },
        "item": {
          "id": "a497bc86-5343-4980-a51d-00882d8bb3f3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4f3b1790-4d1b-4a57-8fbe-42ff2d6a6eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a88840a-5c14-4267-9417-c43aacc58153",
        "cursor": {
          "ref": "5a55edee-eef4-412d-85d8-18f5f827633d",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4595be7d-f191-4dcd-8d1c-4cab2ddd49b1"
        },
        "item": {
          "id": "3a88840a-5c14-4267-9417-c43aacc58153",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3f457be6-55ac-4205-968e-131a10cbfd44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419271f8-09a4-413d-8df8-000b2a3fa4f2",
        "cursor": {
          "ref": "bacf008b-8101-47ac-b2d1-4a4ff9c5c4f6",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0215919b-ba6b-402a-86ba-280b2e34e676"
        },
        "item": {
          "id": "419271f8-09a4-413d-8df8-000b2a3fa4f2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "13fca4b9-26bd-4cf6-9558-ba31bd1a871c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d676a912-34c6-4ef1-bc13-6d57627cb29a",
        "cursor": {
          "ref": "98642da9-6ff3-459b-998e-dce46187af90",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1cb6111c-a30b-4cbb-8a7a-55ed04ab5e84"
        },
        "item": {
          "id": "d676a912-34c6-4ef1-bc13-6d57627cb29a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "30d0edb1-a8a1-466f-bc25-2f50b0e9285b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83dc19b1-023d-416b-9f69-23bc657db900",
        "cursor": {
          "ref": "de70827c-1e6e-4260-bce8-5c329223d915",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2eb76f77-a344-4b2b-b1a1-3a8ba6b33dab"
        },
        "item": {
          "id": "83dc19b1-023d-416b-9f69-23bc657db900",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "36732d34-a1fe-4c28-af86-e6e5600a51a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da68ee46-b597-4a98-ab3a-afb2ec64a2f4",
        "cursor": {
          "ref": "2cf1a58f-6474-4cac-9cfa-adfddf1ee4f0",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cc86c78f-9f06-4634-8814-2438bdf3be0c"
        },
        "item": {
          "id": "da68ee46-b597-4a98-ab3a-afb2ec64a2f4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "24a27ca1-75b0-4d9e-a58d-cebc0438807d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf33f361-676a-4d14-bef7-b520e7bff264",
        "cursor": {
          "ref": "c2218ee8-2077-4447-9719-9d391a4f5aa3",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d43ab18c-ed0e-4f65-be12-050348fe647c"
        },
        "item": {
          "id": "bf33f361-676a-4d14-bef7-b520e7bff264",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "979c3c50-f278-420a-8c6a-987577ca280f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92132a0-c8de-4e66-a53f-be94b6c8c670",
        "cursor": {
          "ref": "7c1227bb-da8d-4199-8f3e-3943a710d7d2",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "78f240b3-5d25-4a41-a9e4-8c6eb63a5fb8"
        },
        "item": {
          "id": "c92132a0-c8de-4e66-a53f-be94b6c8c670",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7e9b019f-2900-4cc9-894f-2a3de3253344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3cd0a5-79f9-487a-9e06-6a24425f148e",
        "cursor": {
          "ref": "84461551-5c72-4efd-9ed7-df234984134a",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "cfd08895-fce6-4b28-ab98-6304cb926f47"
        },
        "item": {
          "id": "cf3cd0a5-79f9-487a-9e06-6a24425f148e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8197b360-5711-4a37-ac97-808e7df60e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5173d2-bba8-46d6-af10-9c669e2a7bec",
        "cursor": {
          "ref": "32a6effe-d4d9-4e65-af47-f312e05d5d4e",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fc29e000-b650-4179-ba38-adaaf132ab9f"
        },
        "item": {
          "id": "df5173d2-bba8-46d6-af10-9c669e2a7bec",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d6870017-b5ac-4b00-b01f-14cd95964e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25541e3-7b80-490a-9e87-428a52fa37e7",
        "cursor": {
          "ref": "f3a281fd-60b9-4d18-bde5-eec29a55b99e",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "83c46db9-a258-477f-8737-c547df5df2df"
        },
        "item": {
          "id": "d25541e3-7b80-490a-9e87-428a52fa37e7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "14258ea0-e649-4a57-8e0c-5731f9aee531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c759bd-ab84-43f7-a7dc-edfa67af794a",
        "cursor": {
          "ref": "df575364-ff58-42bb-9945-92c6b05103d9",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "06a4d659-9189-41bc-b3cc-2917bf3847f9"
        },
        "item": {
          "id": "17c759bd-ab84-43f7-a7dc-edfa67af794a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4656d676-125b-407d-9c8b-6ea7736a529e",
          "status": "OK",
          "code": 200,
          "responseTime": 298,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "24b20dfd-a821-41f7-b619-6af1332b751d",
        "cursor": {
          "ref": "34f9813b-1cdc-4d45-9f34-b93a217208c9",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "519bff3b-8c5e-425b-a531-77196e5e61d3"
        },
        "item": {
          "id": "24b20dfd-a821-41f7-b619-6af1332b751d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9bdbbb69-19f3-49b5-99c5-e5d32c240933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712b9bb5-9406-44d4-9d12-d7ac4e50e2be",
        "cursor": {
          "ref": "c56a2132-554e-4f66-9038-e495b1a967a8",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "038704de-1636-46d7-96ff-01e9ac66befd"
        },
        "item": {
          "id": "712b9bb5-9406-44d4-9d12-d7ac4e50e2be",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "284b7059-ee4d-42c8-b6a9-f625946f2dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bacd45-9b90-437e-a5da-efffd3b86dbe",
        "cursor": {
          "ref": "1a6fbd13-7112-402c-a8c8-b1f308f87745",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fa108c99-c209-48c8-868a-ac92ce4cfe0e"
        },
        "item": {
          "id": "54bacd45-9b90-437e-a5da-efffd3b86dbe",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ddc8510b-a58c-4b4c-9845-8f1a06a32049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a302b7c-a863-4c88-8694-e8abb4d1f1e8",
        "cursor": {
          "ref": "03faf6a9-c275-49a0-93ac-9fa6befc11bc",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cea3edc5-727f-43ae-bbea-d0a57ccffab3"
        },
        "item": {
          "id": "5a302b7c-a863-4c88-8694-e8abb4d1f1e8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e10fd751-1bf9-4103-8d65-7e30d3812d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a8d227-c4a9-4abb-8ffb-cb0762584eca",
        "cursor": {
          "ref": "86a39828-e8f3-4867-81a0-4b241d54142f",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ef6f947b-eb2c-401d-bbf1-90962d4607bc"
        },
        "item": {
          "id": "77a8d227-c4a9-4abb-8ffb-cb0762584eca",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bc2921d3-7109-43b1-b2b2-c4e5ccc398e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a6c8d0-ae70-4d65-92e9-a7a8e089ec37",
        "cursor": {
          "ref": "184ae421-d6c6-4f66-a058-aebcf84b55ce",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5a70ba69-43dc-4db7-84ec-474fbaf97e2c"
        },
        "item": {
          "id": "38a6c8d0-ae70-4d65-92e9-a7a8e089ec37",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4cc40199-0931-40c3-ba05-5171d562be4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d8c8c2-0a3f-4e18-a51d-b9a3abdf5328",
        "cursor": {
          "ref": "32193763-3bde-4c9b-ba55-44e70d74e01c",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6a892bbd-b756-4ec0-9156-9db6ea7e46c7"
        },
        "item": {
          "id": "54d8c8c2-0a3f-4e18-a51d-b9a3abdf5328",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dca7fd1e-d199-46df-adbd-531e5c08932a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5c3579-3052-431e-80a4-c2b897c78e0b",
        "cursor": {
          "ref": "5f9ef6d7-3c06-49b2-8b75-860769dfac48",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6a496c55-7c62-4596-b14f-d732fb2cb99f"
        },
        "item": {
          "id": "ad5c3579-3052-431e-80a4-c2b897c78e0b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "40d829e6-be3f-475e-9751-634004371f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c25b9b-de7b-4059-beff-781ce9b5fba2",
        "cursor": {
          "ref": "80ea6049-8f22-4613-9e08-94dd67d0292d",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "46775967-57cb-4088-ac4c-f36d04259c5a"
        },
        "item": {
          "id": "d2c25b9b-de7b-4059-beff-781ce9b5fba2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c607f6bf-a253-4c79-8211-67071d03d217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dcf4c0-7386-47c2-8959-318dbfac3bdf",
        "cursor": {
          "ref": "04eab58f-ba86-4723-a5b1-39d70d5e13a1",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "93197245-3694-4a4d-91ea-41755724cf90"
        },
        "item": {
          "id": "31dcf4c0-7386-47c2-8959-318dbfac3bdf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5721aaa6-38d8-428b-a8b0-49e68e4d3094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72658800-6cb3-4ca7-aac2-72ee3e55b0e8",
        "cursor": {
          "ref": "16568f56-939f-43fb-ba78-797e7b159271",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b70be8bc-4e2a-473b-addb-c9d5a21a2e87"
        },
        "item": {
          "id": "72658800-6cb3-4ca7-aac2-72ee3e55b0e8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "41418d43-0037-4d8a-9ed0-c95773ee8ee9",
          "status": "OK",
          "code": 200,
          "responseTime": 423,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:184)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:184)"
            }
          }
        ]
      },
      {
        "id": "17198662-c0ab-462a-8f19-5e3cc4cb97c0",
        "cursor": {
          "ref": "98f81abd-5c3e-49c8-b171-abc2733343fa",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f2d56298-4d4c-4ddc-8bfc-76fbf32b8e88"
        },
        "item": {
          "id": "17198662-c0ab-462a-8f19-5e3cc4cb97c0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "920641b6-3929-4f2e-bfca-953c03238436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf599732-d72e-40c0-ad16-2713967decc7",
        "cursor": {
          "ref": "edca6334-099c-46bc-90d7-e2818a5c67ea",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8231a967-29e8-430c-99f4-c41223f37398"
        },
        "item": {
          "id": "cf599732-d72e-40c0-ad16-2713967decc7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "366be998-e1ee-435b-ac32-df8d21a0171f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893a24ef-d755-4ac0-8432-8dd7118f869b",
        "cursor": {
          "ref": "bff42920-3e41-4372-9bd7-4fac898e7b46",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "483ee72b-8b93-4986-a25e-ba5b6cfcab91"
        },
        "item": {
          "id": "893a24ef-d755-4ac0-8432-8dd7118f869b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3d5c99cf-abb2-4a9f-88e9-275b81f2ed79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90294448-24fc-4a5d-b9f0-82a6fab51efe",
        "cursor": {
          "ref": "de4e200a-e75d-4205-8fae-c51665dbac8b",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3960675d-f59d-42ab-af62-23e32ed05ad7"
        },
        "item": {
          "id": "90294448-24fc-4a5d-b9f0-82a6fab51efe",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a729f2a6-7f9a-4ea0-9f07-690a7ac1256b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55770bf1-d923-4b1b-b74f-44c8d4fa116d",
        "cursor": {
          "ref": "952175d0-8dc8-48cd-aa74-df3fb53f72d9",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5492ffa2-834e-4ef3-af60-fbba5b1af178"
        },
        "item": {
          "id": "55770bf1-d923-4b1b-b74f-44c8d4fa116d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "577fed02-5eb3-4128-b8d6-d9d93406e567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4687f471-c6a9-4ff9-8681-ef32ec0667bc",
        "cursor": {
          "ref": "336a526d-b6dd-4576-83b8-3bc944c8e983",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "23ac8aa8-d5b5-4786-a671-1f4025daf794"
        },
        "item": {
          "id": "4687f471-c6a9-4ff9-8681-ef32ec0667bc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c4208efd-dac8-445f-94da-7bebf21f49c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112bf8bb-2c31-4c59-a3d9-460cc11e7592",
        "cursor": {
          "ref": "02468c75-2386-4a3c-b105-ea14b086409d",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "28929e90-0a55-4bc4-aa62-1a0ed2170df2"
        },
        "item": {
          "id": "112bf8bb-2c31-4c59-a3d9-460cc11e7592",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f015b78e-e660-4134-b32b-117d5cee7611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97fdf0f-3607-4946-a269-47246bd35deb",
        "cursor": {
          "ref": "f1304ac6-111c-4b79-bd28-340a6311cee8",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a58f3a77-8d7c-4a6f-8d1e-d472e10f8c9e"
        },
        "item": {
          "id": "d97fdf0f-3607-4946-a269-47246bd35deb",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3982ccfc-323f-4ad3-ab02-e93126c7799a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218eb3ed-5ec3-4cd5-b12f-838a8653b970",
        "cursor": {
          "ref": "9a573f38-fd7f-4dfc-8faf-48515e439eed",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b562e2ba-ebfe-4b84-8558-65a5a23a5909"
        },
        "item": {
          "id": "218eb3ed-5ec3-4cd5-b12f-838a8653b970",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a9720343-370a-4cb1-bf62-a98b325dbf94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00093cde-17d7-4495-9165-e40ad189b88e",
        "cursor": {
          "ref": "29ad0196-cead-41c2-b4e9-8e500692539c",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8d4d010a-6aad-4c4d-9166-d3ecd9930c6a"
        },
        "item": {
          "id": "00093cde-17d7-4495-9165-e40ad189b88e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "aa9dec59-5b97-4dca-9a13-367e756bb6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd12fdb-7305-4f06-9e2d-a50914ede496",
        "cursor": {
          "ref": "61eb0ed4-4486-4b89-a1c7-17fac27ea4cd",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5d482381-f1d5-49e5-8364-de693001f61c"
        },
        "item": {
          "id": "6dd12fdb-7305-4f06-9e2d-a50914ede496",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "913748e2-d1d1-40c8-830b-d28d330076e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ff0d75-32cc-44a7-be03-26ff3d7b0187",
        "cursor": {
          "ref": "49f6b231-4c7f-4cda-97f2-7ab988c39a48",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9ab431e9-3eec-4fc9-a0f8-089bfe3f50d9"
        },
        "item": {
          "id": "85ff0d75-32cc-44a7-be03-26ff3d7b0187",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1b8204f5-c340-4c33-a4d7-f42ec548e24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcca2fb-1c9b-464f-b222-92dadfc867cb",
        "cursor": {
          "ref": "c750e56a-20df-47bb-9fd1-7418012720a2",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d0a99916-dba1-48ab-8ff6-e79a45aaac06"
        },
        "item": {
          "id": "dfcca2fb-1c9b-464f-b222-92dadfc867cb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0526bfb0-6192-4aec-aa36-4386440deb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91749c99-07ab-4f1e-b7b6-6e60e3e8367a",
        "cursor": {
          "ref": "97170fa8-4ee0-4f17-83d2-48c41aa3a683",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2a6e3bcf-aca9-4887-a3ba-964488e09074"
        },
        "item": {
          "id": "91749c99-07ab-4f1e-b7b6-6e60e3e8367a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c0edfb4a-54d1-4693-afc3-e4978fd5391a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807a1378-0e46-4d7e-8a4b-0c0431e6b837",
        "cursor": {
          "ref": "8b8f0b3b-e031-49b6-aeae-4036c24d6491",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4b309c6a-28f4-4750-9d74-e654826165af"
        },
        "item": {
          "id": "807a1378-0e46-4d7e-8a4b-0c0431e6b837",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "53535257-00ad-45f6-af65-c0abf2838990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19b152d-f709-4461-9aa8-b50da9d607a9",
        "cursor": {
          "ref": "025015ac-efe5-4b48-bad8-794fe5fe8532",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7c9af32e-2845-4ede-be76-0a153c7db6f8"
        },
        "item": {
          "id": "e19b152d-f709-4461-9aa8-b50da9d607a9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ad1b9b04-f6b8-4f14-a4c2-ec79e20894d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46728244-7589-4442-bea1-ac9c018301e1",
        "cursor": {
          "ref": "ea4783b1-2f31-4b34-b31f-1378e11039c3",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "61266d50-127c-4112-85a5-76af76cf6782"
        },
        "item": {
          "id": "46728244-7589-4442-bea1-ac9c018301e1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "798d5702-8f42-4682-99d2-deebf5adc621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3e1ce2-ef7b-4aa4-a0c2-f9d3f71e0cc1",
        "cursor": {
          "ref": "6a4a8639-0fdb-4b09-8c8a-dc4270397450",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e996d24f-a03e-4c1d-bd21-84d8776aa8ee"
        },
        "item": {
          "id": "9e3e1ce2-ef7b-4aa4-a0c2-f9d3f71e0cc1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "29ecdbe1-d846-4632-97b3-a1ef3c81874f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0833d8-d38e-47df-ab04-0e0ad87e33d7",
        "cursor": {
          "ref": "297a0f9e-576a-4bef-8cc3-763d26e7e49a",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0153cd4b-84ed-4545-a16e-6ceef6055043"
        },
        "item": {
          "id": "aa0833d8-d38e-47df-ab04-0e0ad87e33d7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1aec014c-ef70-42df-bedb-254260e3b19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19da712-f57e-4269-93eb-035c486f98ae",
        "cursor": {
          "ref": "ef9687e3-3667-48c9-a3dd-2a2b17708e1f",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6f2bcfed-74f6-4e2c-a7bb-fdcdd92904f4"
        },
        "item": {
          "id": "b19da712-f57e-4269-93eb-035c486f98ae",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6b2750b1-0feb-4e7b-a6a1-324c0577c731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f22b7cb-a3c1-482a-a311-da01dd84f6a0",
        "cursor": {
          "ref": "ae71653c-7fe5-4818-b348-e7ca3c1673f8",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "172c2ca5-2c11-4a26-8070-4f54d1b94616"
        },
        "item": {
          "id": "4f22b7cb-a3c1-482a-a311-da01dd84f6a0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4264a2a9-9b74-49e4-92ee-bc4638735498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e67a4e-6560-40ed-bd0b-72260f929b19",
        "cursor": {
          "ref": "b5e430dc-04b6-4006-8be3-69eb62e4def8",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8746483e-d96c-4082-afad-d7d510ecde1f"
        },
        "item": {
          "id": "88e67a4e-6560-40ed-bd0b-72260f929b19",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a1aaac8b-7312-4cd1-91fc-ec06eeaad9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92956609-68a8-403f-9c23-2a6acf469016",
        "cursor": {
          "ref": "9b2174a5-94ca-4479-8c00-791cae8879e7",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "aaad4aa1-1884-478f-8f99-185f2a1c2f46"
        },
        "item": {
          "id": "92956609-68a8-403f-9c23-2a6acf469016",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2f369f62-e33a-489f-b5f5-438a48a761c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea556d9-1907-4c54-9a8a-c0387e6d18fd",
        "cursor": {
          "ref": "2febb74c-90ec-428f-968f-576b634b1edf",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a901af2e-1e2b-4587-bca7-6b34afa52b7b"
        },
        "item": {
          "id": "2ea556d9-1907-4c54-9a8a-c0387e6d18fd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "915eb742-f416-469f-afb4-9884453f8d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810d64cc-372e-4797-a685-77faf8dfcec5",
        "cursor": {
          "ref": "0837273c-7e96-4151-a39b-0b280b773ae4",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "405d2e7c-f86e-439a-bb57-a1327ff7e44c"
        },
        "item": {
          "id": "810d64cc-372e-4797-a685-77faf8dfcec5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "21aad826-fee1-458f-b8dd-705404776211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4230ffd5-0a4c-4285-a1a6-9e174d36b6dd",
        "cursor": {
          "ref": "479b3d8a-a48e-4919-8d5d-12326a709d3f",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2e799cf8-2bd6-44d0-93c5-24a075a5ac8d"
        },
        "item": {
          "id": "4230ffd5-0a4c-4285-a1a6-9e174d36b6dd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e08e2362-9e31-4c7f-b884-af6f587aa81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e891744-0672-417f-a931-349a9b30dc36",
        "cursor": {
          "ref": "787bc1fc-8cc4-4a26-817b-599230de512b",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8d8fe00c-57cb-497c-9a54-7fedb22d1930"
        },
        "item": {
          "id": "7e891744-0672-417f-a931-349a9b30dc36",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6c05978f-0c4c-46a5-8763-7078701b4ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1aaaa8e-fdcb-432f-8f7c-4a89c23e96aa",
        "cursor": {
          "ref": "009cadf1-e0b8-46f7-b574-56c59f32bd8f",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4b43089a-6fcb-4b0a-b557-8c29ad116c90"
        },
        "item": {
          "id": "b1aaaa8e-fdcb-432f-8f7c-4a89c23e96aa",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f9a3aa3c-f517-4a7e-b7ac-3434abe026e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca686ff8-1102-4c5c-8c72-56498d986205",
        "cursor": {
          "ref": "e388c258-7289-4667-8136-a6d833fb29f1",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "afcafc8b-f1fe-4f21-b118-ca78af614597"
        },
        "item": {
          "id": "ca686ff8-1102-4c5c-8c72-56498d986205",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e7ff7b6b-6998-4ea3-bb2e-e170b9e697e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d56d4d3-bf56-48ff-9b81-09277e4b3690",
        "cursor": {
          "ref": "fcbb99ed-542c-4a95-9f7b-88dc2b486305",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c0faab2b-e9c8-4eaa-8eb3-60db12e6ae2d"
        },
        "item": {
          "id": "5d56d4d3-bf56-48ff-9b81-09277e4b3690",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "35b4cdc2-ce51-48cf-8869-e66b608c202e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd5c9ac-a5c5-4b48-a12e-45ed83c54d4e",
        "cursor": {
          "ref": "60fa8c81-a528-4d21-a20d-863b382c91e6",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7ae5fe10-2972-4859-9470-9a7ea2f55cb5"
        },
        "item": {
          "id": "3fd5c9ac-a5c5-4b48-a12e-45ed83c54d4e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a6e87f8c-b89f-4cba-a260-fb9d3fe74f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af746ff1-bb74-470b-963a-5f03ce0fa91b",
        "cursor": {
          "ref": "26d097a2-71c8-4ec1-a83c-3d505973144d",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "feb759b6-6c79-4fba-b491-c2509cf5361d"
        },
        "item": {
          "id": "af746ff1-bb74-470b-963a-5f03ce0fa91b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bd53330d-d87e-4e0a-b7c4-da9cbe7d6fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5ea75e-47cf-42e1-a104-0facb7af0d27",
        "cursor": {
          "ref": "e5db3255-5a47-4d87-b760-270a6f78623c",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "49e1bda3-f25a-4ccd-970b-a1b00f6303a1"
        },
        "item": {
          "id": "8e5ea75e-47cf-42e1-a104-0facb7af0d27",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "82fb7361-0cba-4e28-864c-9a3a62c4d305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c077ad-aea0-47dd-9781-6008a147e9fd",
        "cursor": {
          "ref": "25778163-98e1-4bac-b1db-e69a2838d7c2",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "eaf4c1d2-121a-4627-8ce1-34fd41f2b5b9"
        },
        "item": {
          "id": "63c077ad-aea0-47dd-9781-6008a147e9fd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1112ba3c-ca2e-40a7-8ac8-794aac53210f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ec7d97-8b8d-41ec-bef8-023c497eb06f",
        "cursor": {
          "ref": "00a0b0c4-83b2-4729-bdb6-115843cd5c90",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ba3f3b2c-9465-4f66-af5a-632d32532ac4"
        },
        "item": {
          "id": "d9ec7d97-8b8d-41ec-bef8-023c497eb06f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "91b456e6-9ecd-42bd-af89-b7e9c0eca8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d47021-5200-4de4-9bab-5cc6a2984b6a",
        "cursor": {
          "ref": "43705333-c20e-449f-ab2a-fff1a6048ada",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "610705cd-b5b4-4e56-b4e3-d48f73091894"
        },
        "item": {
          "id": "d3d47021-5200-4de4-9bab-5cc6a2984b6a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "610a5e0b-9050-4c18-9e65-02d37a95faac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b3788f-2eb7-4e02-807a-ec256c28fb5c",
        "cursor": {
          "ref": "7d82a4ee-e3d1-46fb-8a9a-a1682883af6d",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ae762bce-c60d-4767-ab94-838012e6d897"
        },
        "item": {
          "id": "b9b3788f-2eb7-4e02-807a-ec256c28fb5c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8ccc9551-3221-4f8c-9ea9-03cfef3ee5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e8e01e-2400-4d9e-8616-60e818d3136b",
        "cursor": {
          "ref": "8412e343-c595-4803-8ac6-b97f1eceeac4",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f92f07cd-39f6-4250-93bb-ef6e7702c3ec"
        },
        "item": {
          "id": "c8e8e01e-2400-4d9e-8616-60e818d3136b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b3f6604a-85ef-49d9-a652-f69ef48757f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27d5db6-53e9-4c48-a3ac-a91053543610",
        "cursor": {
          "ref": "c4ae3a1f-1150-4d2f-af54-614bd4293181",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "85d0188d-a7fd-4ff3-abb8-eb43e16179f2"
        },
        "item": {
          "id": "a27d5db6-53e9-4c48-a3ac-a91053543610",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "068ab5b9-3d3c-4c15-afe7-609c45af4998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d4bb44-01e7-4e30-aed5-41ebc3520f2e",
        "cursor": {
          "ref": "35432096-3e3c-4ed9-93ce-e64d7e3ea913",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "aa415025-3e26-476b-ae85-35d9904e33e4"
        },
        "item": {
          "id": "a4d4bb44-01e7-4e30-aed5-41ebc3520f2e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ac32f6b5-849b-4085-ba8e-6bd41742da60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45f8fbe-a46e-4870-a394-16b26646aa34",
        "cursor": {
          "ref": "3ea85a12-a511-4c8c-9752-9dcb6256d11c",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6d270336-51f3-4e4d-8bb5-3324a616e52a"
        },
        "item": {
          "id": "f45f8fbe-a46e-4870-a394-16b26646aa34",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2db2e200-04e5-4325-b224-110a417e7030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5842ad78-084e-4b35-9fed-1646388eb6c3",
        "cursor": {
          "ref": "5ece69cc-28a3-4edc-b07e-7326597fd2d7",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "35cfdfb8-9b77-402c-8226-5911118d5841"
        },
        "item": {
          "id": "5842ad78-084e-4b35-9fed-1646388eb6c3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a474de8e-e5bd-43e6-8bcc-1d9e8c62a493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a16bbe-a08e-4dbb-8b62-8fcb33a74352",
        "cursor": {
          "ref": "842c041a-2b67-46e2-8673-dc79b11c084b",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "69415a28-d328-4dc9-b0e4-7eb49d215018"
        },
        "item": {
          "id": "48a16bbe-a08e-4dbb-8b62-8fcb33a74352",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7f468f7a-be80-4eea-9d6c-1a8b67caaeec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a0ec5b-df0b-4a43-a461-47220f1ada07",
        "cursor": {
          "ref": "113bdb90-5525-45e4-987f-694799b367d7",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d8b56557-525d-444d-9e04-00763acd9ab5"
        },
        "item": {
          "id": "92a0ec5b-df0b-4a43-a461-47220f1ada07",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a91f922e-3863-41bb-b42f-5484367bff38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde0d5d4-9d3f-42e5-87ca-c9a895c39ce1",
        "cursor": {
          "ref": "1f7a326a-8eb6-462c-b44b-c33b99058a45",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "74a1ff1d-8c4a-4fe6-ba7c-52e06a8278d9"
        },
        "item": {
          "id": "cde0d5d4-9d3f-42e5-87ca-c9a895c39ce1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7dae3f86-cf0b-4a32-9e23-e5313ab2e442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fd715d-bd69-4c6b-9c25-26ddad5a501c",
        "cursor": {
          "ref": "6e8f3893-e155-40e0-8d47-2e3c3568bae6",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dd7ccfc0-467d-4886-8439-0c2508afbf6d"
        },
        "item": {
          "id": "49fd715d-bd69-4c6b-9c25-26ddad5a501c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e92fda8e-e96f-45a7-ac6c-c7a31faba13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c26f8bd-0937-4857-8e00-a91ef052173a",
        "cursor": {
          "ref": "2c82bb32-0a1f-45e5-a982-9d08d336bb74",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5c1af6a5-aebe-42a8-bc64-21553264086d"
        },
        "item": {
          "id": "3c26f8bd-0937-4857-8e00-a91ef052173a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cc4c8868-ad20-4a1c-a2cc-3919f79cfa8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b65fca7-4aac-49bc-9f6d-3afd32e674fb",
        "cursor": {
          "ref": "96fa792d-c4ba-4dc8-9fb6-f229f5746d95",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "50e3710d-a50f-4acd-b364-50dafe4ed231"
        },
        "item": {
          "id": "3b65fca7-4aac-49bc-9f6d-3afd32e674fb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c1e882d9-2ea6-4979-a2a6-70c80f5a3b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bdede2-b202-4b1c-866d-72367e663c3c",
        "cursor": {
          "ref": "b70833ad-1f9f-4f23-95c8-3b5926e2b357",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e1aea362-dbff-48af-a225-fa04ae28fe9f"
        },
        "item": {
          "id": "24bdede2-b202-4b1c-866d-72367e663c3c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "000398a2-c1cb-4e4d-843b-3bf3b2a7dc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9017143-6975-4006-a79f-088771f82d17",
        "cursor": {
          "ref": "07988ad0-9d1f-4819-b4c1-f59b0efb70cf",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6ebe2c92-b60c-40f2-9b59-e35240f493b1"
        },
        "item": {
          "id": "b9017143-6975-4006-a79f-088771f82d17",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "662831fc-feff-4974-b224-c2031cece596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644ff400-4db4-47ea-8851-6413ccf51ef3",
        "cursor": {
          "ref": "ce5ba9b5-6217-4ced-b3f7-7855b6341c00",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "87de85ad-1634-4feb-b65a-83d002b76d9c"
        },
        "item": {
          "id": "644ff400-4db4-47ea-8851-6413ccf51ef3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6df003d4-1cda-4247-bdc3-da6d575a5ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2044c0-d445-453b-baa2-ced89da378ca",
        "cursor": {
          "ref": "87c6dfc1-4e2e-423d-827f-f6a8a9bf65a8",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "caca40ee-a8e4-440c-bdb6-d491cda4e40a"
        },
        "item": {
          "id": "eb2044c0-d445-453b-baa2-ced89da378ca",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "51c4680e-af4d-44d6-97d4-5e51e5a5c5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86aea7ce-782b-4eda-8b8e-5b6c7bdc187f",
        "cursor": {
          "ref": "9d59aaff-2573-4961-b358-9777858f99eb",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5cee32c9-ca07-421e-926c-cb466e3f6f10"
        },
        "item": {
          "id": "86aea7ce-782b-4eda-8b8e-5b6c7bdc187f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "69dbf9d1-edce-48b0-9fb3-02ec8b72335e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55dd8b92-4ae7-4cd1-a6a4-acfbab031c84",
        "cursor": {
          "ref": "09d714e6-f8b8-41dc-8747-7955bd23424b",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ac972f05-952e-4cd5-a3a4-f1d2441ef93f"
        },
        "item": {
          "id": "55dd8b92-4ae7-4cd1-a6a4-acfbab031c84",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "12b2a5d5-732e-4f01-9c36-87461cc358ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b1e39f-94aa-4eb5-a710-bd6bccd363e9",
        "cursor": {
          "ref": "3f844fcb-5eb0-4345-b4db-8f3e18bef11e",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8d43e76f-888d-4e59-9260-ed09c1c4d376"
        },
        "item": {
          "id": "38b1e39f-94aa-4eb5-a710-bd6bccd363e9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "80646023-2506-416a-8e35-fb6f513c54cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff789a9e-1517-455b-89c3-fc4114c49d60",
        "cursor": {
          "ref": "f94c7837-1189-47c1-8d27-e28143259386",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "86af51d4-c443-4168-8efb-de24a0b153e9"
        },
        "item": {
          "id": "ff789a9e-1517-455b-89c3-fc4114c49d60",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e90ee64a-a865-4459-ada9-816f1bf2215f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58728b78-4bac-4d37-a1b8-c8c68fc9c29f",
        "cursor": {
          "ref": "d2d87523-db3e-4beb-96ba-9c28707c8a5f",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "82a687c0-bca0-4bcb-b56a-e471c0aa29a0"
        },
        "item": {
          "id": "58728b78-4bac-4d37-a1b8-c8c68fc9c29f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cc0edd78-62cd-4a82-9a31-0e853d57b3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53342f3e-e548-4f6c-9917-4e8196f7f54a",
        "cursor": {
          "ref": "ddb5942f-bb35-4fff-b85b-9305c51a9397",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0df553fa-65ae-43b8-b736-76935536a81e"
        },
        "item": {
          "id": "53342f3e-e548-4f6c-9917-4e8196f7f54a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e245867c-5038-4ca5-8529-eb095d0ef6c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ef2360-f359-4a12-a72d-6e59e393bd2a",
        "cursor": {
          "ref": "aaf67b47-0447-44c1-a253-48feb861a6b0",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3f3c38c8-0d7a-4cbb-b81e-c51e1ee4f944"
        },
        "item": {
          "id": "45ef2360-f359-4a12-a72d-6e59e393bd2a",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "afd2fe44-fed0-44d6-ab1f-4a44a8d4eda1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 295,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5397facd-0da5-46c8-b3fc-b4514c5d7ef3",
        "cursor": {
          "ref": "88c54979-d734-4c44-92ea-8d31abf04d0e",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1b2900c5-6f5a-4cab-b78c-4182c5cdfc66"
        },
        "item": {
          "id": "5397facd-0da5-46c8-b3fc-b4514c5d7ef3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b7a327c0-abd5-41c8-b8f8-4a0adc30b6b0",
          "status": "OK",
          "code": 200,
          "responseTime": 363,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "602fc59e-9cec-4dbd-829f-7553dfc32542",
        "cursor": {
          "ref": "4ce87c1c-8415-4146-a527-f89fc0b13645",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6f999f41-4c89-4da5-826a-702243b4a944"
        },
        "item": {
          "id": "602fc59e-9cec-4dbd-829f-7553dfc32542",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f8e95226-48f8-4be3-8c1f-61775bd70178",
          "status": "OK",
          "code": 200,
          "responseTime": 2139,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "14007b7f-63a4-458e-8690-c8463e30b941",
        "cursor": {
          "ref": "b3f109f7-7a1c-4590-b917-942c2d9ce456",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "be72acf2-f76a-41ee-9aaa-52358ea9affd"
        },
        "item": {
          "id": "14007b7f-63a4-458e-8690-c8463e30b941",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cfc9b2b3-3d9f-4cce-8745-8c150dfcc5d3",
          "status": "OK",
          "code": 200,
          "responseTime": 1518,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5bfaad-0bd9-473b-8b69-e3aa80c726fd",
        "cursor": {
          "ref": "867dfbca-f434-478b-86ed-eae4a0aa7d62",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "dddda4b3-b012-401b-965d-bab62754edfa"
        },
        "item": {
          "id": "3f5bfaad-0bd9-473b-8b69-e3aa80c726fd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4945b4fa-9c6b-4d3d-8647-34d85958d339",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5bfaad-0bd9-473b-8b69-e3aa80c726fd",
        "cursor": {
          "ref": "867dfbca-f434-478b-86ed-eae4a0aa7d62",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "dddda4b3-b012-401b-965d-bab62754edfa"
        },
        "item": {
          "id": "3f5bfaad-0bd9-473b-8b69-e3aa80c726fd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4945b4fa-9c6b-4d3d-8647-34d85958d339",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5bfaad-0bd9-473b-8b69-e3aa80c726fd",
        "cursor": {
          "ref": "867dfbca-f434-478b-86ed-eae4a0aa7d62",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "dddda4b3-b012-401b-965d-bab62754edfa"
        },
        "item": {
          "id": "3f5bfaad-0bd9-473b-8b69-e3aa80c726fd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4945b4fa-9c6b-4d3d-8647-34d85958d339",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81dcb8f7-34e9-4a16-a008-b040cd1ebd34",
        "cursor": {
          "ref": "8897995b-fe66-4e2e-af3f-2ac20713f48d",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e73ff558-1db4-48a8-b631-18705cccb44b"
        },
        "item": {
          "id": "81dcb8f7-34e9-4a16-a008-b040cd1ebd34",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "6ddad228-6e01-4722-98ba-99d6e746df2f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 301,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef43dcc-4cb9-4dff-b8c8-117996886371",
        "cursor": {
          "ref": "6aa7bac8-4f21-4edc-8f4c-a0c5d6edfabe",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "48e78b34-958c-4857-9514-2ec1409fcbbf"
        },
        "item": {
          "id": "4ef43dcc-4cb9-4dff-b8c8-117996886371",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "96ea4f25-02c0-4d28-b8e7-1f0481e51afc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef43dcc-4cb9-4dff-b8c8-117996886371",
        "cursor": {
          "ref": "6aa7bac8-4f21-4edc-8f4c-a0c5d6edfabe",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "48e78b34-958c-4857-9514-2ec1409fcbbf"
        },
        "item": {
          "id": "4ef43dcc-4cb9-4dff-b8c8-117996886371",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "96ea4f25-02c0-4d28-b8e7-1f0481e51afc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54915df-3f47-4a3a-a644-e6cf09387538",
        "cursor": {
          "ref": "3b7f29cc-4ac6-4cd3-a6e5-fdfb1d7d4cd1",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9d5fe528-f466-4883-bf3e-1f2c997fb6ad"
        },
        "item": {
          "id": "a54915df-3f47-4a3a-a644-e6cf09387538",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "bfb9819d-39cb-4272-aaf7-1ae715f0305c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 545,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3a1ccd-3e3d-4619-a262-68dc3d44c00a",
        "cursor": {
          "ref": "2e19d6d8-6932-4f96-9ef9-eb18fefc9cd5",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1258741e-c7b8-4c56-9eb2-48e38616233f"
        },
        "item": {
          "id": "db3a1ccd-3e3d-4619-a262-68dc3d44c00a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fe874808-fe63-4911-9dcd-09518fa1b888",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3a1ccd-3e3d-4619-a262-68dc3d44c00a",
        "cursor": {
          "ref": "2e19d6d8-6932-4f96-9ef9-eb18fefc9cd5",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1258741e-c7b8-4c56-9eb2-48e38616233f"
        },
        "item": {
          "id": "db3a1ccd-3e3d-4619-a262-68dc3d44c00a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fe874808-fe63-4911-9dcd-09518fa1b888",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694457e0-3864-491d-995b-ca62d712acd1",
        "cursor": {
          "ref": "80be3c21-a672-4f49-8031-de5d7bf8a77a",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0d8e6a38-ae2b-4686-aead-4e9f4ecbcbcc"
        },
        "item": {
          "id": "694457e0-3864-491d-995b-ca62d712acd1",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "6d39a12f-553f-475a-a619-b6d57ad48a49",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 547,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}