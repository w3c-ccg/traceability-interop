{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "77072df7-9fbf-4de6-8a1f-f59947831573",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e6e858bc-24af-4229-8059-debe71f6cf32",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "33b52739-caf7-4fa8-90ce-9177aafbe3fa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ed524429-59be-4d4d-b3be-205644b8f248"
                }
              }
            ]
          },
          {
            "id": "5f01c988-4a4a-4d3e-9982-efb5c1343cb4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e56ade0-aeed-4554-a458-ebd899a8e20f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d67c7797-7c93-4f54-b245-003a1de9b1dc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4ee6710a-a470-498f-9cba-5c5e79b513bb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e09b21ee-a3d5-4504-a971-b8dabf86da20",
            "name": "Positive Testing",
            "item": [
              {
                "id": "28c222eb-861d-4494-8f77-5ddace5783af",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84cd5c8c-37b2-4603-b719-35be05eb39d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6e1a67b-3404-4636-b800-3debb41254d1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4578bfbc-a7c5-4d15-bcf0-705e5fc1a1f4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dadb19e4-1e5a-4ab5-ae7e-6e2169fc4b85"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9367eb96-5260-404c-b6c3-77c9c557a487",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1266b7f1-7da1-4122-9f53-8c49c0b2f9f5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e261fa1b-704d-4e28-a5ac-69e7041ee4b2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f61bd5ee-bca2-491a-a10f-f34d8d7a6549"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "640fe88a-838e-4e19-b804-a04af87395a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "693a9882-573b-4e26-afe6-ae07fafcd7de"
            }
          }
        ]
      },
      {
        "id": "b29fac1d-21a8-41b5-9219-fb9686b7a377",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "40651fe0-b224-4877-be46-3962193ce27b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e398df4-0b9d-47ea-a434-2f8fab3349a2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5f136f5f-a92e-4f08-9786-0bc5fa4eefc6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974dd987-5890-46c5-a3b0-31059bf3b38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed0d518a-0220-4615-af76-c1927cabef1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f242289-03b2-45b6-95a8-11358f5ccb18",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d9cf75-02ca-48e9-b810-fbcd78be1ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15ba1c59-0fb0-423e-8e44-c6e7960ae00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af3b885-295b-4da4-a2fb-0a05d43b73de",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1dbf72-0574-4306-98dd-891d23af3fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9661ef68-eeb4-4c53-8f61-e38f4c82247c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "40d455e1-591c-4aa1-94ec-dc4ad4731ac5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "986bed19-5726-4341-90dc-e89faaaa14c0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8123e19d-c75b-4255-8a82-0f069010d99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4500b4e5-baa5-4057-8b1a-ee7154329e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71558a5-7b3e-4d29-8d62-0367f2d44fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e49daf6-690f-4225-8aa4-ded7a2ee2cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f0eb27-d09b-4c7c-babb-86da96204752",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24109c6f-d068-43bb-81d2-6d23b00323c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "745cbc73-5d2f-426f-996d-bd665a172bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29eea21-737a-4dc0-b729-93a7eeecc1ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "010059a7-95ae-47e4-afe7-be46c745e228"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e2ab18cb-d167-4815-8ac5-47f898ad6c7a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "92aa3915-0219-48ee-a4c3-f56d80348e2f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e0360e2-81ec-4286-b7e2-062fbf09d153",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "56d233e3-4387-41ea-8c26-d2112f8648e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07f1338d-fe27-4427-8d9d-5ffe4cf2e205",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "84daca4f-8902-4565-8296-366d86e32faa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db9feebb-c2b5-4a22-8106-d4ba1523a980",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "312b34f1-a026-41fc-94e9-7e6dedcc4032"
            }
          }
        ]
      },
      {
        "id": "28578c57-095e-46e5-b0cb-c74a2df8af83",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "36578c61-d72a-480a-add6-0a548f75fa1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c879f19c-0712-4a1c-af86-7d9657685b9e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d523de75-4d2e-4551-8dcf-a584dc4dd9cb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6658c86-cef0-4ef5-a4bf-ccd52c1b3232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c6f992-e2b5-47a3-acff-169e4a34946c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0077bc4a-3c2c-43a2-8634-19d2d806cc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67d9ff0c-3f57-4e2a-bc41-0ac10e2217e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6fff95-bc39-492a-ac7c-e8c0c3960636",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea0bb91-6fc4-4d5c-b61a-4884ddcd52b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6e8bac-b05f-4afc-97fe-a507a64dcb2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2897f3a9-28b3-47af-b0cc-f3c3882e877f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12191c9e-8bcd-4669-9ec5-e817dd541967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b460896-de64-4f88-884e-231ae8036e98",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7788a9-073d-4698-8610-c0fc7d465345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c0163c-08cb-4acf-9e2a-212657d151d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d72554-2235-4ee7-8b60-7d526994cd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f33cdbf4-ca15-455c-aeb3-013764a52aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a75dfe-3404-463d-bdb4-bb08d3366fe1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6d5d82-2f75-42e4-857d-9bb049cc90af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57992d46-9600-4268-9006-c95f6284562f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde83565-2552-46dd-96ba-2531a69127d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7453846d-a513-4e36-986b-105b0edc70e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70625321-dec5-463c-8b35-2f632cbbc97e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6b9540-31d8-4517-888c-b040caeb3dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db132a4-2ea0-4cc1-b7ea-6a6bad8771cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03525edb-24ed-4ac3-baff-9ae12a954200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f7b6843-2f97-4715-8d53-95bd6aa813fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cac8c9-329a-433e-828e-445a29f10cf7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b5a28b-8948-4afb-b177-179a77cdeb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c27f5b3-58ef-475c-b881-fe1a8f5be8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c3552c-84d0-4f8b-8ae0-258c11ffa2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69847d9a-f080-4297-89ed-5a243cc20cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969880b0-84a4-44de-bb41-5e45e8fd2c91",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc3843c-7989-42e7-8013-d18ec3a70a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61316180-8165-4876-9032-e4fd853a21d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc4499f-298e-42ee-9820-e5ccc795dfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e605baf-f269-43c3-9591-9daf42466792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7969c78-3dcd-4e23-a3a8-282f198dd82a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d591e93-58ba-4f53-9e75-d4420d26eca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0afbf01a-f769-4e43-9004-d928aa860818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7a18c5-1403-45f0-a650-f97790f3cedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddc998d1-621b-40c9-92d0-cb94f148c976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528c0ff7-7d57-4301-a58f-de3b511ef7cb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d85c7c5-b92a-4c3c-b1dd-8ad8c523c430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd771d5b-ce47-4a67-b1b0-c8cf9cfcdc92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d4c89e-1075-478a-8fed-4e3bec3c088c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18800d07-3d2c-4359-b2d6-79813b0d7259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08a569c-cbcb-45e3-9c5d-80ddd8073cb8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c00d05-b993-411e-8fc5-ccb1aa5d4faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900bed91-23b4-46e6-88fb-c259a078870b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1d117a-5658-4e9f-9c4d-2047706c546c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c42f443-e833-4865-9f4b-e01365ea598e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb01c560-806f-48ed-b972-3a834c6be1c6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f78639-77db-4f46-8014-194a1bb08066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b662ff40-8cc0-48f1-9bc9-f90c76cac0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a503740d-1899-45ba-8685-b061234d4ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f1d4566-fc00-456b-a9c2-5b8fc6ec8682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad8400d-7939-41de-b61a-f0f7e6c7ac9e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4925eb5c-0c20-4564-b400-228deaea52c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071e04c8-7591-4a3e-9bca-852ff337cfa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae98113-7c7e-4d2b-88c4-ec3d0009d2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f77c1979-8916-4d06-985f-f572058a6795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c708e3-80f9-4616-809e-c03a705a3278",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6c0ab5-a6a6-4ae1-9699-f69930c4b02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178152e9-6db5-4ce7-98d2-ac68c8c71047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec067121-3a97-44de-83e7-88c02e6a6ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b39201-e43b-4b1d-89fb-6296bb0130a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b839658-95bd-4a60-b14b-fe9cd39fb099",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1eda95-480b-48db-b7e5-21ddb68ecee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76792d7-1be6-4e33-ba85-bd9d5b0464ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3096f076-e541-4867-84b6-1ec66ba97603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bcc8ebd-11fb-48f6-a849-3abe281b1e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7c7c99-291e-4334-8f4e-4c59c47f56a9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9436f964-6794-45c3-9f70-c7b301bf049f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03769d29-1c77-4e6d-8b41-6ee78fdee38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71554413-3977-425c-abe3-a1fd6979baf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecafef2a-f420-4185-9560-0953f1f4dc4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec78645f-96d7-4d22-81c9-c71f926d721b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8381bbf-4e3b-4a87-99c0-52dce1a94289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e55b5d-dd82-43f5-bef2-a4cec0584e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40032e32-87a1-45ee-8bb3-393ffef9a72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bb5b4ae-e8a0-4d99-9ce2-6dfbb5fb4155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81315e5-650b-407d-87c2-e6ec9ea9c4be",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a81d2ab-e453-4764-a307-ed9fad6b86f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b567a6-0230-4c5f-b40c-5c1b6ec0f517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553b9429-2692-4068-a0ed-0daf35ea4b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6854bb6e-1ae2-443d-9183-6192b9c0c205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532e4219-eb12-4d5d-977c-d465074173c6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1470420-de92-43fa-858e-fdded71b3e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ae78ed-a0e8-4c69-b502-6c86adb902ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4a104f-c501-464a-9f77-e73b843c9a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "887629ca-2544-4ce4-a87f-b4d036c50dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccdad30-633e-4537-b814-dfbdf7a70960",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adf5501-d55e-40f0-b728-673aaf4ced0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e3f489-6686-4748-898c-de20ae20a6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83746a6e-0204-433a-acf9-7e8398e4f53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "62c94dda-c9de-468b-a898-c9ea4e45b73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb116c13-3ca2-4bc4-94e8-db9880a1ebda",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6b44ef-d927-4f3f-b031-2b16540b6b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4be358b-bc97-4283-9cc6-1692a842049d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163d5235-8f97-476e-ab41-fd88ee497ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eedc1ed3-a169-45a2-b388-1100b2e1664e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9167e7a6-750f-4835-8a20-4adb91920316",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99803cfc-9325-42e4-bcc5-2461a9b7a05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9876b9b-c77f-4407-8d7c-e4ca7f7f7c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b3d70a-766a-4dcb-ad5c-bce0ca371add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f23e2df6-0fae-42d0-9a6a-87c351947637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b33f1f-238d-4f0f-b202-c0f1d1794426",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd919f9-ea71-4566-9807-0b01e3e3d8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417fd577-8a53-4a03-9c0a-812c4030e1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5639c99c-0f65-4637-ae1a-bf319d6e5928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0814d0f9-63b9-48c8-a4f5-05185453495d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a89df6c-4895-49e0-abd1-e830973c948f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64920125-d155-4b6f-9e00-38ccaa0ea21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba8f6e3-c109-4506-a594-ad96377966dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f5fb06-405c-4c04-a83c-1c4fb35cce75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6eb600-770e-49b7-8d06-051744a55891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2a200e-7076-41cd-b54d-1c925197ec51",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c704e63e-71ce-4925-a891-61cac0ccf580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4097cdc-c203-415e-8775-ef00f679d4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694ab152-e4ed-40b2-b1cb-6aa9057c4de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9530220-8043-4300-b7e2-68e1cf90f014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464af602-72da-47e3-9250-eac5bf5635eb",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9de912-cb65-4ad1-9ecd-41945921a359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4135fad8-62ea-4a35-a065-958602fba0c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38515b6-3e1f-48dc-8915-7b1a63c0d408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "02899e39-7ca6-47cb-bae2-8726c0ec1b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8856b47d-c968-420e-bb3b-f4ccc24aef94",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872284e9-301b-44c5-a63b-4acee8ecbc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e1e367-8824-44c0-b324-3329cf96dee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61fb636-6108-422b-aedf-7d42f4a57dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80fdc9e9-0e91-42df-9bd4-26fa8ebfc1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea745cad-d11e-415d-8537-45b9643a75c1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedfe0cd-2b48-4257-8ebf-8c4ff9fa8f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68116da-b452-4ac1-800c-bb01bedd3061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c214ac-c1b6-4af6-9bfa-3cb129ac6758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba577889-9a95-45c4-81d8-f25903a06429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4de1c02-9072-4c02-91b2-c00979bf4db2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b514852-ff10-4a89-b6d8-44cd570b5a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2160537-4862-4e00-9306-c9cf5534187a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e422ac0-742a-40ad-83da-385d53b9f347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc4ec56-11c7-43ac-9ca3-142eca01cadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adc52d8-4f36-4991-9e04-a54797050d2e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f15c5f-3324-42a6-a6bd-b223d2b71bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c849a798-4796-4ff4-8472-987ede704fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d319a3bc-0d11-4dc2-b8c5-6f07dee76bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "323f6bbc-244a-4a6b-8226-6c5a3f05c906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f1fc48-3eb4-4b74-a665-f484837fa69b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1fffca-b32b-4169-82f2-c21c4f067d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b29524b-1120-4273-85d5-280f2a821d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f899e71-ca03-46c8-ab69-3ab89f4fb131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc967e3-c0f9-4e4d-9719-10c283389298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786df8a2-c4f1-4e43-8fc3-04bf5fdf8b8a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8d0f42-1067-48c7-ad12-8d2d44c01655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff193dd-64e1-4b6b-abc4-f78078a40516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59721086-9064-4023-ae78-ebcd1f1d6f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2ba3c7-e6c5-4e72-9122-4cba47cfa499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6a30c5-cb55-406f-a34d-1bc154243a68",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5ca3c3-1bc7-413a-be13-0a1715bd5ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56c5156-fe80-4d3a-b735-0fbd7697f559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fecaa2-3d12-44db-b870-d0b485d6e53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc60d67-8fc2-4c3c-b7bf-1378422bf9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64de28c-9543-413b-9694-385c97589e98",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e6c62b-9d29-45be-9418-08358d771de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f2580b-ed9f-404a-8bec-503e83f7a1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476d2b4d-d6bd-4486-88cd-8846e79b777d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "717822bf-387a-4467-88e4-7656f97551b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4832ff02-697b-4795-96df-2d00be7b9805",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a121f207-6943-4567-8796-ed041bc58691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6efba5-4e39-498c-89e0-8257887a4f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e2d5d2-f920-4ee1-98f3-ed75c98e89e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68dc43d9-602e-4f2b-b130-298bc6eae26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c64306-92bb-413d-85ef-427984ef6404",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248e2931-c465-4c80-a1e6-09c80f3ef091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c082e80-c23b-4e64-b8e4-555b0b99bc7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1547bf8-eb3d-4862-bf29-651bdebbf259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a30cbc-3256-4844-b532-68da1e6881c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80600914-f8e8-48e9-bd03-07c11b6a60a5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff98479b-5c79-490c-b9ee-8f66ea849627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d189ed-3ab4-4c5a-be2b-f5fe45cec448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfae6b38-76a6-4f14-bc10-76b7556c9ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0b070c-c4e7-4c40-b55a-1b6981de68e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02e5572-53f7-477a-b876-4376076b771b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1392ae9-676e-4971-a3fe-33463e271d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47ef103c-912b-4837-8ddd-ec80e4a8f20c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1108908-8b08-4b6d-b871-2d76e6b3b645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2d976c-7c67-4977-9a0e-e2ebe72bc847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9543c8-8a96-4a06-8f99-baa24eb16cf0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53813ea-0a19-4e52-87f1-be57b1425b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7029d267-b087-48ac-a9b0-5a80cec28ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e2607f-bc3c-4349-ae7a-3d533e6ec3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59478cc1-0828-4eb2-866d-cfa61bf6aaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3578d6-fb17-4276-a265-9870d7991a30",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00092233-958a-4b70-b0d4-e36325f468d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b20240f-8c29-4479-bc13-1e1a66c80bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d859009-44ca-4db9-8663-b57773984808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d11d3eb8-a401-4410-b77e-defefb6cf59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30fe9b4-5a50-4575-b3e7-42f8927621a8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e306f6eb-2ce9-4e34-b5ba-93592e94d11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb4c090-568b-449b-8f05-fbd41d22968e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6173f846-aeb1-4413-b91e-2872ed0f4342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc40feca-c458-44ef-a014-496b8fd03a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589aea68-629e-4348-aa12-ed649f678bff",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb3f7c1-4210-45c8-a77f-2b0fd6a5a55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286dc5a1-24be-47a3-bd05-d47f609806f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1302e974-3553-4938-aba5-4e0dafcc6192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "736450fe-d531-48ce-8d2b-738684509e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de67f21-72ee-4b7d-9a97-6f24d5384cee",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458f0308-9fa1-41f2-a9de-082ad32d2e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8638676d-2b66-4e11-b831-069a386cd4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1565bf15-9685-42b9-916f-34ec583ad9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f84ee5a-1ac2-4de5-bdbd-dad5ef073330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ba6473-e86c-42f8-a4ba-b5aed9f7de03",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bb979c-1049-40d2-839c-f313c8cc6087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3cc2b7-3cba-43bb-881c-42922011fae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20615abf-10b4-4d6a-8209-dac44e13e2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5e94d3cb-50ea-4a8f-b6ab-1cde72ecdf5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53133261-93ec-4488-938e-f4b00b4bfc10",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33946c47-49cb-4580-99e1-e968d8de7dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7cd212-909e-48c7-8229-3448ca1c4ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd08f67-9c4b-47c6-890b-9b1f838486d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1621866c-4892-4ca9-ae99-929f98a16fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4678cbb-ca36-4e51-8fda-9b4df157d9af",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb833def-d59a-40a8-9523-8155db2ff0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b46f49c-6632-4d2d-9e0e-93255493ba37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208323c4-256c-453a-b774-152973230be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e953cf2-9081-4c26-b9c4-801bf18dd144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5844fb50-6230-4641-807c-80cfe7a7291d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9c51fc-1606-4556-a8b5-181ee8db4449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff104578-a4ff-4965-a236-331f9a933aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7306bb03-c70c-46ef-96ec-753d62ddf6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "caab14ea-d579-483d-9608-58d0bc2fd816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d622832c-3999-43bd-a959-37b5060a4153",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a62645a-b761-4108-9c6d-9063b434b4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d895229f-8881-4204-8878-c729726bf010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae5359b-d07d-43cd-8b98-b9c863a91113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3398abfc-bfdd-4f15-b686-68b2c5d3fe91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c1aee8-817c-4cb3-a6d3-a98a854a5714",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7225b241-0733-40ec-b219-ce09e1229618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5d15bc-51f5-40df-962c-c8f70bd359e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7bf3fe2-75bf-4ae5-bed3-da60d4805594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b74ba75-e83b-4570-9c99-81c2721bb492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a458556b-8170-459e-88dc-30ceb8f50628",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f3776e-f8ef-4048-bddd-4486872db8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3c6ac3-586a-4933-9d36-78a3e8fff206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c407a35-3e16-49e9-a086-f9faf508ab84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98ba62fc-016a-4a34-9b1a-a1a76e4f4903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f09970-a38e-4d75-a147-84ed11435dba",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161a59f5-6308-445e-bb28-fd21b93defcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff699ff9-4734-4db4-9273-442bfed7885c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0d26ef-6fb2-4128-8728-e8a32f0cf678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e660393a-66fe-4081-b749-59eb59d1e9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a67531f-8a15-4a26-9272-fa4724352b55",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0e6d6b-ef2f-4a76-86ae-d8a2c75d2a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65713844-5c8a-4377-aadf-4238506bf169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922cbcf8-73b7-49f5-b190-906f5ea8d910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "544d17db-52d7-4c12-862d-064ad9f6a7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499a136b-32c1-4bd8-952b-25c24df759b7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d433e7-10be-4d65-abe2-8a9667401ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2860941-9c59-4e67-bc91-411cb3385d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2792409f-b7fa-4416-ada9-90f791cc7982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "069f8e16-751e-47d0-8586-ef55f222b8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33a4f52-8515-491b-99ac-82f90f08cce5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb02184-4d1a-45ee-9fd9-1a6ca389ff3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca43c58-49ab-4290-81a9-e3f38e87cab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f311e0bb-90b8-4d3f-a475-ebaecf034616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3566497-73f6-4538-a790-a76bb025b180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2732cba3-e2d6-42e3-b37a-9a0d15133597",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e801083-acf9-4ad7-8404-02522250b53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0044e5b-0051-431d-aaa8-7552ca14ebed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6bb8a9-f316-42f7-ac01-915d7c42a3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1552f1fb-d72a-4009-8207-ce810d638664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca52cf81-059a-407b-ab82-0a2087a56f6d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2cfda3-22b4-4f2e-9d52-4842a311fa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0241f8-1648-4129-80c8-6c884e686fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c0e546-884b-492b-9a7b-b5d8b62197ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b055bc7a-470c-44b1-af82-03ea3bf39032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bac7bcf-f665-4a22-a6e4-6595be72ca3b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9fcea4-74b1-4e5b-8ae6-dfb6af9f0f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0674ed-9928-4476-856a-8d6689c31b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e8105c-433f-4306-94bc-93ea840366e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97d4165d-00e0-4259-b3c7-1ba3beefe67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a55367-a4d1-4679-bff6-9c1a65bd6f2b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a825887-2324-4571-a11c-606810dad5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab57c45f-795e-4009-8263-880a2107a327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c84fbfa-7730-475c-82ff-14fcb5d9e32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "806f340d-d5b6-469d-b1a9-004bfab8c3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeff0551-bb23-46d1-afa6-5e1f367d9894",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950f8db6-7848-46fc-b5d1-e8d48afb55a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9890d3ee-e9c5-4aff-84cc-58d87013985d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f687db-9896-47fe-8652-72b2a6485a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b6bf85-064f-4108-9f79-562a07e69261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f646302-da15-4039-8cda-75060a227340",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c02d96-efc2-4b4f-be56-bc3a5adfe6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78981bbc-b94b-4165-8310-47fe03d52f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf69a8e-5d74-4093-9280-5b4137e59527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf173bc-7043-4aa1-aa3e-9b5939d82028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856285df-00a2-42f8-9bf7-5a1b285a66c0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73d35cb-9c70-49ec-9bfe-b1941da1a36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c001093d-6ec4-43fe-aaed-03d4a0c05c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d53d4e-8157-466e-b321-e1c74b965e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "deb3bee6-081d-4e3f-b7ca-32a4a482e13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3fdde0-8b5a-49cc-bf76-93de04a41043",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533afa0e-419f-4509-85e8-b249709dec2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a136e153-b953-437e-aa35-03d812e5c877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2a9d40-f6c9-435a-8d91-ba5e48979528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3502a36-046e-4bd9-b644-63bea61dc7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0161a470-42d9-4a56-979a-1bb103d4fdc0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5b5472-a227-4154-bda4-6bacd2c8f282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fa8dcd-8eac-4b8c-a468-505402bef812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1748cee9-f3ee-45ef-8ae5-a9ec4d2e0bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f94851a8-39d9-4b8d-b80c-b842e9a80d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e168f7-fee3-434b-a668-ee25c1d0a887",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a22d02f-f5d7-4e6b-a464-9512d3854fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59e703b-0837-440e-8112-5db1c146785b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9d8c5b-5c40-43cd-9f3d-ee86b1301f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "be397f11-a993-4749-be15-1731b393910d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2043b699-34fb-45b4-b71a-70de3791ddff",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a104f504-c4a9-469e-b849-545428405c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432dea69-2cfd-4ada-b901-9cdb5e5d1211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7e15d3-54d1-4f38-88a1-22dd71d433d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed19664-5fd1-4a6e-ba03-2b442df2ed8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f840287-3dac-4d67-8141-43341fce92e3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46094ca-a079-48c6-80d0-b6f342d8c9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e829fec1-4257-4463-bed1-446abb10d9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c2da01-f7f3-482a-9e76-350149f5f677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a605f4b-9329-4817-bcc0-ed7f769e7ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da46634-17b1-4324-8fc1-9d5e57b427eb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b1cf5b-685a-48fc-a8d7-4a00d4bbe9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39470ab-73b4-4a47-ad31-8c996c7509e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073bc036-d9c8-49fa-b027-813b56c6896c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "920cc383-5f91-4aac-849f-8f39260cf51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8458ec-d0d4-4729-af95-af1cc1113f5d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9efdaf6-ad10-4960-bac1-3782580d5028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7eefee-bd93-4662-ba58-c763c6391255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831d3797-0b9f-4967-a013-ac04f142e069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "955f95f5-79ea-486f-a2c9-6ba8c021d0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9600d4ec-d911-42f9-9363-7ecfc9989718",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4da0ca-a474-4f65-9586-cf100fe9a73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a391900-0787-4883-adc6-9a0b8315ab09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1cd1de-b5d1-4544-8d29-3f3612f0dde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04b13579-5c98-4312-80d8-acb68b675ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142396ad-2cde-4565-8bd8-e5396d684e65",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3fece2-7868-41f8-b2e4-9be6ba68c041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4bd737-1c97-40b9-9a51-dbc74dbf96b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1bb3e0-e806-470d-b6bc-caacc80e5b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "810be860-7a9a-4997-b4b5-7256de157536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a807a6-dba0-4066-8d48-ef07281c0f1b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c99cf66-6f27-408a-a2c4-9e014388a357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b31b3b-0d48-4089-a911-af61b5b9b923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ac4cda-2eee-4bb0-885d-4d948538d23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0615ab06-cca5-4983-b8e6-b59ea5128288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2969782e-b5ca-40aa-a5ff-192ee322b66a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cfe3ea-1cb7-40d4-ad43-e334ca34b71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653fbcd6-474f-46b9-be5d-66c5dfb7917d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe5e19c-4fd9-4804-b8bb-e7a84e28d751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b96acbdd-4818-4f38-9c69-61adc5fdbc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e9a763-3454-4e99-bafb-614d263563d4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f6d04c-4766-4819-a96c-1dfcca2a4a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377dc78f-ebbb-41b3-ba7c-dc9065375191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f687a48-631b-4f42-b731-b38f133d0e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "652185e8-7dc1-487d-a37e-ced44b75bf25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8464bce-fee0-40ae-aa3a-aa91d5668ea6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de86c0a-86ff-4d54-b69b-afe37c893db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8e5d13-0b0b-44b1-bfb1-95c5f4108c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3f7d9f-d489-47ea-9706-9d471aad90aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97f64b8b-83d9-4545-9d8e-2572e3b70450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0933057e-b9cb-4416-bc83-4022c91c4a06",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4f23ea-453f-407c-b0cb-d28e875707ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01827240-f80b-49c7-9925-cd63c48c6c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4947552-14fb-483a-8af1-87368271669b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c27bc049-0208-4e38-b7a5-3542eea684ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4949fd-fae5-475b-9769-0f82c65d7f67",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1d0c98-ae6e-4c77-bf8f-c0393165ce37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08e2e19-b084-4e45-8bb6-2bb11678726c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c677b4ed-82c5-4a20-bd56-f030078da04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b680e47-3c36-41b6-b46a-c08a3a5dfe28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6aa3d4-8d05-44dd-aa69-785605ab93be",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa800ae8-5c12-4e19-b5f4-431d68747fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1aec604-9b86-443d-971e-1608698cdb1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02b90c0-dcec-4062-87b4-8561da98b3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "03c27c1f-3fd1-4e90-8a80-7d709444eb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c92509c-768c-401a-b8ef-18f4adcf6e34",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3448b735-4b89-4120-9d36-da0caf0cfcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f69b96-b1d2-4a75-b277-2afd7a8136cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b0c7ff-91ee-4ff5-ab37-d71bae32f9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b48bca3-8238-4bd9-b49d-64babe174f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17b69d1-3d05-4a10-8f6b-44e3b63d73de",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fb51fe-32cd-41aa-960a-c59781ecdcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5f30d9-cd66-41ec-a516-77bc9d51c72a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd11d6d8-763b-497c-b1d4-8d782b367457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e285439-5c7f-42a6-8206-47e451b903f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacf2e32-36bf-46a0-8e7b-61e64d984a9a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a57498-05de-4b44-affc-35ebf33cdf6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ac0b76-0ce2-4976-9ea7-b109118291fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8041c42a-4ce6-4a8a-a27d-0836c5dcd5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3861c2-f3f0-493e-82b6-f8c9b89373ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70182de-97b1-4d7d-8403-981210b93a0e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e44b95-9112-49dc-ba8d-85089950104c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694d3eb2-2bf8-4961-859a-c514e856ece8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c642de-91ed-4384-ae07-9e7f96d92e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9436f1b1-00b6-4c4a-933b-b53e1c6fc2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbe62b4-118c-442e-87f1-0c768b09527d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5a2d67-d84b-46cd-a805-b8cb90c277ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc87b13a-d53c-4a3f-be45-a19ce6e18017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88e06b1-ccf4-4cf9-afff-4a33dfdc5d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d574c8a9-6625-411d-a441-38284f9aa9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc5b958-5748-431c-8272-85e9321dde17",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71eb17cc-877d-4d00-bae2-d80be0c4e973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f6fb96-51cd-4ee6-9a04-687022dfcf1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f705378f-dda2-4571-a6b0-e924ce06c5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "246e4b50-d6f5-4ab2-85be-8bd4e36353ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2989e02-7afc-46ea-a259-14d5d4ba970e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6fc7d7-60a5-498e-a25b-9d1810fdb361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4524209a-bd8c-416a-a81e-a0ade3c4906c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8ad617-8e26-4e2a-95d3-d9cba10a645e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bbc2dc2-296f-4070-8604-f6b548966237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033bf9a4-fcdd-431e-baf5-2c937d3d25af",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982ae6e0-54b4-411d-b85f-f2c59f721a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bdb2bef-a872-4376-836a-72fcf6fcbed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4e1863-9783-44fc-93ee-ded1911a95ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62fb4704-c858-4276-9337-4e75b461f47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce9ada3-66ba-4704-945f-84dd65db12e0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8176b119-1486-4c96-8140-4626d127729b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fec5856-7e35-4575-83ef-9b61711397db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2499790-e6bf-4d11-9ca6-c0bba357ff23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07e1f249-93f0-459d-b2cb-b6bcf5c8321e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2795f269-940d-40e2-9ee7-1766df64b206",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7777c93-dfdd-4783-9e85-8e367874c49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1833f48-ffb0-4ded-80c6-54dad7f1db7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eef2092-6ee4-49ad-a5c2-24f0c28aa026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61056add-fd78-4048-b652-2bf21ffb4aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef72c9c-ddcb-4aec-8987-868ad7bf8a3c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26af5167-3162-48fe-9e44-f3cfc09a7c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b289cdb7-56d4-4f1e-80f1-dc2cb5470410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66962923-0ff0-49cb-a9fa-0ee06117bf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed5bcc4d-3e34-45ea-be02-d340f2b3596b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fe2560-99d4-4846-ad78-7e4f11527375",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717a87f3-b4a0-4519-8077-29a37caf43eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1feb3d-f2e5-4853-a6fe-a7ef1741e2c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1054d8-90c2-41d7-9565-9e3bba397c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d422b08b-98b7-4028-88db-6dee7b0590c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fe783f-fb2b-49b1-9f59-77b50ea6dafc",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d816b35-fa86-46c9-bef1-523541762d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b6b5bf-660b-4406-9fce-e1fc448bef28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf889f04-1217-4258-b5de-869692cd9f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8957b26d-4f47-4a92-a4f8-64eae88fea42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6345eab-9fb7-4fe3-88e7-9e5a8c4f0ff0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d60acda-0a19-4eca-8f34-6d34abdfd9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5309a043-bd12-467e-9185-e55ae8bb7b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9250b68d-82ee-461d-8bf7-486b5e3271fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "66bd74cd-4471-40d0-87ed-93cc0070e748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d530b0-f37e-49b8-bea9-4a7159eb49c9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e647ba2-bb18-4e50-84a2-27844f113943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2176c0-8c74-40f1-ae6a-c65386ba50b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032a3c85-e33e-49d1-aae8-219c7891fcc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0baeddd5-f971-4f0b-9fae-b6f14f56fa26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fd7571-067f-4a8d-810c-ccd13c3e79d8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf78062-ece6-44db-be60-2c4f79d732a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23ca484-1ecd-44f0-88d9-d38f666ad6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a13dd6f-b404-4a69-b621-ca0d9c49339a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4202cc0-c692-46b0-8341-bdd82ef745d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690dbf16-39b8-4ea9-8248-a3f946663413",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7752b395-163b-4e2a-9b39-284f632a2dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bc21dc27-f678-44dd-9ee8-dfde981c899f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2eaf85-541a-477f-86b0-9422dc6826b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6447634d-763d-4228-893a-4846beb6047e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "29e5e4af-4669-4926-9b3c-031c02a73c20",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70251ebb-f2f7-4583-9cfe-573e88c14daa",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce58a73-d891-41c4-baa2-a505332c08d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d84bc78a-eee3-44ec-b7f4-ca60479397ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7643dd61-300f-4940-b13d-57fb50f2b51f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "bf151bb0-aa72-4e8e-9c84-6e131927de1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d366f6-cc08-412b-bb6a-6e02f614ce9d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585f7ba9-ee9a-41bd-b5d2-372c4e8b4273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbbb7452-8705-475f-bfae-94ed48e5b01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c398934-c06c-49f2-a734-02ff71d93f44",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "a16ee2ee-4133-47cf-a710-cedf21d02971"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0df611a0-63a8-4ece-9d26-548ab4afab6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3aff552c-bff4-41e7-bd28-bae2ab2870ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32f61470-e68d-4f2b-8b49-5bb004a37f6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42f0f2bb-729e-4a74-93e3-42fcaddbf0e5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70a6ce75-4356-4f3f-bb30-a5c42a312fd5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ade71dec-9534-4568-bc45-a5186bc58802"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "99efc926-5a42-493c-8320-1bd6540c218f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f35df5a9-657a-45d7-a169-24c5f91664c3"
                }
              }
            ]
          },
          {
            "id": "ec102168-178c-429d-a9ca-19fd5487f19a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4510970c-4ed1-4adc-a35c-dc0316e61e20",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40ea3c75-946d-4fea-af92-1896cdf52258",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ef6befd-b48d-4b98-8c33-44943858e985"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e2cd811-6e47-4114-a803-75a67392c1ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c12720fd-eeb1-419a-82df-9ecbf6d4accc"
                    }
                  }
                ]
              },
              {
                "id": "781311a9-82ba-4a41-96ec-532b389367b7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d770a53-3e08-46d8-8c99-c7597727e2f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2643fe93-b436-4f96-8a70-f9a42d2d2cd2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06347537-22b0-473f-9a94-d7a66397467d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0557d0c6-536c-4d6a-97db-374254cade1a"
                    }
                  }
                ]
              },
              {
                "id": "2bfc1497-a7f7-4a09-a36a-1cfc88c946d4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85f6fb6c-1bfa-4405-a833-a7ff31c5472d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b148b72-69d5-4816-8f64-1d412044bdcf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85e10598-fd5f-46f1-99f0-bb4174e40e3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f484897c-10e7-45e2-a49d-da8dae2f7618"
                    }
                  }
                ]
              },
              {
                "id": "893497a9-ed08-4f56-94a6-9b8d0358807d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8433153-8436-4304-a636-92825dfe165e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a74b303-a121-4512-8c48-805192f204ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75431b21-315f-437b-ae6d-5cd065957ab6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b136cd20-6f76-47b8-a9c1-644ade81ce7e"
                    }
                  }
                ]
              },
              {
                "id": "30347779-8172-4962-b0e1-3612cdfeacba",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b517a477-4bc3-47c2-b116-d2d0951c1922",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ad4cddb-f6d0-491c-9bfc-d923450a6961"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5acbd614-5f2e-4bcc-a806-f03894bdd57a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c8c2ba99-44ca-4d33-9adb-8ecd16f3ed4f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "265424ec-9cc9-4fc6-b724-16cbca846c01",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "191bea6d-5da6-47a7-9dec-7ab5618c204d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d6011097-421f-4579-ba18-8dafc8eea01f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "30c21e11-6e0e-4e9d-9111-51ed8f77240b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a15e116-2cd9-4fcb-b867-adce69907dfa",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7d9add6d-f380-4974-9c1c-d72f3fd9d2b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91312c04-0563-4939-8f51-ddbd86abfbc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82f4a997-846c-4489-b300-cc65693bb443"
            }
          }
        ]
      },
      {
        "id": "76984a87-a380-4b31-b1b3-68a7e9ea1d37",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4a5b5e12-f185-4e32-ac9b-c432039546fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08abc0e4-78f1-4736-99a7-15076f9fa64c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b1662915-2c6f-4480-9e0b-d01d67036753",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43061964-bfdb-455d-985b-b41ff2005c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d28955-cc8c-4b23-84c6-5aa017c70fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b295dbe9-4cc1-4acd-96c5-5096be55bafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "14173a62-83fc-485a-90ca-5777b45519ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d173de07-e0d7-4e9d-be66-27255e281025",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b3d378-31dc-4d50-92a4-4505aa2c0e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0aaa396-2111-4be9-bcc4-cfb910a958f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612669a0-f477-46a1-bf5b-b45a3049a762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3f8813-1bcf-48b9-8af6-7d93a8119db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cce657-5153-4230-af86-2e089732021f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4856f1-bc0a-42a8-bf72-92164a27b2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db2ca62-5fed-44ea-bab7-deb4a08ad7c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122bc4aa-7dd2-4cb0-8aaa-44330d688e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9df387f4-b1e9-40b4-8beb-310da9275e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5c163e-857d-4f63-a484-e61d3ecabb0b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edebfb9-2e50-4e7e-938c-6c2b1d5ae13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec425aa-5d5d-43e4-a92d-85ce8bb904ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7a877b-3139-4657-9a16-1440d7ae576d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02d0daa6-0be1-4de6-9a62-c391a9f6775c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f3ed23-8f87-44c7-a87a-25265811c8a5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb7a915-6882-4bf5-90f6-efcecd062b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d354703-6f9a-4238-b9b4-f73de1577ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51693c8-7c61-4942-9607-d86d39c3c3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "844198e4-fc6e-40fb-ab2f-0fc4de968826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7ada81-a539-486b-88d5-810221afce4b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4c4246-3f96-49f5-a12b-fcaa9aaa9858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b1ba73-f5c8-4126-ac1a-03f561f15c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d47c39-17b5-450e-8a3d-8d6db13fc91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4805a284-a027-469c-bedf-bb78e0b3626e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f62892a-4f5b-4fd6-9c9b-5f26ed9eb5a8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cbf441-0f52-4657-ac24-b464c58045bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3130427b-c74c-440f-88bf-1fa86be255eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432f8568-38be-4135-80f5-b6a61e455b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "25530766-615c-4696-8531-99c1ddebaadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7cbb0fb-35e7-4464-b8b9-de777453af80",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8892ed71-c882-4cc8-996b-aff32a0595e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8815e2fa-e112-41e0-a58b-eb0229d98dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527d63d1-f3e8-4dfd-99f9-26c644f3ef21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc03e726-d60d-4ced-8538-6c9cfa6b842b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69089ab-c42c-4b5a-978c-4877327f1634",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98656b5-8fa9-4ce1-845f-b070276a6c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73077643-fc42-4da9-a3ea-4d85a0ff4394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52274211-3c8c-431d-a367-3eed87a4c124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80130ccb-8ee0-4b5c-8bf8-eacdfffce185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d63aa5d-d80a-4b91-b18a-ed2b9aa16c12",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cf5e72-e214-4613-8527-7eb58f7612c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7067c9df-ced9-4099-b8aa-6b920867d1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27841f60-2346-42ca-a16c-0d57ba9ddcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da389ba6-d3a3-4179-a6e8-220a6e2aed81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f525c4c-c21d-4849-bfa9-07630ed125cb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39df8b8-2e39-4939-b66f-efd77137a98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6f2c77-6d1e-47b8-98d8-d5deb6600345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743c036d-b5f3-4c8d-8476-e43ee5924b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "906501a0-68c1-4992-b5cb-a76e14e1b520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5e8ee4-b90e-4608-a3be-dac36699b094",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f522072-570c-49c3-ae3a-d25f76b92272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1c6f88-c941-499c-b775-49cc78a9bb8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c21a8f-634f-4ae9-8264-574e82cf29e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1865290-64f8-4d9e-bd39-c6168bfe29f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321bb661-8ea6-49fb-81ae-bca59f46aa27",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7f3407-69d3-4576-b541-7f195288307f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc21f5a3-e0a6-47e4-9006-172adba9043a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73d012f-d307-4674-b2a9-a13989c986f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f828590e-e2c1-4952-b8d2-96082f92f25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e04c1a1-94de-4117-852d-12d9d640ab16",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f4c64d-ee5e-4907-b522-6204ced30dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d18fd0e-1c0c-4c95-9a8a-050d7aad4671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62c730a-bbf1-4044-a5e9-d86488a01600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "55a30555-20f5-4ec8-8056-99b7e934e072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd7203d-3639-4a63-b5ec-ec7001aa2357",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a031a1f-f71c-4d4a-9c90-6986efce7027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47f2ecf-2d1a-4259-8fb1-b022f57ac656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889007f7-8a16-4bd3-ad42-7226dbc33fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c612e95-49c8-4174-a43b-18ff784ecc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6285923f-cfd2-4e84-97d2-3b5d5e8ed54e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813360d6-41e9-44c2-a2c2-18549e2b0dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c241b64f-1718-47f5-854c-5d020d5db4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed88da34-ff2d-4c37-affa-c80f40104692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb36b19-e605-4ceb-8932-3e8394cd3a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20904608-e559-443d-a12d-ab6182c2c90d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eee7292-1284-47cb-bf7f-4229941267fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e66601-4cd5-4c6f-a319-adfe5dc1d4b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ecb733-d149-42eb-b47d-9150d4421450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2c3821-5e8b-49bd-98aa-8801d5d18c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69aec409-a039-4b84-9eb2-7de4db1dd516",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a1233d-7531-4dbc-a090-7501a7ce8057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a9c7b1-55c9-43b8-84bd-37b529fa127b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548fb9ab-18a2-46d1-b262-305d1e3e2bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb49f1a-d8e4-40a1-91f0-586975b760a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7ec943-c45a-47b3-a929-655e4a53d7f7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bc647e-45e1-4091-8077-7b2f32b3c5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47c5d99-a4b6-48b6-88c0-6f494cf2fbf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5023460e-b4d3-4d7b-8ff4-42b9ca540627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "733855a0-d419-44be-85d5-fea0cf23d6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e7d824-bfc0-4919-a936-00758991b41e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfcb78c-ec4e-42d6-bbde-554f6c16004b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5f60b2-b3dd-4e45-bd55-358da8a78b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44356e5b-790f-4905-a182-0cc5b22867ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "359c9fa6-4d76-4211-9e3c-8187f1398dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a8384d-6114-4aed-8b97-7b88c1734a4a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40727873-1ad3-4e19-9b82-93ee8cc3a9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a654df99-d0e2-4e49-9b5e-cb2644cb929d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d43c170-b90a-4b63-898e-0b8ce2966a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd604d8-f5bb-4f05-8761-a27a43ae5b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f33e17-2cfc-417e-ac52-ea2f15d58b51",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2f62cb-23a7-450a-8e93-8272d2c6e6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb38ffd-981d-433e-a2e5-ad0adab35ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8716df0a-80af-4463-9990-41cd1bfe1d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5e14b5-1f47-4cbd-b2d2-baf7ebb5097a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef16c05-f2de-478d-9797-42d628aaa425",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ecc13bc-e0f8-4304-9d87-be4ac7964d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6bb76d-9a13-471b-a6ab-afe23bc5dcb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d59f910-771f-49ff-afea-13263da916b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18e7a0a4-7e4b-4219-b68a-907a292c9765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d31773-8f04-422e-921b-d041e1f5cc9b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81556f0f-85ca-4071-a00f-968fb5cd9943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6bd1f2-c8f8-41e2-bf85-727afd782a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37cdd71-2296-4200-aef4-1e65195a094a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38a613b4-7d70-465a-ba27-d3bba29e976e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa407a9-97ea-4874-9344-d9903de1ad6b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a858b7a0-eefa-4f3d-a4f4-52218a81937e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c6d2db-30aa-408d-92f6-3683f516fc7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ec9d87-5714-4b1c-bebf-76e59f9eba84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44f11e65-7045-43a8-b6ca-266ef5728e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62cd9f2-36e9-4824-a0cf-8917fd1d5c9a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eeab299-743a-417d-80cc-5efd13b785c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eabc3e4-eec8-4cdf-a782-a52a53800e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f1ba82-dfcf-422e-b54c-851f565ef4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89ebc5a8-98f9-47c3-b91a-f75faeee0dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37a18e0-57c0-4b30-b00e-c3c84f76fc13",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4b16e0-815f-4a7e-927e-5f8979dc6434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5098f0a2-5855-4c9e-bd64-3d827de28b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79af6de5-10e6-4054-8194-7d2d50d39d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30858f0a-ee82-4de0-98d8-dfb34de7692d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4824c905-45c4-4f90-97fd-0c0ec0a89272",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42864c0e-2880-4a58-ab06-463e039c6e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ada715-5adc-4a98-bf25-69b64ed07df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9d661e-37ce-4208-b9d0-bfcd7f8659f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18a7c375-3d32-4b0a-a1f0-2ca2e70ac9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06037846-62b4-46c9-aa9a-13758a9e4042",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ae6378-9ca5-49cf-a096-572b127ac44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c026c90-f575-444e-a01a-542e55d9951f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9f71ae-371a-466c-b9df-078dd302c9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d598cc98-3bf0-4764-a7c0-0e9065852d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cddd0d-f8fc-44db-9a33-ad4d780fe6dc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e049110-ca2f-4e0a-ba53-b571959f3163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af980ee5-e4ae-4c39-b402-5cfbbe513e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94f8cd5-1ccd-484d-bbb1-381e7ede23ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b51fe2-55c9-44a6-80cb-3a5b65a85d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe2fea3-66dd-455e-85d9-ec368332778d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a1bda9-541c-4933-b436-0cd26157d4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc665caa-6f56-4fbf-98ff-05325bfd9026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b68b317-030a-4c55-a9a3-3ffceadffa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f54917fc-5019-4c25-8ff8-a7da3d8029a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5541c4ea-ad1c-4490-8711-d297b05440c0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c86cbed-2705-483a-b039-69d1af93a123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3705a1-144c-4ea0-9c3d-845d78afdea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0257a007-0ae5-4c38-ace7-6f5f8fca6962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc3a0412-a35d-45e7-8de3-0c13b5a187bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d73ad19c-1cad-4409-ac4a-54777b5ea6e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86bec45e-b9bd-4358-9190-eece41c0324c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651c8210-8789-4ba9-a01b-a1c1172db6fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4e823b-14e5-4982-b73d-3cdb117f8f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54adf920-3af3-496c-8838-172a7032234e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e2eb504-9e37-4599-af62-dbe6b8645b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71381589-6ff6-436d-a5a9-dce7234acb9f",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608d970e-d980-4e8c-879f-8f0670f29b78",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "eed73c3f-352c-4827-a42e-802dc4ae04a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df89a26-fe14-42ad-9a94-c85bfdeb1141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50fe50c5-9558-43c7-a911-2745052abda4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f466827-2bd6-4fe8-8311-c1068129e710",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b518e68-c07c-4308-b91b-50123ee56f19"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0db2d23d-c6aa-4f12-97bb-da87bd322965",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b05cdbbd-f684-47f4-8d80-516788e32c03"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e559ba3e-5e1e-4c2b-a71d-c39a2f7f7474",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f4e5d313-3331-4c50-bb5e-89eab5d94166"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5bee7762-9220-4d80-8cb4-350978cea8af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fcefcf6a-935f-4644-9bbe-6819c32d6140"
            }
          }
        ]
      },
      {
        "id": "af809db6-7e5b-4287-9db8-a503ee292073",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ae19392e-30ab-4b63-8e24-aa1615e77ea4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab42b57f-619f-4fcf-b370-222843db191b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ca3262da-701a-453c-acce-ac5097d96d82",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90105f38-165d-468c-abde-8f4a24390b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da66069b-8e08-43da-899a-e5ede049a71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5368795b-ed1d-4203-8f30-b4e2f5c37df8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417fd526-fd3d-4f24-9017-59851073789d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c357526d-fd40-4df3-8578-637428456c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50de265e-1c47-4251-9f03-944cadb64f88",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a58f943-0411-410b-9777-c4c3c1802194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d050978b-2e01-4767-b538-1e280f616979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a12db1-05bb-49bb-9de2-18b0888709ec",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6107c2f8-4da7-46df-adf0-c6aacb4fc51b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c48997b-f13f-4961-ab00-2e6033f7aacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c00cd5-cf84-4b8f-bf67-7e6e1e6b21aa",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21679372-cab6-41d0-8848-cbc6a34ef3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98935d93-1dda-4b24-a6fb-e3921b926d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cbb871-4b76-4824-a741-c12053681a6c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753ac68e-8227-4688-8d64-c8ec32107858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0496604-94db-4f12-ab4e-c7d4cda2e28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41adb640-818c-43d7-8e77-d54824e2a5e3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fa89fd-20e8-4237-8f0d-836f1e6e8396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9892d25f-f976-49e8-b8d5-ac2792f1b342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a228fce0-f2f3-4228-812d-7c65b7df0473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01b6f1a-511e-41ac-9088-0f47b35adef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17635bb3-1660-4766-867b-3197f44454b5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cffb6b-454a-4e89-9ae9-74bfa0c257f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eea8b4f-eae5-450f-aaff-11ba74df2ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5006cc8-0764-4ee7-95bf-d4dd75a1c766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9636573f-82c7-4b8b-b396-5bfee546ad5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a840ec44-b985-465c-88c7-dda443263e29",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1fc109-4b2b-48ed-b27a-1fc3514f3ab8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e43133b-1245-4aba-87bf-69b8c3d325e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98ea656-5e09-40d0-8deb-3823dc5734b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a60550c-db77-4e1e-9b2d-ce10e8ca84db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca67641-005f-441f-a77e-1d02ed174fea",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7238be-794e-425b-b77e-a8953797b6f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54d90569-941b-4da6-b250-1f818ad41dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcecead-4758-414f-93dd-22085380faac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20156e0-0ca3-4d2e-ae6a-56d2350a0bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef29dbcc-0bac-45ff-bce5-ddc061ff0379",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40df3868-8034-408e-992a-73db8d941abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49df5ca2-db5a-4380-9d16-216208fe60e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55d5c89-a1b2-43fa-8495-4e65556f006a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b81e038-f18d-4743-9159-187a26cf91bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3acbdd6-145c-47b0-a349-57dbd3fcfb5b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754b0a0a-ee15-4423-b521-9b9836f730b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c9deaa-9981-4c27-8006-06257e5856c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "357b8fa1-4f03-488a-80df-f001f4b5b578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dee990e-2788-4063-bcfa-16ab6cb80c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e966ebcd-ad01-435a-a3e1-4b3566cd0c92",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2531ae81-a21b-49f3-bdf0-7a46313cc1b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3653f54-cd1b-4d41-b627-345ad9b3295f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26cac1f-e82c-442a-80e3-3fa18350ec1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "282f58ce-5b7a-443f-9e30-0f0649643d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe4a02d-51e6-4281-819a-b2b4bba91c89",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc13a984-2bfa-4ee0-a0b9-06bf8e2b0a78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea5debe9-ce58-417b-9e74-e777a4f0ec9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "528d6c58-9079-4738-87f9-b83805f201b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0977357-b00a-4e6d-961a-a7709595a903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e74d5f-9bcf-4238-ab93-a386fca19ce0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f712b1a-c496-4092-8e58-7b7e9ae4d882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "941129a1-fcab-47ec-baec-1de0f98cdd57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7603a49a-aa88-4ea3-a5c0-331b59cd1fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "118917e7-cb63-4d31-b222-a206f7b3b305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2034908-938e-427f-8ed2-25ab49e67c42",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee00d58-971b-4603-8f7f-48310d950f4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cb467fc-c712-47a5-a32f-681c3b8d1459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc69d5a2-3e32-493a-b448-7f7e534adf8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53579dd-ce88-47e2-ac47-4b3901815dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8363e58-7c3b-4e33-b399-9c3c53b801f9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b390aff-50d5-48da-bb10-cbb0793b0917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a34f7e4-4937-485b-b82b-7b66f22186c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bea92f3-957d-4b9a-bc89-c15dd053e9da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12177446-8216-4405-ba49-a53b3b8d072c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb53653d-eae8-42a1-af4f-a9fb5def6ace",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2eec6d1-6869-4373-bbf3-ceefab21327f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3beb71-fdc9-47bb-8197-e8d1646c2d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad815fe-297a-421b-976a-b0e87cdb9d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13bc56e5-111f-44c2-b374-6dbdc952a092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da950951-5e67-429e-8f74-10ae851986f3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd80dda-e6c3-4034-a13e-a6fe9ad5f0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c78387-48cc-472d-bed0-48e1f199393a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1eb832-befc-4332-8faa-104541699408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b0569a-5c5a-4ab1-b447-d84e8bee763b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b19a0b6-2a01-431a-9647-a8668da40154",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4768f9-a967-4211-9c38-f56d47e2964b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70837e9-9fa4-4d59-a41e-5297a22208d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4913f40c-8d54-403c-bdf0-b623654af7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da9e336-adff-42f9-aec0-1af2ab960896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dbed4f-d70c-41e9-b902-d548bf94e53e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf8590a-ed06-4379-a379-0ae478fd4313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3f7cbb-a480-4c92-b6d5-ae766e8d08b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4514d84-ad8b-4bc6-8fcb-fd760995fb47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6385cabb-213f-4651-a803-e61e182318bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d0c07e-52f9-4372-840d-d6d646f5c810",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc41d9d-a678-434a-a45f-ea48c8b617e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4ea7ae-37ca-4a68-bd80-62b0dd1a5e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e67d7a4-676d-4ea1-9c9e-1a22b44b20ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c357584f-5ba3-45fb-b273-25a070e729cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7846959-17b4-42c6-a842-a4f7bb576cc3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d608a95b-2e77-43f6-8cf8-f0be8b019965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab26e27-a54b-41b5-a649-eba736ae5695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6240f6c-a449-4240-9265-1d6974d2ad8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a81307-09dc-43c3-9f5c-aee9dc9b173d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a3996f-f0af-4eec-9ffa-e3c8f491477a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397c79fe-491b-41dc-a106-c469602ecd35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2941f7d3-3f5e-499e-af98-e1c2f8dfc066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7601f3b9-515c-40f9-a4ab-cd46611f2c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b909d72-dda6-45a1-9aee-60aebf0e772f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f50a4ed-901f-4325-b421-9fd5ed326c65",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3dabc8-57f1-46cc-a255-29a9d7153ecb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc787024-2ae2-4226-a8dc-48f2d1c7b5ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b5a900-3f14-4d35-850a-2f96ac55b2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1366e0ca-7425-4dc7-823c-8d8de3f7e6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab8eddd-e24e-4a5e-903d-7cfb3651b859",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea275f70-2e93-4fa3-a665-d2f8e8da1dcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99a62b54-d7ed-4795-b253-b5964a58b918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0208f4-95d7-4f6a-9dd1-31005e4ecc51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224c9fb1-bead-4694-9103-84517300c7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2d0ee2-33c9-438a-a273-3a2434f2859d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac32050-f815-486c-b11d-c46751555f12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f74ddd86-f124-4228-b1f2-f67e935931b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d55dee-74fc-4b22-8412-6e1e7730e7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d1a7cb-5de6-4a55-9c67-71ec205daa25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550e9f07-01a9-468c-8bdd-a47876caa67b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0198c50-3208-4d90-bcdf-95b868b01507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ad99f17-242c-4ab2-a1d6-06ad3d92c36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6687e3b6-fb3c-4503-9a66-8e6e40b083c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77733b6-9343-4591-b35d-47d6b3c626a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c1dd31-150c-4a0a-b6fe-8eaaf9c69c2a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb9cff2-b1f5-4591-a702-938dfc4a7b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c331fc9c-3540-4670-ba91-1c8c188cd129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62251d64-c34e-46f4-9d59-e8a840139b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c59d2a-de10-4809-9ae4-271cf37db133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd72290-1ae7-4360-96db-6f48218da66b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d17e98-f26c-4074-91ef-6a75f9ac805d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fea54165-d34f-4180-a1a1-7bbc025a5356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adcd2f2-d0a2-4695-8264-af46db212a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a629db-9b4b-4953-bc99-945e78a2fc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758cb684-325a-48bb-b9e8-f03436bdcbaf",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8be67c-0f4f-43ec-8856-61a9204edff5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b3542db-9766-4e1b-ae40-8a7e762cda03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a827cba7-ac5f-4cc4-8b1f-38c8b9b2a373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4b556a-19ba-469a-a374-81190cc6ac27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cfbbc7-6a10-4558-9116-2130d93a46f1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540a8d76-a8f5-4c1f-883a-32edb08e9a27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3b1a4f7-c825-4304-bb1e-533181bdf8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6200f6-b439-4135-a8f9-f11b7df561a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef639ebd-2a66-4c35-9414-31cc7bb25e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba656d9-2559-42d6-9e11-82b466addb0d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312cde4f-b063-4fb6-9697-2ddb5db73d54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69880373-7b2c-4e82-93a2-8aac852d468d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c485aa-1c37-45ee-92ef-42d3a9b63697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63749d76-75d7-477a-abe3-928fcd1e7520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c807ee-7db7-471f-bae7-b7abd28ba326",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0292435e-753c-48a6-a121-53e423709112",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cf9076c-e6a1-4123-99e8-e4929cca663f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd156fa5-1c57-4d86-805f-453f8189751a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88672a31-fdf9-4cd8-8f75-454637b463d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1234857f-5399-46e1-8e80-bdf91ff08c66",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725e8949-b4ba-4027-959e-7f700e95cc79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74d62e65-14e2-42f7-af98-46f04089b078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "570ce005-a8f5-4835-92de-1fbca493f45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6496918f-2b49-4ce5-8d45-0c49ecaada05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a03623-dce8-40ac-ba91-0b2a92c1e58c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cf3d19-b93f-4ddb-8ae0-66cbdc99e810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66197331-e943-47c9-ba0a-b8fe33bbfe9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b10394-9e34-4e98-8b91-661084c74739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7762f3c-9a41-4418-8fa3-3a33f1ae9132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11163566-017f-4a60-8419-d30d9d10c5d3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6747e054-28c6-4fe9-80b4-d03471c04a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385e209f-bf4a-4433-a29b-0d1ded5785b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed699d57-e6e5-4030-abcf-bf9bf8b6ffc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17c40d6-6588-4aaf-a414-bc6ed76704c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd51425-2017-4f0a-9a62-b6eba3f39b9a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be130f9b-5112-44e7-9939-aaa148171d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921f486b-b838-48d5-ab30-4b37ff89342a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd527a9-163b-4ab4-acb1-7f5c7c74f6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ece23a7-3068-41ee-8fad-8e914707537a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad41426-eccc-4c5b-ae11-dfe6c3c214bb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a35cb8-b1ae-4c83-8afe-faaec31c55b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76036493-7ace-4566-9511-92d44a8c7d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1aa14e-4ae5-42c2-8e70-3e00d4b26c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca29c7db-0cfc-4362-bd38-66bd3be57fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a0f8ed-9a51-49c6-8239-7afa9430be64",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf3ae5f-6a42-4059-b352-491d8cde2e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622fc7a4-dbaf-45fe-b1c2-b5d1fea94288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5158b8e9-c73f-404f-8be7-5a746d556af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01b980c-3f81-4fb7-b44c-5b9e1ec4192d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3a6ec0-4311-4248-8809-ddcd987efead",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17dad0e4-e872-45b9-8733-7085875a6197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15084ef-2b03-41cd-a512-7f1466547f3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5e76cf-5fc6-4237-a0b2-52aa93e3ab8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9143317-56f5-4a9f-a4c5-b5b61f643f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee39a23e-f585-41a2-9718-88ae5153d4e7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b772ab-923f-4ede-b9dd-48e62dc38f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db3f62a-8de1-4ce0-affc-99615bd066cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "822eb3ab-3252-49e1-9584-051c5ecdf21b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abfd489d-d7c6-4635-82b7-5c031644303e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5457bc90-a2ed-4619-b669-6b5b87b10d23",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0115b2d-4a55-4d98-8327-d6dce22acdc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ce1d28-0203-412c-95bd-f31fa6d48907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9129486-2a85-4fea-bb52-1c2b42ce202e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef2caae-0635-433b-88b9-c399b45fc7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93907b76-2499-4907-b8f5-106b73539442",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d6ea24-1e94-441a-b30b-0c0bcb81cb29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3354515f-3946-45d0-9238-77417a9f0933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7811fa5-9c8b-4753-8df6-fd150b2f77c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f109be-f3f8-4d36-bad4-320f3519dc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbb1599-7a24-4755-9491-2dfcd30a6117",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ca6594-75ce-4407-9e38-33445bcff406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0fcd15-efa3-432d-8841-e3890d7bc4a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "658afda0-8bfb-4dd3-935c-6642410975de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09cbf67e-bbc6-4f3b-a5aa-a3e4e40887dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397ff3d2-f6b4-4321-93b5-f5de15d14a6b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3747bf-bd00-4ba8-bcc0-0e32ae644625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec55059-6a34-4d77-9d4e-5aa80597ae5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b4a922-4ad4-4390-b5b0-9608cd340ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38764b69-71dd-4e9a-9147-5cd387efd216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ade082-ca2d-47cd-af26-ac6903ac4b4b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079b9cbd-a1d3-49a1-95ff-763b24614ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c1ccd23-4151-4049-9913-5046ff41ccc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afa5478-3f34-453b-a582-b643d5653c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24261e74-7275-422b-a2dc-52b6852bbae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa81e99b-8fe8-4562-9685-c4160675b433",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283240b9-1d20-4434-99cf-e49c82c8abf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c42fd1-b0f2-4b8e-b0b5-a0dbd01e1832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c163ab08-8582-4254-8e5a-498c56f33a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562562f4-4a35-4448-8d38-7153b669dc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be45d88e-5a97-4d5d-a78c-25a7ce3f2ee0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b1eec7-d561-412a-b875-cb206d03c1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b426654-56ad-423a-8685-9f42b7130a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "737a0d9a-fb8c-42c2-b1f0-f22cf561004a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353398c4-092f-45ff-bedb-56568cccaab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a80dfc2-12bd-4b07-986e-2abf3cd2ad5c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73223fce-16dd-44b9-a565-5fa75d35fa93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f15181-0005-4b3f-9944-431f02dfaaa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06210a62-03af-4b83-864b-d94e5936b610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81729932-8d62-4d4a-b754-e2492090f3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bebef33-b147-48b0-b6e8-ef6b24291908",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a752e0-12a1-4bad-89a4-ad4fe942e014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1242670e-a441-474d-a09e-a5d40260b773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97109090-5a62-455e-bc9c-afd50171abfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e8cc55-c406-4f5e-90a4-7815096944e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cf0994-78e7-4713-a2cc-a4421b128c13",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c657edd1-238d-448e-a7ca-fbcf60f1d4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915f08d8-0c68-4ae6-980e-61c1a3ade8d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b2deeb-82b3-4da4-a244-3f43562fd26f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232af067-7383-499c-ab4b-958ef4fddde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b087fed-20b5-4be4-b00e-e536cf16faa8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9f075b-40d2-48ad-9137-609c44efdc9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b698cd76-5791-4cc6-bf18-689501e79000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d37b8d-36b1-4f0b-a7b7-63d7d001f8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672dcf14-30bf-4bfa-a96b-00e94e34624e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7038e1c1-572a-41c5-b5dc-c5a61ec0900d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76f148b-0acc-49d8-8b35-4931709aec49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64317f88-4471-4a9d-889a-c05955e15d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb92495-303c-42dc-8f17-894b185d06cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade79aee-7053-44f8-8e6c-7667a9a5d265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1151c824-6b8e-4afd-bbe7-cd448be64c9e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee7b125-a26c-41d7-b4c2-c98fb7008a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358bb478-ed6f-42e5-b37b-04123d0ebdd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25620784-8997-4738-ad8f-e46774b5d622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fcb688-562b-48cf-ac23-9f9a93741d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8aa8a2-94e0-4e42-ad40-7ce13fa3acae",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5ca4cf-943b-4cad-8329-a5ea45f5e506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a21a40-a1d2-4383-829b-09692b3d4ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9c4ad6-50d6-4efd-b0fa-b5918831ca29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ebca63-f1be-47d6-9353-418ab89e0a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72925bd6-ddf9-4936-bd98-29520aef4429",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cc5cea-5535-4728-8a1f-44ae7b5cd178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb103078-cada-45fb-89fd-7f610207e82c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03513fc9-e481-428f-bfe5-07e72d1314f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd8008a-b611-420b-9104-16c6c3799ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a42b577-a3a2-42e6-8487-7a58733c404d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ce9188-d121-4ed4-a42f-bd7569692ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0817908-e3ff-4e52-91cb-f6f88abcd844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5061dc75-8d93-46f4-9002-5a8219f03b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acfa43ac-a2f9-4d50-97d9-a61591082f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4afd43-6c39-445b-a63c-2ab39a9f4210",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880f683c-f353-411b-9a06-9cf91bd04f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f71b4e-db72-4980-9d09-85ca21c5cb19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e657b58a-1d71-46f0-b0c2-3d638e6f5038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9703ec8-52bb-400b-a66d-b585a3fd5456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19ec814-c0ee-4e77-80de-b84434c80c4b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fb406c-ea42-47dd-8d4e-76ac1cda55d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae6b6e4-26de-4608-92d8-a93c5d78425f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d38f1d3-b1a1-462c-8693-1c94d90cbab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9912cf8b-9443-4573-b9ae-e41c4a4de9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5040fe24-0e27-4333-a083-913b40f19651",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c07dc0-901c-44fe-a1ed-b0442c04a5d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c134a5-b60f-4979-95c9-7e2621ecd660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54018d7a-29a1-49ef-b498-08c7e11b568f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167f3375-6bc4-49fd-9119-1acc6c986df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32da5cf4-fb07-4e3b-adfd-e8a3443e4ee5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333b2ab7-5344-4812-90fa-f9b92a8cf9d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92dcdb76-d5e8-4f7c-8ecd-e2dee5c71763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ad88d9-5d0e-42bc-b7d2-7fc6daf6857a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0cfb9bc-9429-45a7-9027-65b28c919994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea0f0b7-2f46-44ad-acbb-28afcb2cd21c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c84d7c-a77f-41e9-abe9-25090884847b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82aded30-d62b-4ffc-97d3-13f85d6fb875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b071cf5f-5da6-4c05-b8d0-7eaf70fdd979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6ad6e6-05ab-4328-8b3b-cf0b3dc28fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac88ad9-8b9d-425d-894b-a51785ebfb28",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0c26fc-e354-4235-a8b8-dfbc110c9f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42a80cb-34ea-4351-8a81-d835af56b67d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf4555e-4bca-4fd6-a6c9-b2871b11a041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef115f54-04c9-4492-9c34-3b8d26a96384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b9ec47-990b-4062-b0b3-e0dbb6a5a0a6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b8a4c8-883f-4252-849b-0567c7cf493e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21d4249d-735a-4edd-a70a-448b717d1a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88aebf72-1dad-4024-9b57-f82250f00684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba505d9-f7c6-4f92-8438-63ea2544a22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a210447-f7bd-4da2-831a-c41fac9f0400",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6363fcfc-170e-4a73-930a-6818ad8e11aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c03e04f6-cdef-4e42-acd1-f9916dc258b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbced7a-dccb-4f60-9a7a-156b7ffb2c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de4cd55-ac1d-43af-9fcd-b1e801737072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0185ec18-6a47-470e-aff0-2260c6235660",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0193f626-8357-47b1-936a-32579fc7ff98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31987201-2766-4331-92ef-b9842dd696c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e9be9d-398e-4cec-a620-b86560d1af22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5988e30c-0008-4aa5-8937-5a27bc695609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807c53dd-c528-4bde-811f-98b4e76de2c1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d594a03-6d16-4a9a-93ae-16d6e95542a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0e5c0dc-3012-4de1-8c38-f10eda0e9370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e64435-a8ab-4250-9c22-61f1fd4a18a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab89201-42ec-4779-bb9c-184d5e6eed26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9f75b1-2587-4385-8fd5-30c9307c928c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae95caa-6d19-4b78-9869-20ed0546d4fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f288e90d-04e9-4b81-8208-8242ffaec998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d335c4-4eb0-4830-b5ff-c87d0f0146e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1252cc-9459-4367-a4a9-16d26d8f0472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42f2ca9-0017-405c-82f9-6d1cb87230f0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cb810a-adf7-4018-ab05-4ca32df3d2fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88a6f112-1886-42c0-b80a-d4fa1149e4a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa98b96-a423-4552-a8a3-20823149c3c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c0ccda-6bf6-406d-a429-7f6d56d6c90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fa85a1-e571-44ec-af73-8c82bb4a5caf",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd90b6d-680a-406d-9f8e-cf1fb0cb1485",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7962412a-4074-4b84-8c26-5fac7338b3c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bba99f2-3b8b-4695-af86-ccb653210ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63cde931-2a80-45e2-a82b-61caee081b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0267bf8-900a-41d2-8260-d1c2303289d2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920165b1-2b01-4c84-97aa-3396e3ee58fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f343ec6-810e-4a5b-bbcb-8e658be6bcde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a88687-d45c-4365-836d-0d70db75163d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aadb723-9219-412e-b967-d0e6b4fd4755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af89b4cb-5848-4aa8-8f30-fe27adbc5ee1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016dfe90-2021-4c35-8999-b913979e79ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cc800aa-664c-47f2-9e12-11e6b99f6b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425de92b-0826-4352-9c4a-3b805b79f7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1c7597-5d18-408d-9a18-e671a274a770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c321fde6-89b2-4f3b-bc2b-a1dea32a7105",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9390ba72-003d-4b52-9d0e-5d21b5794154",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a4391ec-1f6b-4efa-9c39-b20eae371858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c734c76-bd53-4b83-909e-c2834b362891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d61dd5-67c4-4fb4-b4ee-4edbf157bedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499b01a4-d0c0-4926-b612-eafcb0186320",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e866c14d-838d-4231-9677-23056e63f028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5311bb5-84fb-429e-8647-fbab4dfa5073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2502eb5e-3361-489c-b4b2-bdbb09084f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed519a4-bdd3-48fc-a023-84e9dd0007bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26846901-5de7-4b6e-9b1a-cdd58b9a8713",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9d8a5f-42d7-49e5-bec7-407cfb368794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38333dac-c914-4323-8f55-221954561ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c63a4de-c11f-4fa9-915a-d9ddeb748147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f634b0a-8767-42df-9506-1e0f429192e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bc41dd-a4f4-4f44-841e-da4b828c492f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05dff1d2-d512-4b7c-a470-147a3ecc84d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1835613-3a0d-45d0-8c85-13806c71dbb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ce1c6a-ed3f-47c3-9513-8eb05c3662b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e195abe-fd3b-4e31-8c73-0984b3fbd76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26fd39a-1661-49ee-a8f1-2e184ecf3751",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df55804-f264-4600-b787-ff6d87577d38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "370f4041-3025-4860-b58e-18cfd3496103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22de854-7559-4ad9-a8d9-3aa4bd612a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f581e1-d528-484b-8591-98037bfff01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ef08ff-78e5-4fa8-a4f2-2c661fcd9c5c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2be370-3f1f-46f8-8bb3-f0e8bc712690",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6006bfdc-9c67-4f09-867d-779fee7423a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abc0182-b3ee-40f5-b3a7-e811b9dd87cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6965cb83-2564-4372-8057-1f3385fe400c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de51098d-1208-4665-aeb5-2fb6432877eb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e28640-22b1-436a-a478-f4d855412926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23a137c0-bcac-45e2-b6d9-f79cd0f60287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "176e5d86-2be8-4074-ae1a-9760fe4923e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b177d7a9-c311-4537-baaa-d29fdfad051d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ab6625-a307-46e1-a4ae-50d6f63fa5aa",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccb789d-8895-4ed8-8480-2d1114511987",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f62d62ea-a8b5-4889-90a3-828da370bd0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca435779-28a1-431c-93bc-6b238bd1ac24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e5d4e4-4dc3-4023-8e28-f6342fc6f72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c854d7a-390c-4f23-bd72-a77b25f3edc4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1725dd-8fff-4232-86d4-24a1e109f8a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f466a9e9-f7b6-4dc3-8b67-5c2699df2d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27171f49-a518-4225-b366-6063f43139d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98269d85-643f-4128-85a0-8a89ebbdbb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df604d7-9ae4-4dd4-b290-10b7de07a5e9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7876927a-c18d-46a5-b2f0-9473495a629b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e1be380-56b7-48aa-81a9-e42eddf765c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6421773b-9f36-4fd5-841f-1b2a65de2e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "419ff21f-e265-46bb-b78c-4bcffcec0cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af90c077-55a9-4b30-9e10-fbfaa8ef031a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4979cb-8512-4dbb-942b-8861eb1b21e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7423db3-2569-4643-87e4-6b21490b050a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a667b7a-d8ea-45cf-b007-0f17eb44a92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dcfd748-14d9-4e1a-bfd9-73e4c9b27f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbf831c-2110-4184-8f6c-3c556152496d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6255e7-5474-4d7a-aad9-9bba39d83665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db90ba45-1a87-40e8-b011-0d7483d08d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4e90a7-46cd-4382-a93b-948383efe2cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c70058-8bfc-4fb1-8e80-2afc795793b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9a5637-9a21-4dad-a76c-b11686e0b380",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b58288-41c2-41d4-951f-abe9ab06e4a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eeb509d-4d60-4790-bc01-1e2f7d1a5188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fa09c4-a845-47e6-8e3c-372267f7ec4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0acb0c-0a6a-4839-85a5-99dd18337f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65359a4a-dae3-4d78-b1ee-0aabe4180886",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8da361-81b1-482e-9a82-b4ee05668cea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6785495e-6d4b-4b47-9f64-05ca48a03223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3c72df-f442-46c2-ba9c-3f88b3e4c7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459307b3-765e-4ecf-b7c4-b3060504ee67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0d17df-81bf-48fd-8bc5-39aa84703df8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdbf07c-248b-4c54-bf76-f6c4169db88f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebc5ccd6-93e7-4835-ad14-8c81a73eec71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fadcb51-d580-4018-af49-e89afb69437e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ed584e-8ab8-4f77-ae40-e4f91e553633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c1c1f3-62d0-4b0e-9e98-77af8240439a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cc704a-b1d2-48b3-9ed7-2efd3caef950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1ff16c2-feaa-4607-b2e9-6660ee75004f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff91e76a-8a47-4886-81c8-8c0e7e72bdb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4e4bee-09e4-487e-bb37-aa281c85ab16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afec9c6-e402-42ca-9027-68958b1a65e9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4147b0d-7e38-4485-b9e4-fb37dcaceaff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65aba0a7-6c45-4296-9580-349150d8d4db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163d6b54-83b8-486f-81e7-fd479f519331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a448384-4c4b-417b-9ee0-a78101dba54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736b9627-ee51-457b-88e0-906266ed33f4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044ad81d-9dc7-4b85-95f6-7ba95770ee87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c1a8f46-dede-4539-83cf-ca72ce13907c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8084139-96ec-41ab-976c-4b8499ceb882",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2749a3dc-e90f-4f1e-beb4-bfd1a3fe2777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dcb2b7-e86a-4eb3-95af-7a96a3037d11",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea34de18-6bf2-4fb3-a4a3-1dc33d5cdc3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2548cf7-6fe7-4f85-a63a-6facf91296b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad7124d-3173-4e2e-affc-38531cda2dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38379f4a-2d38-49a2-934c-1678c200af86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48cb172-ce61-4fca-90c8-166bff2a0e23",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc76dfe-8c2f-4fa9-a653-19d067e875cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8654852-f8d9-4f32-b57b-abeb6c12b9a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c59e07e-363e-498a-808c-43bc212a516a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881bfdaa-55d5-4c07-bb56-d6213b4719e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e869fe9-d963-46bf-8727-91daf603f8a0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec5bcb0-870a-4452-9180-7bbbdc64d17d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee71564f-0e61-4910-a535-26652240d94a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae008cb-5dd4-4f24-8de0-5b106775609c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0e597a-1b98-4df1-ac16-a6b556943846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51e0eaa-71c4-4882-9ead-f9a4ff9bb3ab",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f671876c-ab7c-4152-91c7-508187d699c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "893197d8-2de6-4ab7-a34a-4a34c44b1439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02456ec0-3371-4f4f-92fc-77f4a004a89c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47639cd4-3fcf-408c-a03a-a61a8f8a9ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac36275-384f-4953-b401-4e8bfed02c8c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fb9010-5325-4a8c-a789-20242719e12c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8bd3d3d-cae9-44e5-a72b-d8c6fe0098ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa96444-59b1-49db-82bd-a34f34702286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0bded22-fcc1-4294-a0c5-3b2f8ee47a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e33b7ee-cea0-4d0d-b66f-b1532dffd1c9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe6e5fa-2958-42fe-bc11-f69a465b5330",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "199e0e62-3a95-46fb-97c1-a857c0ecb293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a8270e-0fd5-4035-9c78-b512922874ba",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628c9693-24a9-4dce-88f5-1dd4a22168d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6e7eb8-3b7c-4710-947a-57bc5c13bd57",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a31eb1-714a-4881-9fbe-b45200c1f7ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b802484-1b31-41f4-be40-0aeda16a084a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4dd198-f128-4e4c-9bb8-43660138d043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244e75e9-c32a-49b9-8478-04049f9e0cb2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b12d918c-32c6-471f-9eb3-3bd1dc449f99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1eb7b96e-4233-416f-a599-86790d99d8a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef83a8e0-40f5-4e3d-9e71-6a511f9ae767",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4cb8a9bd-e74e-4782-8392-ed7cc362cb8f"
                    }
                  }
                ]
              },
              {
                "id": "1638ac44-a0ab-4f40-8ed3-a1c104e32b03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "47702711-9154-49a6-b6c3-fae86b2c186c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc187be-e5f0-4f29-a959-5763cb31559a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bf495778-5ab3-475d-94f9-55ab1041c236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00175f6c-3c45-4048-82c2-149880a92ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4c48fd7-3a69-40e8-97de-40b2873e1fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722a0ad3-a001-4f25-ac44-84d0071fdcd0",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6acc95-06eb-444a-962e-a29099e81a08",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e110fa86-d95c-4942-9beb-976dc18c5dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf18ec58-e725-4387-929e-a6610fddea2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6462fa16-ea1d-4e3d-9006-cb7614c8284d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea470fe3-c9d9-46b2-98af-28715d3c60be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "302f70bb-b1bd-45d0-8bcf-e8bbcfb7665e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ae1b85c-2a7e-407f-99e8-41dee812701e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b619f6d7-3bae-476f-bac6-23b77b1cc441"
                    }
                  }
                ]
              },
              {
                "id": "36a72342-5015-4b11-9ee6-523288e1b991",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3b46a158-78a0-47d6-8852-c5c4b73c2003",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350a22a4-c1d2-486b-a395-5944b9260e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f50919d7-f222-4b3a-b7e6-6e61792c6f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d164c91e-0812-4b3f-821e-cc0f27850d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763ee87a-d287-4a6b-bfe3-a09e174412aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9c2684a7-220c-4e8b-84bf-80229a1624f4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1853795b-583a-45a7-b336-369fe28832dd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53ff5586-5444-47ab-a18c-014abc9e4e45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "73831fc9-0cde-49c8-83d9-2bf71414810c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "016e891c-83b0-444f-b9b6-2eed131f5de2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b94be0c-ed23-4618-86f9-c74d31658dfa"
                    }
                  }
                ]
              },
              {
                "id": "9e72a609-ad66-40de-834f-fb5cfa9f0cd0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5179badc-f902-4970-9510-0e1c933ba55d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "83467bd7-8782-4012-98db-19692f0e1fe4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "267926d4-72a2-41fc-be3a-4c22c514ec00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6909db1e-4c18-4f5f-b56e-a806ca87b477"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d741e5b0-bb82-4506-8b7a-1c2220c71da1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6c2a8d3a-9c20-4f27-8f1c-170f4f854210"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "790fa56a-f487-4fab-993b-369896591678",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7ecd65d-764e-4d8c-b053-88c69cce2601"
            }
          }
        ]
      },
      {
        "id": "e70b6900-6ac5-4790-9cc8-26dfc558d22c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b8bddf6a-32c1-436c-97e9-0aa42d648448",
            "name": "Negative Testing",
            "item": [
              {
                "id": "421a2658-ade4-49c1-9325-397be5ba6a1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad976cdc-4dac-4389-b6f6-2e7740437e02",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb58a11b-edad-4c28-9b8f-5a68f626ff04",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0d60658a-69e1-4510-96df-8f220b7bb3d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2a6858-48b9-4c54-a1b9-0c8cbc66eab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a48479f8-75cd-45be-82b3-435b57d4c843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98e7103-00b7-4552-9b32-7d1e8e17392a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3844501-c2a3-415c-83e5-126f97467834",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "daf9b53d-11d9-4bf7-a6e0-56e590de7d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbe387b-f8e7-4fec-808b-bc1a64f53bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecb2d9f4-b0f2-486a-8726-40234768e91a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcc3552b-62c6-4f8e-8504-bc7549197854",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8a03446-ddc4-4e14-ba96-d5ea51b9b803"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82c17b78-d477-4c4c-ba8f-7d6535f3090d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3cc668cd-b7c6-4a6c-8631-d11e24f115db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98a8c0b7-d9be-4ac3-a224-2bbcbec75d93",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7f22e59f-c87b-4136-8573-e6d3e8e65925"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a9c1d45-5fb4-472f-b28a-601b39b2f592",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "115e391a-d825-4ee1-a947-191c51d07db9"
            }
          }
        ]
      },
      {
        "id": "798392c5-e2f6-4b68-9ce8-b56f8700f71b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "34e3ec02-1c4b-4d8c-a582-7550eac29527",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e10d3f8-364b-4b3b-a9fe-51c8ae1b79aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73050832-8916-4040-a586-eb0ecee1e507",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c0b159-20fb-4337-92dd-5fc3f5d86aec",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "33f2cca8-c645-41a0-9a23-892db7a0abca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bd14ad-978f-482b-9723-6384d188a0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "859f25a9-9c1c-4f36-88f9-442faed3e1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2788b16-86fc-465e-8c70-79457bba2e2f",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed469f51-ecb9-4ecb-a54f-55d654c095f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a97ead0e-9ee9-44f9-94d9-e7e0c8884fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b851a850-612a-47d9-99c4-a99d1c2d8a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a37787dc-5c08-40ae-ab5b-1884f57ea35f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e082ee7-d9cb-4334-84a5-253e1ac246d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f766020-7bd2-4879-bf75-a2737e53ed66"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "822b3881-a8a3-43f6-8dff-c3351ecd16f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d473ce6d-9fc0-4466-8fc3-fcea545dd7dc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85bdd833-024f-4338-93a4-62270c0e58d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4cc18ad9-32af-470c-83a3-43f7d5a6387e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f968f322-33dc-46b8-95e4-aabdc042cad4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f421685-338e-4f05-8a48-03b53dac0dfe"
            }
          }
        ]
      },
      {
        "id": "c20189e7-174b-4c1c-af0e-741f1372d8d7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cb27e9de-df4d-45b5-ac67-ea75ea9aff90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9fb65fce-b76f-49f2-af6e-b34e655f0bbf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2667f3a7-b6b9-4d4b-a4ad-4387c4f93a7b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cadf66-19ca-476f-80b3-20d891a16e71",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "50f892e9-34f8-406e-88c0-5c1097d56593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faafdda6-a303-47f4-98e6-19cbe22b84b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f15a4b9-3202-402d-8d23-3c939affda66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733f0790-0979-4645-8683-e3e492ecb4ed",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed6be18-6e05-4c81-8b15-cceee3e9ab8d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "73ce3ee9-8490-45b1-ac24-e23c2ee9f60f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c486da3a-8440-4ca1-97bc-48fb5f1a65dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b1246a8-3c60-4f80-a874-2ddcfb6567e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1dc15a6-1c82-421d-916e-135c76be2f34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a670ea7a-9f62-43e5-9ef0-14fd45783ab2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0489f68-fd39-47fb-a70d-8798f6d0c31d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "959e541d-5139-413e-b0ea-f0e639115339"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7014056a-7083-4080-9bff-82460aa8f2cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6b72e48a-2a36-4bd5-9418-6033382975a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d23232d-1fcc-4fd6-987f-ee36879e29a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7d1c3ed-b77d-47e3-a39f-39ec9ea61b7c"
            }
          }
        ]
      },
      {
        "id": "fb6898f0-52d4-456c-8670-61309aaa73fa",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8a51768-f443-476f-94fd-60e37421ff04",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62f686b4-0198-44c8-9931-5c8a79809be3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "623cecf1-c2bf-42db-9b21-cc8df4d3d9ce",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ead876bc-5506-4cb9-b180-2552e34e862e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ee34a15-f079-4633-a858-201605b9920f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1917,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 515,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 963,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 954,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 676.6321839080457,
      "responseMin": 32,
      "responseMax": 9201,
      "responseSd": 915.4234426049561,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1676508037161,
      "completed": 1676508224713
    },
    "executions": [
      {
        "id": "e6e858bc-24af-4229-8059-debe71f6cf32",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "15798abe-f00e-457c-b506-858a74a1e234",
          "httpRequestId": "cec4cff0-2392-498a-9ac9-6bed86c9670d"
        },
        "item": {
          "id": "e6e858bc-24af-4229-8059-debe71f6cf32",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5ee518ef-a89c-4107-b577-da3b9024c216",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 0
        }
      },
      {
        "id": "5f01c988-4a4a-4d3e-9982-efb5c1343cb4",
        "cursor": {
          "ref": "cebce872-dc38-4b74-9854-936f54bb6fa0",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3fd1a631-9721-4225-a7a5-48baa7a839dd"
        },
        "item": {
          "id": "5f01c988-4a4a-4d3e-9982-efb5c1343cb4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "58c9f12e-358e-469c-a442-3cfad1c6f1f6",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 0
        }
      },
      {
        "id": "28c222eb-861d-4494-8f77-5ddace5783af",
        "cursor": {
          "ref": "21c64962-7364-48c5-8572-ea3cc44d16a4",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2171460c-0ad4-43e2-b318-56723d42c504"
        },
        "item": {
          "id": "28c222eb-861d-4494-8f77-5ddace5783af",
          "name": "did_json"
        },
        "response": {
          "id": "5725f3fb-7514-4a2e-9d00-537b9a19ae08",
          "status": "OK",
          "code": 200,
          "responseTime": 915,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f136f5f-a92e-4f08-9786-0bc5fa4eefc6",
        "cursor": {
          "ref": "e3be4866-8552-4966-8bd6-6693d590aed7",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eb9c807a-7097-4625-a4ac-28c69efe17f5"
        },
        "item": {
          "id": "5f136f5f-a92e-4f08-9786-0bc5fa4eefc6",
          "name": "did:invalid"
        },
        "response": {
          "id": "e25f021b-b16b-4a45-ad0d-8a80c438122c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f136f5f-a92e-4f08-9786-0bc5fa4eefc6",
        "cursor": {
          "ref": "e3be4866-8552-4966-8bd6-6693d590aed7",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eb9c807a-7097-4625-a4ac-28c69efe17f5"
        },
        "item": {
          "id": "5f136f5f-a92e-4f08-9786-0bc5fa4eefc6",
          "name": "did:invalid"
        },
        "response": {
          "id": "e25f021b-b16b-4a45-ad0d-8a80c438122c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f242289-03b2-45b6-95a8-11358f5ccb18",
        "cursor": {
          "ref": "d28a2171-4660-42ba-af4b-d377eec5bb4b",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7f74ab1f-c509-4cd3-8e32-9000be815cd3"
        },
        "item": {
          "id": "1f242289-03b2-45b6-95a8-11358f5ccb18",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cf73853c-eb00-4278-a136-280a88961a10",
          "status": "Not Found",
          "code": 404,
          "responseTime": 613,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af3b885-295b-4da4-a2fb-0a05d43b73de",
        "cursor": {
          "ref": "bee24af1-9aea-4eb5-9ba3-cd5741fcc5a6",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e0d1ef57-7567-4523-9531-983636d2da56"
        },
        "item": {
          "id": "3af3b885-295b-4da4-a2fb-0a05d43b73de",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1fe92010-d181-41e9-a07a-572f534581dc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 619,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986bed19-5726-4341-90dc-e89faaaa14c0",
        "cursor": {
          "ref": "197bb77b-3aa8-4ca7-89db-911e08e78aeb",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "368e48f8-4490-409a-9411-61e5eb34ecec"
        },
        "item": {
          "id": "986bed19-5726-4341-90dc-e89faaaa14c0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a941564d-e22b-430c-9779-277c84915260",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f0eb27-d09b-4c7c-babb-86da96204752",
        "cursor": {
          "ref": "bca3061a-3294-40f4-80d0-13cda7b21bd7",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "84cc9184-2e8f-46d2-8fea-c257ae52d5d1"
        },
        "item": {
          "id": "30f0eb27-d09b-4c7c-babb-86da96204752",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "cd64f8b1-4dac-4f41-a509-e508e65193a0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 526,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f0eb27-d09b-4c7c-babb-86da96204752",
        "cursor": {
          "ref": "bca3061a-3294-40f4-80d0-13cda7b21bd7",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "84cc9184-2e8f-46d2-8fea-c257ae52d5d1"
        },
        "item": {
          "id": "30f0eb27-d09b-4c7c-babb-86da96204752",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "cd64f8b1-4dac-4f41-a509-e508e65193a0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 526,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92aa3915-0219-48ee-a4c3-f56d80348e2f",
        "cursor": {
          "ref": "afb481da-1eff-4c9e-b317-dd7fdecca72b",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "85b5fd18-3929-4737-97a8-f4359095eed9"
        },
        "item": {
          "id": "92aa3915-0219-48ee-a4c3-f56d80348e2f",
          "name": "identifiers"
        },
        "response": {
          "id": "50238587-adfc-4543-880b-b50d31ebfd25",
          "status": "OK",
          "code": 200,
          "responseTime": 914,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d523de75-4d2e-4551-8dcf-a584dc4dd9cb",
        "cursor": {
          "ref": "feba4cfb-3587-4aac-88d5-4d38c1fbfe89",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ec95c159-3ee6-476b-b9c1-61bf8a020366"
        },
        "item": {
          "id": "d523de75-4d2e-4551-8dcf-a584dc4dd9cb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8300c833-37ec-46b4-83eb-26a963c714fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d523de75-4d2e-4551-8dcf-a584dc4dd9cb",
        "cursor": {
          "ref": "feba4cfb-3587-4aac-88d5-4d38c1fbfe89",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ec95c159-3ee6-476b-b9c1-61bf8a020366"
        },
        "item": {
          "id": "d523de75-4d2e-4551-8dcf-a584dc4dd9cb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8300c833-37ec-46b4-83eb-26a963c714fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6fff95-bc39-492a-ac7c-e8c0c3960636",
        "cursor": {
          "ref": "c5da917d-8ddd-40c2-831c-4e0b0c807f07",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e7fec68f-1a1f-49c0-9d48-d51cf55e45bf"
        },
        "item": {
          "id": "9f6fff95-bc39-492a-ac7c-e8c0c3960636",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d2f142d8-20cf-4ed9-b0a3-fc7abfcca6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b460896-de64-4f88-884e-231ae8036e98",
        "cursor": {
          "ref": "fb3b10e5-f313-4514-9858-fc486f27926b",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a932188c-21cd-40ff-9065-698db91caf3c"
        },
        "item": {
          "id": "7b460896-de64-4f88-884e-231ae8036e98",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "10951b98-bae4-42e9-8a4a-37bfe651d25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a75dfe-3404-463d-bdb4-bb08d3366fe1",
        "cursor": {
          "ref": "b12e5f75-e154-4689-8d33-3a71b692e268",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "587fbd0c-aba2-42e2-be4e-9515476dfa1b"
        },
        "item": {
          "id": "a4a75dfe-3404-463d-bdb4-bb08d3366fe1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a78770a5-9d83-4d9c-9f7d-4d85b177a1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70625321-dec5-463c-8b35-2f632cbbc97e",
        "cursor": {
          "ref": "4270f997-f60b-447f-94ec-1cd13d86e834",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1c49ce2c-60b8-48c2-a537-6a4f8dd58932"
        },
        "item": {
          "id": "70625321-dec5-463c-8b35-2f632cbbc97e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "56c12a0e-f004-46ce-9060-8f11d5d350ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cac8c9-329a-433e-828e-445a29f10cf7",
        "cursor": {
          "ref": "c8187059-1b1d-48f4-91e9-505153b4f964",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0faf31a0-1272-4419-910c-d88455c67789"
        },
        "item": {
          "id": "02cac8c9-329a-433e-828e-445a29f10cf7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9f6d8e5b-39de-40ac-b6c1-e4b6e86ca7a1",
          "status": "Created",
          "code": 201,
          "responseTime": 2760,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:15)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:15)"
            }
          }
        ]
      },
      {
        "id": "969880b0-84a4-44de-bb41-5e45e8fd2c91",
        "cursor": {
          "ref": "8716f15c-b1e7-497a-96f6-21b50019dd3c",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b377bc4b-b21f-4656-8006-d4ab338583a2"
        },
        "item": {
          "id": "969880b0-84a4-44de-bb41-5e45e8fd2c91",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "852981e5-b210-4a94-a86c-14ee16d512d0",
          "status": "Created",
          "code": 201,
          "responseTime": 2609,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "d7969c78-3dcd-4e23-a3a8-282f198dd82a",
        "cursor": {
          "ref": "f685ef26-e3dd-4ab7-933d-73f666f1a547",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "373da93c-fc5f-4220-8802-8925c5d0a3ec"
        },
        "item": {
          "id": "d7969c78-3dcd-4e23-a3a8-282f198dd82a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8f463ae3-fc52-4bdd-8b2f-7b50a4dbfadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528c0ff7-7d57-4301-a58f-de3b511ef7cb",
        "cursor": {
          "ref": "45b46360-f19e-4940-8620-73ebdb16ffcc",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3190fab2-b6ed-4ed1-8bde-e362bc70e748"
        },
        "item": {
          "id": "528c0ff7-7d57-4301-a58f-de3b511ef7cb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fc9aec73-5d67-4386-827e-3f8cbdf6cba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 993,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08a569c-cbcb-45e3-9c5d-80ddd8073cb8",
        "cursor": {
          "ref": "ab846db6-5db2-41a0-b98c-2165c53f1c5f",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "52b3c4a1-b75e-4b58-be78-fac666b3ba08"
        },
        "item": {
          "id": "f08a569c-cbcb-45e3-9c5d-80ddd8073cb8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3a1f7380-585c-47b6-8266-84b338de8ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 911,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb01c560-806f-48ed-b972-3a834c6be1c6",
        "cursor": {
          "ref": "8b27b51f-908a-4f49-b6f0-5b092483eec8",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7098662e-7d14-4b5a-aaa3-e05c48278366"
        },
        "item": {
          "id": "cb01c560-806f-48ed-b972-3a834c6be1c6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "aff206c8-2800-49f2-b3c8-b7ef9b6dd316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1081,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad8400d-7939-41de-b61a-f0f7e6c7ac9e",
        "cursor": {
          "ref": "4c409308-1131-40cb-9b07-bbdbf859e257",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "59a69ffc-c84a-440d-bbbd-e6c172d163c2"
        },
        "item": {
          "id": "bad8400d-7939-41de-b61a-f0f7e6c7ac9e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "01dda8ca-52e5-453e-8ed6-3087758d0779",
          "status": "Created",
          "code": 201,
          "responseTime": 3439,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:21)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:21)"
            }
          }
        ]
      },
      {
        "id": "94c708e3-80f9-4616-809e-c03a705a3278",
        "cursor": {
          "ref": "703f8075-79fa-49fc-a176-0126f5661aa4",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0c64b44f-9bd3-4ffc-b44f-9ca8744a16e5"
        },
        "item": {
          "id": "94c708e3-80f9-4616-809e-c03a705a3278",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "23dd6540-962b-416b-a6c1-4624e858cf4b",
          "status": "Created",
          "code": 201,
          "responseTime": 4566,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "7b839658-95bd-4a60-b14b-fe9cd39fb099",
        "cursor": {
          "ref": "dc7b5c04-cf92-42cb-a0f6-d977f9846f27",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "cb996b4a-5afe-40df-9144-7cfc7c5af929"
        },
        "item": {
          "id": "7b839658-95bd-4a60-b14b-fe9cd39fb099",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "655a82bc-e4df-4712-bf3d-c1d8ab7dda85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7c7c99-291e-4334-8f4e-4c59c47f56a9",
        "cursor": {
          "ref": "b07d957d-661e-47fb-9d44-22326dff053d",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6f51ca4c-5ee3-45ec-b7fd-84cbd07a3dcf"
        },
        "item": {
          "id": "1b7c7c99-291e-4334-8f4e-4c59c47f56a9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1b48bd35-b3c7-41f5-9b0c-7b2206f4d0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec78645f-96d7-4d22-81c9-c71f926d721b",
        "cursor": {
          "ref": "d1f80520-9567-4321-849e-f0e8d2e9da49",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "276d1dab-13d1-4902-ab54-2c4836b19f8a"
        },
        "item": {
          "id": "ec78645f-96d7-4d22-81c9-c71f926d721b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fa27e305-5c2b-4be5-8022-b7349d09522e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81315e5-650b-407d-87c2-e6ec9ea9c4be",
        "cursor": {
          "ref": "148c4f6d-a168-44bb-8521-53a7b25ca190",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "eee0b958-1412-44ce-a08f-b00e5519dd9b"
        },
        "item": {
          "id": "e81315e5-650b-407d-87c2-e6ec9ea9c4be",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b914b7bf-b69e-49bf-b268-92bba322f263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532e4219-eb12-4d5d-977c-d465074173c6",
        "cursor": {
          "ref": "99755d34-c65e-4a00-8f8c-e15ce60a451c",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "17d52255-668b-4503-a084-1bc3c890795d"
        },
        "item": {
          "id": "532e4219-eb12-4d5d-977c-d465074173c6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a331d105-4473-4039-89a4-585ab358b935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccdad30-633e-4537-b814-dfbdf7a70960",
        "cursor": {
          "ref": "e826c017-a3a4-4520-a356-8c3981b2d4fc",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "344a209f-3e1b-41af-be82-378f951beaa9"
        },
        "item": {
          "id": "0ccdad30-633e-4537-b814-dfbdf7a70960",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2b515598-34bf-4d41-b867-871b9293828f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 897,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb116c13-3ca2-4bc4-94e8-db9880a1ebda",
        "cursor": {
          "ref": "c86ea9f0-90ec-4e16-b70f-e26ccb15b412",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "069034e3-7645-4828-8ece-ba2c2abda805"
        },
        "item": {
          "id": "bb116c13-3ca2-4bc4-94e8-db9880a1ebda",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5c16e49e-8673-43fb-9d88-11a9858a1ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 954,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9167e7a6-750f-4835-8a20-4adb91920316",
        "cursor": {
          "ref": "b462ccf1-ac97-41a9-b084-a61884c0be13",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "34077ddd-7f03-4b3e-9c72-aa116bf917b0"
        },
        "item": {
          "id": "9167e7a6-750f-4835-8a20-4adb91920316",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "31b8ac8f-383d-4dad-90b9-f594ae9a982f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 898,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b33f1f-238d-4f0f-b202-c0f1d1794426",
        "cursor": {
          "ref": "9ac852ba-8104-4fd0-9072-98ba72751517",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4bcdc1ae-53fc-44f5-ab04-ce9ccb37fc1c"
        },
        "item": {
          "id": "90b33f1f-238d-4f0f-b202-c0f1d1794426",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "60520c48-11fd-4453-8c8c-451b8220060e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a89df6c-4895-49e0-abd1-e830973c948f",
        "cursor": {
          "ref": "46943b78-d9c9-4271-86f1-d49f2f44bd74",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fc2e1e34-9a27-48f8-b80f-17454c67b95c"
        },
        "item": {
          "id": "7a89df6c-4895-49e0-abd1-e830973c948f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c74257d0-080b-4374-99a8-2af831183c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2a200e-7076-41cd-b54d-1c925197ec51",
        "cursor": {
          "ref": "a40622fc-8079-41e5-880d-6c665ea8fb96",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9d5235f8-3efd-459e-92bc-9107521ad6c0"
        },
        "item": {
          "id": "1a2a200e-7076-41cd-b54d-1c925197ec51",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b4311182-c18a-4e8e-84b3-7204853dff4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464af602-72da-47e3-9250-eac5bf5635eb",
        "cursor": {
          "ref": "991249a9-dd83-4b57-a974-bdc12a2bf600",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0c5dd306-97ea-4504-b97f-78ed498c2eea"
        },
        "item": {
          "id": "464af602-72da-47e3-9250-eac5bf5635eb",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0f7d1e4d-d5bb-41ee-80b9-524bc1133289",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2056,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:34)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:34)"
            }
          }
        ]
      },
      {
        "id": "8856b47d-c968-420e-bb3b-f4ccc24aef94",
        "cursor": {
          "ref": "72476035-06b2-4fd9-9051-222f0be43865",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ddad346d-4c07-474e-adf7-e699dfc4d918"
        },
        "item": {
          "id": "8856b47d-c968-420e-bb3b-f4ccc24aef94",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1d0439a8-fe21-4c99-9f1f-f6600570024a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea745cad-d11e-415d-8537-45b9643a75c1",
        "cursor": {
          "ref": "2b8a5f1d-7fca-40ad-b9f4-d4cf751bd910",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "aebb244b-36f3-46b3-a9ad-873fbf06fc62"
        },
        "item": {
          "id": "ea745cad-d11e-415d-8537-45b9643a75c1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e5d4e42b-511d-4cf6-a869-1330897e3230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4de1c02-9072-4c02-91b2-c00979bf4db2",
        "cursor": {
          "ref": "6435c971-03b1-4541-8b5e-cf9048575e4b",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cd13b39a-1414-45f2-9f3d-2dd61dfdb10b"
        },
        "item": {
          "id": "b4de1c02-9072-4c02-91b2-c00979bf4db2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "43d3f20e-8cb0-4fb9-86b5-42149771bc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adc52d8-4f36-4991-9e04-a54797050d2e",
        "cursor": {
          "ref": "09fd2928-a19a-4ce9-a01e-83ad257b18db",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a6328852-d9cf-4a57-bb16-0ce54e94f7b3"
        },
        "item": {
          "id": "4adc52d8-4f36-4991-9e04-a54797050d2e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ad6ff03e-c10b-4adc-b7d4-3bd8f814a58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f1fc48-3eb4-4b74-a665-f484837fa69b",
        "cursor": {
          "ref": "196d0d16-8b14-4ea4-bdc6-d9167aa129ca",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b4de227c-cb50-426b-9ad7-165ef480a791"
        },
        "item": {
          "id": "88f1fc48-3eb4-4b74-a665-f484837fa69b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "21e6e42e-c16f-439a-866a-ca462004913f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786df8a2-c4f1-4e43-8fc3-04bf5fdf8b8a",
        "cursor": {
          "ref": "5d96b4f9-4dda-46eb-adb1-512182fed2fd",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "26407168-dc89-456a-b2d9-961febc28568"
        },
        "item": {
          "id": "786df8a2-c4f1-4e43-8fc3-04bf5fdf8b8a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "507410a2-d1bb-40ed-97c6-12d780508cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6a30c5-cb55-406f-a34d-1bc154243a68",
        "cursor": {
          "ref": "d86bc04b-180b-4975-8a22-dd5947adf79f",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8a73b314-a19b-4447-b81b-f073a6b55f37"
        },
        "item": {
          "id": "ae6a30c5-cb55-406f-a34d-1bc154243a68",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4dfb94f6-0a34-4be9-96e4-6e9030c2d0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64de28c-9543-413b-9694-385c97589e98",
        "cursor": {
          "ref": "18d0d279-63b8-42fa-a2b8-77385eb6cf7f",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9d28e1b1-948f-40fd-b11e-699c276484bd"
        },
        "item": {
          "id": "e64de28c-9543-413b-9694-385c97589e98",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b3e8ae0a-a947-42cc-a0dc-c152f823c778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4832ff02-697b-4795-96df-2d00be7b9805",
        "cursor": {
          "ref": "df30dca8-6745-4849-8949-ccec5cdd98ee",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "84adcef5-ad06-462b-9c0e-2b89b46987cb"
        },
        "item": {
          "id": "4832ff02-697b-4795-96df-2d00be7b9805",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "23eee2e9-894b-49f9-94a6-04dc4aee8b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c64306-92bb-413d-85ef-427984ef6404",
        "cursor": {
          "ref": "194b4524-ced6-4458-8c12-e8aa70692dfb",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cf4c2cea-2897-4697-8a87-51eedbe82197"
        },
        "item": {
          "id": "04c64306-92bb-413d-85ef-427984ef6404",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f5ab728e-ee1a-4691-be9e-304bdc69ad49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80600914-f8e8-48e9-bd03-07c11b6a60a5",
        "cursor": {
          "ref": "c3b69e41-1b56-4601-9234-b9fdd62cdd45",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "78a9ada1-670d-40f2-8d12-c89c12e54734"
        },
        "item": {
          "id": "80600914-f8e8-48e9-bd03-07c11b6a60a5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d6656c3f-d03f-4096-9859-eb8c8d2c6945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02e5572-53f7-477a-b876-4376076b771b",
        "cursor": {
          "ref": "6ae49686-826c-428f-b652-e33516e2e5b2",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0308794e-175c-40de-ab65-fa11fe6823b3"
        },
        "item": {
          "id": "d02e5572-53f7-477a-b876-4376076b771b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b3641eeb-b221-4170-949c-7f1c58794122",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 613,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9543c8-8a96-4a06-8f99-baa24eb16cf0",
        "cursor": {
          "ref": "f13bd27f-b4f5-45a4-8c5f-ce73abeb1257",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a8ad10fe-dd83-4b07-9ff6-d2ad7dbf9435"
        },
        "item": {
          "id": "8c9543c8-8a96-4a06-8f99-baa24eb16cf0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0ea0d6af-02ae-4d81-a29a-fa77c240cc51",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 543,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:47)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:47)"
            }
          }
        ]
      },
      {
        "id": "3d3578d6-fb17-4276-a265-9870d7991a30",
        "cursor": {
          "ref": "62a09ad7-b892-4f13-84fa-ede0d7013d25",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e939d66a-a3ea-44c3-883d-4407176cdce6"
        },
        "item": {
          "id": "3d3578d6-fb17-4276-a265-9870d7991a30",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "486dd6f6-1985-4dee-bc83-5b54bd9ebf88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30fe9b4-5a50-4575-b3e7-42f8927621a8",
        "cursor": {
          "ref": "cbee74d4-1f27-4e73-9947-4b08aab5839c",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f9b2b544-edb4-4242-a628-6e4eb478df13"
        },
        "item": {
          "id": "d30fe9b4-5a50-4575-b3e7-42f8927621a8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d79a03a2-8e9b-4c69-bd3f-adda333bb145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589aea68-629e-4348-aa12-ed649f678bff",
        "cursor": {
          "ref": "cadf0e4a-c6b2-4771-a287-70feb6c5a4e6",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a7016655-bb99-4b02-8d91-122c35fafe97"
        },
        "item": {
          "id": "589aea68-629e-4348-aa12-ed649f678bff",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e682173c-b627-4dbe-9f7b-450f9128ae67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de67f21-72ee-4b7d-9a97-6f24d5384cee",
        "cursor": {
          "ref": "aaf17979-052c-4507-a158-96ecd0a3a27e",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b65eb4b8-283f-4c7d-9579-d37648014ff6"
        },
        "item": {
          "id": "6de67f21-72ee-4b7d-9a97-6f24d5384cee",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "64efee1c-8eb3-45c2-b83f-5b2d5d4fac9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ba6473-e86c-42f8-a4ba-b5aed9f7de03",
        "cursor": {
          "ref": "73251cf4-1025-4a11-938e-2fcbc4cf8c58",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6808fb7e-29cd-4fdc-8f60-d078d4a13791"
        },
        "item": {
          "id": "26ba6473-e86c-42f8-a4ba-b5aed9f7de03",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4926c3a0-ed89-40ba-ac6d-47f82568e68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53133261-93ec-4488-938e-f4b00b4bfc10",
        "cursor": {
          "ref": "a9109797-dafa-4f18-bf1a-cff8730bb43f",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "36750a68-c377-4b6e-8ae4-247cfb5322ee"
        },
        "item": {
          "id": "53133261-93ec-4488-938e-f4b00b4bfc10",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "04d0b118-ca0e-4dd8-8fa4-50343e31d646",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 594,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4678cbb-ca36-4e51-8fda-9b4df157d9af",
        "cursor": {
          "ref": "ca470564-2a1c-4a78-8255-448d79500bce",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1a0bd99f-f8df-447b-9999-870842d891f5"
        },
        "item": {
          "id": "a4678cbb-ca36-4e51-8fda-9b4df157d9af",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "179897d5-d118-4005-b861-857123882d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5844fb50-6230-4641-807c-80cfe7a7291d",
        "cursor": {
          "ref": "c5702899-1344-4e67-961b-92af551f5137",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5c98e884-d924-4df3-af43-f65d606942d8"
        },
        "item": {
          "id": "5844fb50-6230-4641-807c-80cfe7a7291d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f85af4a0-641d-452a-86f4-e97f5add644c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d622832c-3999-43bd-a959-37b5060a4153",
        "cursor": {
          "ref": "050fdac2-c323-4619-b2e1-8a79fd0d32ef",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "efb6c6e3-ade4-4bb5-b368-9fd25ee92007"
        },
        "item": {
          "id": "d622832c-3999-43bd-a959-37b5060a4153",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c99c012d-c9c9-49c3-96f5-7ab0241dbc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c1aee8-817c-4cb3-a6d3-a98a854a5714",
        "cursor": {
          "ref": "8c8d476d-2ca6-49df-8009-4d7bbffca53b",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a932f55d-c8da-44a6-8304-12b9464c5f85"
        },
        "item": {
          "id": "a6c1aee8-817c-4cb3-a6d3-a98a854a5714",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "12ba94d4-da08-408c-9eb4-9ae983135572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a458556b-8170-459e-88dc-30ceb8f50628",
        "cursor": {
          "ref": "0a34dbde-010a-4711-bb4b-32cc8972e1a5",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c2307597-1cfa-4c8e-976b-a1dced1bb011"
        },
        "item": {
          "id": "a458556b-8170-459e-88dc-30ceb8f50628",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3d214895-f30b-4c6b-a5d9-496122a51113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f09970-a38e-4d75-a147-84ed11435dba",
        "cursor": {
          "ref": "df5e615b-2d70-4440-bcc8-211b01afe68f",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3e6c5ebf-c7bc-4546-ad3b-cc608baa9254"
        },
        "item": {
          "id": "72f09970-a38e-4d75-a147-84ed11435dba",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9e0fb3f6-54f6-4fe0-bf3b-f7c3998478db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a67531f-8a15-4a26-9272-fa4724352b55",
        "cursor": {
          "ref": "e60be81a-47b9-42a6-8079-3e7e650a1cdf",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7682d1e1-86ca-4cd9-909a-8e64f501680a"
        },
        "item": {
          "id": "2a67531f-8a15-4a26-9272-fa4724352b55",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0d946e01-0565-473b-82eb-96dcaef82a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499a136b-32c1-4bd8-952b-25c24df759b7",
        "cursor": {
          "ref": "e988921d-9d29-4292-96bd-4b9791c2de3a",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "aeb367a3-8bd3-48e6-980b-f5d837dfc9fe"
        },
        "item": {
          "id": "499a136b-32c1-4bd8-952b-25c24df759b7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "32907fb8-f946-44f4-851b-fdecf95338b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33a4f52-8515-491b-99ac-82f90f08cce5",
        "cursor": {
          "ref": "19da97a8-57ad-4c98-8542-7759683061e7",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "dc6cb155-e9ab-4cee-a8d0-a529d3c1bfd7"
        },
        "item": {
          "id": "e33a4f52-8515-491b-99ac-82f90f08cce5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "11b5f811-429c-4d95-b6ca-ad011cda4db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2732cba3-e2d6-42e3-b37a-9a0d15133597",
        "cursor": {
          "ref": "39c46d21-109a-49b6-a725-46118c123797",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0349c24d-202b-43b8-9a2a-65962c7e1532"
        },
        "item": {
          "id": "2732cba3-e2d6-42e3-b37a-9a0d15133597",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d8c5539d-8073-413a-aa10-9390b32b07c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca52cf81-059a-407b-ab82-0a2087a56f6d",
        "cursor": {
          "ref": "22590a3b-4be6-4cdf-b2b7-ee14bd45f5db",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1e4885f5-522a-4a69-a089-6aadfaea5f38"
        },
        "item": {
          "id": "ca52cf81-059a-407b-ab82-0a2087a56f6d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3e3374f4-a96a-4bab-ac80-2f7da8fc6753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bac7bcf-f665-4a22-a6e4-6595be72ca3b",
        "cursor": {
          "ref": "a9583fad-cdd3-4f05-857e-1aa999282f12",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7b9d37b2-cd54-483a-b613-bfbf7fc8698d"
        },
        "item": {
          "id": "5bac7bcf-f665-4a22-a6e4-6595be72ca3b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b5ea7a3d-cb14-4865-af11-cccbce05a188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a55367-a4d1-4679-bff6-9c1a65bd6f2b",
        "cursor": {
          "ref": "4b646f6f-be11-4fe6-95d1-4996a34a40cf",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fa055f49-8a5e-4c1c-86a3-ac7e062df643"
        },
        "item": {
          "id": "82a55367-a4d1-4679-bff6-9c1a65bd6f2b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d99dfda3-10d1-4bb7-9488-7e5808754ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeff0551-bb23-46d1-afa6-5e1f367d9894",
        "cursor": {
          "ref": "ad568249-bb40-4c72-b9f0-1cc101220788",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "573d63fa-58d9-42e6-9545-2d4a749880f9"
        },
        "item": {
          "id": "eeff0551-bb23-46d1-afa6-5e1f367d9894",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bf41655e-33f1-467f-a8ea-57cfaed7cecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f646302-da15-4039-8cda-75060a227340",
        "cursor": {
          "ref": "543c0148-b1c7-43e7-aa96-ab91188bbd32",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1d714f07-56ae-4f35-b7f3-4ec7e3823472"
        },
        "item": {
          "id": "0f646302-da15-4039-8cda-75060a227340",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ce7262a0-e98f-4730-9be5-3b0bcc68fcaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856285df-00a2-42f8-9bf7-5a1b285a66c0",
        "cursor": {
          "ref": "7f6ae851-ee66-475f-a20b-99ef9783b99a",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d8df8130-0fa2-4132-aba7-7de26a3c4d85"
        },
        "item": {
          "id": "856285df-00a2-42f8-9bf7-5a1b285a66c0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "38fef438-e96c-4e08-a44a-b2a49d9db862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3fdde0-8b5a-49cc-bf76-93de04a41043",
        "cursor": {
          "ref": "38e19aef-0364-4df2-a4aa-41d5e7509c0e",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1f9c904b-dea9-4cb5-aead-1ce74bf87e6b"
        },
        "item": {
          "id": "4d3fdde0-8b5a-49cc-bf76-93de04a41043",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9e1fda74-5ce4-4dbc-b789-c95482c2cb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0161a470-42d9-4a56-979a-1bb103d4fdc0",
        "cursor": {
          "ref": "80f3bb91-55b0-475b-b2e2-d3b87d1523bd",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "013c2f80-a9d3-4bba-9790-8147292f0710"
        },
        "item": {
          "id": "0161a470-42d9-4a56-979a-1bb103d4fdc0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2d86dc5c-5d6c-4f72-86aa-5668a631b6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e168f7-fee3-434b-a668-ee25c1d0a887",
        "cursor": {
          "ref": "78f4c7c0-fedc-4fd1-ac39-f7fde52e3384",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "22bf7279-fa0c-474b-8ebd-54d51427985d"
        },
        "item": {
          "id": "01e168f7-fee3-434b-a668-ee25c1d0a887",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e2f90f81-f829-40a1-90b4-2269b362c2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2043b699-34fb-45b4-b71a-70de3791ddff",
        "cursor": {
          "ref": "70f79440-7cc8-411a-a605-84d2300f2895",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ac6a2805-9c40-4210-8a13-3b86af29691f"
        },
        "item": {
          "id": "2043b699-34fb-45b4-b71a-70de3791ddff",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b204f631-6112-402c-a6af-53bbd6abd88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f840287-3dac-4d67-8141-43341fce92e3",
        "cursor": {
          "ref": "01f26876-962e-4111-abd9-674bba029d41",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ba6472b2-6225-4876-92c6-8331c6901c4f"
        },
        "item": {
          "id": "7f840287-3dac-4d67-8141-43341fce92e3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "aa8fc669-e18f-4d5a-9571-c70318073c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da46634-17b1-4324-8fc1-9d5e57b427eb",
        "cursor": {
          "ref": "cb98f2f5-26ab-41c1-ac48-8edfcf4d38bd",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0734ea12-a8fb-4658-87f8-4254f0a2b979"
        },
        "item": {
          "id": "6da46634-17b1-4324-8fc1-9d5e57b427eb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a445083e-9d64-475b-96c6-0ed46b5d7451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8458ec-d0d4-4729-af95-af1cc1113f5d",
        "cursor": {
          "ref": "9a13fdf2-828f-48de-a0ec-2c65e4b7fcf8",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ccf1e81e-1a56-4c1d-b231-a10f14235a8c"
        },
        "item": {
          "id": "df8458ec-d0d4-4729-af95-af1cc1113f5d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "61c585ab-87e9-44f7-ac9e-63aaf4c0c49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9600d4ec-d911-42f9-9363-7ecfc9989718",
        "cursor": {
          "ref": "d834c2c5-cdd7-4d9b-b05a-e5d93ce2f05b",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "208f0884-0008-4110-ba76-bf66f0459266"
        },
        "item": {
          "id": "9600d4ec-d911-42f9-9363-7ecfc9989718",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "65d2e258-0004-41f7-83cc-e2f785c395da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142396ad-2cde-4565-8bd8-e5396d684e65",
        "cursor": {
          "ref": "ec51221a-ae7e-48a2-b642-3b0ee62e111c",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5fd188e6-7a58-4afe-b491-1dc239ecd0dc"
        },
        "item": {
          "id": "142396ad-2cde-4565-8bd8-e5396d684e65",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ef9147da-fa0e-4c44-bc06-9acb123fd6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a807a6-dba0-4066-8d48-ef07281c0f1b",
        "cursor": {
          "ref": "6211fce1-815f-40d5-afdb-df5f2e9049c6",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5d634f3e-5905-4b41-baed-b9d84ee8eab7"
        },
        "item": {
          "id": "20a807a6-dba0-4066-8d48-ef07281c0f1b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "38f869b3-3c4b-4981-9fbe-57e73f05079c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2969782e-b5ca-40aa-a5ff-192ee322b66a",
        "cursor": {
          "ref": "deb9a8fb-e593-476c-8f64-849d20cc0bb6",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2cd73cd6-42f4-4c55-8ceb-d355cfc630f7"
        },
        "item": {
          "id": "2969782e-b5ca-40aa-a5ff-192ee322b66a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a6666510-d3be-4890-a086-40105198011d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e9a763-3454-4e99-bafb-614d263563d4",
        "cursor": {
          "ref": "cf07e22f-6d28-4d42-b7ed-0fd3e6bf1a9a",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "48740ae6-27c5-47d9-8f75-14a2757c5f4e"
        },
        "item": {
          "id": "d7e9a763-3454-4e99-bafb-614d263563d4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "462dbd8c-8178-4582-b088-a82fdf583d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8464bce-fee0-40ae-aa3a-aa91d5668ea6",
        "cursor": {
          "ref": "71fb0f48-f43e-43f1-971e-bd0803f0e50f",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "16f3cbe1-861d-4ca0-8757-a327388c01af"
        },
        "item": {
          "id": "d8464bce-fee0-40ae-aa3a-aa91d5668ea6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ea8769b2-ceb5-4803-9acd-d0eb22d774ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0933057e-b9cb-4416-bc83-4022c91c4a06",
        "cursor": {
          "ref": "dfc41413-cf97-4e3a-8525-39e77370fa66",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d0cd2a60-c4f1-4c4d-bc5c-be07429b52c3"
        },
        "item": {
          "id": "0933057e-b9cb-4416-bc83-4022c91c4a06",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "671ff6a9-eb5a-4227-ae25-962f1dd33ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4949fd-fae5-475b-9769-0f82c65d7f67",
        "cursor": {
          "ref": "eceb1f89-6fb0-421a-9648-d09872017e75",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4f659056-b6cd-41b3-bcc5-d9b5775997b2"
        },
        "item": {
          "id": "db4949fd-fae5-475b-9769-0f82c65d7f67",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b411e201-e9a5-4995-b96f-c382e315d343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6aa3d4-8d05-44dd-aa69-785605ab93be",
        "cursor": {
          "ref": "8081d05b-e55b-4ff9-9583-c66445c94df8",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0d986bb3-c35f-4f82-97c2-fd1dfdd31696"
        },
        "item": {
          "id": "ea6aa3d4-8d05-44dd-aa69-785605ab93be",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "918c0513-9cba-45e9-898e-aeb88c66b57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c92509c-768c-401a-b8ef-18f4adcf6e34",
        "cursor": {
          "ref": "86390793-325d-4b92-a772-d4e21e207960",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "19049ffb-8715-4799-890c-2f3b3bccb47b"
        },
        "item": {
          "id": "5c92509c-768c-401a-b8ef-18f4adcf6e34",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e4ca0c45-aeff-40d4-af6d-15fd4018be61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17b69d1-3d05-4a10-8f6b-44e3b63d73de",
        "cursor": {
          "ref": "fd7deab4-2c0e-4145-8584-c7574d3a8129",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bef13f93-620c-4cdd-9c2a-31035aaa6147"
        },
        "item": {
          "id": "e17b69d1-3d05-4a10-8f6b-44e3b63d73de",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "226d8ca5-cdc1-44ca-ae3d-46b6863b21b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacf2e32-36bf-46a0-8e7b-61e64d984a9a",
        "cursor": {
          "ref": "2a2b814e-bb4e-4114-bfb9-5e0c1ab10cac",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "dddd9bd1-eac0-4590-a35d-8870cf5bab6e"
        },
        "item": {
          "id": "cacf2e32-36bf-46a0-8e7b-61e64d984a9a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b5baf186-33d4-4701-a0bf-fd69e54f7b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70182de-97b1-4d7d-8403-981210b93a0e",
        "cursor": {
          "ref": "c6978cb7-1541-47e3-a77e-019926590281",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4ce2832f-007f-405a-a63d-5d3eba129bb1"
        },
        "item": {
          "id": "e70182de-97b1-4d7d-8403-981210b93a0e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a8fffbb2-887d-447f-9686-903686f77031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1042,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbe62b4-118c-442e-87f1-0c768b09527d",
        "cursor": {
          "ref": "1b785b77-f4d3-4a9a-8f54-d4d060ccf3a9",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d19f5338-5025-4815-ad03-3d2bf60108c6"
        },
        "item": {
          "id": "9cbe62b4-118c-442e-87f1-0c768b09527d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2d483b36-c8f5-4b98-9c43-c32911668563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc5b958-5748-431c-8272-85e9321dde17",
        "cursor": {
          "ref": "ea854b6d-0354-49e1-b2c2-47761c1a7026",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8cde72cb-162e-4c78-ad75-fac2e500f21b"
        },
        "item": {
          "id": "8bc5b958-5748-431c-8272-85e9321dde17",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "197abd19-d1bb-47c3-8794-ee40ffdaec45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1041,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2989e02-7afc-46ea-a259-14d5d4ba970e",
        "cursor": {
          "ref": "0ea33350-a93d-4369-b549-607398a50cc4",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "33ccfd95-7d6a-432b-8ce8-782d9ebfc019"
        },
        "item": {
          "id": "b2989e02-7afc-46ea-a259-14d5d4ba970e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "04bd9fea-6e1b-470f-96e1-da8b6fd180e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033bf9a4-fcdd-431e-baf5-2c937d3d25af",
        "cursor": {
          "ref": "1981b998-5e10-4c35-b330-ec1ee0c8891a",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "28977ca3-677a-4fa5-a1cc-49356357e082"
        },
        "item": {
          "id": "033bf9a4-fcdd-431e-baf5-2c937d3d25af",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "518ce09c-81dc-4c22-a3c6-e055a8173a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce9ada3-66ba-4704-945f-84dd65db12e0",
        "cursor": {
          "ref": "fc0190bf-3d6a-4a30-b999-92733a67b88f",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "14d1ad3b-0dac-49db-b7da-080c4120a011"
        },
        "item": {
          "id": "2ce9ada3-66ba-4704-945f-84dd65db12e0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "15292df5-fa47-46c7-af52-aa10e732041e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2795f269-940d-40e2-9ee7-1766df64b206",
        "cursor": {
          "ref": "1ae17ef0-61cb-4c8b-a262-e2beaebe39e3",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4faa62d3-a3d2-4472-8163-70f031851814"
        },
        "item": {
          "id": "2795f269-940d-40e2-9ee7-1766df64b206",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6b02096b-6d8f-44a5-b9e8-5b73fbdf4e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef72c9c-ddcb-4aec-8987-868ad7bf8a3c",
        "cursor": {
          "ref": "e1362f79-f2b6-425c-8a0f-fc568ce3ed5e",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "59648df2-42a6-4756-97d3-89a40969de8a"
        },
        "item": {
          "id": "9ef72c9c-ddcb-4aec-8987-868ad7bf8a3c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "68761051-57bc-4370-8875-0529cf9d9666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fe2560-99d4-4846-ad78-7e4f11527375",
        "cursor": {
          "ref": "1c415615-1f98-420e-8e0b-f82f2449e202",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "31126e1b-d389-4fd2-9dd4-d3eccf90785a"
        },
        "item": {
          "id": "40fe2560-99d4-4846-ad78-7e4f11527375",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b621e03d-a97f-40f3-939d-a7636a31a659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fe783f-fb2b-49b1-9f59-77b50ea6dafc",
        "cursor": {
          "ref": "5b535b7d-a600-424e-9014-27282fccb89f",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b12e2ea0-173d-4b28-9e26-9a92845ebf4d"
        },
        "item": {
          "id": "16fe783f-fb2b-49b1-9f59-77b50ea6dafc",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bf75348f-7435-43bd-bbcb-22bb01ec6298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6345eab-9fb7-4fe3-88e7-9e5a8c4f0ff0",
        "cursor": {
          "ref": "37dd69d8-f538-4ab9-a6ea-4ea7b9074872",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "37e2f9b7-fd0b-4802-ab13-b2e769d1f423"
        },
        "item": {
          "id": "c6345eab-9fb7-4fe3-88e7-9e5a8c4f0ff0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d506d6c3-2560-4a37-a1c4-c9cf741cf4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d530b0-f37e-49b8-bea9-4a7159eb49c9",
        "cursor": {
          "ref": "19b76a25-acb3-40f8-a7b2-f8531a96e835",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2f697a6b-4dd3-4862-9812-905dfbd840e3"
        },
        "item": {
          "id": "97d530b0-f37e-49b8-bea9-4a7159eb49c9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6340926e-f674-4ce0-b4ea-c2c166c58654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fd7571-067f-4a8d-810c-ccd13c3e79d8",
        "cursor": {
          "ref": "288e8c5d-8a0c-435f-a90c-0dd8c8836075",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0c678fbd-bf30-4acb-a13f-5c20a8dbf05e"
        },
        "item": {
          "id": "71fd7571-067f-4a8d-810c-ccd13c3e79d8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "22f54398-1a8e-4314-a578-9cf57c5b6723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690dbf16-39b8-4ea9-8248-a3f946663413",
        "cursor": {
          "ref": "1ac324de-ffb2-4670-b355-557e5971c592",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "106e773c-15d9-4725-8dbd-a2627360ae28"
        },
        "item": {
          "id": "690dbf16-39b8-4ea9-8248-a3f946663413",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d6c8bd7c-0f0b-4f0d-9c1c-a18345640e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70251ebb-f2f7-4583-9cfe-573e88c14daa",
        "cursor": {
          "ref": "9ff310e4-bfa3-4699-8a2c-42bb84d2a00b",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b021bd7d-2b29-496d-83be-9d2020f1d970"
        },
        "item": {
          "id": "70251ebb-f2f7-4583-9cfe-573e88c14daa",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "032a5a6f-b241-4be3-8a76-8387f4dd14c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d366f6-cc08-412b-bb6a-6e02f614ce9d",
        "cursor": {
          "ref": "9dc23c3f-591f-480d-91e6-4b5bed40998d",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "dfe65113-245c-4aa0-bb0d-f0d8cb8dd3b3"
        },
        "item": {
          "id": "96d366f6-cc08-412b-bb6a-6e02f614ce9d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "3d5248fb-9cd8-44bf-b40a-b6d3ece07226",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 555,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4510970c-4ed1-4adc-a35c-dc0316e61e20",
        "cursor": {
          "ref": "371c113c-ef54-4b71-a39b-751eae5bdae4",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6825d346-bd41-4b6a-b7f0-79bbe69754bf"
        },
        "item": {
          "id": "4510970c-4ed1-4adc-a35c-dc0316e61e20",
          "name": "credentials_issue"
        },
        "response": {
          "id": "25e7ac96-8eb2-4e59-87e0-a10f7754e0a3",
          "status": "Created",
          "code": 201,
          "responseTime": 4071,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "781311a9-82ba-4a41-96ec-532b389367b7",
        "cursor": {
          "ref": "75a63be0-6e7d-461d-96de-bea071c58ed7",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d1b05339-459f-4183-a38e-6b2b15c734b2"
        },
        "item": {
          "id": "781311a9-82ba-4a41-96ec-532b389367b7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "968d3909-bd7a-4447-9edc-cfcc4e55f330",
          "status": "Created",
          "code": 201,
          "responseTime": 9201,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfc1497-a7f7-4a09-a36a-1cfc88c946d4",
        "cursor": {
          "ref": "38e3106e-a5df-4045-a211-8c7ef6e643b2",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4ff4dec9-d70f-47b5-84c9-1ab6bf9e6f33"
        },
        "item": {
          "id": "2bfc1497-a7f7-4a09-a36a-1cfc88c946d4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bdbd4264-1d7b-4ced-988f-c007e479ae37",
          "status": "Created",
          "code": 201,
          "responseTime": 6606,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "893497a9-ed08-4f56-94a6-9b8d0358807d",
        "cursor": {
          "ref": "72ac0a23-9816-4d25-a851-28a2f16fd6ea",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7cf93822-154b-48e3-9896-0381730b4c8d"
        },
        "item": {
          "id": "893497a9-ed08-4f56-94a6-9b8d0358807d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8dfee25f-1778-4420-a26a-71d3f9658318",
          "status": "Created",
          "code": 201,
          "responseTime": 5910,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "30347779-8172-4962-b0e1-3612cdfeacba",
        "cursor": {
          "ref": "99746a77-7b66-4d4f-be67-fb71bc076730",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "04a7a0ef-02a9-4a18-80cb-cb18ebefae21"
        },
        "item": {
          "id": "30347779-8172-4962-b0e1-3612cdfeacba",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "da859306-1f2d-44d0-8c92-18d4c3ef9279",
          "status": "Created",
          "code": 201,
          "responseTime": 5004,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1662915-2c6f-4480-9e0b-d01d67036753",
        "cursor": {
          "ref": "fa3379d8-1e25-4a76-ad93-cdc285d8eb0e",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6b512480-a763-4212-9898-9e896f5750d9"
        },
        "item": {
          "id": "b1662915-2c6f-4480-9e0b-d01d67036753",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "881e57d8-1f3a-42be-837f-05a7214d1b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1662915-2c6f-4480-9e0b-d01d67036753",
        "cursor": {
          "ref": "fa3379d8-1e25-4a76-ad93-cdc285d8eb0e",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6b512480-a763-4212-9898-9e896f5750d9"
        },
        "item": {
          "id": "b1662915-2c6f-4480-9e0b-d01d67036753",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "881e57d8-1f3a-42be-837f-05a7214d1b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d173de07-e0d7-4e9d-be66-27255e281025",
        "cursor": {
          "ref": "fb0da056-50f5-4fbd-b178-0f5f22827068",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2b41e434-755a-4516-be91-bb732e092877"
        },
        "item": {
          "id": "d173de07-e0d7-4e9d-be66-27255e281025",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fbb08915-e1e0-4192-9d28-439563378b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cce657-5153-4230-af86-2e089732021f",
        "cursor": {
          "ref": "fc98f1c4-e8a6-42d5-b0d8-b03f565ba0d3",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e387c52c-81ec-495d-8875-ff2cc3b309f9"
        },
        "item": {
          "id": "c3cce657-5153-4230-af86-2e089732021f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d92cf815-bbe8-4eba-98bf-35479722ba89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5c163e-857d-4f63-a484-e61d3ecabb0b",
        "cursor": {
          "ref": "72a43225-d08b-4af8-b154-9168bad07edb",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3fddd168-06e1-4107-ad9a-fdcfc34d79ad"
        },
        "item": {
          "id": "0f5c163e-857d-4f63-a484-e61d3ecabb0b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7029b8c4-8341-426b-b722-183edf69ff51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f3ed23-8f87-44c7-a87a-25265811c8a5",
        "cursor": {
          "ref": "1bd2af38-cd49-4009-a35f-4ce91efb1178",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "081a7d82-9fac-4e9c-bc97-aa4e4799f5fe"
        },
        "item": {
          "id": "33f3ed23-8f87-44c7-a87a-25265811c8a5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1f57d4f5-84c7-4cc5-a8f2-8adb2a8a47cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7ada81-a539-486b-88d5-810221afce4b",
        "cursor": {
          "ref": "cd0ad6a1-bea8-45e1-a3fe-eee123275a8c",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "708f13c9-21a0-4483-b896-7ca6041a0aa8"
        },
        "item": {
          "id": "3c7ada81-a539-486b-88d5-810221afce4b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "80757516-c738-4c88-8e8c-155bcb1987b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f62892a-4f5b-4fd6-9c9b-5f26ed9eb5a8",
        "cursor": {
          "ref": "4b40c554-4d29-4bd9-a638-33e9aa94567c",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "95f570e6-b5c0-42d9-835a-d1c9cedaa8b9"
        },
        "item": {
          "id": "8f62892a-4f5b-4fd6-9c9b-5f26ed9eb5a8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5832aa55-3b5e-4726-9083-28e92dd4e5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7cbb0fb-35e7-4464-b8b9-de777453af80",
        "cursor": {
          "ref": "9c54c984-6681-4da0-8879-4c6a0376ae99",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "612c9514-6c02-4aec-a709-fa161b36c8da"
        },
        "item": {
          "id": "f7cbb0fb-35e7-4464-b8b9-de777453af80",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9a9aece2-a343-4965-ad05-181d2baa9e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69089ab-c42c-4b5a-978c-4877327f1634",
        "cursor": {
          "ref": "247e9bf1-325a-406c-924c-bd470272ebe7",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "26919897-dd6a-450c-9f70-1340a74f5a59"
        },
        "item": {
          "id": "f69089ab-c42c-4b5a-978c-4877327f1634",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2dcfa00c-a086-4ad4-a958-d40582367450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d63aa5d-d80a-4b91-b18a-ed2b9aa16c12",
        "cursor": {
          "ref": "f154aa9f-08ae-4e07-af9b-67ad5df12871",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "eeea92af-55bf-490b-b693-82a8968bcebe"
        },
        "item": {
          "id": "0d63aa5d-d80a-4b91-b18a-ed2b9aa16c12",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8eea3852-f46d-4d2b-b7e0-66f51c798efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f525c4c-c21d-4849-bfa9-07630ed125cb",
        "cursor": {
          "ref": "2e9c5efc-e946-4276-bcbe-3bb9607074e7",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5ca6df33-f153-45e9-908a-351b43ef9942"
        },
        "item": {
          "id": "2f525c4c-c21d-4849-bfa9-07630ed125cb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bd282ca2-6d27-4ba7-9533-c1445d6815f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5e8ee4-b90e-4608-a3be-dac36699b094",
        "cursor": {
          "ref": "7cec78a1-3b41-4632-a85e-3c77ec4859d7",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4c2f2fd4-965c-495e-b204-79aa9c23b613"
        },
        "item": {
          "id": "ec5e8ee4-b90e-4608-a3be-dac36699b094",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "549d9a6c-e614-4b1b-b984-33f63f3de7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321bb661-8ea6-49fb-81ae-bca59f46aa27",
        "cursor": {
          "ref": "0cbcd14b-f0ff-4dc8-9b87-b75bb32bc5b5",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4f3cdd11-e51b-4ed6-a80a-9c9e78949caf"
        },
        "item": {
          "id": "321bb661-8ea6-49fb-81ae-bca59f46aa27",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4b96efad-92f7-45c1-ad15-1cc8381aa6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e04c1a1-94de-4117-852d-12d9d640ab16",
        "cursor": {
          "ref": "2e556676-2de8-47e1-b257-347cdc03e5bd",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "aa109233-d17d-4d79-a607-436b6536748c"
        },
        "item": {
          "id": "2e04c1a1-94de-4117-852d-12d9d640ab16",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4846f1da-1d82-4843-b5cd-475c84b873ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd7203d-3639-4a63-b5ec-ec7001aa2357",
        "cursor": {
          "ref": "3039d6df-ced2-4bb6-931b-b378da5decc6",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9afe08e4-4aad-4485-b838-4816dd291e31"
        },
        "item": {
          "id": "9bd7203d-3639-4a63-b5ec-ec7001aa2357",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c48846df-3cb7-4dd9-9d4b-4074697eb181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6285923f-cfd2-4e84-97d2-3b5d5e8ed54e",
        "cursor": {
          "ref": "8b3fa7b5-8f80-4dd4-a6aa-f4032d32b282",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "603956e4-608b-40e8-bc23-e914686c1402"
        },
        "item": {
          "id": "6285923f-cfd2-4e84-97d2-3b5d5e8ed54e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1c9cfed6-d94d-46ce-b4d1-2f46a7044d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20904608-e559-443d-a12d-ab6182c2c90d",
        "cursor": {
          "ref": "96fc8a2c-ba96-48fb-8091-3d492e7e25c2",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7602f90f-ab7d-46c3-bd0b-169f36a3db2e"
        },
        "item": {
          "id": "20904608-e559-443d-a12d-ab6182c2c90d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c51e1d6c-5bbc-40ba-bddb-19262cf7d499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69aec409-a039-4b84-9eb2-7de4db1dd516",
        "cursor": {
          "ref": "4fdbb794-f79d-4a08-a38b-b4fc0bb98509",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "38a5ef44-af87-4775-9e95-b51dd1bcf2ac"
        },
        "item": {
          "id": "69aec409-a039-4b84-9eb2-7de4db1dd516",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f983b235-8455-4d59-a843-0f3aee07face",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7ec943-c45a-47b3-a929-655e4a53d7f7",
        "cursor": {
          "ref": "5558b645-3349-4dfc-a73d-95615b97cd25",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fc654c36-0616-487c-be18-c85c8ddbb0a4"
        },
        "item": {
          "id": "5b7ec943-c45a-47b3-a929-655e4a53d7f7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8a98f99e-a7d3-488d-9171-3ea74d69882d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e7d824-bfc0-4919-a936-00758991b41e",
        "cursor": {
          "ref": "fb1a0932-1d59-4870-a33f-89ab8757eea8",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "908203b7-545c-40c7-926b-a4b207537cb5"
        },
        "item": {
          "id": "50e7d824-bfc0-4919-a936-00758991b41e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a75f116c-cb5c-45a6-b8bc-dbb09e186df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a8384d-6114-4aed-8b97-7b88c1734a4a",
        "cursor": {
          "ref": "5311b33e-1d1d-409b-95cf-cdf820976b70",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d47f8b92-b44e-416d-bc41-659edf993d7b"
        },
        "item": {
          "id": "f5a8384d-6114-4aed-8b97-7b88c1734a4a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "015de527-422d-4e32-a781-d2ff7013fcb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f33e17-2cfc-417e-ac52-ea2f15d58b51",
        "cursor": {
          "ref": "2e02eba1-aa36-42b7-9bc6-a4ed07b4bcfb",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5e571e56-5e4a-4952-b03b-5d2c393bc6b5"
        },
        "item": {
          "id": "f4f33e17-2cfc-417e-ac52-ea2f15d58b51",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4a443821-afd0-4996-a657-5e16c45af555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef16c05-f2de-478d-9797-42d628aaa425",
        "cursor": {
          "ref": "d339e994-d09d-4a09-9e31-66766b00d0cf",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3f898cd8-9a4d-456e-a11d-57bec9992f83"
        },
        "item": {
          "id": "8ef16c05-f2de-478d-9797-42d628aaa425",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ba641e9c-e454-4f40-986d-4a935cd314d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d31773-8f04-422e-921b-d041e1f5cc9b",
        "cursor": {
          "ref": "46774a50-2605-43aa-b0de-23d64de6a6c3",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c482ae91-1aad-4253-82f3-f10b274abe49"
        },
        "item": {
          "id": "01d31773-8f04-422e-921b-d041e1f5cc9b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "83c0d6e4-592c-4300-9ddc-b7ed312b6988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa407a9-97ea-4874-9344-d9903de1ad6b",
        "cursor": {
          "ref": "a7cc752c-a76d-45fc-b58b-fd48fdbe0f34",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "74f42afc-f890-452d-b1f1-82c2daa89937"
        },
        "item": {
          "id": "eaa407a9-97ea-4874-9344-d9903de1ad6b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d44acbff-5ab4-4db7-b9c2-6f2241fc568c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62cd9f2-36e9-4824-a0cf-8917fd1d5c9a",
        "cursor": {
          "ref": "5deaace1-1054-4147-a98f-dd94235c2fbd",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1ebd408c-bfeb-4860-8120-3ffcbcc9c006"
        },
        "item": {
          "id": "e62cd9f2-36e9-4824-a0cf-8917fd1d5c9a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fe84f8ae-3e99-42db-97ca-f7d9f4784e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37a18e0-57c0-4b30-b00e-c3c84f76fc13",
        "cursor": {
          "ref": "5de2b326-8172-467a-8f9e-cb39d58aa4fe",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a83ea627-bd25-440f-a011-41e4ee17528e"
        },
        "item": {
          "id": "f37a18e0-57c0-4b30-b00e-c3c84f76fc13",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cef505df-10c2-41e4-9c32-47d271d83551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4824c905-45c4-4f90-97fd-0c0ec0a89272",
        "cursor": {
          "ref": "e7bc02fc-e070-4433-aff8-ceaa18e27526",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "eb96eefc-fb0b-4a36-bf3b-9e3b2f2edbe9"
        },
        "item": {
          "id": "4824c905-45c4-4f90-97fd-0c0ec0a89272",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a617b31a-e20a-4862-ab46-fd98b29a2dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06037846-62b4-46c9-aa9a-13758a9e4042",
        "cursor": {
          "ref": "1fa85083-0d83-43ed-9cbd-ebeec545cb5e",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c5fcd29f-4b95-43bd-8976-227530985676"
        },
        "item": {
          "id": "06037846-62b4-46c9-aa9a-13758a9e4042",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cf43791c-bdd6-47c9-b060-5eb5a961f6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cddd0d-f8fc-44db-9a33-ad4d780fe6dc",
        "cursor": {
          "ref": "c28b72b0-ee61-4901-b54e-228290b469ca",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "60afe942-241a-4212-8379-86ae0df01b19"
        },
        "item": {
          "id": "15cddd0d-f8fc-44db-9a33-ad4d780fe6dc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f555c770-4f27-4724-a0f8-60e3c23c12af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe2fea3-66dd-455e-85d9-ec368332778d",
        "cursor": {
          "ref": "ad102fa3-8c5b-4871-a8df-b8223fa8777b",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "882eb6a6-511b-4c5d-8968-2ed3e33027e6"
        },
        "item": {
          "id": "dbe2fea3-66dd-455e-85d9-ec368332778d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "793463c9-6acf-4843-9682-592d4e58061d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5541c4ea-ad1c-4490-8711-d297b05440c0",
        "cursor": {
          "ref": "de667e0b-5c0c-4bc5-b84e-f6580e64668e",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "84e29fe9-330f-4ef5-8729-15656db84fba"
        },
        "item": {
          "id": "5541c4ea-ad1c-4490-8711-d297b05440c0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "08ea1617-c533-4dc2-9ed8-8322f7bf8c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bec45e-b9bd-4358-9190-eece41c0324c",
        "cursor": {
          "ref": "2c2bc96e-4d8a-41d4-884e-ecf7d3ee330f",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6d3548ed-1a80-4b62-a5f2-efb31205229f"
        },
        "item": {
          "id": "86bec45e-b9bd-4358-9190-eece41c0324c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aad5f9fd-ad88-4bb4-b4be-36634bd499b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71381589-6ff6-436d-a5a9-dce7234acb9f",
        "cursor": {
          "ref": "0b68ccd1-6bc3-4310-a07d-36dbf884b36a",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "dc55d43e-6f60-4f54-b637-55626924aa0b"
        },
        "item": {
          "id": "71381589-6ff6-436d-a5a9-dce7234acb9f",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "3b896976-4d25-44b9-9ff5-3f48ffe6a997",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 546,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3262da-701a-453c-acce-ac5097d96d82",
        "cursor": {
          "ref": "65d293b4-7365-4e86-9ae4-8513109eaba1",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4d3d52fc-9be9-4a65-bea8-9aa540e4bc18"
        },
        "item": {
          "id": "ca3262da-701a-453c-acce-ac5097d96d82",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fdb32100-5d6a-4c3c-9b83-18f286a626d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3262da-701a-453c-acce-ac5097d96d82",
        "cursor": {
          "ref": "65d293b4-7365-4e86-9ae4-8513109eaba1",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4d3d52fc-9be9-4a65-bea8-9aa540e4bc18"
        },
        "item": {
          "id": "ca3262da-701a-453c-acce-ac5097d96d82",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fdb32100-5d6a-4c3c-9b83-18f286a626d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5368795b-ed1d-4203-8f30-b4e2f5c37df8",
        "cursor": {
          "ref": "250a4c7c-6d02-4c5d-b044-f9e21004f5dc",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c633c75c-1e90-44c7-8916-a0ab98f5d097"
        },
        "item": {
          "id": "5368795b-ed1d-4203-8f30-b4e2f5c37df8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9cbadbad-351b-4a37-9d22-359a9f5bfc3f",
          "status": "OK",
          "code": 200,
          "responseTime": 324,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "50de265e-1c47-4251-9f03-944cadb64f88",
        "cursor": {
          "ref": "067f9272-19e4-476b-b9af-e1a9fcd77386",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cdf0148c-9e3f-45dc-9b88-472448a0d239"
        },
        "item": {
          "id": "50de265e-1c47-4251-9f03-944cadb64f88",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "693f06ca-aea0-4e29-9736-a93b559ce23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a12db1-05bb-49bb-9de2-18b0888709ec",
        "cursor": {
          "ref": "d91a65a2-0e66-4ef0-ae93-c1f9435175c3",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "83b259a0-d213-40c2-97e8-efcb8ca243c6"
        },
        "item": {
          "id": "b1a12db1-05bb-49bb-9de2-18b0888709ec",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0a9b11dd-aa47-4345-95f2-d260e6b59319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c00cd5-cf84-4b8f-bf67-7e6e1e6b21aa",
        "cursor": {
          "ref": "c24f9748-6c29-40ec-a2aa-dcf847f83df9",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ee29be84-4619-4140-b19b-0db3ba9e6f8c"
        },
        "item": {
          "id": "49c00cd5-cf84-4b8f-bf67-7e6e1e6b21aa",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "87328a88-2859-4c75-88cc-a4bd4c6a576e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cbb871-4b76-4824-a741-c12053681a6c",
        "cursor": {
          "ref": "be5bf4c7-438c-49e3-bf5b-ceaf5a489a8d",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "76d503af-7f77-4461-aa9f-dc429fd81951"
        },
        "item": {
          "id": "d7cbb871-4b76-4824-a741-c12053681a6c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5fb77b53-2578-4542-901b-fe4fe45f8ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41adb640-818c-43d7-8e77-d54824e2a5e3",
        "cursor": {
          "ref": "f59dd351-b498-4149-addc-b9dcd0c2d9ab",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "733d264e-c38f-428d-9c37-f3b0ec31fa5b"
        },
        "item": {
          "id": "41adb640-818c-43d7-8e77-d54824e2a5e3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ea9b4e69-3547-4d23-92e6-1bf21041813f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17635bb3-1660-4766-867b-3197f44454b5",
        "cursor": {
          "ref": "60afe986-1816-4bac-81f6-124d6acd9dc3",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c9727898-802f-4f85-8522-2ec9de4aca44"
        },
        "item": {
          "id": "17635bb3-1660-4766-867b-3197f44454b5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ab6f870d-2af3-411a-aedc-1dd7a2baa689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a840ec44-b985-465c-88c7-dda443263e29",
        "cursor": {
          "ref": "8ab9cf9a-bfd1-4bef-8a26-ae31c07a7067",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "812d2f77-3a32-487e-b683-6d9a9c924822"
        },
        "item": {
          "id": "a840ec44-b985-465c-88c7-dda443263e29",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ea6135cd-17c6-4487-b12b-f6841078404b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca67641-005f-441f-a77e-1d02ed174fea",
        "cursor": {
          "ref": "b98f9063-7816-46a4-847c-42fa07361c4f",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bcd1ab46-20d9-4cb2-8f3a-2fd2f52df928"
        },
        "item": {
          "id": "4ca67641-005f-441f-a77e-1d02ed174fea",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ed758567-dd22-4eb9-8082-3afc1867504c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef29dbcc-0bac-45ff-bce5-ddc061ff0379",
        "cursor": {
          "ref": "d1d7e7a7-c9ab-49fc-9c1c-22b74b50197a",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c8c2ca10-1ad6-47ab-98ae-3aa699b9133a"
        },
        "item": {
          "id": "ef29dbcc-0bac-45ff-bce5-ddc061ff0379",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "047464f9-b378-4dd5-96e9-9867f66f3f39",
          "status": "OK",
          "code": 200,
          "responseTime": 364,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "c3acbdd6-145c-47b0-a349-57dbd3fcfb5b",
        "cursor": {
          "ref": "d0b89712-597d-4493-830d-6b433d9a614d",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f10ad8b9-0336-4860-8fd5-588ff7ed815a"
        },
        "item": {
          "id": "c3acbdd6-145c-47b0-a349-57dbd3fcfb5b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b442efd7-edd8-44e1-9ca0-621bdb59a837",
          "status": "OK",
          "code": 200,
          "responseTime": 385,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "e966ebcd-ad01-435a-a3e1-4b3566cd0c92",
        "cursor": {
          "ref": "b48c8f2e-f69f-4f46-9cce-b160cdacf927",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6bf871e2-fbe7-470e-87c7-c542bf88517d"
        },
        "item": {
          "id": "e966ebcd-ad01-435a-a3e1-4b3566cd0c92",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "742111ba-282a-4199-8480-97505241ff10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe4a02d-51e6-4281-819a-b2b4bba91c89",
        "cursor": {
          "ref": "dc391cd2-16e5-442a-8a29-eb323e8907ca",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "48dc6c6a-ab81-401a-9948-37707d8513b8"
        },
        "item": {
          "id": "0fe4a02d-51e6-4281-819a-b2b4bba91c89",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1dbfb30b-a5a2-4cd7-82a6-b1f3056c3ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e74d5f-9bcf-4238-ab93-a386fca19ce0",
        "cursor": {
          "ref": "1891764a-da5e-4ad1-b95a-a5a8cc0379de",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d913bef8-2e8a-4589-b0c1-0e7e377790cb"
        },
        "item": {
          "id": "e1e74d5f-9bcf-4238-ab93-a386fca19ce0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "96deb7c0-a3e0-4de5-8ccb-374bee0494f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2034908-938e-427f-8ed2-25ab49e67c42",
        "cursor": {
          "ref": "c134cf01-e48d-4f9c-850b-9189f2c15ec1",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8f0eb595-eccb-402d-b25f-b1c4c4e6315f"
        },
        "item": {
          "id": "b2034908-938e-427f-8ed2-25ab49e67c42",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "61cff5f9-3d14-4652-b2f6-6880a02be3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8363e58-7c3b-4e33-b399-9c3c53b801f9",
        "cursor": {
          "ref": "a403c745-a486-4535-92f3-cc1b916b1378",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "851a9dc7-6742-4920-8979-f3cbd3502a17"
        },
        "item": {
          "id": "a8363e58-7c3b-4e33-b399-9c3c53b801f9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fbceebb5-3e3c-4bff-aaab-b666308b6f4e",
          "status": "OK",
          "code": 200,
          "responseTime": 361,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:160)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:160)"
            }
          }
        ]
      },
      {
        "id": "cb53653d-eae8-42a1-af4f-a9fb5def6ace",
        "cursor": {
          "ref": "eee5e1a5-9a24-4a56-852d-136b647ec06d",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5b9462e3-b6db-499f-a8b6-7e890b1713b9"
        },
        "item": {
          "id": "cb53653d-eae8-42a1-af4f-a9fb5def6ace",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "139e05e5-ca18-424d-b979-d2b0f0780667",
          "status": "OK",
          "code": 200,
          "responseTime": 1792,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:161)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:161)"
            }
          }
        ]
      },
      {
        "id": "da950951-5e67-429e-8f74-10ae851986f3",
        "cursor": {
          "ref": "0dbcc899-2c03-4079-8686-b709abe40a41",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8a01c8cc-c3bc-40e7-910f-a6bbffa57795"
        },
        "item": {
          "id": "da950951-5e67-429e-8f74-10ae851986f3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0d0a3120-4218-4931-ac2e-7332c3d34a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b19a0b6-2a01-431a-9647-a8668da40154",
        "cursor": {
          "ref": "4cbd74bc-ed28-47ac-9b52-943ea27cf9b2",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1f5fca76-97c7-4bac-a37f-5753d1da3df7"
        },
        "item": {
          "id": "0b19a0b6-2a01-431a-9647-a8668da40154",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c1ac0e32-65a7-4c43-a8af-718a249e4fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dbed4f-d70c-41e9-b902-d548bf94e53e",
        "cursor": {
          "ref": "833dd07e-b9aa-4d2f-b9d6-faf02f29e067",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f45f8e85-7d4d-454c-b5c6-77b2d51c538c"
        },
        "item": {
          "id": "f3dbed4f-d70c-41e9-b902-d548bf94e53e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2da7beb6-3619-4b4f-a4b2-24259075baec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d0c07e-52f9-4372-840d-d6d646f5c810",
        "cursor": {
          "ref": "1364fe41-c4d4-4796-ba45-a53030435b55",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "63a1880a-c177-4d18-97be-4ed1c9e8773d"
        },
        "item": {
          "id": "c5d0c07e-52f9-4372-840d-d6d646f5c810",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9d24ba8e-1469-4b27-96a1-90a18f249a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7846959-17b4-42c6-a842-a4f7bb576cc3",
        "cursor": {
          "ref": "a7765db1-b93b-4f4c-b014-453a6aad1889",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cf2d6a11-53c8-4f6f-9cfb-5d178fb1c7d2"
        },
        "item": {
          "id": "f7846959-17b4-42c6-a842-a4f7bb576cc3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4b83a7c0-9dc0-4a5b-9cd2-12dc1a7c3a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a3996f-f0af-4eec-9ffa-e3c8f491477a",
        "cursor": {
          "ref": "48104fbf-3356-4a9d-8873-8eb7291986c2",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4029c7b4-cf30-447d-acc2-cb1abda76f59"
        },
        "item": {
          "id": "c2a3996f-f0af-4eec-9ffa-e3c8f491477a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6202e984-d1b0-46c4-ba74-39675a736656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f50a4ed-901f-4325-b421-9fd5ed326c65",
        "cursor": {
          "ref": "d75c5960-5579-427b-8bfb-1501d7804e19",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "468a11ae-089c-4318-9f2a-31149881d592"
        },
        "item": {
          "id": "3f50a4ed-901f-4325-b421-9fd5ed326c65",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6fccc78c-0c2b-4d71-af82-ef294d1f79ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab8eddd-e24e-4a5e-903d-7cfb3651b859",
        "cursor": {
          "ref": "12b6a54e-dbfb-4f3a-b840-759e7ca6b0f9",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a5ed1d47-38d1-4a7e-902b-4385dd0fceb6"
        },
        "item": {
          "id": "aab8eddd-e24e-4a5e-903d-7cfb3651b859",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fa8dddbd-f3eb-4da3-a126-3e4f93dfcc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2d0ee2-33c9-438a-a273-3a2434f2859d",
        "cursor": {
          "ref": "b93da3f9-5c67-4907-9e31-876a624ec0d0",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a5efc7a4-c26a-42ca-8ca8-e1c668375a92"
        },
        "item": {
          "id": "da2d0ee2-33c9-438a-a273-3a2434f2859d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a77e9b37-eb5b-4725-b234-f6ff688e500f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550e9f07-01a9-468c-8bdd-a47876caa67b",
        "cursor": {
          "ref": "ba7a42c8-6ab0-422d-b74f-10ea1c71d556",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d7371fd4-1913-4e87-9f35-fcf4804a31a8"
        },
        "item": {
          "id": "550e9f07-01a9-468c-8bdd-a47876caa67b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "98def488-4468-40ad-ab53-a80cfce7cca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c1dd31-150c-4a0a-b6fe-8eaaf9c69c2a",
        "cursor": {
          "ref": "43a9341c-86f1-46df-9feb-b1ee2acb74da",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6dfcf56a-8190-41d9-8060-bce6cce6dfa4"
        },
        "item": {
          "id": "e0c1dd31-150c-4a0a-b6fe-8eaaf9c69c2a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "415ecfd9-4ff1-4773-96ff-eb85a4cad8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd72290-1ae7-4360-96db-6f48218da66b",
        "cursor": {
          "ref": "b069e108-d825-4480-975d-1c4b46fa2384",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3ee9e66c-da1e-4d81-af08-3f9661d8dcbb"
        },
        "item": {
          "id": "4dd72290-1ae7-4360-96db-6f48218da66b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6f4b976f-7a71-4776-81a5-eb02623ac2b2",
          "status": "OK",
          "code": 200,
          "responseTime": 398,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "758cb684-325a-48bb-b9e8-f03436bdcbaf",
        "cursor": {
          "ref": "87274a6d-2e6f-4fd1-86ff-4a8a562dd718",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7ab332c6-d9e3-418e-9dad-def60bbbb584"
        },
        "item": {
          "id": "758cb684-325a-48bb-b9e8-f03436bdcbaf",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0b82823e-8f12-466e-a21c-8df1fa8deb3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cfbbc7-6a10-4558-9116-2130d93a46f1",
        "cursor": {
          "ref": "2ffbdb0e-dfae-4f2f-a160-2a4a1fe0ed88",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d95fce27-0474-4701-b0e8-dd042b23c85e"
        },
        "item": {
          "id": "86cfbbc7-6a10-4558-9116-2130d93a46f1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "29a9cf96-c182-46bc-8d86-407613f7074a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba656d9-2559-42d6-9e11-82b466addb0d",
        "cursor": {
          "ref": "6d391bae-c44e-4930-8e14-7554165d6ed9",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5e8a72d6-e0ce-4c5f-987e-e8a5ae389fd7"
        },
        "item": {
          "id": "cba656d9-2559-42d6-9e11-82b466addb0d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7e126804-e48b-4a66-8a0e-28c1d0572d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c807ee-7db7-471f-bae7-b7abd28ba326",
        "cursor": {
          "ref": "cc534e37-086e-4ceb-94c2-e27ab92a83e9",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f8348abd-cccd-4142-b229-9b01cb556365"
        },
        "item": {
          "id": "68c807ee-7db7-471f-bae7-b7abd28ba326",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d5e9649c-30ec-4d4e-ae1d-2980568cee04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1234857f-5399-46e1-8e80-bdf91ff08c66",
        "cursor": {
          "ref": "0c12f1fd-07c7-44a6-9ee5-ba5b05e6db02",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "05475ead-2d4a-496e-b0c9-7e76a37be693"
        },
        "item": {
          "id": "1234857f-5399-46e1-8e80-bdf91ff08c66",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ee454c1f-0610-4376-8024-7b599b6ba3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a03623-dce8-40ac-ba91-0b2a92c1e58c",
        "cursor": {
          "ref": "38a4a64f-afc7-4481-858e-c2a67522c491",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "16bc9122-2007-42ec-8b24-f9c331d84a7f"
        },
        "item": {
          "id": "d2a03623-dce8-40ac-ba91-0b2a92c1e58c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f48d947a-933f-4421-a415-97b48b109a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11163566-017f-4a60-8419-d30d9d10c5d3",
        "cursor": {
          "ref": "7351d77f-85fa-42b4-ab12-3baa1151a33a",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d5377a6b-1b12-4423-8d76-2d8947faa4d0"
        },
        "item": {
          "id": "11163566-017f-4a60-8419-d30d9d10c5d3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "740eb489-6e7e-42ce-99d0-2879bf656190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd51425-2017-4f0a-9a62-b6eba3f39b9a",
        "cursor": {
          "ref": "15dfceaf-3636-4db7-a769-3fada36e17e2",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "915afeda-9235-40b1-bf13-818812e5cab6"
        },
        "item": {
          "id": "1cd51425-2017-4f0a-9a62-b6eba3f39b9a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ce8e9e15-47b6-4cff-8d16-6be351011eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad41426-eccc-4c5b-ae11-dfe6c3c214bb",
        "cursor": {
          "ref": "c07384f4-2728-4154-b203-0986f5cdf14e",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5d643213-551e-43cc-ae69-990403d37eef"
        },
        "item": {
          "id": "4ad41426-eccc-4c5b-ae11-dfe6c3c214bb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "78df0e13-e2f8-4f64-a135-bef615ab2df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a0f8ed-9a51-49c6-8239-7afa9430be64",
        "cursor": {
          "ref": "7794e88c-0cc7-46d9-b601-2455f0f3999e",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "94cd3365-a741-4790-a1a7-e437d4e6490f"
        },
        "item": {
          "id": "39a0f8ed-9a51-49c6-8239-7afa9430be64",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "40d98492-cf01-4db4-83ca-2b9cc31fcbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3a6ec0-4311-4248-8809-ddcd987efead",
        "cursor": {
          "ref": "3fbf1eef-c422-4019-86a2-551d56fec7b1",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c80c386d-c3cd-47a1-8dfa-5dee4b72498f"
        },
        "item": {
          "id": "fa3a6ec0-4311-4248-8809-ddcd987efead",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c1fb43e8-e233-4c69-b9c9-992ee18cecfb",
          "status": "OK",
          "code": 200,
          "responseTime": 684,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:184)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:184)"
            }
          }
        ]
      },
      {
        "id": "ee39a23e-f585-41a2-9718-88ae5153d4e7",
        "cursor": {
          "ref": "54865b83-f2d9-464f-ab1a-1c33394a8b7e",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8c7a98c5-79e3-42ac-9551-2deb0fbbe3ca"
        },
        "item": {
          "id": "ee39a23e-f585-41a2-9718-88ae5153d4e7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bbe7b2ee-0f6c-4587-9a82-33c058bea7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5457bc90-a2ed-4619-b669-6b5b87b10d23",
        "cursor": {
          "ref": "068f3661-906e-4d20-a471-097e8c47ddba",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3c8f3fad-badc-40de-8ad1-6820436f313b"
        },
        "item": {
          "id": "5457bc90-a2ed-4619-b669-6b5b87b10d23",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cbd1b2bd-4536-4f68-8861-ba49d8c91e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93907b76-2499-4907-b8f5-106b73539442",
        "cursor": {
          "ref": "650f5673-458f-48f5-a316-80aa30ca5a02",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "af1d3d29-d71b-4246-9a66-c9e70765b6e0"
        },
        "item": {
          "id": "93907b76-2499-4907-b8f5-106b73539442",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5a9254e6-a673-4746-9d0e-970f3a512797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbb1599-7a24-4755-9491-2dfcd30a6117",
        "cursor": {
          "ref": "84f7a45b-1b1e-41ae-acb1-9f6af6c9e59c",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d66044da-68f1-4613-8dbe-f11085610bea"
        },
        "item": {
          "id": "4bbb1599-7a24-4755-9491-2dfcd30a6117",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "85f4de81-4792-4b22-87f4-34955c0fb182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397ff3d2-f6b4-4321-93b5-f5de15d14a6b",
        "cursor": {
          "ref": "2ad1d7e6-f61a-4104-8968-ec0485357307",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "53ac3263-547e-4303-a5bd-92bd1f1fa135"
        },
        "item": {
          "id": "397ff3d2-f6b4-4321-93b5-f5de15d14a6b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f3706b05-1fc3-4107-9125-88fe647704e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ade082-ca2d-47cd-af26-ac6903ac4b4b",
        "cursor": {
          "ref": "1309edc0-60d8-41b9-801f-d6d9a79610c1",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3efb3e49-231e-4d59-937b-0a6be6ff375a"
        },
        "item": {
          "id": "47ade082-ca2d-47cd-af26-ac6903ac4b4b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "010f2790-45b5-4101-8dbd-0364ff21e278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa81e99b-8fe8-4562-9685-c4160675b433",
        "cursor": {
          "ref": "72ec72b8-8a40-43b4-808b-73532f85b90f",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b3ce7dd4-6fda-4ed5-8a75-de95474c9dba"
        },
        "item": {
          "id": "fa81e99b-8fe8-4562-9685-c4160675b433",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5911785b-4686-4b9e-94c4-eacd38ffb9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be45d88e-5a97-4d5d-a78c-25a7ce3f2ee0",
        "cursor": {
          "ref": "88b1f82f-37a6-4eae-a428-0b5468bd1125",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1edbbb36-b65d-45e1-b7ed-4c9c46daf7ca"
        },
        "item": {
          "id": "be45d88e-5a97-4d5d-a78c-25a7ce3f2ee0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "eb4bb79d-adcb-4fd4-b424-64f3045e5bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a80dfc2-12bd-4b07-986e-2abf3cd2ad5c",
        "cursor": {
          "ref": "8d258348-8ae4-4783-9d22-08ac485efa91",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3bf33387-d605-4207-9609-8d51076f380b"
        },
        "item": {
          "id": "5a80dfc2-12bd-4b07-986e-2abf3cd2ad5c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "48310835-19fd-4b93-8e50-8ab921d5ea01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bebef33-b147-48b0-b6e8-ef6b24291908",
        "cursor": {
          "ref": "0f4cca87-9f37-4a21-b85b-152e7fb7a710",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f8d4d2b6-049f-4227-927f-c2e129860066"
        },
        "item": {
          "id": "4bebef33-b147-48b0-b6e8-ef6b24291908",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d1fd06b8-29fa-458c-b93a-04043c34c84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cf0994-78e7-4713-a2cc-a4421b128c13",
        "cursor": {
          "ref": "eca8f198-45e5-4ed1-8601-8c2d26f60b3c",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3781020f-3d07-4a0b-aa90-6a48a33f254a"
        },
        "item": {
          "id": "91cf0994-78e7-4713-a2cc-a4421b128c13",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "483c1f34-bad0-4443-a6c2-38034032d9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b087fed-20b5-4be4-b00e-e536cf16faa8",
        "cursor": {
          "ref": "6102ad87-4819-4d45-9a80-051fa2c4d3aa",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a0229094-307d-4cba-9fbf-09e75b0e0257"
        },
        "item": {
          "id": "8b087fed-20b5-4be4-b00e-e536cf16faa8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d6004609-845c-413c-bf33-ba87ef367bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7038e1c1-572a-41c5-b5dc-c5a61ec0900d",
        "cursor": {
          "ref": "3bde89ad-42c1-4da4-bf44-8b111c2b4239",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7356133e-d823-4b2a-85d2-452f3408a8a5"
        },
        "item": {
          "id": "7038e1c1-572a-41c5-b5dc-c5a61ec0900d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a281a288-d5af-4adb-90e4-0c49a86eff4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1151c824-6b8e-4afd-bbe7-cd448be64c9e",
        "cursor": {
          "ref": "dbd0fec1-039a-4f10-a402-3fedd4a7ee84",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "284605b3-7c82-433d-ab11-cfaad49edc89"
        },
        "item": {
          "id": "1151c824-6b8e-4afd-bbe7-cd448be64c9e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "06d17ea7-86c0-42d2-ab02-2a2e17ba94b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8aa8a2-94e0-4e42-ad40-7ce13fa3acae",
        "cursor": {
          "ref": "c3bd20d5-0785-4301-83ac-c20e29f39d66",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "78311e7a-2a0b-4202-9554-cafeca7c9c2b"
        },
        "item": {
          "id": "ef8aa8a2-94e0-4e42-ad40-7ce13fa3acae",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f5b4448b-8af5-4c39-a197-07204530a9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72925bd6-ddf9-4936-bd98-29520aef4429",
        "cursor": {
          "ref": "297d70b3-163d-4622-8b96-e144532f1d0d",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "affff6b5-447f-46cd-85ad-cdeb680d7919"
        },
        "item": {
          "id": "72925bd6-ddf9-4936-bd98-29520aef4429",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c3ece904-708f-4d8e-aaed-22d1cfcdd8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a42b577-a3a2-42e6-8487-7a58733c404d",
        "cursor": {
          "ref": "64108fa0-143e-440f-89f0-b53c8024cda5",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bbe78f27-5a32-4a5a-be9b-e288894c9dbd"
        },
        "item": {
          "id": "8a42b577-a3a2-42e6-8487-7a58733c404d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c995f49e-35be-4efa-988a-36ada7a4dc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4afd43-6c39-445b-a63c-2ab39a9f4210",
        "cursor": {
          "ref": "afabf3cc-8740-441b-88f5-5b0dda93083c",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6342e5dd-e1af-49a0-8697-c0597e2dba06"
        },
        "item": {
          "id": "ef4afd43-6c39-445b-a63c-2ab39a9f4210",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "afbd8c3f-8051-454e-bfe3-f6e5e57172ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19ec814-c0ee-4e77-80de-b84434c80c4b",
        "cursor": {
          "ref": "6dc61657-7b44-43c9-839a-daa4cc9e1f0f",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e48a97c9-9634-47ff-806f-537a72157533"
        },
        "item": {
          "id": "e19ec814-c0ee-4e77-80de-b84434c80c4b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "928de407-de7a-4fc8-8b4a-bb20470a6c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5040fe24-0e27-4333-a083-913b40f19651",
        "cursor": {
          "ref": "21d72446-19b0-44f1-8159-3e67d5255226",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "29a6cddf-fc01-43fb-b114-48ad61498b0f"
        },
        "item": {
          "id": "5040fe24-0e27-4333-a083-913b40f19651",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a0623f00-229b-4bc5-8500-8948d459061e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32da5cf4-fb07-4e3b-adfd-e8a3443e4ee5",
        "cursor": {
          "ref": "078ae88b-5898-4014-bc02-eff53013e7f9",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "11925821-a597-41ed-b832-9fa0513e757b"
        },
        "item": {
          "id": "32da5cf4-fb07-4e3b-adfd-e8a3443e4ee5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "86e43532-251d-484f-a0ff-4544541061d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea0f0b7-2f46-44ad-acbb-28afcb2cd21c",
        "cursor": {
          "ref": "bbdbb9b4-c511-4b4b-ae75-74bbf73603a2",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5f336944-4b29-4978-a196-6b347dd969d6"
        },
        "item": {
          "id": "dea0f0b7-2f46-44ad-acbb-28afcb2cd21c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1e542fc1-8328-4cbd-9d76-ffd511969505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac88ad9-8b9d-425d-894b-a51785ebfb28",
        "cursor": {
          "ref": "464fe251-8509-4c2f-b46f-7f176f34c3bb",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "58e331a9-0f18-49b8-bfdf-271bc6e593ab"
        },
        "item": {
          "id": "3ac88ad9-8b9d-425d-894b-a51785ebfb28",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6ecde53d-ae69-4aa9-913d-e73269692a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1289,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b9ec47-990b-4062-b0b3-e0dbb6a5a0a6",
        "cursor": {
          "ref": "645c8978-c3f3-43e0-ac90-3880f6b3a7e1",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7761775b-767e-4b02-a119-d883c4eb5b19"
        },
        "item": {
          "id": "b5b9ec47-990b-4062-b0b3-e0dbb6a5a0a6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d6176261-c663-4bbb-98cc-714b7fc5772b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1270,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a210447-f7bd-4da2-831a-c41fac9f0400",
        "cursor": {
          "ref": "cab96a42-8dec-433a-bfa9-47cbafea2d5b",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e29c3796-eac4-48bb-bebf-cfd7c84cb8eb"
        },
        "item": {
          "id": "0a210447-f7bd-4da2-831a-c41fac9f0400",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9b1dde63-94e8-4f19-b718-7bda18fa8814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1113,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0185ec18-6a47-470e-aff0-2260c6235660",
        "cursor": {
          "ref": "273f4886-1f11-4c89-a05f-a606cb4038ca",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6b2609a5-6a25-4a2d-97b0-9ba0952a2504"
        },
        "item": {
          "id": "0185ec18-6a47-470e-aff0-2260c6235660",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fbf1a5f8-c257-49d7-a2c3-96c467c0ab2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1182,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807c53dd-c528-4bde-811f-98b4e76de2c1",
        "cursor": {
          "ref": "36551eac-177e-4000-9e6c-056a26fe845c",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "787a93fa-ef65-497f-94c8-da356a909905"
        },
        "item": {
          "id": "807c53dd-c528-4bde-811f-98b4e76de2c1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "719f1baa-cbcd-4555-9045-a9355ef2f251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9f75b1-2587-4385-8fd5-30c9307c928c",
        "cursor": {
          "ref": "2e61bda5-3ffe-476e-b6c2-e7748436bdcf",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b60fa85b-0066-4f4e-83b2-228c10a20a15"
        },
        "item": {
          "id": "ee9f75b1-2587-4385-8fd5-30c9307c928c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e625345c-89d9-40be-b0ca-5c93ba9d1ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42f2ca9-0017-405c-82f9-6d1cb87230f0",
        "cursor": {
          "ref": "c5b47ddf-9896-4f5e-90fc-95bb694ef10c",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ff24d795-9848-4210-bda2-4b6cdc5f1726"
        },
        "item": {
          "id": "a42f2ca9-0017-405c-82f9-6d1cb87230f0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "91df84e3-001f-4a52-9f3d-40c24f5791ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fa85a1-e571-44ec-af73-8c82bb4a5caf",
        "cursor": {
          "ref": "f9110b1c-f9c3-45d2-968a-56c3de747cbd",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "44213513-d724-42b5-b0cd-aca4097546a7"
        },
        "item": {
          "id": "f0fa85a1-e571-44ec-af73-8c82bb4a5caf",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e5507e31-7d3e-4a90-b04a-bcbafbc35ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0267bf8-900a-41d2-8260-d1c2303289d2",
        "cursor": {
          "ref": "da25e199-d1bd-4f24-b826-bde78fb47589",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c6f23695-e509-4fab-9056-a98584575f19"
        },
        "item": {
          "id": "f0267bf8-900a-41d2-8260-d1c2303289d2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "502908e8-9f7d-40e0-a712-652d8a408b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af89b4cb-5848-4aa8-8f30-fe27adbc5ee1",
        "cursor": {
          "ref": "ad6a215a-21b8-4528-9ea7-35e61717ee7d",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4ca35152-a235-4492-86ec-c7c4b880d721"
        },
        "item": {
          "id": "af89b4cb-5848-4aa8-8f30-fe27adbc5ee1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9ed66dd9-3b3b-49eb-bbd5-89db7a8318c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c321fde6-89b2-4f3b-bc2b-a1dea32a7105",
        "cursor": {
          "ref": "b6c8ebab-1557-491e-ba35-7901e19bc130",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bc88e0a1-cfcf-41a8-802a-effbcde5b516"
        },
        "item": {
          "id": "c321fde6-89b2-4f3b-bc2b-a1dea32a7105",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e164137e-2f92-42ac-9775-87616eaf988d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499b01a4-d0c0-4926-b612-eafcb0186320",
        "cursor": {
          "ref": "aa4a8818-226c-48a8-9a17-2a66780d4442",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "47fb6426-a16d-4e12-9b00-d4e54e27e60b"
        },
        "item": {
          "id": "499b01a4-d0c0-4926-b612-eafcb0186320",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f3c66fca-aab6-42db-b19c-ca577a36f20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26846901-5de7-4b6e-9b1a-cdd58b9a8713",
        "cursor": {
          "ref": "b4157c43-8031-4ebe-98db-2b8cdca36b93",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b72551f9-d272-4768-ba8b-739509a8b466"
        },
        "item": {
          "id": "26846901-5de7-4b6e-9b1a-cdd58b9a8713",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1b2d51cc-0f29-40f7-be52-c5b8158bb32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bc41dd-a4f4-4f44-841e-da4b828c492f",
        "cursor": {
          "ref": "c5f2a302-ccc4-40e5-8269-8ce39d14b855",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b0858a01-be03-47ac-aa34-30a76df33b2d"
        },
        "item": {
          "id": "14bc41dd-a4f4-4f44-841e-da4b828c492f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "81512eac-59fd-42c9-88ae-3540078c0904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26fd39a-1661-49ee-a8f1-2e184ecf3751",
        "cursor": {
          "ref": "36a6adb8-32ce-4a6f-8fc8-5c964066ef9a",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8ced5c45-fece-4c98-be1d-d5bfbb6acd32"
        },
        "item": {
          "id": "b26fd39a-1661-49ee-a8f1-2e184ecf3751",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "85051e2f-12c1-4665-8e75-22857cfe0929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ef08ff-78e5-4fa8-a4f2-2c661fcd9c5c",
        "cursor": {
          "ref": "cdc4b9fc-f3be-4df7-8d77-3e6e38297e8e",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3993dc68-8217-4c06-948d-c483ef2d8b85"
        },
        "item": {
          "id": "12ef08ff-78e5-4fa8-a4f2-2c661fcd9c5c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1d12ca3e-fb37-4364-acd4-628881dfb37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de51098d-1208-4665-aeb5-2fb6432877eb",
        "cursor": {
          "ref": "10db6919-6bc3-4bff-9e39-54ee1f87fd56",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fd88645d-9484-4e61-8c84-417a1bbd5515"
        },
        "item": {
          "id": "de51098d-1208-4665-aeb5-2fb6432877eb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ee573b3e-1044-4efb-be7b-b1bcb7837748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ab6625-a307-46e1-a4ae-50d6f63fa5aa",
        "cursor": {
          "ref": "ed4b6178-3017-457d-9c93-e2d4be0b05ff",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9a650174-b7ca-490b-959b-2f507818fb19"
        },
        "item": {
          "id": "82ab6625-a307-46e1-a4ae-50d6f63fa5aa",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "23e8c3d2-75a1-474a-8de5-01c299d843de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c854d7a-390c-4f23-bd72-a77b25f3edc4",
        "cursor": {
          "ref": "c6c6b2c1-799f-46a0-ae4a-d7b18dba153d",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b0c36763-5544-4c04-b2da-c7cb763c69e3"
        },
        "item": {
          "id": "5c854d7a-390c-4f23-bd72-a77b25f3edc4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1f01ccaa-5d8f-4bc6-b30b-5496fa4a2485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df604d7-9ae4-4dd4-b290-10b7de07a5e9",
        "cursor": {
          "ref": "b552dadb-a95e-47d7-b384-6f896394d8e2",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "38b99967-2606-4158-8d8f-5678be1b8f8f"
        },
        "item": {
          "id": "4df604d7-9ae4-4dd4-b290-10b7de07a5e9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d41e6205-69c6-4a17-9633-26e88006ef5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af90c077-55a9-4b30-9e10-fbfaa8ef031a",
        "cursor": {
          "ref": "e76447b7-ee40-4e6a-8c7a-029c197901f5",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b9071e9e-ae4e-4bc4-ad09-fdcffc319c40"
        },
        "item": {
          "id": "af90c077-55a9-4b30-9e10-fbfaa8ef031a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c440c03f-cff5-4aa7-85fc-fe3758870033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbf831c-2110-4184-8f6c-3c556152496d",
        "cursor": {
          "ref": "9e1e13ed-cf7a-458c-9b4b-c2f283f774d4",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "af6d9647-d7be-415a-8261-a378866427ed"
        },
        "item": {
          "id": "1dbf831c-2110-4184-8f6c-3c556152496d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d3899202-7cd1-416b-8aba-3312f1cbe5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9a5637-9a21-4dad-a76c-b11686e0b380",
        "cursor": {
          "ref": "b60a0089-1818-483c-b63c-880b4e6ee4dc",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6a208737-4f61-4a2c-af68-7b2ec3218283"
        },
        "item": {
          "id": "6c9a5637-9a21-4dad-a76c-b11686e0b380",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e938bc4d-1b4d-44cc-be8d-635f31c9492f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65359a4a-dae3-4d78-b1ee-0aabe4180886",
        "cursor": {
          "ref": "9874316d-d827-48f2-90a9-7f0f7d044d36",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2ddce04f-191b-4d37-a9e7-f5a2acc2c03c"
        },
        "item": {
          "id": "65359a4a-dae3-4d78-b1ee-0aabe4180886",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f8c9b333-0f88-4d2e-86bf-b6d7b510e960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0d17df-81bf-48fd-8bc5-39aa84703df8",
        "cursor": {
          "ref": "a29ff81c-0699-4fb8-8965-60c9f117c002",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b8295907-6321-4f10-a599-24f93a4c22ca"
        },
        "item": {
          "id": "cd0d17df-81bf-48fd-8bc5-39aa84703df8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "72601f3b-e941-46ed-8a76-d5477771a88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c1c1f3-62d0-4b0e-9e98-77af8240439a",
        "cursor": {
          "ref": "20711dcf-770a-40f7-9641-fbfad74d1baf",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "42d91eaa-8c40-4cb9-af21-9f2d3c729301"
        },
        "item": {
          "id": "e7c1c1f3-62d0-4b0e-9e98-77af8240439a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b546036a-15d0-47d1-912d-26d4cc4a7cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afec9c6-e402-42ca-9027-68958b1a65e9",
        "cursor": {
          "ref": "efe64b47-d2ad-404b-ae72-fff9f874c214",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e70067a1-9cee-44f9-85b1-9abaf0541716"
        },
        "item": {
          "id": "8afec9c6-e402-42ca-9027-68958b1a65e9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ba9d8e22-2658-4deb-8a88-9c68fab66f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736b9627-ee51-457b-88e0-906266ed33f4",
        "cursor": {
          "ref": "a4e2ad49-cf98-47f4-b9fe-0bb7c231a5b4",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "838e90fa-657c-449e-bfda-645c14c619c1"
        },
        "item": {
          "id": "736b9627-ee51-457b-88e0-906266ed33f4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "94a3fe3a-afa3-496f-8d4f-86e4d534d59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dcb2b7-e86a-4eb3-95af-7a96a3037d11",
        "cursor": {
          "ref": "9822358b-e43d-4f03-a9f6-81b98f5ea273",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "39af3c2f-7b1b-40c4-8571-30938fc6847e"
        },
        "item": {
          "id": "14dcb2b7-e86a-4eb3-95af-7a96a3037d11",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b684d156-b630-45ca-8082-f7ef48244674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48cb172-ce61-4fca-90c8-166bff2a0e23",
        "cursor": {
          "ref": "d6a3aa90-12f0-4906-9aab-a0c22c8c86b5",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bd087080-796a-43dd-a986-57e4b70835ef"
        },
        "item": {
          "id": "d48cb172-ce61-4fca-90c8-166bff2a0e23",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "aabe62cb-e5cc-4a5f-8bf8-78b160462569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e869fe9-d963-46bf-8727-91daf603f8a0",
        "cursor": {
          "ref": "b442e857-b850-4bbc-afe6-4a6728e077ce",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "03a11a41-a987-4dbb-8fe1-528e07068b50"
        },
        "item": {
          "id": "6e869fe9-d963-46bf-8727-91daf603f8a0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5a0af804-5d19-43d5-ae9d-05bacde42c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51e0eaa-71c4-4882-9ead-f9a4ff9bb3ab",
        "cursor": {
          "ref": "2f58d7d1-8543-4afc-985a-ba42b458cf1b",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a00fa55f-ccf1-4216-9e0c-09e022b0a02a"
        },
        "item": {
          "id": "b51e0eaa-71c4-4882-9ead-f9a4ff9bb3ab",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "383e5ec8-aab2-4c74-8cc7-6a67040f719c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac36275-384f-4953-b401-4e8bfed02c8c",
        "cursor": {
          "ref": "be64e9bd-1488-49e6-86c7-129b55790b79",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "97f3b414-c84a-43ba-a2a6-22c23b6bfd0e"
        },
        "item": {
          "id": "7ac36275-384f-4953-b401-4e8bfed02c8c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9041e51d-c30b-489b-9b2d-9af62f77e799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e33b7ee-cea0-4d0d-b66f-b1532dffd1c9",
        "cursor": {
          "ref": "76bf6d03-1f1b-45a4-9597-da97982fbfa1",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3bc9ca5b-6450-42cf-971f-718788fb9042"
        },
        "item": {
          "id": "7e33b7ee-cea0-4d0d-b66f-b1532dffd1c9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e6265133-10ba-4d25-8f83-8a920440c57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6e7eb8-3b7c-4710-947a-57bc5c13bd57",
        "cursor": {
          "ref": "3ab9b23a-bc05-4ecc-bce4-8a144170cb20",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c38f24de-48b8-4aed-ae8f-010492ba74d3"
        },
        "item": {
          "id": "0b6e7eb8-3b7c-4710-947a-57bc5c13bd57",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "324fd42b-cd9b-44e4-b539-09b3822926eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47702711-9154-49a6-b6c3-fae86b2c186c",
        "cursor": {
          "ref": "698e835a-5d05-4b22-b0cc-2711d6c2daba",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "461b37c1-c45e-44ff-9806-e706ec5e0484"
        },
        "item": {
          "id": "47702711-9154-49a6-b6c3-fae86b2c186c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2bda6cba-83a5-4f5c-ac83-fe3d964a0790",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722a0ad3-a001-4f25-ac44-84d0071fdcd0",
        "cursor": {
          "ref": "670e5320-36cd-4086-8cbb-37f8e66a4bb3",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a5418ecb-35d6-4120-9eaf-eee5e2e0d5b7"
        },
        "item": {
          "id": "722a0ad3-a001-4f25-ac44-84d0071fdcd0",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "fac2ef1e-b183-4b57-85da-80cc07ae054a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 333,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b46a158-78a0-47d6-8852-c5c4b73c2003",
        "cursor": {
          "ref": "3a42df36-4602-441a-ad58-1e4823743518",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "58bcf73f-b501-4d0d-b0e5-b986ba4d1387"
        },
        "item": {
          "id": "3b46a158-78a0-47d6-8852-c5c4b73c2003",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f167248b-ac91-498d-9319-a1a308ee11b7",
          "status": "OK",
          "code": 200,
          "responseTime": 372,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1853795b-583a-45a7-b336-369fe28832dd",
        "cursor": {
          "ref": "c2f00ac4-0e6c-4f0e-bec9-dcbf8e977dd7",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6697013d-7f25-421a-b50a-681d6f23fa4a"
        },
        "item": {
          "id": "1853795b-583a-45a7-b336-369fe28832dd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4e3aa65e-1df1-4d0b-a44e-0e57d8117d29",
          "status": "OK",
          "code": 200,
          "responseTime": 1845,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e72a609-ad66-40de-834f-fb5cfa9f0cd0",
        "cursor": {
          "ref": "26d56cd7-1693-46f4-ab2b-602e6cf83392",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "50c4c98c-184e-403b-84a2-7c195abd8437"
        },
        "item": {
          "id": "9e72a609-ad66-40de-834f-fb5cfa9f0cd0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7380ca38-2f71-484d-922e-0a5084ed57ca",
          "status": "OK",
          "code": 200,
          "responseTime": 1711,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad976cdc-4dac-4389-b6f6-2e7740437e02",
        "cursor": {
          "ref": "d8d1c011-b51e-40d5-ab09-c87cead134fb",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6102e7a7-de60-40a7-aba8-275ac085713c"
        },
        "item": {
          "id": "ad976cdc-4dac-4389-b6f6-2e7740437e02",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b4cefb8a-f522-4089-bcbb-f43a3391a132",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad976cdc-4dac-4389-b6f6-2e7740437e02",
        "cursor": {
          "ref": "d8d1c011-b51e-40d5-ab09-c87cead134fb",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6102e7a7-de60-40a7-aba8-275ac085713c"
        },
        "item": {
          "id": "ad976cdc-4dac-4389-b6f6-2e7740437e02",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b4cefb8a-f522-4089-bcbb-f43a3391a132",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad976cdc-4dac-4389-b6f6-2e7740437e02",
        "cursor": {
          "ref": "d8d1c011-b51e-40d5-ab09-c87cead134fb",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6102e7a7-de60-40a7-aba8-275ac085713c"
        },
        "item": {
          "id": "ad976cdc-4dac-4389-b6f6-2e7740437e02",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b4cefb8a-f522-4089-bcbb-f43a3391a132",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98e7103-00b7-4552-9b32-7d1e8e17392a",
        "cursor": {
          "ref": "10b57687-00b7-4798-b532-5b15a7b68ad0",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "74f7c35c-2b46-479d-97ae-69631e703a2b"
        },
        "item": {
          "id": "d98e7103-00b7-4552-9b32-7d1e8e17392a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "78aefd35-1acd-417d-b724-053fe25bd993",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 321,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73050832-8916-4040-a586-eb0ecee1e507",
        "cursor": {
          "ref": "6f94c312-4bbc-4d92-b5a2-0aedfb9c79a4",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "010842cf-d400-4c92-9b93-21ce77146b3c"
        },
        "item": {
          "id": "73050832-8916-4040-a586-eb0ecee1e507",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3a1ab795-29ce-473a-89d7-0665d33c8043",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73050832-8916-4040-a586-eb0ecee1e507",
        "cursor": {
          "ref": "6f94c312-4bbc-4d92-b5a2-0aedfb9c79a4",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "010842cf-d400-4c92-9b93-21ce77146b3c"
        },
        "item": {
          "id": "73050832-8916-4040-a586-eb0ecee1e507",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3a1ab795-29ce-473a-89d7-0665d33c8043",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2788b16-86fc-465e-8c70-79457bba2e2f",
        "cursor": {
          "ref": "ec4298e9-3bb4-4358-a4ff-e96e60beec0a",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0d60d4bc-a4ab-429c-881c-f6a20c4b26cf"
        },
        "item": {
          "id": "f2788b16-86fc-465e-8c70-79457bba2e2f",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "5587b7af-4b24-405b-bf10-6f97d99cc517",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 542,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2667f3a7-b6b9-4d4b-a4ad-4387c4f93a7b",
        "cursor": {
          "ref": "12c8a940-8e95-41db-8ef7-b030525ecca3",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "cd73a485-7dd7-4dfb-a005-8ea764ab57ad"
        },
        "item": {
          "id": "2667f3a7-b6b9-4d4b-a4ad-4387c4f93a7b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9f3797ea-9afe-41ba-9d9a-dd7640e20eef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2667f3a7-b6b9-4d4b-a4ad-4387c4f93a7b",
        "cursor": {
          "ref": "12c8a940-8e95-41db-8ef7-b030525ecca3",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "cd73a485-7dd7-4dfb-a005-8ea764ab57ad"
        },
        "item": {
          "id": "2667f3a7-b6b9-4d4b-a4ad-4387c4f93a7b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9f3797ea-9afe-41ba-9d9a-dd7640e20eef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733f0790-0979-4645-8683-e3e492ecb4ed",
        "cursor": {
          "ref": "7d025181-ae1d-4510-9a9b-16cba4a4c3b4",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "52210a72-4d34-4305-8665-9ed494a19d79"
        },
        "item": {
          "id": "733f0790-0979-4645-8683-e3e492ecb4ed",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "b8de05e3-7377-47f8-afed-8ba38cd75cfe",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 547,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}