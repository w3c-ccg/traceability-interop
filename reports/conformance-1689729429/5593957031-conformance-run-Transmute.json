{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2c6b8be9-a8c6-4adc-bcc1-fa8c38794e95",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2b51572d-9690-4193-88ad-3939b58e7f74",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "525f6d84-0778-4a89-a358-87357812483e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0a4a10fc-2157-42ec-b05f-8dfbae1d0bc5"
                }
              }
            ]
          },
          {
            "id": "8896e688-f3c3-4ce2-a59f-b6dc4b30c1db",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "20b8f92a-1e5a-4dca-8bb3-68be3a1bf8f1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3e8d9cd6-7257-42d4-be38-32994b3cc03c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3f8ff00b-4dd3-418b-9472-1f7ea833bec9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7c06a0dd-8071-4a3e-9c4e-557035c11e28",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2ba94a6d-7b7c-4df0-9473-16204a740a8a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbb0fb01-86be-4ced-b708-93b79e2e5e29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e7ada1d1-8fa5-4961-8557-78b311ae749c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2f30828b-5159-4722-86b6-0baef450fd6e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0c2054a7-407d-4f00-a9eb-5bba4749a582"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "68f71c8d-bf3f-46f5-af53-9eb1d080a9ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "04624759-bb78-4fb9-bdb8-672eb3587c5c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4e8aa60-a076-45fc-ab05-e27d543f6f93",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "858f7068-1e00-4783-b2db-d2aa10d62667"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2bc9384e-1ee5-4bfb-9ed9-f834c5752c75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cdf4ccd3-ccc7-499f-87d0-f7123e7bb7b6"
            }
          }
        ]
      },
      {
        "id": "aaefa1a2-e048-49ff-9213-8e3a57abd72b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "53cc6df1-f6f5-45c4-ad54-ef434deb572c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "41dd1051-6266-426e-92bc-b164676a9c95",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "96aa700d-68c3-411c-b969-5944c8102b43",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ec951f-532b-465e-a62a-a142f1d7c28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "410d551e-e98d-4327-b94d-6b6c272c5f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd542460-d8a0-43ed-81b8-d5fe0b1ecc51",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d1421c-1c19-44ed-8b97-2c23a74eaa92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "045c726b-ffe4-4568-9aba-c871de972f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e290fd74-579b-44c6-bcac-3b121ba1d350",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d221920-fd69-4b99-a8b4-f35484da7ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d19c959f-d31b-4623-907e-73e24b724b31"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f1e0dfe1-4b06-4ade-a4a9-691f185f0e8d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c019ea0-f0a4-4c5c-8018-8a020f237bea",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70433d6f-fb6a-4710-a4d7-789a34a60c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "517ec992-3b0a-4c50-a953-bcb35517b035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51754ac-f7bd-4f26-b311-d880a554cfd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c862c3d4-dcc0-48f5-8e24-24abfda21fce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dbdfc812-7264-431a-987a-e96fdee5cd21",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d0df62d3-c348-46a7-8291-fa7735622136",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36d26cb2-eff7-4f1f-9924-ba3767dc1563",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c0a74cbc-374c-417b-8ccb-71f0fc98edf7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ada77d1d-32d7-4826-8342-039b1148561a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "08be5e25-f0a6-497c-b4f0-871039d42dfb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e42f1a00-84c1-40fb-a246-c54e26ef5cae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fadcdcc3-6f5a-4657-baaf-5e9c74b3eaaf"
            }
          }
        ]
      },
      {
        "id": "1aae9384-6406-484f-80cd-40a5ce171f0e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "906c5dce-df04-40ff-ab27-2578599bf1fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3aa3ad39-254d-45c7-a67f-14bec65752ab",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4477cb29-1f6d-48ba-9767-ad2d0e7ad092",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a368ba1-b1de-4a61-8fa5-67ce463d8242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0782f233-92a9-46b9-91d2-d7422de2204e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb18c118-71ff-465f-b98c-2828bad25a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f146aec-3928-4c8b-bfa3-57207ba6a170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482d638b-6a94-4054-80ac-a628afcdfbf4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656c10f2-5faf-4715-aeb0-e51f097ee536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6317921-1a2d-42f8-bcbe-8107b1f7d95e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68249ee-47ad-4348-a707-938f70893a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67e9d710-4cab-413a-b065-9f6f0a311821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a3fa0a-1dee-4d02-a6ef-ff1ccf52af84",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98228919-f199-4802-8383-11d746fd8bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92312f3-2832-43d4-abac-c4d5ab71828b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8051ea11-b12b-4baa-8d62-f947ca1d54a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "833a5347-7bb4-4986-944e-4addaa292035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9698c0-3614-476f-bfb9-2d8b6ea77ae8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37e6c03-3ee7-4f88-8e5c-9e477d6bf894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4396db53-f447-49cd-bab7-688f2499d835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24975b2f-0525-4e85-939c-d79a128f0f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11507997-e3e9-428c-ac65-dfef63000d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b595d788-11c1-4cde-855f-feff7386af06",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a4631f-defb-497e-b9e2-3a0c3ac6a433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d6310a-bb8e-40eb-9b26-76a48a52d92d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8769d6-3897-4128-ad8d-585001f3eec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "216a65fa-b668-464e-b22b-73b46ac63c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6d61e0-f272-4ebc-b781-3fc7d271604c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348608e0-a17d-4707-ae4f-bc8de1becf58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc408817-3a57-4205-a0f0-dc9b8edbf9bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e8d5b6-9d3c-4b8c-b757-81909b0edd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b92d5740-40ee-4939-9830-ebf2923e30b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe7cc24-ccf7-4a97-b199-d5665f1d548e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46352c17-2bce-4b5a-9c32-449aeff90276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9deefda4-3520-4136-a049-90464358875f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1017b2-73a8-4627-b2e5-a1699e895816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c69adac0-c377-484e-ac3d-68f8e2a6f803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5bdd97-0319-4189-9380-da739dc7d680",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa6f107-47f2-47c6-a0b2-14ee47a61ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e561dc-83db-4c26-96de-ef7b41140531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf41607-0847-4054-83b1-353ec717b35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "382c0537-b1c1-477a-b810-ccfcaff62e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde4527d-df8d-45d9-8e7b-9b70b023739a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba63a88-9cec-4d28-b65f-f8ec0b31251e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9c2655-11b6-4374-8ef6-826a11b95315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09ad12a-e422-462a-b8c0-69c08c4a6678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb400c7c-df7a-44b8-8997-3ae72fa3fb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc205bf-bce2-44eb-be2b-20a9a0905b62",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fd8811-0ac0-44c3-b7ff-62ebac1f0efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e377e5-709c-43a2-b1e4-7f965a5db8bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a3eb97-e52b-4b85-bd3e-0a05c510e55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c972f4f0-9a27-4d7c-9e8a-a93e9ce308c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abce785-88d3-41c7-876c-bb0acb3af0c2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87b76ab-5164-418f-a6ee-2e0f65741b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d031c35-4b76-42d0-a705-ce24d9f367cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39850c4-c4de-40c4-b457-262c1d9ba0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc2e000f-c17f-4c7f-b616-3454fe007971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d9b29e-128e-4205-8b7e-e6107d1d7bb2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "467d5789-accb-4094-8633-7dfb7968298d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cba98ba-a0c7-4a8f-b73c-f05ddaf647ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08217ab1-8be8-4e65-bd6c-0325f01e233a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6802b94-a436-49b2-a493-6f003143460f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2776f3a7-616f-4839-8fa3-73f0e4ba6a7a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6f4b64-cc12-48a6-b78f-53e097937753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd68764-b3bd-453b-a9e0-7a7bfc0310da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5979f8-5b38-4a2f-8ffe-95e3e3ff8c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25c39e6b-e928-438e-85f9-7b2a142ab059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246349e9-63cf-4c36-8cda-fe64f56ee220",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c99af8-cecf-41c6-b256-cca3a88702dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790d0a54-f44e-4886-8879-5e53f71fee4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46dfc30e-e6b0-40f8-a7b1-4dd4b5ca1ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15c02a3d-292a-4028-8f37-3594c2ad3b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa66027-737f-4f37-a027-5ecbdd37388c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9760be2b-a516-411d-9556-5b0769ea5574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c75855f8-c568-477d-9e69-86d4b94a92fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4802887d-9bc1-427a-ba61-63bae3ae9e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63b846e5-8500-4bd0-b342-28765ae5d0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb3f9ad-5502-46bb-95d2-c988712befae",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd5f30b-ffbf-4fc1-8633-b5be40871176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836a7335-52d7-4ab6-aa72-4f9a242fbcf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fb830a-6ad7-4952-8149-c8f35862dab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9c98794-2747-4617-a491-f423b2a1c8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e231e2cf-ecf2-45c8-9ca3-481958ff8609",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1602aa77-7669-447d-a609-9fc302140234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73478a1-816e-4d4c-b977-a0cc2da017c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9135c9-6b10-4f56-8ffa-17c3feec0112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a65b43bb-810c-4a26-bdfd-7bfc300b2ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac73e27-809f-47fa-904d-9298460d330f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b239f611-648f-4c4f-a089-20f9f3eae51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fec4a0d-14d8-4b4a-9b56-524cb4eacb7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa68e05-d1eb-44d8-9fa5-b745b179c546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "77db857f-202d-4e82-901c-539d075c87e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ab3031-2839-4aed-8717-dfdd6c9f36d9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff09dc2c-e348-4b87-b462-01f19bfbde54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e54a06f-0997-4742-9870-2c92f1812bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf70f4c-a9e7-46c9-94ba-f16fdbd9a5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cad87f2-81ad-4593-bed5-982fc5a51d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d041f12-319d-4aa2-bc19-b9e7337b142c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281068c4-54df-4fd8-990a-5127bd8c14e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b45fd3-d332-4223-9865-bd8e2465fe40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee06e32-7f31-431e-9f9f-8d7fab93d5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "755ebf7d-51aa-42e4-a97a-eb4ebb3e6bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975d214c-af80-46af-9640-ae125f221b4f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b650952-837e-4737-b8c1-bbdb732993a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b234be4d-8acc-40fa-8b9d-f6ea8532e0de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cefd2d4-eebf-4c23-9657-104eceaf90fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48ac29f2-78c9-463b-8fcc-7844833d6d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992f9749-9a72-4585-af75-439d7b4a0968",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c89dcc-a796-403c-abbb-d150536c084b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cdbe38-f891-4424-9251-44fc705c40d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68ae119-9136-4cab-a071-e550746c917d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61019b89-0c13-496f-89b5-acef6ae73ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0630e150-b2ce-42b4-8d64-762ba6290217",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4caf85af-c45c-4098-824c-02e9b733b326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2522dd21-0daa-44c7-ab3f-03585c9e9936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1341cf-95d3-4381-9c15-0d9a851e6ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79fb3e0f-9a52-4726-ace9-4e006cc50410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150b4131-209c-4b21-9148-497a3131e8d3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62acdc02-167e-4146-a152-c21b0354f230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ed3a65-1cc2-413a-81ad-568e7103e6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bacf317-ec4f-41a1-b07f-816347f99919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a333ee1-5ddf-4827-8a64-c643339489ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916afdf8-8942-482b-ab1a-54fc9f39bdbf",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3b9585-22f4-45b4-9738-8bcaf680fc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7351a64f-3686-4de1-be7c-b6491fcce371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b75ccc9-eb02-4270-9074-bfdd6efce277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27e617d6-cbba-4acc-903c-92594ae3ef65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e453e5-2396-4c09-9c81-26c354f46668",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98a95c1-1f2d-4631-a78d-59fb77b0c691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d558f20-8dc4-40dd-bbc0-ac8a70db15b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21a0863-e883-416d-a5ee-5a681d09182f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91bf0dd5-b76a-4330-9121-8e9471fc292e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9107b4c-a82e-43e8-bae3-363c58e7f139",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e82dc1-57ed-48c7-b0be-4ed5b54d3451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddabe527-85f7-4c88-8b86-6cf6c28acc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bab439-d1e6-446b-b71c-b53bb3941361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6551601-abd8-4162-8ebc-fc54f8695829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637b1424-36c9-485f-b9bb-d26363284f24",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985ae9a9-d561-4356-905c-ffb7e7a5b08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a05b3e-c8cd-41d0-8249-f0a444b4c174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74246eb-0b9c-4a35-9600-f1738f3856ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35c15d7b-e25e-4b52-8028-cd6fb9f646d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03b5c6b-3954-46e2-9347-628b64eccca5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb42d1cf-2e89-42f6-9c42-b73a0abb2ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa78fe2e-ba3e-4952-bf39-66b08f183760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca9d461-bbd4-45c2-bb74-3bfb8e9f226b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a523c5-2304-4454-971d-720af28b07ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0faefc6f-4259-463d-8cbe-1425847e9611",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c20f710-bbe4-4f92-ab64-9787a2e7cb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af0578f-496e-4f98-9e2b-55afdc6f5981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4751b41-03f9-4900-85c4-644871ba0426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8452d11-7a9f-4862-b066-c79cef29958d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad30fca-bc5a-4d28-973d-681e74fef859",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3a1734-144a-4807-aa42-96ed5e12b809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a7038d-465b-47e1-86eb-efbff061c417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca289f81-b793-4d53-88b7-57ca8fd4f78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f764f804-4791-4c5b-a893-15b6eee63239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fb1026-c3c4-43fa-ba23-12e355cc095c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6e38a6-ba04-44f0-9170-b38e908e49a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9e10bb-8339-4d53-967f-6d15d1ee632c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba050f23-4937-4e99-822f-f4d4aef40525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "216258de-dc8a-4349-bc47-83bfc73f391f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e005e815-c2c9-4ff8-95f1-aa7fe2892d98",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f79d21-622e-4fd2-b5e3-3ab4dd1fafc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca4befb-b5d9-4dad-acbb-40e3144d1167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8059115-b849-4b3a-86bd-7990bd077fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3639d34c-c76d-425a-961d-f290914dd84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9737014f-65b1-47ae-8426-e96107a96ae8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ba2fb1-9913-4c5b-ad24-9c5cd6dfe0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272d939c-1b09-4044-8365-5080a4ea3b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d253e88f-2ece-4188-853c-2725018007c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df59154d-39c4-401c-acf1-99133badd8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1356cc9-4fab-45cd-84a7-27477f390adc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99e335a-af2a-406c-8aac-ebd9c8ddabe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cda9cb7-957a-48bc-b888-bcb2bdc60aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d0ef5a-699d-4931-a864-9761afc8cf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7d858f4e-87e0-4377-9657-6410fb963d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85da0d84-3328-48cd-93de-0311e2e8fbfd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d110d523-d0e5-439f-9541-517f355293a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c68ba43d-96ad-4df7-b65f-bf5dbce46e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c19d8d3-aa92-49a1-9007-e8fc677bffae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af078e33-e130-4628-9864-dd65d7a5bd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de1646e-b42c-40c6-a327-2ef31cd0a92c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65d58c4-6176-4534-acec-ac2cd89acefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad615346-3770-4ecd-ad0f-d5342e211632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9573614-5af9-40dc-98ef-30f6ff43c5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97d4312f-1981-420b-b891-2d46ec3ff2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02202b3-d610-4841-bc00-3069d27272a4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d3a4fa-e3f6-48c9-97e4-e8f9611c7fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fc77fb-60c2-473f-871d-f8ed4ce985fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79262d1-1745-4240-84e6-af31330cb7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "067d3450-f810-4dc2-b416-8d6b647c8ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a45918-94ac-4a22-b0e2-72a6ca87e1f2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7403dda-2d9d-4ec2-8193-b92ebb227f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d02403-e7f4-40a4-829c-2fb30207efba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990c165b-ab27-4cd3-9115-a285b38f9c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ecc9803-9a0f-4060-a832-e2ced7c52aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7715d299-a5fa-44d4-b112-7aadebb92baa",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbd8c19-078d-4ac5-9b1e-8aafc5cb68aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e73b6e-1a48-4ab1-aa6a-5961a3079c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b232ad-21c9-499e-9def-8dc0fcba8cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e17fab-2173-4883-bf3d-135d00a892ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575d1d1f-fcb9-4b9a-9128-34008602b2c6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe13de6-4958-435a-9ed4-44ee3b44136d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c828d5-d69d-4d88-ba21-ce6434853e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871aaaf9-ee30-4e34-a390-abaa49292665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8febd64-45fa-4f4b-8529-abcf280e47bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2d29e3-a8b1-439c-afa8-91a7b147413d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f86418-0531-47e6-93de-ca73d82dbac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8aff38-9871-4504-8479-a1ecfea2d615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f603c8-71a1-4ba4-bb4c-224d90236a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2525f5b8-b3c9-49e8-9b90-e2fbe8b489ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51476e04-f276-4dc6-bb3a-9ad3286876b8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfeec13b-9cfd-4209-bfe9-56d3fef5df35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2652ae9-9ba5-4b13-a93d-1daf1382d13f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ad5eb0-7af5-4b14-88bc-8ad1b2324690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd97101-849e-44f5-9c35-b2c88d160f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1b0a21-3637-456f-94b8-e8ab3381f29d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019604a6-44f7-41fa-804c-aa519925720e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3bd890-2f93-4fb9-b1a5-b9918c757606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40610673-d782-4706-ada0-acc2fc3c9511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb03079-07f1-47e7-8055-9e52af9e4240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0b93a4-03d3-43b8-8cf0-de129a89b25c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d0dd44-b4e8-428f-8a5b-e507da63bf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc89e150-b621-4a63-abc4-028098df10b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da632abd-ca0d-424e-8301-d8a5d1711a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "670a0fbf-ca36-4df6-8107-b721631fdabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c1d1d1-9c3a-4914-a8b3-77c8d7ee19cb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a873840-ab40-4876-aee9-d93b773bdd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cb4831-64f7-4027-84de-2faa8b53584c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28ae293-4456-430c-a5d0-a73516c5ac2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44107d4b-0a05-4483-8832-7b0dd580224b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046cf556-948c-498e-a2c0-24c6c10e4cc3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7835aa51-317c-4878-b28e-aec7dd39ac8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281d1945-e2a5-4543-b713-b182804adf79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd5c238-c271-41b3-a002-a16a4e8868fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d202c038-e82a-4058-aee2-28d5b6a09df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8aecca3-dd37-4829-8e49-77db74706468",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637abf73-1160-4e72-9fbc-80d849d8ef07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8aeb5d-87ba-48b0-af44-cb63d7df7ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7471d3-9a2f-4821-9296-737355d5a85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ab7817b-f3f2-4d3a-a873-4ffbab3c0d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174d5619-dcf4-401f-b5be-bdfa05b2f227",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eabd609-fc49-4192-b4fe-f0a1ffd36565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ed1544-4678-41c4-8bb3-72b036c17bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15008c57-80f3-415d-b0ad-8047a3897e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df949566-0280-418a-bf64-03c39b0813f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61ffd4b-937d-478e-b466-fb0974b962ae",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f46a862-fe37-4804-8f2c-3580a1ba73ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4967dfd5-6ee3-4b9e-ab84-83f5631efa05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca35f7bc-1e9a-4517-9cda-68ead2aaf8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a20d5ee9-e5d1-4959-b8dd-1de91c529ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9554b5-b0f4-4857-9232-9f9b87856b87",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac0c2ac-18ed-4ca8-9f37-638b08836b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7086e959-9102-4971-ad8c-58590606c9d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2dd870-802f-4bfc-9d21-e5930e873b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f11f59-61eb-4745-b9ed-946fab6ff46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69216b3b-1dac-44e1-bdf3-90d5e7f071c9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3369ada-94b8-4231-ae8d-c10c65a3216f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d516a9dd-3920-436a-8bfa-1ba8cdffeb20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5733a3d9-e724-423c-94fc-3b2f32b14b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac07d83-82fb-435c-9a21-955f1b5f506d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416f97b3-e81d-42b6-bf14-f98e91cfa026",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf3b390-62eb-47a0-a54c-4061fb35f258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1904fa99-a782-4664-a89b-bafe128eab08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba35253b-f3dd-4acf-8830-cd236cc42192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30638397-f4cc-4e2b-b9d1-68e02eb7b372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d65176d-6c50-420a-9985-db4af1a8d0d8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051e83d2-5ebb-419e-a6f3-a43544a69a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11ec051-67d5-47f8-a2ac-94223cc4fff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e056b6e7-f08c-4f8e-8efb-a1210665b143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19610978-e894-449c-86bd-ee5b74734b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a1e945-8cce-4c58-93cf-e65e549b4637",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c685a939-b634-4d7c-afad-943ba92db14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc685993-ae13-48a4-ac28-8cedc9f8ba16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903def0a-8e14-416d-993a-85cbb9936e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14642f22-2575-4442-acf4-c3a90840e822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be49c121-4e31-47c8-b0a8-86a30b0bb41e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93febf81-de55-4ad6-af6d-16f5b81a3749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ec047e-121e-4ab8-88f0-a8a4b5717861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935dbce5-e015-4394-a8aa-bd353a3247a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "84fe5d97-27cf-4dc3-9ced-2eb517d5d4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74dcbe56-0825-4060-b4d5-6465b29963f1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff229e5-e5d3-4256-9f68-9540e4988ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ec084b-8ebd-4929-b1f4-7b1000c3a605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561c55f9-353d-4b74-bb26-d8bc9874410b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "06d34617-9723-4ef3-9854-8788bf2a11b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11d83fa-0ef7-437e-90e7-f886aef0a645",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52165354-2a91-496d-9bfe-851f4d8a9281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e9efb3-c88d-4ebd-937b-a0af9573fc8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a876ea-7cd5-4ae9-b80d-f7b9aaae00bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a70e773-0da8-4c69-addc-2acdb1510ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fd5c8f-18df-4a8c-bc52-eb28fdf52add",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c088c60-2d69-4d65-be27-e1788f318066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ed6b99-1e80-4fac-a101-254884c50ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b16194-f6e3-4c0e-a1dd-40e88ce1de10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "94367134-76c2-4050-83cd-779eb76f375a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b2e606-d9b5-4272-a2f9-265d6bae4cbe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ff1ddc-dfcb-4242-ac65-3f2a0c1d5980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a51b13-5f11-422b-a519-c47f60008a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42015ea3-50f7-41ea-962b-6d8e5c8ec18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "97effefa-2047-4c21-9b4d-439e33c5c71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b006cb04-8310-4123-9cdd-36f7d48bd7a0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d008e98-eb52-4521-8004-13786f7d2065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69fc1338-d509-448b-8c53-14680fc0887a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b95c28c-b207-49ea-9b9b-685b9e2230d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a95a5e5d-eff3-42b0-965b-b2a1c78c2c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086d9b44-f323-4f1f-b200-3ffd0cba94df",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a5212c-77e8-40f4-9bf0-7743fe25ed55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15ee85c-513c-4dfb-83bb-c658c61c3efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7382430-3565-481b-bcfb-0a4e78fcbcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "76389c4a-3c14-4a6e-a786-31806255e88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f7e08e-87c4-46f7-8d1e-4b0337ee0f90",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a84e1f-bd80-40ce-9a8e-86835c8f4ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b83d9c1-bf3a-4641-98f9-33ea945d4c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4450a09d-b377-438e-9432-e3e2058752b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d01b4aa-7349-41e4-9a46-9ef15ce96310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebec7c90-d94e-4351-b7a9-40ea6b63eb2d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "292a4f1f-7435-4614-bb6c-83d2874c413b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ce21d0-0bd6-4f2a-a86d-414ba39e53c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf197b46-6a07-409a-810e-c45781536de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9533bd4-9cc6-4772-a2e4-9ce64385474d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91245a58-de4d-4802-b0c6-42c953d68438",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bade84e-932b-4ad6-962a-a41412bcc724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4feba2ce-cbed-41c3-ac10-2360c852cdfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab3f42d-5acf-47b9-b182-9969e4f317ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64df9368-4e53-434f-92aa-3fbd208b9b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350613fc-8106-4695-9aa0-81d6e93d8448",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa560cd-8c0c-45a5-818e-142f2d04ab56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fdc7f9f-2978-41db-beb8-93100b43268a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980036d1-4880-4f88-9eec-3111c39801a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9142facc-c41c-41d3-8273-7b4b3cdfe1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741f3592-412c-4b5d-b87a-326cbeb8188a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85f37a1-a2bc-4571-90cd-d8315e924eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255c354e-dc72-41af-b420-b164d02c5de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a01692e-f0e2-499c-b41f-23e1445c26d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb150ae0-a798-402c-a484-097a29a7a65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041daa61-45ce-451b-b4c4-919c1188f1c4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de8dc56-e243-486f-b62d-bb8f51f148ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de6faa5-220e-4c8e-a284-e221a8c33797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8024d4a4-59ac-4deb-a552-1611a2c60623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d74cfae-8e4c-41b6-b915-c824d57163de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f505c573-fac0-4a48-b0f7-d956c43648f9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e730376a-14a7-4f7c-806f-6577c6149f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de82288-8fb6-4774-9d2b-ab5d2d7bb689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde71141-5564-493f-8f50-e8dba2e22c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdebaae5-f1d2-4217-9221-aeca914a4a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911cafb3-7cfd-43d3-b916-d4e8f9d54ea6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd0c11b-bc91-466d-911f-1be6c0f2bdaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a20b273b-868c-4aee-a5d0-82dd3f010eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7011c1a-c9d7-44ad-91a7-3c6027789e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b514b793-f4d2-4a20-9059-c38f55472aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8044bf-1223-483f-8bf9-7ebb7762c4e3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5625b3e-611d-4d8e-a27f-07f93793b351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e769f39-43c7-4085-8c53-5c0d5b45bb51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548505f2-e651-4a98-9817-140b2c0a9251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f06664e5-e1b7-4c9f-937f-1b944b963efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dae67d6-2cfd-4203-a044-9e989fd9a5f3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae6befe-4162-4764-928b-838d5a6663b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52cca8d-2e27-47e1-b3f5-44f57ddb5569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a091bb-1cb9-4089-af47-a2ea6ecb95be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2180d9d-6582-470a-a5c1-3a09faf237b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05bed2a-013f-414a-b31b-11397a4921c5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb994c7-51b1-4598-b4b3-0e5bc7d6e326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4892dd6-6c53-48f9-9210-188e740d3f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79663a35-b746-46e6-92ca-0769ce36743e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c389fc05-4639-4913-8168-44b26294a1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c00790c-6d3c-428b-97aa-047a4c82180f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f53008-67eb-4a34-8454-941cbf5cd25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9335481d-736c-4bbf-8d49-ebbb23510ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c7dd1b-d141-413b-b3e0-3e2b6009d501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50458bbc-e652-47c0-9176-23a20e2e70f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5008ecc1-6674-4fe5-866e-647c3c30810e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32bf835-e2c0-4503-9ea5-acecadbcfc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61dc6814-ce9b-413b-8ae5-a806e662e7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02873cca-b178-40ed-81bc-10c6ffda8378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3544b0-9fe2-4329-bcc4-70b3573bd725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf19503b-5ede-4700-9fbd-df53bb44f10c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3723c1-7217-4725-a915-5a84cce5e4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "842b44f2-e6cd-4407-aa3b-87230136dda3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da0cbc7-8db3-4048-bb97-37b71ce913a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c54eec7-c747-47c2-b860-9a0221c6877c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73717b1-2047-47f6-8d81-5fa6df2662f0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2cf65c-bf1d-43d3-bcc0-0f2fae3033ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9dc90bd-51dc-4a0b-bb00-d7dd0e902fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94daeadc-7e19-496e-84f3-87bb538b719e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df4584c0-d1be-40bf-86a6-3af887f9553b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33856eaa-9021-4717-9504-cd034451813e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd5d90e-dad6-4bae-89cf-9682fd3d7db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dddb5da6-0807-413d-83c6-3fca11053ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa851f7-2371-4a39-8bb9-9645f81aed58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "405a66b2-c635-4b81-88df-5c8b358a0942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f296758-7c08-4a9a-b72b-df51dca04592",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a181c0-8c91-4055-a729-b27a6056fd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b43a2e8-1622-4c98-bbb4-5eaddafcc635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd0db87-bc18-40e2-a178-2774c6e89684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b61f29ea-a6ed-424e-abd2-7d1105638324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2187ec5a-75c0-4bec-9b39-31f76d59ba04",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5609e693-2a8d-478e-9ba9-7d454319944f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200ff76d-7824-494d-820f-20941c39c071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3c6866-3667-4e07-be23-d7b130c16224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64da7853-82ce-4b3a-8928-ca31ff7519aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc64690-00e2-4cee-a798-67b0bb71fd72",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3742395f-ffea-4218-9edc-5fe9457ee455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead13c3f-eac2-4559-ac35-56ec42db5505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206736c3-c884-44c8-b493-6e510e2148da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb31acb-37ff-434d-a32f-26b6dc565bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9c358a-0265-436c-949c-a8a6b790679a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b172cde-b21a-472a-aba3-b803bb258907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f09d524-344c-4839-aab4-479385380df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d92c7e-50a5-4d42-a4a1-8eac229115ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a713fbd5-f51c-40fe-ad2a-d2fa8e0f2889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ba1566-dc59-4332-a744-9e27ab76342a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b5195a-e04f-4470-99e0-741d0fec819e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88abd7f-d1f8-4158-acb9-df90f725be60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37066e7d-901a-422a-92f7-c4b72285fc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2379ea-e90b-48ff-88a0-c6ab38cf8f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86730e7e-d8c0-447d-8e75-9a419c934853",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4383c21-9851-41e9-b297-d8ef16f26227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30776ca-5c46-4e34-a24d-2ec280d05e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f781a65e-d099-4c4e-90c2-460b03c36de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24693820-039c-46d9-a825-def9d6e7df59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fdbf12-06f1-453b-b516-b3a9ce4ab4d2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33db2b9-9a5a-4520-a26d-4800368a3797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1296baa4-3c02-41e1-9c71-1d539cf3a026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f201a49e-690c-4716-a3da-0ae1888aae9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8528078-3eb1-45ad-897e-9d98f0d429c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf32598-83c5-4fcd-a1f1-ca6530d53976",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c13aa1c-03a4-46fc-81c1-3278609a64c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d1d50d-c131-494b-80f9-0c47d4938b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7053b039-20c3-4bcb-8a16-3bdeb7f28901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca8abe1-2a4f-4f30-89e1-8f44c52036a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ffdb04-d884-45c5-9d08-24d57bd3b4fd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970c2374-5ca2-4861-b754-cdcad97ae6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8014a741-f019-4362-99e1-d5cd2f6fe4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ac09e4-1df4-48e4-b346-338c1cc7e6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef7b87d0-379e-4f21-ab71-62b73f73069e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eac8071-0a07-42a4-9478-3a437a172031",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd469656-3797-46f9-9250-86e55863e217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc5a980-0ac4-46bb-99fa-fac7e6567ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9c3beb-fc0f-4c01-866f-6eaf50416fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1483c805-4d35-4970-9349-cf4364484916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f94778-6fd3-4b6d-bd37-5929e2e006e8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ecaa23-c4c7-4eb9-89ff-fb0a81f9ac86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddcfd1c9-30a0-4da7-ae04-5f9034f95450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fadb597-87bf-4178-90cb-6af691de4cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "203103cc-6813-4876-a128-90881787d4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36faad0-57f3-410e-a329-a3cbc2b2f157",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f52512-338a-4627-9270-253abbcc0c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ad03f5-c9a7-44d6-9287-7bf6704880b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40c36e3-f68e-4ba9-b832-0db5af8ac058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4d2939-088c-4d0c-ba97-638b2efc00d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42076746-341b-4120-b1a9-467638b32fec",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839f8f56-9f30-4318-9286-01a4b4efa973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5d0126-7750-4795-a944-dfbc6eef735a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93579c40-e9f9-4b1f-81ca-bd94ac387442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c3a572-f43f-4532-bfdf-548670878ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3869d6-4d06-4b19-916e-a6dcb06c7864",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bd1aee-25b1-4e7e-976a-b68dac670fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dac46ca5-0977-4e12-a792-f7b606cbc5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88dc2444-7399-417c-b6b9-8fc573f553b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7321f7f6-928c-44e7-97e2-c21593418f4b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "47d75be8-f4ae-4a90-be0c-930be22dba67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5efc0904-b4ce-49d2-9c62-fb6123edc8fc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6077654-d5ba-4ffb-b4aa-0959577fb112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b874234-86cd-444f-bc44-774280ad78bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb348a2-ffa4-48e0-b5be-a3cdf5a7ebc0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66ddb064-dc8d-429c-ab18-21032ecbba5a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7123d709-65ff-45eb-bd7c-18898c64616b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30854197-ad1c-4c1b-a20b-711809bd836e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d69fc34-a0c8-4f88-b9bb-b914b7c5f21e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9358fbda-d30e-4727-bbb9-7ecf77cfd2f1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e6db6add-ee04-4511-9794-092bdf52846f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d074ac28-0b0d-406e-b744-628c3abaa789"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a785a845-29fc-4b1a-88ce-b201f7f75c6d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fbd8a911-726b-422c-b5e9-ecaff53b8c09"
                }
              }
            ]
          },
          {
            "id": "c2f9bc5a-6b3a-433b-a668-7d03f16fbd01",
            "name": "Positive Testing",
            "item": [
              {
                "id": "875c6151-22d2-4bd3-af82-06ec80db50fc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cf40d63-9892-4b2f-be11-060f4e307ae5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26ff1eb8-bee4-4068-abc9-7c38ba51f0f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c59082ac-b1d9-406a-982a-9ea68cd88285",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eb7a90e1-c937-4841-883a-89976c691447"
                    }
                  }
                ]
              },
              {
                "id": "fb729ef0-ba78-4290-824c-a5e452975d78",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42929f21-1f61-4530-804b-c86a38d684d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "958b2fcd-4e49-4bcb-9475-51c7404b3a9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc834a47-9322-4ba7-8e80-b35fc683c407",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8d7ecb1d-0965-4a6e-8c0d-03a2a602bb4e"
                    }
                  }
                ]
              },
              {
                "id": "d4e669e6-7a31-4afb-a819-0e14cad1e21f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0afaac89-09c9-4d4b-8b30-16e1aaf70ee4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f27eb0e-1e17-4953-a241-8ca4be73810e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8dee4d05-7461-48ee-b92c-71387384485c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "86537788-545a-4f6f-ad9e-8807b1633a73"
                    }
                  }
                ]
              },
              {
                "id": "971406b8-1923-4bda-8c86-a6c094f8fa02",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a0e62e5-685a-46c7-b469-c2463d12f423",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "053d50a9-4714-40a3-ab5d-8aafe163fada"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c23c5da-6c73-4754-9f97-1fb15031a08b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e56193e4-134f-431e-8fcd-140de03016ea"
                    }
                  }
                ]
              },
              {
                "id": "2a586ea3-248f-4f08-b870-c77ec359d0b0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad93be7c-3fde-4e42-ac5d-b90abc343bdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26f48115-f745-4c39-b7f5-fa2f9108d0b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79801eed-432e-47c9-bba5-afb7edcc81dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e58ddacd-d337-45a7-a22b-053c4745fa75"
                    }
                  }
                ]
              },
              {
                "id": "f68cc65e-b5f4-4773-8ed0-851fa9256118",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6eb9050-bc12-44bc-be6a-924a0ae53157",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9005be9-9689-4b82-9799-4c6105416579"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa3d87a8-f193-4123-9e2b-5e14143791a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3fdcb031-24cb-4cda-b30b-7d5609fa9f01"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4eb43f1-ba3d-4667-a556-db83c5f67be8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ebb7909-60e2-4bb6-9a67-625dc48586ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8969317f-6684-463f-8c1e-6a5a3a79ab1c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9018ed11-3e9a-4228-86aa-134f6203a724"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dbac23a0-e4cf-4462-8410-f0198533a030",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "14509a84-85c5-452e-a8dc-5650eb463842"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99163838-d94e-49d8-b0a5-2ecd2eb4557f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9336d48a-14ac-4eda-8637-f6d5cb8cee21"
            }
          }
        ]
      },
      {
        "id": "c627a0ee-713e-45d7-9d65-18f23ce5401b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "53f72554-f05a-450d-9f94-763591d05e02",
            "name": "Negative Testing",
            "item": [
              {
                "id": "707b939d-f9b4-4725-9996-ad644fcf49d0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6db89766-1297-44f3-927a-e7aeaa276a7e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b00e1e-dfd5-4bdc-ac17-23c4216d27f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d74682-62c5-4a23-8b4d-81d61decfbca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4289e6d2-0afd-4c5d-ba98-752d97009445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cd24b0-8155-45b5-beea-8526ef11c438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6484c1-4a1a-4592-9701-3efa6f9af087",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561d8343-de50-4820-84fb-87ca2f5e36c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c993738-723a-49b4-b792-a93e9ce4f443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51ebf59-693d-496f-b9f7-d8f15bd0e92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5998ad1-ee35-4000-ab05-4afa7af88d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4470cba9-e432-48d7-8dc3-4815219bf9dd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbd5986-bf98-4f8f-884a-70939f504ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2d6ece-62b6-42d9-86a8-d8de9b1d288c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7de04ce-79e0-4187-af75-15bf6b9c336b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dee3367a-4be8-4be0-8c78-a163fc6461ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51645ac-a220-476e-acfd-f86465f0f55b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b8599f-81be-4aef-a316-d9a4207fbb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed413a06-bbcd-44a1-a1e4-5993b1967daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf43ec6-a9a6-47b5-a548-5a99a845e3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f39e56c5-fcac-46e4-b77b-00fb57ca49d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ece1f8f-35d9-492a-a961-b9a09abab8d0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cd6504-6ef0-40e5-8485-02c5ed65500a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcbdb20-1f0f-4ecb-b551-dcec4079939f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a60df5-0c8a-4599-8c83-991ca825c273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "174923da-d459-47ed-9c3e-fab860ff266a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ed2bbd-4e87-40de-8683-270a07ece27f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ee8832-e285-41a3-b5c4-912407b4f2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0990aaac-61e7-48f6-a43a-95274c74b6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ebcddf-9349-42c8-a422-c76bc244d97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a2b703-8450-48b3-b1a7-3e6fa74de7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7efa9f0-e773-4758-b83f-71aea9e07437",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720a7d59-a517-4828-ac33-337b39939b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee4c65f-c8f0-4d0c-98a6-13310e416f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3f629a-f10d-46e2-ba88-4eb24e84e68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "65ef8f12-3c98-427c-855a-3af31a3b1d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057801db-75f3-44db-8eac-3ac3b4eb7dac",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44b4f52-f1a3-4edf-a206-8447fbc98d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d947c1-d422-4aea-bb34-b6b407a19712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93fa29c-5eb7-4af2-a601-c4b22f1e6f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2439f2ad-7d76-494c-84db-3863bdbc8089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a827ae8-350e-4430-9d52-b087f48e058d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9095d51a-2fa3-4334-95f8-d9188bf0f466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12b5f27-3ac7-405f-b598-ac049ae02faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ded6e4b-4a80-4551-87fa-c31d1be4eaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be101041-c5eb-4587-8b21-9466603d5536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a92c1bd-3665-4a0b-b953-1d10ce8428c6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d05b16-049b-40ca-851c-a979edea646f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc02a28-2297-4388-ba90-0d2daec16cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b7ed0c-32c6-47ed-8315-2ae523f10433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "042d93db-fe3a-4b52-b7b8-1bee6ffe9c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57184ccc-e9a3-45e1-98db-dfe27b9e31af",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f9959e-0397-4132-93c4-24814368e015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066dd61c-8670-4793-8a4a-3bb38beef789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507db7eb-754f-4587-9f6d-c06d5708fa9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ba24a6-b9a6-46ce-a7dc-d2f54ece50de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2685479-88e8-4561-8a88-b2fbb7366f0f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9309d3f5-5415-4115-82c1-6506154c6f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755c7694-3281-4dd8-8dee-8a98dea6348a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46633840-3c7c-49d0-bdf9-fb015d83a43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d3a14b-956e-4408-981f-eba1407c92b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cc6edc-69a3-4495-aee9-cb6ff01876b5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6aa74d3-aa77-4227-8373-311325dac53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de851a2-52b3-4434-9634-7daa1056a51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e796a2-0808-4c41-8475-f2f9b03b6da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1cef6e-0c74-4df8-b6bf-9dab707a54e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9fbaf6-ca08-415f-a0c1-82e26742a16e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c7552c-0f06-4e37-8080-fa7ff0c942f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fad2a45-e71f-467a-aa1a-e6e7995c6d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6711a868-360b-4e8b-8b8a-ed8eee57e2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e51e9ee-7554-4570-818c-1151da83b185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699a864c-5d6c-4940-88dc-ae125faf0ff7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3341b14f-0ef5-4e49-a29a-d1567ea11a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba81fbb-ef3e-4f2e-9d3f-3b47b14c9a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d87f9c-1eed-4db3-afff-53795d847222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e328abf4-aeeb-4136-9220-8e8dec653371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8905ee1f-12f0-4b2f-bc28-edd488aa0667",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec02a48e-6a16-4af6-b1d2-da3730ba10bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbaddc06-7b9c-4fd5-a1bc-b473993ac2c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3559c4-f800-4fa3-a63d-e3f7a0c97989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8744e6f8-baf2-4d74-b43a-f4921ea04895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1d7571-722d-47cb-896f-78adf9d2f949",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ef5cad-e814-43f7-9206-ab363a16909a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e837528-8e02-4a48-b508-aedb803b145a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b85caa-cc77-49a4-8ac1-6d23746d97a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b965c4e-b792-4b58-8a79-58a8412159d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee0c65b-58b7-4d69-9452-0bf37f12cb71",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a607d0-656c-4890-8aeb-7c19fe81646d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f66fed-8df0-4c3c-ba9f-bf4d9e0ffb42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d36218-5394-40a4-993f-64217720fe41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1212a30e-700c-4558-8415-ecdcc78298ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531e7ec1-cdf9-4950-8115-3fb50d69d22a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e9d747-349a-4b09-bd26-f73c72f65675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c78cbe2b-6247-421f-87b0-cd0c4803184f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e29209-0342-490e-b6a3-a95ecbcb50aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8865978-ec56-4bda-87b3-a7619ca8a8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46328bdf-78e5-4378-80c0-89a5e6749388",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c3651f-7392-4dcd-90fd-4eaccf353c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6011d67-dfdc-4459-880b-f66f4cb5108a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e5640d-a67a-42d7-bef1-292a913b3813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7ae457-27f8-4e92-a5ae-3100fa2c8e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1d8228-1fbf-4304-aa7f-30c62b62350b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878c9dbc-e519-4938-a3f5-a4bcd9fb2136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f5d234-b2f4-4ae7-90e1-0577f3bea487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625a00f4-44d2-4f47-9a73-59a2c7e62a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "682c6a0e-0f98-4a64-8e52-1ddd6772bb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710e0f92-11a5-47ec-8a5d-d06e922e468e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be8b009-1d79-4104-a61d-7ed1b7fc22c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff719ccd-c4aa-4075-8523-5833c09ccb4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f20ff2-1682-4ea3-8bdd-556d17e584d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa4f5b1-0e23-4895-8134-e73bc8a588d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6c65cd-2f9d-4147-9e67-2078cf087463",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b7294c-24a8-4311-8df4-8a46577e3602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf952c7-4fff-4889-a230-1628f33343d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac176194-bfee-460c-8ee4-0218f3b9dc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38fac7bf-acfc-42f7-bd1f-f22141bdf908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ee3e1d-e855-4ef3-bf8e-eb8d6e6e1395",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8d4fdf-461e-4eb7-b792-571b15e31bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53288825-17e7-48c3-b421-4478361bff1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f64b76-c740-4dd6-bb58-79068adf6fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2feda742-b4c6-48c5-bd0f-999575575a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7307961-bc49-498d-a23a-ad295f4bbcdd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef74990-47e8-4a23-95b5-2c030fdd1f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82613fde-1f77-4286-b1e3-aec2875c1d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8528a6e-8771-4e85-9e6f-ca3c3ac1c65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6764885-f045-4beb-a64a-79d8674ef773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99334e16-f628-4684-aac1-b8f373000d55",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b826b14-6f4c-4da2-9ac5-c108b98d9947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508c34d2-c523-43e1-bc94-393371a5184a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c5d1eb-23df-4b6b-b134-9389d86f1fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55071f2c-6de8-4bcf-b5d5-a57d6a57c698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c21d86b-6131-4a8c-8c6e-f704a7f36a76",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692b8b57-5f93-4e0a-b433-98dcd786f3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02db9fe4-0e25-4ec8-9aad-da45a2e029c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cfa864-6a19-451e-8e58-001af0a02fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9ff37f-afdf-4ce7-918c-728a14244efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6534e58e-2dcc-4a6b-9c83-6fb35c94f892",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508428a6-ed7a-4e49-ae29-1d992ebbad66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e218a462-452d-4abd-879c-e9526e57f172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f43e9b-7465-46f6-905e-0b031e10b277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2eabf37-c987-44d0-93b3-ec14e2148eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e80a94-8e76-458a-8cd6-7fa8e45a46fb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbefb964-fbd0-4524-a3ec-ed5706e988d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22317e56-c109-4118-a7d7-c1f10d5d4c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f9af32-8a8e-40ba-a06d-c6d8450a4392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7819c44e-1706-4ecc-9934-cde363d0cdcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1709e9-04a3-4e4b-9ef2-2f5975ecc1f0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f1d305-9529-4cfe-aa0e-d8db53c6dc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2960c7-666a-4468-9e04-1ad0553a6f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a9bb12-0221-4645-adfb-d83569ed02b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39f15a0e-b929-41b0-9bf8-d1fef289f80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9892312-216d-4ff1-a073-c90ea3c2af12",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c96a13-0c0f-493d-8cde-3535314536e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e771adb7-24db-485c-9a6e-3acda4f4dde0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4c457f-a60b-4ab2-89ee-0c7115a2ccaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "761ccf6e-e7fb-49ec-87b9-760834abcf3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf4f63c-8baa-4a78-86a4-8a2d3034a956",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc3c82f-b580-4e78-9573-2bb58cf8b80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e3e3ff-f9e3-4f6e-8e0e-e392953f430d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38d696f-116e-4dbb-b261-3809da6ef809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd0a91cd-ee5e-4b4b-9683-38249915ec5c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8b06422c-cd53-4888-9e98-d042cd816ad7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "122734cc-bf7a-4e34-b0ac-7e0c1164b38a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7705a76-55d5-4cf3-859c-df657315ff52",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ac273d92-622a-45c9-b8eb-94b6030712bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a1b9c8-0b16-4d92-9f6d-cf4e12892bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4265b79d-64a3-4a25-923a-f8711ea64177"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a486b24-c579-4d54-962a-8f761202c325",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2fecb0f-6a7e-40a0-9348-230cf0201011"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51411e52-adfd-474a-a440-71c5ab29eb44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b805d5c-35f5-48fb-9c54-225b8c05315a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7864511f-ad72-4a47-8759-c42fb1c02e3f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eda3965f-877b-4ee3-a7ab-9fc14d112b88"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20822f05-96ec-4cab-b595-36d2097443a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cff334b-b314-4b72-a2da-4a2a920ceb81"
            }
          }
        ]
      },
      {
        "id": "35dfa152-be15-4633-84ab-458c794042d2",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "171369f4-88aa-40d3-b089-a4c9529ef2b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4fef5621-ddfe-422d-a65f-b67757adcec6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6d1ebf99-60a7-4a32-945e-6da6b0f18065",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88fcf78-d616-437d-86cb-a1443465cbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35094d03-3b6d-4aaa-a14c-aa4636cbc941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3ed713-8bb0-475d-8b9c-6c11794d4db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc77d4ef-1bcd-426e-88d2-194877b80050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e5edfe-844a-4981-91d7-02b6b844ea57",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb357924-b50a-4210-9b91-5540256a16ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9561f201-9c00-4f9c-805b-7093cc803f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d866b161-37f7-4298-935d-13f2cf91287c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "31263e50-0498-4a82-a178-54a4c1ad7c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e2367c-fcae-4491-8dc4-bf89df07d3c8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd44edc-3197-4f0d-a8f8-cdc267636f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65f9464-772a-4a4a-903a-b3bdc626ef6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf7182b-96f0-47ed-9125-db5ab70f3469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c69c97b2-e0f4-49ed-b64c-e5801dcd321d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4672da29-d164-4c25-93de-49abf599ac5c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f3e065-6fcd-45ec-8c81-b9a4500c8fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f00b56-21f4-43ea-a9f1-550d8849b6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff53aff8-0922-4072-8f8c-5dc24beefcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "318c87e1-3c46-42d2-9468-a5672a8a3c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105478fe-4fed-4d28-a94b-8ed60d2250d7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e82755-15f6-4228-893d-66e942dcb8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466af610-d601-464d-b535-6aa02a9327d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12534ec5-66e3-4663-baee-2807a7e26fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6581d0a3-fe8d-4c1c-bb71-e5ee3de232cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96a4139-c281-4e6e-8b70-e6ae2bbc7dbe",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030909ca-578f-4dc9-8914-51d12c1083e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2efb3d-dfdf-4278-9902-5f3d945a4e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9e1157-1161-495a-9e6d-25fdea578aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4535ee4d-9739-4a57-afac-163ac4f0a6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185c1f71-45b7-4119-9f84-f354eee12a2e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe930dec-5ce6-4ae0-8701-65ad35008378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05bc198a-4c24-4679-aeb7-aa8be585d2ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1723de22-4d2a-4ca4-a73a-d60b3998da60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a402b279-0fda-4a3a-9243-df32e04d442b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523619b8-be5e-47b1-8330-47d80178fca8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b9bd31-b256-404e-a125-b3542b092bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8365a960-fdf4-4b23-bf45-3b344b1981ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a371c398-4143-428c-9f64-06213d91a4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32f67d39-afdb-43d8-9e40-f200b871c3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59598d07-030b-4dec-ab24-365292fccf91",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029e23c8-3cc8-4a2a-bbe5-091af18da72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f0446c-9ed9-403b-a4a5-b29d4841cdc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cad2e54-0169-4d1c-b1df-aacc1a6137b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29caa68c-7147-4bad-bc40-14e6fb1013b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9179a1-8ae3-4334-9a74-7ea35d084894",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f703c53-af47-44ad-abf3-a1b42a5c8354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70a209e-a53d-41d6-9131-277d860578c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50062e75-7fa1-4add-b893-968dcd3301b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "175185c0-fe8e-4294-9c76-54a8e89b0a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad022f6-5678-444b-aa67-095d24d516b5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a56596-e11d-4c00-a7c5-b96a9eb5b695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e9c7e2b-ee86-4c1d-9d92-49e84bb9d9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e58924-54d6-43ed-acd6-57625151f0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a912e607-21f5-4616-b626-b322388755b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f24288-dd37-4d41-a023-e979784a33f7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b060d7-e1ea-41dc-a4b2-42f4f318fc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998729ef-e51b-4e83-bf57-98da3ae76983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f8ea47-3556-4e8f-b92e-3c77153850ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03527a07-1080-4d91-9d67-c130544955ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04138c34-dd5e-45ba-a243-32ff19856cea",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2f210a-2964-4b22-a644-16fb6180be9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574a0630-d29e-438d-8ced-9639a50de4cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c3fa0b-7f03-4eea-ab41-8d602c35e719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49a422ff-da8b-41f1-a727-90cbf011fa72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c08730-72b4-489d-a198-ce32fce6d5d1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb749d5-3649-4627-934a-543683270695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b18529-6026-4178-87f4-8e1b1fae7727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c07f9f5-0f99-4978-ac50-7b50575f4814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dfdc059-852c-41c4-85e8-2580e1475819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8286f9-55cf-426f-93df-81b9281956e1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91074dc-4bc8-4d0f-baa4-4ac71443eaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8087cfaa-3e47-41cc-a744-2cc55e7d3edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e55eb59-9684-40fe-b9fd-060dccdcee05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6d75b5-775c-4243-bc1e-48d80fb96866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f614880-1d34-4e45-8bd5-1f490f34afa4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95618895-e360-4f97-828c-7e0a55f85fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463ccc31-ff4d-45b0-b157-354b8fb2aabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127f8591-82f6-4fcd-bdd9-a74d3effe3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b60604ee-5d7f-475e-aea1-b3a2cdf35b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6cbdd9-4fee-4243-8134-49b24da085a9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f535f3-7e58-4478-8728-c1a4b1be252c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c812c5-4a11-4505-ae04-478249f02117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b6063f-5ac3-4c99-af79-1a1023c10cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6da4a52-c251-4e49-b62a-4115cea92f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4218cb-f045-44fb-af10-ea02ad2ea335",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b1f1b2-3b5e-4ad9-8ef4-9e03e4cfdf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c25c48-0ed4-4f56-b614-5bf3f6215883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4064f3-ac50-4784-b732-0c82469a91c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5dee71-ba31-47cf-bbb1-e3fb5daf54d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a702e950-fe62-422b-ba93-1167e71c6965",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efcdfe7-ee05-4604-8c33-8c690c20a738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4708c2-2b2b-4d02-a5af-e9575fcd05ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0803478-cf04-475b-b38e-736e60c46c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb28350b-c3d5-460e-bf18-4adb96abe54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea317a81-93e5-4d98-b059-fcb6a27386d4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b369ceca-bee0-43b5-891c-7b37944bdba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1806f607-ce22-4f8d-950a-f9a0e2ff5259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e8ed9d-6057-4787-9665-eab9efe20ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0a0a99-b7e4-406b-8f70-d47568593884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709a7550-be17-4108-9910-493078f24197",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af86d3a7-ab69-42c6-9b9e-816d64dab31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2b4bf5-35cb-458d-943a-23c51cb158a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8776fd-003c-4d75-ab83-85c9340f10ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e389e281-3423-4d2e-bd56-4cb44b4bb500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bc345f-fe43-4063-93a6-8ec5563fbe2b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef1bbd7-fc0c-41ac-9d0d-7759d37eeab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a164028-4851-4e4a-9a19-4d8558cd0388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bccab9-cd21-4e58-9778-1cfd37fdd225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e79c7fcc-df8a-41f8-808f-aa3b1ead41f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7591b6-04ea-4c5e-9fc5-0f815829bdcd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84869d37-0d1a-48b9-a477-317ebc540c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985e01c7-97dc-4d7e-a884-b314bf74d7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c96b20-1bfa-4691-9bbd-12bd64b9c9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d827f5b-6fc1-43ff-8b75-8b92db3d850e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1519b58c-9041-443b-a00c-2e968476a440",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85bfb94-bb25-41f9-8e30-893fbbfba850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16bd5aac-731c-460a-bbf8-70e0ced758ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d02b0b-0673-481d-ae9a-69f30634c1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3f9e17-a9e8-476f-bfa0-eb3def3d5f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d0d12c-46f0-47b2-9ae0-82db86bd2744",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09e2913-1c9f-48de-a1c9-79f5f2927616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a564ac11-05ab-44e6-bc3e-8ea70796a1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d0cb1f-c47a-4ac6-aeee-4a02cc31580c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ddd3e19-66e1-4076-81a9-50dacf1393e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98f72d0-aa69-43ba-a603-b71fca757eb0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685e05c9-893d-4a80-98b4-422f39f3838e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac9d883-d9a4-4b13-844b-13225d6a4d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9082f08-2b9a-451d-8508-596fd32a1ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6da9e341-edeb-4eec-8cde-1ab2227212f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cf5330-becd-47df-8e18-4047ae917a76",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5c7dc2-4b00-40bd-bc74-43b48d2a51af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26c0c6e-24ec-4350-988f-a893cdf80adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6440452b-2416-4d6c-91f9-61c1b1b3d0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1db70f2c-1681-4c06-80ed-67d8bd44b1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ee6c0c-de4d-4853-923d-7adb396decac",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82557a7d-9ca1-4f6d-9238-69b06d95321b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4f65ac-ec2a-48f0-ae68-45fea23e1613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6251630a-af82-43f5-a92b-97dd50ca2996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c86595a6-0538-4b7e-a379-3ce783298a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58013c4a-7961-45bc-b789-73837a7d6b72",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6130702-b401-4223-a4a5-895d2bb1ea2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432717dd-95b5-4960-87b2-f5923d15e7fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251fca9a-8244-456b-be10-1ff409c7d490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0c387f-2b44-4dcc-bb8a-5945038216b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d173189-156a-468f-9c17-f344af14b7fd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a816ceaf-af94-4564-97f8-ba9274489658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0f4974-d7a6-406c-ae5d-fb99298343b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a047ef-3c55-43ed-ad9b-ef3a7948acf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6f690c-3b43-4fa5-ab0a-1fec86d1730c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae89b59-8b53-4326-86f8-1f71929ad0ed",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6422b6-b03d-4faf-a8a6-3b6d2ef1c0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1868d1d-bcc1-45ee-9d54-a62921e1a5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe4b852-f6c9-48ea-a487-0667bf1d8c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee36a73-0d1b-4a4f-adf4-a94ed938d34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e736289-3952-46c3-a2d4-1fe3db635a74",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9fdea4-46a6-4598-8468-9f7af38d3a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739fcb2c-f87c-4dfa-84be-8e1eba06a19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f031c74-3e1a-4ac1-946f-ce178108f6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b589ce4d-cf0c-428d-b9c2-9411194cb2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb3e0e7-0c7d-4e68-b062-a90005739acb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fa7652-ec61-4754-a2f2-f92a948c1991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a14160-a3a5-456c-9db9-5664e6405015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e33d9c-63ad-4537-a50e-5ad12e6f2d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cc83de-e714-4d14-9385-8d43a94c818b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bdf882-5de7-44a4-9430-b5607f82575d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab35b4e-05f6-41ea-ad3e-061f38f95ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab04f832-7cf3-4bb8-ada0-5a569c4834a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf7d324-81dd-4d32-9067-062cf665d22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e01e617-b2a1-4742-bf82-5a2e19db41e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cd007b-db18-4233-8b4a-f07af4d21c2f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "919a3d6f-e28f-4e52-82bd-411bd42481a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54aaa82e-ed84-4094-9cc1-9b79beaf443e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f8e1b4-812d-4463-ac4e-0d9aa8cad8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "139eec7d-0659-48cf-bc93-366d0cc55567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2b087e-40d0-4a0d-8763-b223ad8743ea",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04324e9a-03ff-4e6d-8caf-0ab758928797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ebe9853-4db1-4c75-840e-ddac6af163c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2396595-5c02-4023-a8c8-725f87305d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee63f35f-07d5-4028-903a-34c0eba0a1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf18022-ed9c-438d-933a-f7fa7e1e1c4b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc204b8-b82f-4631-9810-cbf6d1431cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8888c5cc-84fd-460d-b289-ab8cd02c38d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c12fa8-11cb-41f5-b297-5202d6525a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daa9e2a4-e594-4145-8b03-d399185d62b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "56a09361-959c-49e2-b121-51f70946d410",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0374e355-1b66-4219-97ef-8a27729ac425",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0370b8f0-1425-41d4-8815-78983b5b43db",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "48c89955-7477-4570-9ded-7fe575652489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8ae467-a4a1-414c-9b70-d25fe9a22e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2860699-15e1-40fb-9108-91970c6f379b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f307517a-be31-4665-adfa-8c807107e191",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97676016-fcfc-4486-9b03-c885121299b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b839e624-7574-49f1-ab3d-8c7975719baa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b2190bf-bbad-44b2-b3b5-90b593f221fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "262279d2-15a4-4642-bda2-d2a70ac03e92",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b638fd6d-c907-4058-bcc3-def4346a749d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43745ea9-e444-435e-bb14-0a761122b259",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02a665c2-1534-448c-8281-e63f1b38fa9f"
            }
          }
        ]
      },
      {
        "id": "6269a22c-d212-40d8-882b-73944d1705ca",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "51e7acbb-b9ca-42ee-9604-13c9a3fb3d2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f00f1a2f-2916-4794-912f-02b72adbb503",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c64432ac-672c-4a5c-871c-59ecd89d9688",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a403ac-8829-4635-acee-b31f116291a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09831f44-619f-4fa3-a1d4-032a6e2f8091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4913f310-39d8-40e5-bec5-b0276632ec8d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e222fbc5-1089-4514-978b-02154803b215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c909c574-318d-428c-8fd2-95e3bd919f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedee7aa-cc9b-49a0-a8f6-0dcc14535913",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440491bf-f9a4-4c4f-9f11-291f6885a086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce1466c-0c6e-48a0-a9b3-06672455000d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccfcc73-345c-465c-b414-f8bd529c79b6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c8f154-47cc-4725-8916-a727f63ea10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0fa395-8568-4793-ad5c-cd51d5f208b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a380919-a039-4734-89a3-3d4082494255",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae30939-2d7c-4455-bab5-ae141f638881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42c93bd-025b-41fd-9e2a-7a2f5c07370e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1e6b2d-73e0-4bf8-966b-dc3b749d3f6d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2640c49f-483a-4f6c-95d5-b1833c464bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0118cd00-4b3a-45c2-97e1-34f3ddb9c8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07050af-428e-4761-8c2f-f625d10bd779",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70523790-8fbf-4f2c-89fb-b2ab51f13af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b525e68-08cb-4e2f-ada1-85b8b30dbba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47c6d7d-218d-47ed-92db-47c7097d2cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b30de2a-e48b-4f23-aaac-2344af5223c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2d84e7-423b-45df-842e-ce6e5ebd41ca",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f026d85b-23fa-4efa-95b6-3b9035283535",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "754b5999-2813-4712-a632-bad5e5416cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f672ba-887d-40fe-8d6e-a315912e2f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd69c0f2-c489-4897-8b46-3d334e8dcbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba9b474-22b9-4e81-9676-41aaff954dda",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5faa6ce6-4a7a-40fc-a5a2-97bf608f4f24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5de62941-2ad0-4844-9807-59ff2a501734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f451d3-6665-4a23-809a-e4abd56c017f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7229cea-7fc6-4d31-94e1-3175b0a53d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1679c892-96a3-48c0-8ca5-7a6bead62e33",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78b63c3-02d4-45cf-80cf-ed8bcef81aa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5697d6f6-2a00-448a-9aca-d3b62cfcf358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfb02f7-275f-4eb3-b8b8-9f8ce0f9311f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ba05b3-3605-462e-9910-b76259796024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0c4d79-094e-48ed-9487-bf1fe256dcb2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e73d8ca-2275-4bec-baaa-1eee9adf2a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45bc42a2-65a9-4221-8861-e3dc40f90217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86960e21-961f-42ec-995c-38b8c0d9174b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ecbf037-d251-495c-8986-5eb7dbf543e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321a9976-f1e5-47da-9103-17628a6ecbff",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15028041-6894-41f4-bf91-a8fddeb91dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b8eb81-bd81-4c1b-b37b-7ec69250821a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517a709f-f5a7-414c-ac93-35cb554bfabf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be083e8-1747-4d6f-bc5b-e3f770d26e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066c5e99-dfe0-4dfc-bf4a-6a0609ec2066",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b261e12-075c-4479-8bab-58b0288f403e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7453155-7867-4835-99e6-188df0a4065c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f59ebfa-4937-4d07-ad94-ed8434e6d280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289cb481-c43d-400c-95f6-57f00ef1e8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677ebde1-91ec-4ce0-8caa-f89901aba0a2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc792b53-bb60-4c03-955a-478484c1411c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a59096a8-a715-42fd-827a-bd1d3724c739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84a3318-6f8f-44a0-ae91-ec3166b48eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8527ebdd-1fef-4706-93b1-becdb7ce0f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1c73dd-ee21-4ca1-9c3d-3c2ab3242cef",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1a8793-5ff4-4348-82a8-352685e6c4de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3376b926-239c-43e1-aa44-d32d943e3b8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce4d0a3-1c43-42fa-884b-c7d888f1955a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472c42ba-9b87-4847-bc39-38979563e96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c06e994-48f1-470c-b13b-b03620414763",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f2b34f-f325-4997-8668-f60d1832cb54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa4e17aa-0e93-4c1b-b486-a6125fd82ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8d1c5f-1582-4a4f-8f19-ba9d6f492284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06901276-00dc-43d1-8f36-c0bb58dc3115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca80cd13-a57b-43db-8c31-04be57296fa8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df45823-c752-4ffa-81dd-7f0846073200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2207f569-f364-46b0-98db-0bf8d85262b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5041300-59b4-455e-90d4-cf1909aed78e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02adc3ca-f505-4382-a2ca-bd5306923878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20c9a5e-ea9a-4f92-b73b-7abb8e56fab2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc9130e-cb72-4210-b75c-d8acec15e577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1529862c-730d-4f47-b654-a30ee70386f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f978307a-66b0-4baf-b29f-e9b07214bac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0afa53-ec9c-4c5e-8637-17cfa0e0e613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb957d0-121d-4be0-8d73-421e20f27aab",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1088e5-3f3c-4d41-b979-978e27f37f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3865b5ff-87bd-4c15-929c-01ddc31759d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b18a108-9ede-4b7f-a598-7aa5c039e972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d3e8a3-a3e5-4123-ae8e-f3db2622c329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90499e2-036a-4203-b25d-9ff414e9b192",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e218bc-4dc9-4899-abc1-bab24b3c174b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b238722a-0769-4412-a760-e0d9592557e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1722006d-d4f4-455e-9445-15e9be860c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20676724-b7b6-42ff-881b-51557b5678c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b6476f-2f17-4d8f-ad22-8be117685ed8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cda095-98ee-41ba-a140-c7e8f91add5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc4f4bc-f6e7-4106-8bed-12aca7954905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fde742-ff78-4f6f-9311-7d8e5be9f3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7400a0fa-f1dc-44e2-bca2-b8847be437f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3154451d-77b5-4442-aac7-3bb265804e1a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c84266c-40be-4869-bb22-4542278e3fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a18f97-7160-4a87-80f2-728d970a84a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eefbb49-0b89-4d13-9315-b21fdd858df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c48be7-feae-4922-aa62-9261719f6d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59610a4e-fd45-4b5d-97a6-285c6d487596",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acdc5d6-2a16-4033-b47c-fb807680399f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3db8ff-005f-4886-9147-57e6dbe97372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f21b74-450c-4508-8894-ccdf3745c66e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422ac799-c338-493a-ae72-d8aa5e712872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f88c35-c509-4b70-b5c9-d6dd6197ab43",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d628c2-e5d5-4794-a572-349442cf6503",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99d3945d-29c2-48cb-99a4-aabb7ed165a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d604bc22-04a2-4331-8f6b-e1433e887d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21528896-53f8-4c43-828f-fb0659cb4a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead26817-0bad-48c3-b300-9eb90ea134c8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f610c8-bb43-40e3-a2c2-3da3cd12f06e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d6477df-b77d-48e9-bf41-0787b1e48907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c0c2f3-5772-4803-b55d-f9821730267f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec341ce4-3c70-464f-b6b6-9b072670ffca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462db2dc-47aa-4ad7-b7ba-ca3cd473a096",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6316e1-ff97-4a61-839e-1220e66ac1d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d0402e1-19c1-4194-86bf-61013f1d1bb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f605ee-66f1-44f5-8446-5c99f5c8445d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc877d8-c838-4f9e-8dd6-e580ca2e2c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef866e15-de3c-4b81-b7a5-b992b4352efc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5a361b-4888-4772-8195-14b02c44b030",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b75cd2bf-5fda-4315-ad08-6aad961d8a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "014b7e90-a29e-4718-9bd8-6eae5b07c64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad7f3cc-c069-44c3-a7f1-3fdd1ae3232c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2f8364-885c-4a57-b221-b9d42243c594",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a6c7be-f12c-4ebf-82f1-385345b4eccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a19780d-76b5-45be-a30b-c088f1f8f217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfa0eb3-f86f-4544-864a-2c062202f563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f52aef4-a23f-420e-be50-31e45c4f2fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db665de2-b72d-492a-81be-16209be2dc8e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470445e2-0385-454a-aa98-c7a007a8bbc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e359b07-3938-4f77-9c1a-00f8cc1c3bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ad2ca0-9d3b-4056-8e4f-43d07ca612c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b7be1e-6cad-41de-882a-6c46bdbd3e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bdff2a-d876-422a-87a4-aa0743f2271a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa307965-9098-4192-b94c-416d6d18232e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71a0e15d-9395-4885-b83c-f8517e1017a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a41e3ed-d93d-41f9-865a-ac2eb7866096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef2e30e-ac5a-4892-acf5-e8bc737a5b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bbf982-da7e-42f5-b757-fca11aeceb47",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b252fc-ecd0-448d-bbd3-b5c55c6cc34c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb79278a-446b-41c7-9007-36b19461298f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ffb795-db81-4511-82ef-5a6449a57655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c576dad9-63e9-4a45-bc6d-da4dc301acd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e7bc31-e2bf-438d-bcb4-62deac8be4c2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a038631e-9df6-4786-92f3-f7957969fcd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91fd738f-0785-48fc-8e1e-1af2c7ed39ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cc2d9e-3c31-4c70-a57e-4f6f4ec39b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1660e445-332c-4d02-aef9-3e33b3893f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f6859f-a95c-40dc-b606-47c37e507a13",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065d1bd2-eabd-497b-85f2-a09ef0a50090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43383fb5-5a34-401a-b673-0d8e5828de94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49cc175-1ac6-44c9-94c5-e14d6e6ae387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a5ef14-a419-44a3-a032-2723fe62ed36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2db603b-2ef9-4c7c-acd8-76353e24f2cf",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8351a258-0da4-4905-aef9-6d0c21e85ee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c6537a3-3510-49e9-935e-aecf7cc4a090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66defbe-8495-49c6-bf2f-c4f5f474788f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db74e899-a82c-469a-85de-256e5d6aa293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad54191-c4d4-406d-8d80-f101a23133b7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed73fa1-f610-472c-a76d-b102cfc1fb31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6398289a-f21c-41ec-be7d-4847cc24adc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea21c55-97e7-420b-b6c4-2b859f5c284d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e22f44-0925-49ee-96ae-cf7a07193d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51cfb5d-3583-4295-9186-f9ec5830a838",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c79e291-2a6d-48a9-bf5c-2ece8309a4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60c95d6-1ae6-4423-a02d-16ede53c31aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3603c522-d9c9-4d00-b062-de79c02ad704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7b9241-078a-4c80-b58a-1ca5b83b0a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cef8f1-960c-4d9f-a79f-07c48653ed52",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43a908e-8883-46d3-9e0d-b921ebbeabfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db873092-88e3-4ffb-a139-8b68744cb918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14dabec6-1c46-43b5-a211-d2afad825626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fafbed36-480a-4bc4-bfd5-90a06fb81ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2bc903-f667-468c-a920-7009db1c9645",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af319c4-b5ed-4373-a205-0c79a2598006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a885bfe-75e8-4019-8b33-32aea0346e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6dfba1-df94-4f6a-a2a1-4618da02c63d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee7f273-d9bd-42a6-81b8-dda01d56b31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbb036f-e538-4ffa-8c61-0f3e9c6dda24",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6e1d15-c05f-4c22-89c5-6bddf91a1003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2186a857-6f78-48dd-b4ec-197421233f20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c348da99-3c06-4614-a103-651c5e85933d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab20c4a-2108-4aaa-bd61-ef5b9d97f55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d12ee45-5d3c-4e1b-b458-11e7ad964bab",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e9cc63-6549-4efc-969b-a5a66915f1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde297cd-cd1b-44d4-b8b6-29732523b720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c61b7c8-c17f-4a6e-920e-26a2523262ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7004f5b2-de64-4744-9d8d-667dcf442919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f9728a-cb0c-4735-af85-cc3bc92fd097",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc759da0-8cda-477b-a486-f8d3b52e31b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d572900-0bb5-48de-a4f1-a023abfbcc02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbf7802-bc24-4e32-bd23-922c1b874186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f0f567-5a46-4250-a3d1-77d391c3bef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17edfa90-4fde-4bb8-a0f0-43ab0b899512",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627932b1-830b-4a7a-8f5e-9d783df5e2ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01505cb-77d6-4f9b-8a99-d292a9bf12eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b149a48-0de7-463f-ae14-cdc89b52e99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89be2450-20b3-4564-b985-4107ed70baa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718bb589-82e1-4e1e-8338-a244b8077d39",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9134ea-e7e1-4e41-9a57-09b811f26a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe7dc13-69b0-42f4-8262-43317face836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4aaf32-b366-4c10-b39a-079baf7a2209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cac2f38-1f2a-42d0-88ea-9d33284a0e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97887289-56a3-4e7e-905a-5421e40877f8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c82ef4-d249-44c6-8498-bfac84c2bc54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20ea971-4cb5-424c-bdd1-0043fe648f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe81f046-d4b8-4d0c-83cf-b3125ec5f6fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2171371-4127-4e1e-96f7-efc73b1e96a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22f75d5-e732-4930-bc89-2c7470768738",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a60020-74d4-4e33-98fc-d57962dad481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea4522b-7299-454c-9eb5-c7b92e24625e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdf00dd-90bb-442e-b136-cf1ed2cf948b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfd0904-27d5-47a3-8cb9-005c25ce0f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e28e047-3419-40e9-bc62-7728441f4b6f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de00574f-702f-48e3-b04a-194bc3868ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c89f8ba-8afe-493a-a58f-9f3fd238d475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "403b1900-68ae-4fcb-be53-400d4eb9b0c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ecc2596-8b8c-4d3b-8086-35408dfa14d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1537e010-eaa9-496f-a398-9f6f1513ebbb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da57a06c-ed38-402e-aec7-62c67a298ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14f5078-fabc-4dc9-a6d4-6259a8b420f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7250868-4b03-4964-a41f-defe66f0936a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40d3caf-2ce5-42a2-8aca-1561cffa1f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ac8535-5f64-48b6-9aea-5d216a39e1fb",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e560e2-9df8-43a5-b327-856dd8fe40a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579334ea-bc35-4e1b-a9f8-eb5744a89c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2a977e-2416-4b0e-b83c-72bcea5fd155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2bc6d98-206b-4e66-bf43-5faede9ce7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988c6981-ccf9-4cb0-95fb-57e5b68fd6c7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd32c6c-c64d-402a-b998-c48d89f6173f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2828775d-aa87-440c-8a81-b95d7bd369e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5443b8c0-c28c-4db2-ae96-feee5bbd87e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca5483a-3975-40c5-86e7-4a4a315d59fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a5b18b-215c-4bd1-9b51-b0f942784638",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33769622-1734-4cad-ad58-4a5b99af06d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040f1b8d-e33b-41e1-b748-eb40b97a5aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33e5a59-cb5a-4d22-918a-966b74a9f2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72439d4b-fa7e-41ee-bdc0-914247c5ca59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf5f060-7fe1-4c10-9388-9654016b6367",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a8b6ad-ee51-4833-bd9d-466296e6ed51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26360b6a-1b95-4fd5-8d48-fe4f305dd9a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "419d4ba7-5a0d-498a-a975-2aca0ccc234f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa692f69-ba91-4d61-89a2-24ccd2f831aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f9a1fe-4cd3-4adf-8daf-9983dac6a5f8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dcbe4a4-4833-41c8-a5ce-ae659a9fa11b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4eab7c3-6f40-4e10-bf13-f2dc0ef614a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f782558b-2a65-4e41-9ea9-0d755e34c85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6267f64-98cc-4933-9e68-32d646f92a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7184a0-4fb1-4e12-bc2d-2bea2ccc554f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7abddc-1864-444e-8d5a-d2c972c555b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d703085f-c28b-4f4e-a9a0-99e069da8660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b804973d-cd5b-4854-b5e9-a4472a42224e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd6de93-c8d4-4760-bb9d-78869a1722a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa878a7-d6c3-45ff-b285-947b878006e7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e716bfc-bafe-4224-8c85-34b18540d947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be8b005-8046-4ca5-97b3-557e9b30042c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d088cc-be5c-4348-a497-d4d9db7a7523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b390efde-ada0-4423-a8b7-8f72ed4634e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea30526e-a0f8-4d2a-be69-405dcc7966e6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c32efd-141a-40e0-bd6d-7946b4edf0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39166cd-4279-442b-95c7-297d77828175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc94de8-41be-4c3c-bf54-4ef8058617ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07612cc4-5866-4ff2-bb09-fedc136656b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9843449-7141-47ec-88a7-bd71a0108afa",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc4079b-75db-430a-96bb-0f52929fe7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153c637d-b559-4dcb-b63f-845abda73ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a322561-2b62-45c0-9adc-309eac9ebc35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053f0dec-500a-41c5-89b0-5b0c2bde2cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fbb46c-9682-4feb-b57c-489bd272c61b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8641a8-c8aa-4f55-82ba-244199502de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f04c0d1-65f3-4941-adda-079e244f2dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c295bfb8-7312-4a5b-a55d-46a7db829882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b846391-4829-477c-9253-1d5aa0f2c14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b1e1bc-01d7-4bc8-ade1-09f1d3f9788c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdc24f0-56bd-430b-b9fd-cb5c20403e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7febd310-766c-4be7-8f72-0e24674425a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c10745e-e63a-42ba-a0b5-77a1ff8e2952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b208c3-24a5-4e76-895e-89edef2f10c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de4b8c2-05e6-43b6-bb56-0964fc844b60",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a0e0a9-122c-49e9-85d5-9c14e2836f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab443be2-4ff0-4344-a3d2-6876a94f51b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36b08d9-62e6-4d0e-af95-12755e954f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e55436b-80fe-4d4e-91ac-bae9507a9e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28548224-bd3a-42e3-8796-e540998550dc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a79110-0df3-4118-901b-0cfab988b99b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a1df29-0a1b-4347-830e-c8e386609524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff022106-1bc3-43eb-bc3b-cbccdb745743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2831f157-ce68-4e1d-8923-6a81aed30602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30dd2972-1885-4fcf-800e-aa8eb6da8062",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae931b4-8ee7-4de5-91df-f55aea58004d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d46015e-e2e5-4540-9d7e-c1ffd1429fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "143a0824-7623-4af1-b1e1-0a57c062d9ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4135d774-1faa-46ed-9ce0-35bbc9adb69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5d12ad-a67d-44e8-a168-cbc46a444fee",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc04286-fee5-4680-8142-2a3b8dcd3e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006f7095-0a96-415e-a67d-873087006305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbccc45d-c5cb-4800-b33f-8bece8de082f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb9f70f-4573-4f86-b0bc-c276c6de134e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f43f5df-e81f-4294-b935-2079017044a9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8673b6ec-f28e-41ed-9bef-59b872b279b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5800fd0f-ee0d-4447-bd3f-9ab5ab718f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e148cd26-e5f5-48c3-b691-7fd829d19cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c895e49d-4831-45d7-a92f-3fd4e5087714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10095292-b42f-4c78-b810-463839de8c43",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0c871c-6f22-43fc-a2d7-bc7631132d63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c3b83d0-f1dc-44bf-b539-40b08ac97624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "406132e3-eef9-4242-8c69-625af967857a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97e4471-8fce-429b-9945-ebfe37aea674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0b0f3c-6fa4-4b3e-82b9-f576c27c6803",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4e2826-b60f-4f99-bdd3-59fda6988558",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71287c74-07c1-4da1-986d-b3acdee14692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3d2c82-f784-4cd2-b61d-484b9ed25bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d387465a-06bb-440d-aaa2-9124dd5e41ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3837b9e2-16b5-4c24-98aa-6579f25adc13",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c539a2c-4131-471d-9b05-4cbd8024699e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ad6233a-d825-459a-a69a-40a6466dfd04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96279c84-7b06-4a59-a0d4-74f5812ed5cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02f8e4e-7c10-4cba-8a2f-f493d5ba78ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4e471a-1c1c-4633-acd7-5dc4b37b1e8e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a643b19-2810-444f-860f-298e09c55ba8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e56ebc23-5452-40b1-9a3f-fb9cf72718db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a532f6c-b440-4046-a593-cf2d1157852f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84638547-9f16-4f8f-add5-869daef59004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d468e92-9be0-484b-916f-7cebd7ab22f3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdab250-2d46-424b-a420-f58ebab00eeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63afdb0b-dd44-42be-bfab-714d8df3e992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e0991b-9f55-4574-ad75-8facc22eee14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b6119c-25cc-40ad-bbb0-7532179df3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60dd69dc-c07a-435a-ae8b-7680373dba86",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de30239-843c-4465-8c44-18630315fcb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58f94447-68ee-410e-80e2-7fb0de146313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb01dcc7-5b9a-4288-b540-d3944649e746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b277c465-cf3b-4b14-be1f-41ddf63b24be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec2b7ed-cc01-4318-ab3f-5d1b722383d2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6641dfd8-dc07-4950-8b0f-9bbb81bd1e55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22f95de3-ba7f-4cd5-a547-6dad718f1282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea9459e-21b2-4c35-a3d6-76e7237cb0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e011abb-f0d9-46d3-872a-5179382ca854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a892825-44dd-4235-bdfe-cf896f99dfd7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bdc495-0f3e-4fc4-aa8c-d3ba929dd83b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6133018a-cb8e-46b8-aa01-b6858b8acb55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbff24e5-db65-4e2b-9734-00d038b2465c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbbbd89-fa13-4adf-b8c7-18ef8af7f80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2a426a-f68d-4964-a27b-8b2439945aea",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64623df-24f7-4de0-8248-626108d1db18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee1902d9-b23e-47c1-92c4-2834edd2de08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0be366-964b-4148-b45c-84f0112d682c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17a9c76-a8ed-4f6a-9a46-96a00ab31985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79d0373-018e-4b6c-8c0c-2d449d795ced",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558c4198-1da7-49f0-9de2-cdb9096622eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "466afc64-a13d-499e-96d1-071aafba35ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd12722-f9fb-471e-98a3-73c73a878e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822fe71e-bd2f-403b-996c-4499d769c799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057b3e51-8eb4-4666-89be-8f5d407b04d6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef17f4c4-6aca-4fc0-adde-a12ee393e77e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7de68cde-ec76-4eda-9b07-5b0185bd552d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430d7c2b-3946-49aa-b1db-f68fcdc60c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fbb6c3a-2ea1-44af-ab44-5462d21325f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94433590-72df-4522-9e3c-9194468aa44f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c1f4fd-0fc1-4970-a66f-a989c74e4270",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2ed3304-360b-42e9-9cd9-cedcece955c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c957abfe-0bdb-4fb6-9b52-21872c32cd62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09cc4c33-f30a-423d-9aaa-915765704c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa2b754-5b8d-4093-8e6a-3b00a5494e41",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905d5360-72ee-4f3d-a32e-f553da19b3f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa0d77a5-201a-4f70-a16e-cb8fbed99fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756bcf1f-7b2f-4b5d-b6d8-2fd604da7e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c447f88d-a201-46bb-8bf8-c3f2d8813aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be34920d-e546-4468-bdce-66d9fe6b47ba",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5406f9da-55e6-413a-a1bf-62064dd9ab6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "845513b0-b8dd-4852-9817-24a831baab5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88caa016-110c-4dbd-bf46-2f3ab974a2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71693a2d-3c9d-4486-b9b4-971c635ea5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df05e85b-1abd-42bb-82fe-b35750de924f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33125ea7-e32c-4270-8ee5-7f3a4245a7db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "118724bd-9f42-4155-8573-3f7322fc7563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b6a396-2bf3-48f7-a7bc-46cd831fe112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562b50bd-f03d-4e65-9441-38f0e301ed11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e27729-ee4e-4bc7-98b9-9d09fbe7e86f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d97e542-ca7a-4035-aa85-4e7ba7e433ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faddfd27-a554-49f1-a9ea-473313e61760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9377f6ce-c028-46ec-9fd6-20d1f62cfe76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29af8bd-ed5c-4c4d-9bad-13c37ad539e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57d7a5b-5472-4511-9718-b0d5f052d4a1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffde5924-19de-4364-8985-2e44cede9b6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "644a5c68-fd01-4567-9bdc-002eaa657910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57380692-6de4-4a86-b40f-bccf11d9fb01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0145573-610c-4167-9754-8e3324201267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ed1626-02b9-489c-b446-67da036619a1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899d6450-047a-4bd0-9acc-6a4d8b25ba68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8184f0d9-91ef-4bc2-90d5-40ea5d5d21ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b48fb2-c9c7-4ecd-8f52-9213dd5107e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67b9f40-1407-411b-90f2-11502720c8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72098f62-e1b4-4af8-8bfc-71e012684b78",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf05df8-0a56-4efc-8206-8900bc3fbcf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f17fb2d-24ad-4bfa-b95f-07f674417b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7b5161-7ae2-44bb-9d82-ab126ac4243a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2409eb8-438a-4265-a839-90d1fca2e2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0683a78-ae38-4f13-a570-0e642110c586",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861c66ab-6d2d-4b17-9031-ebd7cc2fced3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c11918a-be1d-4fa3-b404-5526299c7810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ec5e12-4499-4640-8c5a-5baf11520c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c4fe69-6438-41cd-981a-a407b0c2965f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89e8e08-a063-4719-8bd8-89ff3d14e662",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff85636-81af-467a-b622-98827c985230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc66d47d-ee57-4719-b508-9b403eebc05e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54bca2d-eadd-4c74-b899-426e3874aea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c44ba2-068a-4670-947e-2735a53ea1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281ac2ad-1a7b-4cfd-9a69-e0f2ab486f05",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e47b09b-3851-4be2-b00e-bcfcf3baedac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "817607fc-cf0c-406b-8e7c-7859033dff82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce38ca1-4080-416e-abc5-43367ec9611e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391691a7-2a1c-45f8-8253-d14a6bdb6503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde403af-61e4-4099-8a01-43d69f2bbe6f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea28ee12-cd68-4591-bc6f-b4be7c7bbdd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88a50b22-7b74-473f-bce5-48b5005d0702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f9841a-f77e-4684-87db-839aafdb0239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9a552f-a306-454f-a793-45a9db68df3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0336c829-7d17-409a-9efd-d8dbd02e2232",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932c457f-523a-43ba-88d7-fbfde00e625b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76e0fd41-6368-4d82-b460-00c47696f7f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f986b9d-b23b-4b08-98da-f143cfe89634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d006c2e-aa5d-49b0-9438-244e3478c2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c5e726-5eb0-4b93-aa38-1274a519a89b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f62994e-de37-4b21-a77a-692b07dd1842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d582e27f-a593-4007-b13f-84ff5497bc3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5957a6ef-6aa2-45df-a39b-2cfd4d777257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba9b6f9-f139-46d0-ab86-2afd6129731d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812dadcb-79b5-4512-a511-4a62bd02add4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c52052e-c96e-4b67-9712-1805e796fa3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1d91190-8e4b-4ce7-a8d8-65ac88c4fa07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e122fe91-cc60-48bb-84a6-bde456868d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d321b07-b2e0-457e-b638-243ad8d149f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce43b73a-3f95-4cbe-b70d-26e4c139763a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0820e8e6-8844-4dc3-9a39-e863248314c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94f2a2c0-fcd5-46fd-be84-62c1ce79c0ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44abbbec-17dd-433d-a91e-74c14376c3ee",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86ae9b6-9658-4a70-9405-e4d03e1c8a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b262a1-a058-4d38-9138-be5a05335e8b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42dd4538-413e-499c-a577-b10ded9eb0df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea1e5fbd-000e-4100-82b5-af467b0a8564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9616aa-bfac-4a34-b012-5f5befd8bae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22931ec4-0fde-4680-a640-4dd1f99a8673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6940266e-9df1-4a97-a322-e9e960103360",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23bd9a64-bddf-4516-b689-234c0c109fae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "274019ef-7ee1-45cc-be9c-19899e7cc8f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49db2d7f-53f5-41c0-8895-7ef0047ca62f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68313f94-27e8-4f7c-a8e3-8b93d74ea225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad5cd52-4934-4300-8c20-92e27fb0dec0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ebcae6-d091-4b5c-bff2-8b9283d6c735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "872f0f82-a8db-4429-90b4-395c91268b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "313c1588-8160-4a7b-9eda-3b0b1744aa77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55056a2-19c7-4563-86d9-324644a1759c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd105a6-c2f8-44ea-b80e-54fb2da56ced",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2849571-3d38-4282-aff8-3488a45dc5b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b36e792-25da-434f-ace3-ecfe91f02090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e7d9bf-c40a-4698-849b-5ce2578442f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd11138-f7ba-4856-82b6-38b865c68c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa16f45-2d29-4e8c-bea5-deb29849864b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d70de2c-feca-40a6-a13c-5717c7ca1f4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91d80b80-3e98-4b16-8ca1-378d32d8bc88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6be78f-1f1e-438d-a4d4-a748203a9523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8195e78-ffb9-4bf6-86c2-da3c98a19b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb1a8ce-8617-4420-9f52-2d70d3e9a984",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03843054-78b3-44c4-b4d1-e0a4dd00c903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "509b6f62-230d-4c13-8710-cb41d9f7cb29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c560110e-3635-41aa-91a3-6f4772bc8b2f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69129065-9635-4c19-a99a-570f6003979b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafee751-c7c2-422b-8436-63afd8e600dc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd05667e-9d91-45a4-b2e1-2ee0b42bb14a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c2c9147-4a32-4920-bdd2-2d7327634aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f04e333-1635-4585-aff5-1ac42bc86289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3daa77d0-150d-4664-ba4f-f3c66bc07fa6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ae62fba-3b33-4b90-9dfe-56ac797681e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72a51955-b3b3-4d0f-a394-653c648a1749"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdd2d758-e154-4364-aee7-5862a878643a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "363d7c19-486a-4e3a-88ff-0a99d19e860d"
                    }
                  }
                ]
              },
              {
                "id": "f72f4c97-bb2e-4b85-964b-4a1822f15eb2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "984b11d5-7b14-445c-8398-19489ff732fa",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716eac9b-291c-4a28-92de-9e6c797e37a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c573f5f4-b376-4ea1-9ba9-ddf25a0a75c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad2d04e-2bf9-4e50-8e90-8bdac7ecbb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cf823f5-4527-4db0-af3a-0667ac278668"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1315bbf5-ca0d-4f4e-9ecc-12c696643cfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49ccf14b-8575-4ea5-8093-172ad6386a11"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "835432f4-0f1e-499a-9901-60b22bfccc89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "000b1775-c317-4c8a-af2b-cac83ba5cc2d"
                    }
                  }
                ]
              },
              {
                "id": "a19147ea-4d3e-4d2d-b033-010f8dfcdf70",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c5d14451-39f7-44bb-b118-9be67a33770b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6831ea27-7504-4c94-bae2-0abc388ceddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "95ea4aa3-67b6-43b9-bd5b-0964b28ecb23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e185e64-1951-4b26-8411-489938d22c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559a8851-d098-4539-addf-f4e4600094b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "82a66ec1-fa44-4181-88d8-9cfe5eef5134",
            "name": "Positive Testing",
            "item": [
              {
                "id": "616c189d-16ef-4407-a9c3-d80062fa2571",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68d93f6a-8d3e-434b-8a57-69ca2acdde22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "32ce10df-c4cb-4495-8e8f-d4e988d659e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb5eb74f-2e12-4d71-9178-d28930325e99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a272aa7f-78f7-40f4-8c34-745b1f786d84"
                    }
                  }
                ]
              },
              {
                "id": "5e7f3311-d0d9-467f-8205-32a411c5c247",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96ed17fa-ac79-4dce-b507-c1d88034a852",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0f4d5730-7548-4f9e-817b-c7edf06e41f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7172371-88bf-432e-a66d-3f35a68547c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "852380ad-6e44-4a0e-84e9-23b9979dca36"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b85e2e2-4c9a-410c-9bbf-7b1d33f35477",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ca9c5ffa-88b3-4516-ba3c-514754956a1c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "024e0c3b-ef62-4a1f-b385-3e92224a9b05",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89a6f6cf-3112-4c0b-9f12-a47fc0d9166f"
            }
          }
        ]
      },
      {
        "id": "9bf39fd8-b6df-44be-8211-41d286f1ffbd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e5162e0a-4de9-4bdf-b133-e47b71897625",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b273c32-e2f9-4d16-9acf-5443d4672332",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b506bccf-03c1-4caa-85bb-23ddbe23f399",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba7ffeb-a21c-4f95-a347-d3852e04faec",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f836e186-0d32-4332-8018-d2f3d49ad86b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b474ff2c-329b-4ee7-9333-ba1a3a202955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70312b9c-846d-428c-92eb-55bd866839ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b774fda8-81b3-4beb-b706-9cb99ca555f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "831d1be4-cb7d-43f8-a3ae-ad1ed488253b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfeb305d-6e53-4ace-9369-d06baf5ec03a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c70a595a-d882-4a02-a20b-b2eab2036877"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28e98b76-c8a8-4606-a397-eaa97286153d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b9077452-d8cc-4564-81c1-71666927a670"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6dd64a53-cb3e-4487-894a-42a50eb45116",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f7aa54a-157a-429d-aa46-7b5ddd97fcee"
            }
          }
        ]
      },
      {
        "id": "dbe2a5d1-2cc7-44f4-bb18-a875983120ee",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0428c89a-d78f-48ff-9763-1ef44055b64d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d9a3f982-562b-4be8-ac13-db07a710691b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8edcae6-cb61-41b1-a9a6-868481b3a8fd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48caad7f-d16b-4df0-b2c4-9713b22755c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "732a38ad-27b5-4242-837d-737259fd593b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9f038a-120a-49b0-8e18-5a2168bc39f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d396e1be-93f6-4228-bcec-0a3b1153030f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37b5d6a9-d6cc-4d8e-9b1a-c5c98a732716",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f4c3164-8852-4e26-a808-12e1983521b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2251395d-c97e-4be3-8a48-410ef670695c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab5e6c23-0ca8-477d-af40-b847d0366bd5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52ce5492-1b76-4435-887e-daecfedaed96",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cf9b7959-d192-408a-bf18-94059d1061cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0491511-fb45-45f3-8bc1-d8ae9aa42d1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2201c885-ea28-4380-882a-3229acb07afb"
            }
          }
        ]
      },
      {
        "id": "61474f2c-f883-42cd-97a7-474e97d4918c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c94a8d83-885d-44e5-8adf-9d7a9f1cdc3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e9b53f0-3492-4cbf-9fe0-76b4bc673261",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7121d8f9-1e78-4796-94b2-1762c98ed0df",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a5b784-14b9-4647-9f65-da5e632a12c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de429f7a-b52f-44a7-a584-9767eb3a0c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9f2dcf-42da-43e2-8ec0-0487301a6782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9477a279-baf0-4ad1-a003-45e3832c098e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff114e41-b941-49f6-9025-0bf723efb2d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9760659-fcc7-4d78-984b-d04f0ecdb4d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f8df2c9-207a-4528-b918-beb5cc8c7f85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7853451a-f935-479b-ba9f-16c6b120113e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dab2d31d-e068-4cf8-ace6-291a55e9fa2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "61bc1c39-ea90-45f3-a70f-27e235a7847d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "061caaf3-e8c6-418e-ad7c-85b8292f477f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d8a5c41-49d4-4861-8a59-12d50b5848fa"
            }
          }
        ]
      },
      {
        "id": "2b363c5f-b1a2-482f-bb58-b9354de4cd76",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d92e0d1f-f6f8-4bc9-8249-dbf9ff89ce65",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99c0b100-ef8b-4532-b964-b7acc5f0a40f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9e818a76-7007-45f4-9863-e0f624e376d1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ea5332e-ca7d-45c1-a7c8-27dcb0d3f87d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b55b5ca-de50-49d5-a738-38ec1b9d73a6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 220.19014084507052,
      "responseMin": 14,
      "responseMax": 6472,
      "responseSd": 413.71695320301507,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689729180314,
      "completed": 1689729254774
    },
    "executions": [
      {
        "id": "2b51572d-9690-4193-88ad-3939b58e7f74",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3d1bd426-d33e-4aba-80b3-4d24880ffdbe",
          "httpRequestId": "c331c66c-ccb5-41c7-854f-abf1f9813623"
        },
        "item": {
          "id": "2b51572d-9690-4193-88ad-3939b58e7f74",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "844806e1-c5ec-4f24-ad4f-52eb57f25d15",
          "status": "OK",
          "code": 200,
          "responseTime": 105,
          "responseSize": 0
        }
      },
      {
        "id": "8896e688-f3c3-4ce2-a59f-b6dc4b30c1db",
        "cursor": {
          "ref": "8ce06de3-2324-4890-94d9-b081cb89c867",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "22d00023-931e-4cc6-a3eb-88d403f0a06f"
        },
        "item": {
          "id": "8896e688-f3c3-4ce2-a59f-b6dc4b30c1db",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0bea9dbc-d1d4-44c3-b579-8487ed22286b",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "2ba94a6d-7b7c-4df0-9473-16204a740a8a",
        "cursor": {
          "ref": "74bed863-bfe0-4395-b32c-21355bda8af5",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "433643d1-dfc2-4045-8c02-28465ef4e3d6"
        },
        "item": {
          "id": "2ba94a6d-7b7c-4df0-9473-16204a740a8a",
          "name": "did_json"
        },
        "response": {
          "id": "ae9bed0e-7594-4f3b-9683-c4a2049ed0b0",
          "status": "OK",
          "code": 200,
          "responseTime": 1078,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96aa700d-68c3-411c-b969-5944c8102b43",
        "cursor": {
          "ref": "69a8d4c8-5b02-485c-8d13-183c8a0c5252",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f2c082a5-925b-4161-b3f1-dd3cac55331e"
        },
        "item": {
          "id": "96aa700d-68c3-411c-b969-5944c8102b43",
          "name": "did:invalid"
        },
        "response": {
          "id": "7ec42222-776f-4935-92ff-2ab8e6b8756e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96aa700d-68c3-411c-b969-5944c8102b43",
        "cursor": {
          "ref": "69a8d4c8-5b02-485c-8d13-183c8a0c5252",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f2c082a5-925b-4161-b3f1-dd3cac55331e"
        },
        "item": {
          "id": "96aa700d-68c3-411c-b969-5944c8102b43",
          "name": "did:invalid"
        },
        "response": {
          "id": "7ec42222-776f-4935-92ff-2ab8e6b8756e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd542460-d8a0-43ed-81b8-d5fe0b1ecc51",
        "cursor": {
          "ref": "a4fe525f-3511-4b87-8be4-086d94c43420",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6752c91d-f7c0-43f0-b8be-dac499a50750"
        },
        "item": {
          "id": "dd542460-d8a0-43ed-81b8-d5fe0b1ecc51",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1e554e6c-5b4f-4bff-80ad-ae7cfa3a191e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 394,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e290fd74-579b-44c6-bcac-3b121ba1d350",
        "cursor": {
          "ref": "8a7a092a-f410-456b-8aa7-6016a117223f",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0762787b-91e5-4319-89b5-6a6b62e2503e"
        },
        "item": {
          "id": "e290fd74-579b-44c6-bcac-3b121ba1d350",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "15c29394-ae2e-412d-b5ad-8858c95aac75",
          "status": "Not Found",
          "code": 404,
          "responseTime": 243,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c019ea0-f0a4-4c5c-8018-8a020f237bea",
        "cursor": {
          "ref": "357ede0f-dad5-430d-99ae-df2f5798acec",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ce6fc776-4387-4538-8495-99e2c1fd7f7d"
        },
        "item": {
          "id": "1c019ea0-f0a4-4c5c-8018-8a020f237bea",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9f1f6d33-e0cc-4c09-9150-8dd5923ecc86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0df62d3-c348-46a7-8291-fa7735622136",
        "cursor": {
          "ref": "7078572e-e597-436a-86ae-c370d7294e9e",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "dd39f505-622f-44a0-9b52-420c86cc72f6"
        },
        "item": {
          "id": "d0df62d3-c348-46a7-8291-fa7735622136",
          "name": "identifiers"
        },
        "response": {
          "id": "159e4117-61b7-41ee-9394-a7811f6f4ba7",
          "status": "OK",
          "code": 200,
          "responseTime": 1114,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4477cb29-1f6d-48ba-9767-ad2d0e7ad092",
        "cursor": {
          "ref": "f8df3b9c-c666-46dd-9b6a-f5ffe4fa8594",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ed5276dd-c338-4d61-bd5d-5d029c622b8d"
        },
        "item": {
          "id": "4477cb29-1f6d-48ba-9767-ad2d0e7ad092",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0dea667d-de55-442d-b293-2a7e56854420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482d638b-6a94-4054-80ac-a628afcdfbf4",
        "cursor": {
          "ref": "642fa960-9c5e-4091-aa8b-5765f784556f",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d44f9222-669d-415b-bf44-2ed56ed8bb48"
        },
        "item": {
          "id": "482d638b-6a94-4054-80ac-a628afcdfbf4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9812222b-7ba3-4ec8-85a3-0c3ec9877670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a3fa0a-1dee-4d02-a6ef-ff1ccf52af84",
        "cursor": {
          "ref": "a0cd1c93-e9ea-4da2-af87-5bf0cbdbe218",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1d5bca07-929f-4972-ac61-036a89de5dab"
        },
        "item": {
          "id": "89a3fa0a-1dee-4d02-a6ef-ff1ccf52af84",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d38f83b5-07a1-4285-8592-1bf66677d732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9698c0-3614-476f-bfb9-2d8b6ea77ae8",
        "cursor": {
          "ref": "187162a6-b541-42ea-8d32-a68b6f260d64",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d05f56cf-e861-4839-9880-2d3dd07db4d2"
        },
        "item": {
          "id": "8a9698c0-3614-476f-bfb9-2d8b6ea77ae8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "47d7397e-896d-4e60-9b03-c15bfecddfd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b595d788-11c1-4cde-855f-feff7386af06",
        "cursor": {
          "ref": "cb2e2c34-6387-4dd7-8d36-15c7241b4bec",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b9555a75-a70b-4861-bd32-a0fd75994fcc"
        },
        "item": {
          "id": "b595d788-11c1-4cde-855f-feff7386af06",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "51d06d76-285b-4d0b-afa2-ba24eba1e2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6d61e0-f272-4ebc-b781-3fc7d271604c",
        "cursor": {
          "ref": "e2727b40-ea3c-4c0e-a668-3793ebe7cf8a",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1286b361-b614-4412-914f-3af545939886"
        },
        "item": {
          "id": "1d6d61e0-f272-4ebc-b781-3fc7d271604c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "66db978c-9a89-4956-b400-46e24f0ef96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe7cc24-ccf7-4a97-b199-d5665f1d548e",
        "cursor": {
          "ref": "836647ba-c4c8-44ad-927d-5945e2430685",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7441969f-0dd9-42f3-8b16-25acb54dcf51"
        },
        "item": {
          "id": "bbe7cc24-ccf7-4a97-b199-d5665f1d548e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c06665b4-bdc1-4bf4-96c4-beedf1b88ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5bdd97-0319-4189-9380-da739dc7d680",
        "cursor": {
          "ref": "b0f9ff1e-3b8c-4559-8d8f-5fd2363bb440",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fd8ca936-9cef-47ea-9243-dec218c32fca"
        },
        "item": {
          "id": "6b5bdd97-0319-4189-9380-da739dc7d680",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ff5e014d-ce48-4edd-b7bf-51ef73658fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde4527d-df8d-45d9-8e7b-9b70b023739a",
        "cursor": {
          "ref": "33fa8730-45f9-4bc3-830b-84b64070b71c",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ba667c7b-032d-44ee-a12d-c23bae80cb17"
        },
        "item": {
          "id": "cde4527d-df8d-45d9-8e7b-9b70b023739a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9a73e98a-850c-4c0e-9340-919c538f1d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc205bf-bce2-44eb-be2b-20a9a0905b62",
        "cursor": {
          "ref": "f1c9469e-043e-4e25-bd6b-d5a0798d0f82",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "73cbde0e-d286-4c45-81b0-f37cc6d1a444"
        },
        "item": {
          "id": "7cc205bf-bce2-44eb-be2b-20a9a0905b62",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c728f467-db64-42f4-b0af-8f118d74daaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abce785-88d3-41c7-876c-bb0acb3af0c2",
        "cursor": {
          "ref": "0a3a261d-ead9-4d72-b570-1165e1bbd8a1",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b2c8e3c2-896f-49d6-9a08-efc45dacfe9b"
        },
        "item": {
          "id": "7abce785-88d3-41c7-876c-bb0acb3af0c2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "472a22fa-b13a-40b3-be3c-b4fe98817ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d9b29e-128e-4205-8b7e-e6107d1d7bb2",
        "cursor": {
          "ref": "15e4e2ca-77e4-4cb9-8a61-954173ab80e3",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "be6ba435-06fa-4abc-9c34-a52ef8f86d02"
        },
        "item": {
          "id": "b0d9b29e-128e-4205-8b7e-e6107d1d7bb2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7461cd71-0dad-4340-ac76-76c06dee26b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2776f3a7-616f-4839-8fa3-73f0e4ba6a7a",
        "cursor": {
          "ref": "aa16be2e-425a-49e5-867f-b9d7b1cfc141",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4cfcc4ee-37c9-479e-be5b-c7477b5402fa"
        },
        "item": {
          "id": "2776f3a7-616f-4839-8fa3-73f0e4ba6a7a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "383cfd13-3172-45e8-902e-c584ae196840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246349e9-63cf-4c36-8cda-fe64f56ee220",
        "cursor": {
          "ref": "9c18296d-aa6e-4ee1-bb99-1e7589bee038",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a46c337b-00fe-4c16-ac30-6e2718675fb9"
        },
        "item": {
          "id": "246349e9-63cf-4c36-8cda-fe64f56ee220",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2d7ea09a-f28e-46f6-aaa7-995305d134d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa66027-737f-4f37-a027-5ecbdd37388c",
        "cursor": {
          "ref": "5205a24e-8af5-4a4e-820a-d94621a1b30e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f15dd658-142f-4484-83cb-cb85a6c85861"
        },
        "item": {
          "id": "8fa66027-737f-4f37-a027-5ecbdd37388c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cddd680b-63d7-48ef-8ae8-a1f7ce4662eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb3f9ad-5502-46bb-95d2-c988712befae",
        "cursor": {
          "ref": "f4bea42b-8d37-4038-b112-e502c30a596a",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "01958724-9d8f-43b4-a82d-7ddfd949180e"
        },
        "item": {
          "id": "7fb3f9ad-5502-46bb-95d2-c988712befae",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "710daa2f-28d8-4815-abdf-b4fa236899e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e231e2cf-ecf2-45c8-9ca3-481958ff8609",
        "cursor": {
          "ref": "0a202482-f840-4951-baff-7f84b3da2124",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9de61c4a-1544-46b0-924a-70b3c4dddaf6"
        },
        "item": {
          "id": "e231e2cf-ecf2-45c8-9ca3-481958ff8609",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "bf285100-563c-4999-b4ac-ef49b7a92b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac73e27-809f-47fa-904d-9298460d330f",
        "cursor": {
          "ref": "0d6a37f8-01e1-49b9-bca5-67227cf94e39",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9e816527-88ee-4a6d-a33d-564b1bb17e97"
        },
        "item": {
          "id": "1ac73e27-809f-47fa-904d-9298460d330f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "85c29652-0552-4fc0-baf7-44a402000470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ab3031-2839-4aed-8717-dfdd6c9f36d9",
        "cursor": {
          "ref": "bdc7ca72-168a-4a13-a9ae-824b72168861",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "af262e6b-0956-420a-8842-1c7c410cf2a1"
        },
        "item": {
          "id": "90ab3031-2839-4aed-8717-dfdd6c9f36d9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c4415ed9-1a40-4799-8523-dba954a13b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d041f12-319d-4aa2-bc19-b9e7337b142c",
        "cursor": {
          "ref": "6aefed5c-9c6d-4a0c-bb6c-1a66179ce63c",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "dece0403-e839-4241-95ff-cd6f0a52ccd3"
        },
        "item": {
          "id": "3d041f12-319d-4aa2-bc19-b9e7337b142c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c7111309-7baa-46fd-ba6a-99487ce387c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975d214c-af80-46af-9640-ae125f221b4f",
        "cursor": {
          "ref": "b9ef332b-9dd9-4409-bd1c-e4062579faff",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "61a6c13d-e1a2-481c-9ddf-e5fda131bc23"
        },
        "item": {
          "id": "975d214c-af80-46af-9640-ae125f221b4f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "90ce3e45-1643-4090-b0eb-ba1abf32b4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992f9749-9a72-4585-af75-439d7b4a0968",
        "cursor": {
          "ref": "a70a519f-e935-4a5e-88d9-1f345ebd000b",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7cd54e4c-7d1a-46a8-afe4-d503afb4450a"
        },
        "item": {
          "id": "992f9749-9a72-4585-af75-439d7b4a0968",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9e4a7c70-37f1-4af3-a527-1db6c42d5f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0630e150-b2ce-42b4-8d64-762ba6290217",
        "cursor": {
          "ref": "08945991-1605-4c5f-b798-774c5793f1dc",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c943ea65-8c2a-4c5f-aa20-791584e66f8d"
        },
        "item": {
          "id": "0630e150-b2ce-42b4-8d64-762ba6290217",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3e7b3afe-ad1a-4287-8699-4fd9afea83cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150b4131-209c-4b21-9148-497a3131e8d3",
        "cursor": {
          "ref": "f0285111-f6fe-4b51-ad0d-6cc3766038e5",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "75fc6c69-68ef-4391-b0fa-fbb10b8354d9"
        },
        "item": {
          "id": "150b4131-209c-4b21-9148-497a3131e8d3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "961f1c04-60e7-4fb3-8ded-810ec699fb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916afdf8-8942-482b-ab1a-54fc9f39bdbf",
        "cursor": {
          "ref": "0a4e7efa-3249-494d-851b-fd292931aa80",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2ecba68c-f497-42d0-b66f-795bba083212"
        },
        "item": {
          "id": "916afdf8-8942-482b-ab1a-54fc9f39bdbf",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3d3195d1-401e-4448-ab86-5502298503cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e453e5-2396-4c09-9c81-26c354f46668",
        "cursor": {
          "ref": "632bc48b-97ba-46b6-ae37-6fb21045ba4a",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "63ab53ae-41af-492b-9222-b412ff9fe2a5"
        },
        "item": {
          "id": "75e453e5-2396-4c09-9c81-26c354f46668",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2049a2e4-08bf-4a31-ae72-15d7e7fffe1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9107b4c-a82e-43e8-bae3-363c58e7f139",
        "cursor": {
          "ref": "d85ae7a3-d104-4b03-9d27-a94e16d58fb3",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "afd27b42-f16b-409c-a902-12edf592166e"
        },
        "item": {
          "id": "f9107b4c-a82e-43e8-bae3-363c58e7f139",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3d2f688b-4795-44d5-82b2-9857cdbdf9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637b1424-36c9-485f-b9bb-d26363284f24",
        "cursor": {
          "ref": "1fe847f5-5c37-4b2e-9165-70523db60a46",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b0414624-317a-425d-958b-626217cd2e92"
        },
        "item": {
          "id": "637b1424-36c9-485f-b9bb-d26363284f24",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cc3e09b2-ae92-4870-8852-077d9e140946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03b5c6b-3954-46e2-9347-628b64eccca5",
        "cursor": {
          "ref": "080755ba-af11-4640-b0e9-e1869e4bbb64",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "36af6bfe-c4f5-4249-a170-78e8ed5630a1"
        },
        "item": {
          "id": "c03b5c6b-3954-46e2-9347-628b64eccca5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ce084131-9ee8-4ce0-ade1-f630d22dcf15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0faefc6f-4259-463d-8cbe-1425847e9611",
        "cursor": {
          "ref": "9c18e509-1835-41c2-827a-8ac1b673e156",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "38733c66-cc90-4cf4-a6e3-ea99828d54f9"
        },
        "item": {
          "id": "0faefc6f-4259-463d-8cbe-1425847e9611",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4fdad842-af24-4ce3-9a79-a22390b14cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad30fca-bc5a-4d28-973d-681e74fef859",
        "cursor": {
          "ref": "c42af36b-d219-4bca-a718-82f14571320c",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1f1423d2-cc3c-414a-a42f-34a50e84cc5f"
        },
        "item": {
          "id": "5ad30fca-bc5a-4d28-973d-681e74fef859",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "245f142c-0745-43cc-b2dc-ec33803b52b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fb1026-c3c4-43fa-ba23-12e355cc095c",
        "cursor": {
          "ref": "863fc8da-78e2-4301-9457-022f6b5d02f0",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "19382ccb-50de-4034-a1a5-0d1c898e943d"
        },
        "item": {
          "id": "f8fb1026-c3c4-43fa-ba23-12e355cc095c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "fce7f791-f6a2-419c-83ac-1fc16d75d624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e005e815-c2c9-4ff8-95f1-aa7fe2892d98",
        "cursor": {
          "ref": "7ce988bd-f728-4048-8fb2-3a869333d0f7",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cb78f3c7-091c-45e9-9491-3a51b0bb9087"
        },
        "item": {
          "id": "e005e815-c2c9-4ff8-95f1-aa7fe2892d98",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "09328ca7-fa56-4707-9813-8179dfe079cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9737014f-65b1-47ae-8426-e96107a96ae8",
        "cursor": {
          "ref": "dddf9801-b2a4-4daa-aa3e-98c801ff0936",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cf4d1d66-d8ec-4da3-a430-5f7233345f51"
        },
        "item": {
          "id": "9737014f-65b1-47ae-8426-e96107a96ae8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0fcac44b-7440-442d-9427-a1d7fc3afb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1356cc9-4fab-45cd-84a7-27477f390adc",
        "cursor": {
          "ref": "18d26074-e109-4a69-bc5a-0fa0ace8e3a7",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9092d27f-7d31-4845-bdb3-c26d1da59bd2"
        },
        "item": {
          "id": "e1356cc9-4fab-45cd-84a7-27477f390adc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8f561365-9372-4dbb-82df-b340797e106a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85da0d84-3328-48cd-93de-0311e2e8fbfd",
        "cursor": {
          "ref": "f06591c6-3d7c-4af0-9700-938f553f7772",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d61d5240-1e3d-4119-bd6c-ae1e69eef8d6"
        },
        "item": {
          "id": "85da0d84-3328-48cd-93de-0311e2e8fbfd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6e99a842-a429-44fc-a4ba-3673c62f3ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de1646e-b42c-40c6-a327-2ef31cd0a92c",
        "cursor": {
          "ref": "e37d2b41-1ef3-4f3e-8b70-615f4b345c7c",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "33cca9a9-6c4c-4095-8ffe-7ab585a57698"
        },
        "item": {
          "id": "6de1646e-b42c-40c6-a327-2ef31cd0a92c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b00c42d2-fd42-409d-b316-718c593867d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02202b3-d610-4841-bc00-3069d27272a4",
        "cursor": {
          "ref": "8b33a9e7-3616-4175-b8e4-49a812820e51",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3ac29217-cc60-45b3-b7c2-f3699621682a"
        },
        "item": {
          "id": "f02202b3-d610-4841-bc00-3069d27272a4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7e130873-ff68-4af5-8ed9-532c8e976c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a45918-94ac-4a22-b0e2-72a6ca87e1f2",
        "cursor": {
          "ref": "85ad7a16-82db-4914-aacb-dec45b8fe9ac",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1d4ee69b-2ce7-4457-9be6-97ab09147111"
        },
        "item": {
          "id": "16a45918-94ac-4a22-b0e2-72a6ca87e1f2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "279f29a9-b915-45b5-a9c6-80ac74008cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7715d299-a5fa-44d4-b112-7aadebb92baa",
        "cursor": {
          "ref": "f217e571-e607-4c90-b927-c80081ea31ee",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b7d87a68-4e0d-40b7-8ec7-d4348e27fccc"
        },
        "item": {
          "id": "7715d299-a5fa-44d4-b112-7aadebb92baa",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d87c976f-61f7-4a58-ae47-1ffc1ef1b21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575d1d1f-fcb9-4b9a-9128-34008602b2c6",
        "cursor": {
          "ref": "649d03c6-ce4d-4052-9bc6-7a0ad81b078c",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7aa273d9-7bd6-4f48-8f42-97607af1d2a8"
        },
        "item": {
          "id": "575d1d1f-fcb9-4b9a-9128-34008602b2c6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "11a0b333-549a-4a6f-882c-0a789c2e5f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2d29e3-a8b1-439c-afa8-91a7b147413d",
        "cursor": {
          "ref": "6d5692c1-c89c-41b7-a61b-48f2c2299e34",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f4c8f69b-7c19-49e0-9154-0e141fbb0756"
        },
        "item": {
          "id": "3f2d29e3-a8b1-439c-afa8-91a7b147413d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b5f616ae-5fcc-40e5-b2d8-37a4c9e06430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51476e04-f276-4dc6-bb3a-9ad3286876b8",
        "cursor": {
          "ref": "4abb92c9-fa06-4422-9a82-5ca514f647f7",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4d176355-a313-4b84-a8db-a0a2d23768b9"
        },
        "item": {
          "id": "51476e04-f276-4dc6-bb3a-9ad3286876b8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "45d4f5f8-989c-419d-98cf-7724c1a5a24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1b0a21-3637-456f-94b8-e8ab3381f29d",
        "cursor": {
          "ref": "842d2fd9-493d-4d37-b4e1-7b7d177bf6b9",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fd92b892-d1c0-474f-8674-2cda7e4ac9ba"
        },
        "item": {
          "id": "3f1b0a21-3637-456f-94b8-e8ab3381f29d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "19bd3dd6-1fd1-4913-8146-b54a20f37183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0b93a4-03d3-43b8-8cf0-de129a89b25c",
        "cursor": {
          "ref": "0f856fee-c885-4050-8fe2-896c77153a41",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b3b71320-bb66-4a26-9120-eec54e1118d6"
        },
        "item": {
          "id": "2d0b93a4-03d3-43b8-8cf0-de129a89b25c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6c293339-726b-4bcd-97bb-48b21201cdd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c1d1d1-9c3a-4914-a8b3-77c8d7ee19cb",
        "cursor": {
          "ref": "c252b217-efd5-4816-a1b5-b1f6d218fd96",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bcddf8d1-e322-459f-87b2-07754679cdd1"
        },
        "item": {
          "id": "23c1d1d1-9c3a-4914-a8b3-77c8d7ee19cb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b04df01c-2d7b-49ad-91d8-8c341c0c3609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046cf556-948c-498e-a2c0-24c6c10e4cc3",
        "cursor": {
          "ref": "21fd2af8-30eb-4f66-a424-b84014005b0f",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3b8a7e1a-c3bf-4743-9a7b-690a5abe6387"
        },
        "item": {
          "id": "046cf556-948c-498e-a2c0-24c6c10e4cc3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "56ab0400-6582-4309-8806-1515704210aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8aecca3-dd37-4829-8e49-77db74706468",
        "cursor": {
          "ref": "67513e1d-5259-4475-a02f-e5807baa4209",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4e439ac2-74da-4200-b9a3-e4655c823f7a"
        },
        "item": {
          "id": "e8aecca3-dd37-4829-8e49-77db74706468",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a8b4daf5-3092-41ca-a210-f0a80101af29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174d5619-dcf4-401f-b5be-bdfa05b2f227",
        "cursor": {
          "ref": "3deebef5-ce7e-4b5b-9b79-fe65dbf7fef7",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "60ac1c69-6b71-4e74-b2ff-326bffcd7ff0"
        },
        "item": {
          "id": "174d5619-dcf4-401f-b5be-bdfa05b2f227",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b8705eb3-81bb-44d2-8882-bae735f2be1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61ffd4b-937d-478e-b466-fb0974b962ae",
        "cursor": {
          "ref": "23cdfd51-67f6-49ac-9939-84247704c2df",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6a54afbc-8789-436c-a834-cc5ebbb6bae1"
        },
        "item": {
          "id": "d61ffd4b-937d-478e-b466-fb0974b962ae",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d4183b0f-1539-477f-94b3-c3cc28c4f1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9554b5-b0f4-4857-9232-9f9b87856b87",
        "cursor": {
          "ref": "f7dbe743-b0ed-4770-bf65-dd8d4bb44603",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "aab444ce-d5f9-4a27-aa4b-6296616f7cd3"
        },
        "item": {
          "id": "8f9554b5-b0f4-4857-9232-9f9b87856b87",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f126463f-f874-45ff-99e4-e65a0ec110b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69216b3b-1dac-44e1-bdf3-90d5e7f071c9",
        "cursor": {
          "ref": "86034433-ee25-4206-8531-f759912f308c",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c40e0fc7-f384-4795-9534-53f7b603a149"
        },
        "item": {
          "id": "69216b3b-1dac-44e1-bdf3-90d5e7f071c9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4de2aeb8-f913-4b01-a94d-443f8cd5b0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416f97b3-e81d-42b6-bf14-f98e91cfa026",
        "cursor": {
          "ref": "0cbbb7c0-b58e-4a82-8090-737eda5afb3e",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "acc3948c-da4b-44ea-a0b3-a8819ccb5bcf"
        },
        "item": {
          "id": "416f97b3-e81d-42b6-bf14-f98e91cfa026",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c6540a07-0201-45fd-9034-f6ba3ce44dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d65176d-6c50-420a-9985-db4af1a8d0d8",
        "cursor": {
          "ref": "2b94c5b5-317b-4893-9e61-6b66aad7a09d",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "21d20194-3d2d-4438-b00c-fc5778e245b5"
        },
        "item": {
          "id": "5d65176d-6c50-420a-9985-db4af1a8d0d8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f4dfec4d-7e63-4315-bbc1-9f6f4f88d754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a1e945-8cce-4c58-93cf-e65e549b4637",
        "cursor": {
          "ref": "7c0af207-479c-40c7-b525-7a51171d587e",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b475793d-21d1-40b8-b47e-95985e43e7d3"
        },
        "item": {
          "id": "d0a1e945-8cce-4c58-93cf-e65e549b4637",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "08286ee9-2a63-4696-bbfb-13c71f13bacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be49c121-4e31-47c8-b0a8-86a30b0bb41e",
        "cursor": {
          "ref": "760fd0df-c3e1-41aa-8510-e7c4f25505ad",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "840ca5d7-0af3-4c51-8b1d-758e29235f44"
        },
        "item": {
          "id": "be49c121-4e31-47c8-b0a8-86a30b0bb41e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e96acd21-61ec-43bc-ba15-aed95d6985c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74dcbe56-0825-4060-b4d5-6465b29963f1",
        "cursor": {
          "ref": "e72fbf2e-149b-419d-bdb9-af42c677ac2d",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1eaa2f9c-6bc6-4b70-a80b-403f33827962"
        },
        "item": {
          "id": "74dcbe56-0825-4060-b4d5-6465b29963f1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2da7700b-a329-467d-a8a7-47841d144279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11d83fa-0ef7-437e-90e7-f886aef0a645",
        "cursor": {
          "ref": "348bc05b-be7f-42a1-a4d4-07eee3b6f428",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ec4a04fa-706d-4563-b11f-76422ec04ad5"
        },
        "item": {
          "id": "e11d83fa-0ef7-437e-90e7-f886aef0a645",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "74c37ff2-4250-49cf-b810-b7c2b17d228e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fd5c8f-18df-4a8c-bc52-eb28fdf52add",
        "cursor": {
          "ref": "381478ab-8941-4cb0-a12f-db2293be90e3",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "61ee40fe-29b2-4a46-ae2d-046d94c44cf5"
        },
        "item": {
          "id": "96fd5c8f-18df-4a8c-bc52-eb28fdf52add",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "166236c4-0373-44c7-a0e5-73ce5bb9e210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b2e606-d9b5-4272-a2f9-265d6bae4cbe",
        "cursor": {
          "ref": "041499a0-4930-47d5-b4ce-0481dfd2aeda",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d25839ed-ef52-4bf8-8292-2e81a4db47bd"
        },
        "item": {
          "id": "f0b2e606-d9b5-4272-a2f9-265d6bae4cbe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bf7061bc-ab78-43fe-8429-973992b7f8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b006cb04-8310-4123-9cdd-36f7d48bd7a0",
        "cursor": {
          "ref": "d2cbba8f-ace2-48a9-920a-bf60ea0d18e2",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4c981914-a014-45d7-9f45-c8146bccb20d"
        },
        "item": {
          "id": "b006cb04-8310-4123-9cdd-36f7d48bd7a0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7ba217e1-b90c-483a-a70f-904988f930b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086d9b44-f323-4f1f-b200-3ffd0cba94df",
        "cursor": {
          "ref": "b580c3f5-8c7a-4012-b4b3-6cdf700f24c4",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d9ff885e-2df8-492f-bbe1-98f0f8bcdd02"
        },
        "item": {
          "id": "086d9b44-f323-4f1f-b200-3ffd0cba94df",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f37f70f2-3f7a-4f02-8cc2-23cbddc8cfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f7e08e-87c4-46f7-8d1e-4b0337ee0f90",
        "cursor": {
          "ref": "86c1ee22-ebc5-44c7-ba53-786e23b1323e",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e5af67f9-66b7-4885-bbba-df23a3c5cedd"
        },
        "item": {
          "id": "31f7e08e-87c4-46f7-8d1e-4b0337ee0f90",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9e87548e-6727-4066-b308-51c8717cf935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebec7c90-d94e-4351-b7a9-40ea6b63eb2d",
        "cursor": {
          "ref": "3c1db689-82ae-4586-a231-1f8a0759a548",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "455cb2bf-4fff-417d-8854-e1e61162c2a6"
        },
        "item": {
          "id": "ebec7c90-d94e-4351-b7a9-40ea6b63eb2d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c70684ea-ef33-4d07-994f-88af78b5e315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91245a58-de4d-4802-b0c6-42c953d68438",
        "cursor": {
          "ref": "6aca7b22-e318-47f0-b1e2-b8ec7d2cf826",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a9549c42-acd7-41c1-a365-fc25ec88d88b"
        },
        "item": {
          "id": "91245a58-de4d-4802-b0c6-42c953d68438",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0e2c40c3-ea80-4a6f-9b81-690a9984f776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350613fc-8106-4695-9aa0-81d6e93d8448",
        "cursor": {
          "ref": "9e4215ed-56d7-4187-a929-38f8607e7bd7",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5fcf15bd-444b-4772-8a01-820410a88163"
        },
        "item": {
          "id": "350613fc-8106-4695-9aa0-81d6e93d8448",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "55904c40-b6f5-420a-9207-55d7d31ff284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741f3592-412c-4b5d-b87a-326cbeb8188a",
        "cursor": {
          "ref": "ca4416b4-58c9-4ce3-8ac4-0547f02414ed",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8fe21d4f-ec5e-4612-b5b0-174759a6e236"
        },
        "item": {
          "id": "741f3592-412c-4b5d-b87a-326cbeb8188a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f53f30ac-94d0-4c85-a63f-3cf127d70753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041daa61-45ce-451b-b4c4-919c1188f1c4",
        "cursor": {
          "ref": "59e20c2c-7d3c-4343-be07-d6cbfcf546da",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b8953128-1002-47f3-835d-cbc3be229b91"
        },
        "item": {
          "id": "041daa61-45ce-451b-b4c4-919c1188f1c4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "99ceb8b5-8e23-4cf8-a503-7335eac17ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f505c573-fac0-4a48-b0f7-d956c43648f9",
        "cursor": {
          "ref": "1e81fb35-0e8b-4843-bb78-258a754682b2",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "517641e6-084c-46dd-a815-8b01d14d7d89"
        },
        "item": {
          "id": "f505c573-fac0-4a48-b0f7-d956c43648f9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1fa1720f-f47d-4002-b03f-51c581ca6e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911cafb3-7cfd-43d3-b916-d4e8f9d54ea6",
        "cursor": {
          "ref": "c5b86f54-166d-402f-841a-14be23c12a7e",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f6c38dfb-f4ca-4133-8ea5-e719521918c7"
        },
        "item": {
          "id": "911cafb3-7cfd-43d3-b916-d4e8f9d54ea6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "255eaeac-5b60-4015-839a-ca730aaacda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8044bf-1223-483f-8bf9-7ebb7762c4e3",
        "cursor": {
          "ref": "2a45ec96-756c-49cf-99a4-757b3422eb92",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4f6457a6-3b82-4e39-b888-265dddfb5ea6"
        },
        "item": {
          "id": "6b8044bf-1223-483f-8bf9-7ebb7762c4e3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "48dd978b-dbbf-4660-950a-64a47368a446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dae67d6-2cfd-4203-a044-9e989fd9a5f3",
        "cursor": {
          "ref": "20ad2242-e260-4d18-bedb-c2a980a7ed6c",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a5d7df18-3830-446c-a207-d42968889bc1"
        },
        "item": {
          "id": "5dae67d6-2cfd-4203-a044-9e989fd9a5f3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "40e54e35-a810-490e-985b-4354e45a5a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05bed2a-013f-414a-b31b-11397a4921c5",
        "cursor": {
          "ref": "82d0259b-56e7-4623-a63b-4ebb48f2da89",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7333eee7-d40a-4bcd-8a61-3b397491afab"
        },
        "item": {
          "id": "c05bed2a-013f-414a-b31b-11397a4921c5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "135e8b3b-fe37-4b07-98ea-741fd35d28e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c00790c-6d3c-428b-97aa-047a4c82180f",
        "cursor": {
          "ref": "1434c38f-f3a4-4b74-9e4d-85dce60a647f",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e404059b-3b27-4e3f-96bf-b5b04635b224"
        },
        "item": {
          "id": "3c00790c-6d3c-428b-97aa-047a4c82180f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5911e320-7287-4fe0-8704-070c3c76708d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5008ecc1-6674-4fe5-866e-647c3c30810e",
        "cursor": {
          "ref": "61da2b7d-7e78-482d-9399-feec6915d4e9",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6a6657de-a878-41ef-849e-edff14f6191e"
        },
        "item": {
          "id": "5008ecc1-6674-4fe5-866e-647c3c30810e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6f861644-195a-471f-9585-b257dab39be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf19503b-5ede-4700-9fbd-df53bb44f10c",
        "cursor": {
          "ref": "46266a4d-c7bb-4b1e-8f84-5a9b5e0c4f43",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a4323287-3715-41e0-b3f8-c9edbafb3399"
        },
        "item": {
          "id": "cf19503b-5ede-4700-9fbd-df53bb44f10c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "751359c3-3bbe-4c2b-be52-bb223a90ffd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73717b1-2047-47f6-8d81-5fa6df2662f0",
        "cursor": {
          "ref": "1dded2f8-a332-46ec-915b-7d4fc36e23f4",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8c4005fb-06e7-4d28-874b-b5fa6374bd01"
        },
        "item": {
          "id": "a73717b1-2047-47f6-8d81-5fa6df2662f0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7bba75ec-fadf-4f71-b859-1a1a7c2d0916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33856eaa-9021-4717-9504-cd034451813e",
        "cursor": {
          "ref": "1b78622e-8399-40bd-bdca-bf18507daa50",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "96580c84-5b43-4c97-8643-52aff1b3fd9e"
        },
        "item": {
          "id": "33856eaa-9021-4717-9504-cd034451813e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4c29482e-2f1e-4ddc-9254-95147c1200fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f296758-7c08-4a9a-b72b-df51dca04592",
        "cursor": {
          "ref": "da7a9dc3-b085-4c73-b722-2c82f417112b",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "abad9629-2a08-4c05-987b-5a55041c37f7"
        },
        "item": {
          "id": "2f296758-7c08-4a9a-b72b-df51dca04592",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6a95db38-cd1a-48a1-b540-d11f646c4a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2187ec5a-75c0-4bec-9b39-31f76d59ba04",
        "cursor": {
          "ref": "e1d68e75-a5c2-46bd-91f6-2afee52dac5a",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4bd84988-bf1d-4eee-a127-93fa95926243"
        },
        "item": {
          "id": "2187ec5a-75c0-4bec-9b39-31f76d59ba04",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a5c15cbe-c19b-45f6-8d96-51701ad4d941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc64690-00e2-4cee-a798-67b0bb71fd72",
        "cursor": {
          "ref": "bf3533a0-4311-4f34-a4dc-6683095b2a44",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "321e426c-3da6-4673-bc36-dee59d502414"
        },
        "item": {
          "id": "6fc64690-00e2-4cee-a798-67b0bb71fd72",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "194b511f-e8c2-441e-98b0-14f9a1c3f9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9c358a-0265-436c-949c-a8a6b790679a",
        "cursor": {
          "ref": "0d3d6b1c-33ae-45c5-a2bd-8edf9fc0cece",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "03ac327c-2800-453a-b2f4-ee6af84c30fd"
        },
        "item": {
          "id": "1c9c358a-0265-436c-949c-a8a6b790679a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b97aaa64-0572-4238-9405-42fca563e265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ba1566-dc59-4332-a744-9e27ab76342a",
        "cursor": {
          "ref": "d59903cb-ef24-441c-9365-3b1a80344dfd",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8a7260d8-2585-42ad-8aea-608678420b86"
        },
        "item": {
          "id": "a8ba1566-dc59-4332-a744-9e27ab76342a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5363bf1e-cfb7-4adf-a38b-46592a1bdfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86730e7e-d8c0-447d-8e75-9a419c934853",
        "cursor": {
          "ref": "9f7a424b-c7eb-43c4-9367-6c1f83303989",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3b0e9c5b-58b2-4cc7-9ba1-5d92f01ab783"
        },
        "item": {
          "id": "86730e7e-d8c0-447d-8e75-9a419c934853",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b3c65f8d-4866-4602-ab37-b11383a70d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fdbf12-06f1-453b-b516-b3a9ce4ab4d2",
        "cursor": {
          "ref": "67826a23-b1a5-48da-ade5-2802671db2ec",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1f3085ae-103b-4971-86d5-8b644cc6ec1d"
        },
        "item": {
          "id": "49fdbf12-06f1-453b-b516-b3a9ce4ab4d2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f49af85b-cde0-481d-af18-67fbef96557e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf32598-83c5-4fcd-a1f1-ca6530d53976",
        "cursor": {
          "ref": "1e1bcd73-ca39-457d-8393-a4b9a0692ceb",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5e505d8b-4f75-4a14-a8ea-7cfc7da0b4b8"
        },
        "item": {
          "id": "dcf32598-83c5-4fcd-a1f1-ca6530d53976",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7f2c63be-b3e4-4caa-9ca7-7dc5f9093e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ffdb04-d884-45c5-9d08-24d57bd3b4fd",
        "cursor": {
          "ref": "69eda92a-be80-495f-8eca-ed79389dac50",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f0e05747-128e-458b-a180-f017d2128e2e"
        },
        "item": {
          "id": "b0ffdb04-d884-45c5-9d08-24d57bd3b4fd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "76caefea-6908-4217-b355-1964966a20ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eac8071-0a07-42a4-9478-3a437a172031",
        "cursor": {
          "ref": "4ce15230-c917-4f86-80b3-c6e526044ba1",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8d76bf0d-4fe5-4864-bea0-f439c3a61c28"
        },
        "item": {
          "id": "4eac8071-0a07-42a4-9478-3a437a172031",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0de2f916-b2e0-4148-b3d6-8c17ecf3b5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f94778-6fd3-4b6d-bd37-5929e2e006e8",
        "cursor": {
          "ref": "24fb2fca-3f5b-40d5-8a09-cf7d360a0a66",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f66b8eb6-c458-4951-a264-6aca26eba671"
        },
        "item": {
          "id": "84f94778-6fd3-4b6d-bd37-5929e2e006e8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5fe7f34f-ae31-41b4-a43e-41fc73659b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36faad0-57f3-410e-a329-a3cbc2b2f157",
        "cursor": {
          "ref": "806fab51-4574-4fc3-92ad-e76ac1a37e15",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a3b407ac-633f-4bd7-9024-f5849221069c"
        },
        "item": {
          "id": "f36faad0-57f3-410e-a329-a3cbc2b2f157",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "650bf7d1-be41-4017-8732-74bb31e50744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42076746-341b-4120-b1a9-467638b32fec",
        "cursor": {
          "ref": "2386602d-9ab0-4d9e-9378-7d35f7e2216e",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7c9ad7c8-cf82-4847-a674-f7774e73e2b1"
        },
        "item": {
          "id": "42076746-341b-4120-b1a9-467638b32fec",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5898cadf-4187-40d8-a5a7-e9154998ec26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3869d6-4d06-4b19-916e-a6dcb06c7864",
        "cursor": {
          "ref": "32b85b13-c97c-4bf5-b6f3-ef35070f671e",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "34e339dd-0aad-40f0-a31d-8924fc625477"
        },
        "item": {
          "id": "2e3869d6-4d06-4b19-916e-a6dcb06c7864",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5be7c612-9cf8-48f8-918f-45bb2f08984c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efc0904-b4ce-49d2-9c62-fb6123edc8fc",
        "cursor": {
          "ref": "c358e46b-69a6-4acd-9f54-9539ca572671",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "33ea0320-9b8e-4865-8477-3b32c2ab3093"
        },
        "item": {
          "id": "5efc0904-b4ce-49d2-9c62-fb6123edc8fc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "73521000-92f6-40d2-bb20-37f004421a58",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875c6151-22d2-4bd3-af82-06ec80db50fc",
        "cursor": {
          "ref": "5b1c25ba-ddfe-429d-9a61-19d44dd12082",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "08ff4f4c-d8e0-4953-928e-feb0a316cd53"
        },
        "item": {
          "id": "875c6151-22d2-4bd3-af82-06ec80db50fc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ca3ac5ba-1f70-407b-b35e-210e2edae82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "fb729ef0-ba78-4290-824c-a5e452975d78",
        "cursor": {
          "ref": "a9d340c3-7d5a-46a4-9817-83250768b6fc",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bff44061-7a88-4262-b7f6-e441d5b1f585"
        },
        "item": {
          "id": "fb729ef0-ba78-4290-824c-a5e452975d78",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b6d35ed0-e01f-409a-abed-a63bcf229949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "d4e669e6-7a31-4afb-a819-0e14cad1e21f",
        "cursor": {
          "ref": "5c44775a-d00f-4b83-bfdf-1006c70db49d",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "01f5d025-5af1-4494-84c8-ed2448a30860"
        },
        "item": {
          "id": "d4e669e6-7a31-4afb-a819-0e14cad1e21f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7ef95d6e-8972-499c-af04-28d5ab3e6316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "971406b8-1923-4bda-8c86-a6c094f8fa02",
        "cursor": {
          "ref": "8a20636e-6086-42bb-b90b-9cb7c3cb80a1",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "39c94889-6a94-4426-8524-53d9ca06395d"
        },
        "item": {
          "id": "971406b8-1923-4bda-8c86-a6c094f8fa02",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "dac0bf31-452d-4462-a04c-81cad8bb3779",
          "status": "Created",
          "code": 201,
          "responseTime": 6472,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a586ea3-248f-4f08-b870-c77ec359d0b0",
        "cursor": {
          "ref": "30f7d4d3-55fd-4467-a5ba-ddb48cb2b41e",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e617a6ac-1cb9-4d20-8249-af914a5a3f79"
        },
        "item": {
          "id": "2a586ea3-248f-4f08-b870-c77ec359d0b0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6fee9623-b76a-4993-987a-02f5f5c9efda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f68cc65e-b5f4-4773-8ed0-851fa9256118",
        "cursor": {
          "ref": "907b499e-6efa-466f-bd82-a6e1d09d5ae3",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ea294156-5dfa-49d4-a646-15f8d80d5950"
        },
        "item": {
          "id": "f68cc65e-b5f4-4773-8ed0-851fa9256118",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c806a1c4-4614-40b0-94f0-d51fbbae247d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "6db89766-1297-44f3-927a-e7aeaa276a7e",
        "cursor": {
          "ref": "89aca3d4-bc81-4847-a010-ff707753d9fa",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c6523059-4423-4d5c-af8e-97feb3168fb8"
        },
        "item": {
          "id": "6db89766-1297-44f3-927a-e7aeaa276a7e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "389e6868-dfab-4d84-9040-82421433c167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6484c1-4a1a-4592-9701-3efa6f9af087",
        "cursor": {
          "ref": "b65d55c7-ac8d-4a6f-9185-e14a46a0b8d2",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9c9ec052-94ef-4d62-ad03-c0ae20d39cd4"
        },
        "item": {
          "id": "1f6484c1-4a1a-4592-9701-3efa6f9af087",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "69c0255d-cf8f-4ca7-ba1e-f992dc564743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4470cba9-e432-48d7-8dc3-4815219bf9dd",
        "cursor": {
          "ref": "1c1d9ea5-7fcc-4481-b8aa-269173ced8fb",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d47b169d-6f61-4192-b2f2-0fb4d3282fea"
        },
        "item": {
          "id": "4470cba9-e432-48d7-8dc3-4815219bf9dd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bff85752-4481-4428-8e5a-d32dd646862d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51645ac-a220-476e-acfd-f86465f0f55b",
        "cursor": {
          "ref": "4abaeca0-ede5-4d16-99db-bad2e192be20",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "de8b894d-567b-4e35-9ec4-9d433cf505d6"
        },
        "item": {
          "id": "a51645ac-a220-476e-acfd-f86465f0f55b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7930be71-bac0-466c-91c0-1daaa22a2da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ece1f8f-35d9-492a-a961-b9a09abab8d0",
        "cursor": {
          "ref": "a618f0fe-9210-4edb-bfab-10594519fc97",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "35b6c9e8-81fa-449f-909f-fe425da4e0bb"
        },
        "item": {
          "id": "3ece1f8f-35d9-492a-a961-b9a09abab8d0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "543fc059-caa8-4ca0-90d9-b23b05f2ddb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ed2bbd-4e87-40de-8683-270a07ece27f",
        "cursor": {
          "ref": "49979fd3-2742-45ba-ab8e-6c37c4d9cebc",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b1479034-a5f5-4ac8-8437-ce6fab69d460"
        },
        "item": {
          "id": "87ed2bbd-4e87-40de-8683-270a07ece27f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7fb2b13f-4c11-49cf-9e41-d2637a9f1428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7efa9f0-e773-4758-b83f-71aea9e07437",
        "cursor": {
          "ref": "0ad050a9-7614-4aeb-8f03-5e85eea9e857",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "072ca491-258b-49c2-ba42-9b5f829dda95"
        },
        "item": {
          "id": "d7efa9f0-e773-4758-b83f-71aea9e07437",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a21b2e41-4c4f-4ac7-ad3c-35ba62372f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057801db-75f3-44db-8eac-3ac3b4eb7dac",
        "cursor": {
          "ref": "a61107f0-396e-44e1-9af4-7c7d034c6165",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e5a14b6c-5044-4469-82b6-3b761dfd9073"
        },
        "item": {
          "id": "057801db-75f3-44db-8eac-3ac3b4eb7dac",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "077acac0-cabc-4e11-9e89-052724e3f55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a827ae8-350e-4430-9d52-b087f48e058d",
        "cursor": {
          "ref": "b19df0bf-00cd-48f2-abd4-1063947162e1",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d61d203a-be9b-4223-abb8-d5e2adbd414e"
        },
        "item": {
          "id": "4a827ae8-350e-4430-9d52-b087f48e058d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4b2e4e61-24f9-4d47-a9ff-486d7c0ae980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a92c1bd-3665-4a0b-b953-1d10ce8428c6",
        "cursor": {
          "ref": "ed956f9f-e6d2-45a3-869d-7352ab9b862c",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "abf7e65e-4c29-4ad3-b617-ba566ee92124"
        },
        "item": {
          "id": "3a92c1bd-3665-4a0b-b953-1d10ce8428c6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "35bc433e-86da-4bc9-872a-e1fa25393225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57184ccc-e9a3-45e1-98db-dfe27b9e31af",
        "cursor": {
          "ref": "09b425eb-1dee-42c3-a17e-9dde9394cad3",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9ee91b5b-4382-4636-baf6-ae347a52191e"
        },
        "item": {
          "id": "57184ccc-e9a3-45e1-98db-dfe27b9e31af",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b244a91e-c252-4d9d-8340-95b395f439de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2685479-88e8-4561-8a88-b2fbb7366f0f",
        "cursor": {
          "ref": "03586ba9-c537-4e8d-b695-96315b7515bd",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6c6740b4-dc87-4bbb-a592-9a373edfe89e"
        },
        "item": {
          "id": "d2685479-88e8-4561-8a88-b2fbb7366f0f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "42452dd5-109d-4cff-8c17-357c6fb959bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cc6edc-69a3-4495-aee9-cb6ff01876b5",
        "cursor": {
          "ref": "de1815a6-ecc4-41cb-8b57-2455da0ce0f3",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c356818b-2afe-4c5c-8a92-d1e76d0cd23f"
        },
        "item": {
          "id": "b0cc6edc-69a3-4495-aee9-cb6ff01876b5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "225dea23-687c-42f8-a328-0bfa9abad68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9fbaf6-ca08-415f-a0c1-82e26742a16e",
        "cursor": {
          "ref": "129518aa-375c-4ce5-b866-bb0fcc82fe5c",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "22df8423-f4c3-40fb-9938-524b71309896"
        },
        "item": {
          "id": "0a9fbaf6-ca08-415f-a0c1-82e26742a16e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b9551692-29da-47d2-8c5f-01f6c451e186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699a864c-5d6c-4940-88dc-ae125faf0ff7",
        "cursor": {
          "ref": "b92c2d07-a394-4e0c-bb95-eeefe4a9e4a8",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "423f3a14-cd3b-46a4-a641-a63f2de5f5c1"
        },
        "item": {
          "id": "699a864c-5d6c-4940-88dc-ae125faf0ff7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7245f26a-e68c-4ff5-bc6f-195f8c3ca37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8905ee1f-12f0-4b2f-bc28-edd488aa0667",
        "cursor": {
          "ref": "5b8ea517-a55d-46da-9dd5-5ad7e4064265",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c61b37ec-657f-49e3-a44f-bd04bdf6caf9"
        },
        "item": {
          "id": "8905ee1f-12f0-4b2f-bc28-edd488aa0667",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "35ec87f8-d02b-4d3e-b173-5646fcc3f109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1d7571-722d-47cb-896f-78adf9d2f949",
        "cursor": {
          "ref": "40862065-f83d-4c3b-b202-93924a8756cd",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8bbffdb6-8483-4e60-a106-508ea2ecb7a2"
        },
        "item": {
          "id": "3b1d7571-722d-47cb-896f-78adf9d2f949",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c5c000b1-25ab-41d1-afde-2b9cad361bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee0c65b-58b7-4d69-9452-0bf37f12cb71",
        "cursor": {
          "ref": "1845e3a1-8fd8-4341-943c-e625d2d6b46d",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d701ddc4-9171-4f8c-bae8-a42d58b375bd"
        },
        "item": {
          "id": "7ee0c65b-58b7-4d69-9452-0bf37f12cb71",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b3002468-1da0-408b-a544-f3cf1dc22ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531e7ec1-cdf9-4950-8115-3fb50d69d22a",
        "cursor": {
          "ref": "cf602a7f-9abb-44d7-ac72-13b1bebdc181",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f295b435-16e5-4340-9f64-d0ed9deb5ffd"
        },
        "item": {
          "id": "531e7ec1-cdf9-4950-8115-3fb50d69d22a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5c301f46-de36-4d05-94a0-c6a8325690f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46328bdf-78e5-4378-80c0-89a5e6749388",
        "cursor": {
          "ref": "68e7ccba-95a2-4609-b234-974420499f08",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6d0849e9-23e2-49f7-95e7-3088677b82dc"
        },
        "item": {
          "id": "46328bdf-78e5-4378-80c0-89a5e6749388",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8bba7f17-a578-4a9b-92ee-e34474aa47fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1d8228-1fbf-4304-aa7f-30c62b62350b",
        "cursor": {
          "ref": "50d3ed67-8482-48f2-80b4-cb1e7d716b2d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bcb5f462-e6bc-459a-9e39-ec1f3d7d42ea"
        },
        "item": {
          "id": "9c1d8228-1fbf-4304-aa7f-30c62b62350b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5b65a462-f232-448d-a03a-29517e40bbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710e0f92-11a5-47ec-8a5d-d06e922e468e",
        "cursor": {
          "ref": "e236c1db-4346-4379-8634-ed715f12c5d0",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "efe2e470-2cf8-453f-924f-48f2caee49d4"
        },
        "item": {
          "id": "710e0f92-11a5-47ec-8a5d-d06e922e468e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "eb86834a-a24d-42f9-8c41-25cd63b33766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6c65cd-2f9d-4147-9e67-2078cf087463",
        "cursor": {
          "ref": "7a5d40f8-bc88-4391-90c3-b8b41712ce1f",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6b032ddf-c800-4a5e-8853-49a705f1417c"
        },
        "item": {
          "id": "4d6c65cd-2f9d-4147-9e67-2078cf087463",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0adf07ca-5491-4109-9921-b84f3d6a075c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ee3e1d-e855-4ef3-bf8e-eb8d6e6e1395",
        "cursor": {
          "ref": "fc4ee571-d58a-4c59-baf6-3738e8009df7",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4b40cff8-16dc-4459-9c92-b6bc9e5ee2c5"
        },
        "item": {
          "id": "64ee3e1d-e855-4ef3-bf8e-eb8d6e6e1395",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f018d990-8502-4f8d-9af0-7613e49ffc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7307961-bc49-498d-a23a-ad295f4bbcdd",
        "cursor": {
          "ref": "9fad4a3c-f56c-49de-a95e-f9d4c456a12f",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "de2bb6f8-c3c7-46f2-bb9c-ee7af5155f7f"
        },
        "item": {
          "id": "d7307961-bc49-498d-a23a-ad295f4bbcdd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "af2bbd26-4ac1-40ba-a028-170874990f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99334e16-f628-4684-aac1-b8f373000d55",
        "cursor": {
          "ref": "9036a363-4dc7-469b-9a5f-36a27fd7b69d",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "93b01396-6193-41bf-bb9e-b4f4a2c14749"
        },
        "item": {
          "id": "99334e16-f628-4684-aac1-b8f373000d55",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "dc3c13b0-2abc-43a3-9842-dfcebedae5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c21d86b-6131-4a8c-8c6e-f704a7f36a76",
        "cursor": {
          "ref": "0fd0ba5f-3ed7-410d-b422-7dca7f5e2d2f",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "595ebd4e-bc9f-4d60-97e3-bf1ee27322c0"
        },
        "item": {
          "id": "4c21d86b-6131-4a8c-8c6e-f704a7f36a76",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "75c344c8-f97f-4f0b-839a-847f60c9918c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6534e58e-2dcc-4a6b-9c83-6fb35c94f892",
        "cursor": {
          "ref": "f841042b-0249-4f78-81d0-307878f1c2ac",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6872b20f-5586-4803-be0e-361799a9cbe6"
        },
        "item": {
          "id": "6534e58e-2dcc-4a6b-9c83-6fb35c94f892",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "731de1d4-f90b-4083-912c-8de8c8087509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e80a94-8e76-458a-8cd6-7fa8e45a46fb",
        "cursor": {
          "ref": "94826e76-f491-4948-8eaf-ab6ecb9f4978",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "611f31f7-59a8-438d-8325-9f88c3aed751"
        },
        "item": {
          "id": "37e80a94-8e76-458a-8cd6-7fa8e45a46fb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cc7a7bda-016e-4520-b00e-0226c160c501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1709e9-04a3-4e4b-9ef2-2f5975ecc1f0",
        "cursor": {
          "ref": "5fa55a14-1659-45fc-8fd7-dbf0a21a2a4b",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7a73381a-142a-4492-9273-9489fbf6f311"
        },
        "item": {
          "id": "7b1709e9-04a3-4e4b-9ef2-2f5975ecc1f0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "df8ad43a-dd79-46e0-90a8-be3e22b67183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9892312-216d-4ff1-a073-c90ea3c2af12",
        "cursor": {
          "ref": "5e98d8e2-0422-43e7-9727-e10fe3c8c7bb",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "852e5065-f023-4ab5-8dd3-f8c8e0b758fb"
        },
        "item": {
          "id": "c9892312-216d-4ff1-a073-c90ea3c2af12",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1d5a08d4-73b4-4b32-b45d-281f27b93e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf4f63c-8baa-4a78-86a4-8a2d3034a956",
        "cursor": {
          "ref": "918be816-67fe-498f-a135-447641d691d9",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a361a12a-d617-4bf0-bfb6-437e4cd7d1b2"
        },
        "item": {
          "id": "acf4f63c-8baa-4a78-86a4-8a2d3034a956",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6237642a-5d1f-41ce-9c94-c6ec117ce793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122734cc-bf7a-4e34-b0ac-7e0c1164b38a",
        "cursor": {
          "ref": "c93a63bf-a105-494d-96bc-3a36a4eb308a",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a8e3e4b2-a0bf-41a2-8962-157560ddaff0"
        },
        "item": {
          "id": "122734cc-bf7a-4e34-b0ac-7e0c1164b38a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "38086f3b-cb22-418b-83ad-5e54442e4e39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1ebf99-60a7-4a32-945e-6da6b0f18065",
        "cursor": {
          "ref": "5337a414-47a8-4f60-9793-c58f63cd263d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5aa39eb6-4af5-4589-8116-6bc6503358f7"
        },
        "item": {
          "id": "6d1ebf99-60a7-4a32-945e-6da6b0f18065",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b93c7a3f-76c6-4aa0-8fb2-e68f4848bf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e5edfe-844a-4981-91d7-02b6b844ea57",
        "cursor": {
          "ref": "c9522545-7de8-4356-9989-bc153c91de7e",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ff703ce8-c211-44af-91b7-5878b6a61ede"
        },
        "item": {
          "id": "a4e5edfe-844a-4981-91d7-02b6b844ea57",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d0f14f4f-5fd6-4432-b1d5-de0e8bd55d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e2367c-fcae-4491-8dc4-bf89df07d3c8",
        "cursor": {
          "ref": "54df5aa2-d5ea-4d17-ab02-a881c45e4fe6",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e8ac296e-1fec-43be-923b-beaebc744a1d"
        },
        "item": {
          "id": "49e2367c-fcae-4491-8dc4-bf89df07d3c8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a6cace19-4a23-4b5a-8dc8-2bee3517af79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4672da29-d164-4c25-93de-49abf599ac5c",
        "cursor": {
          "ref": "3d0c27af-c3fc-4dcd-854c-03deed371aca",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "91bb07b5-5e04-459e-ba68-cdbeee558a1a"
        },
        "item": {
          "id": "4672da29-d164-4c25-93de-49abf599ac5c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "205fc3e2-7d25-4e02-962f-3af2f8f62d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105478fe-4fed-4d28-a94b-8ed60d2250d7",
        "cursor": {
          "ref": "8decc8a5-1336-4fba-95d6-3baee352ebcd",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cdcda87f-b49a-4242-9879-c67e6d3bc64c"
        },
        "item": {
          "id": "105478fe-4fed-4d28-a94b-8ed60d2250d7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7a7e1683-52d2-4c73-8339-fa51c67a4e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96a4139-c281-4e6e-8b70-e6ae2bbc7dbe",
        "cursor": {
          "ref": "7810272a-a141-431b-a753-7495344a3488",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "855520a3-44fd-4315-a998-407c2cbd25d8"
        },
        "item": {
          "id": "f96a4139-c281-4e6e-8b70-e6ae2bbc7dbe",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "61025e48-1ffc-4acf-8091-df67e9b97587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185c1f71-45b7-4119-9f84-f354eee12a2e",
        "cursor": {
          "ref": "018c8395-eac6-4827-8d97-4b9eef748e9a",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a9e88c98-87d0-4591-a0e2-0a7af852fcb6"
        },
        "item": {
          "id": "185c1f71-45b7-4119-9f84-f354eee12a2e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ee5fd2ee-d3b0-41cd-82d5-b1c108e8a785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523619b8-be5e-47b1-8330-47d80178fca8",
        "cursor": {
          "ref": "e1d7aba3-db46-41b3-9915-5a387c7d481c",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8d89be53-546a-4aaa-a453-d447873593cf"
        },
        "item": {
          "id": "523619b8-be5e-47b1-8330-47d80178fca8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a70026f5-46f5-4862-8cda-36b8a808155a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59598d07-030b-4dec-ab24-365292fccf91",
        "cursor": {
          "ref": "1d760793-d96f-4fc1-b66f-8aaa17886a65",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "70072e4a-1956-4918-a5a6-ecc8fc09cd4f"
        },
        "item": {
          "id": "59598d07-030b-4dec-ab24-365292fccf91",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d6549941-9c34-4bf7-b5fa-2ef8b3b8d592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9179a1-8ae3-4334-9a74-7ea35d084894",
        "cursor": {
          "ref": "9fcd094a-cda2-47f8-bdc6-5e88dca6cf28",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4f483ed3-a41d-45f3-a1a1-148aa3ab5947"
        },
        "item": {
          "id": "9d9179a1-8ae3-4334-9a74-7ea35d084894",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "69081e39-447f-4ac8-92e6-2fdadfd64392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad022f6-5678-444b-aa67-095d24d516b5",
        "cursor": {
          "ref": "37488b14-f122-40b6-a664-390460ea54da",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2b4a583b-cee9-4290-bb44-2aaf8e5d907b"
        },
        "item": {
          "id": "3ad022f6-5678-444b-aa67-095d24d516b5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1afe4c7a-39a9-4584-93cb-0b27124cac7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f24288-dd37-4d41-a023-e979784a33f7",
        "cursor": {
          "ref": "519591b8-6171-4aad-ab85-a0d13ef88643",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d16fa128-e5fc-43ec-9597-b44956b87fbd"
        },
        "item": {
          "id": "e5f24288-dd37-4d41-a023-e979784a33f7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "091efae3-7f8c-44ad-848a-be04203b6bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04138c34-dd5e-45ba-a243-32ff19856cea",
        "cursor": {
          "ref": "762b1449-902a-4baf-baba-623bf471b06f",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "dca9f866-e6e0-4784-8c9e-cc415ec5ae36"
        },
        "item": {
          "id": "04138c34-dd5e-45ba-a243-32ff19856cea",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0fd0ed53-06f8-4f63-9fa7-a6aeba534e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c08730-72b4-489d-a198-ce32fce6d5d1",
        "cursor": {
          "ref": "21b46f2c-1ee8-4aed-8dcc-5fc3fa4c69da",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1f1c95d9-8c87-4b32-b690-164a4b7c271b"
        },
        "item": {
          "id": "94c08730-72b4-489d-a198-ce32fce6d5d1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b54f2b93-6e24-4320-85f2-470382625432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8286f9-55cf-426f-93df-81b9281956e1",
        "cursor": {
          "ref": "a401d541-8021-4934-908a-8c024ecd7244",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cc5dca03-141a-411d-bf51-1cc7f801dbc8"
        },
        "item": {
          "id": "6e8286f9-55cf-426f-93df-81b9281956e1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e2347a81-8d45-4daf-acbc-113794542d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f614880-1d34-4e45-8bd5-1f490f34afa4",
        "cursor": {
          "ref": "93e96544-8702-44fe-a33a-d24c128d9705",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cd20049b-f10b-4a2c-9922-99d566c7f945"
        },
        "item": {
          "id": "3f614880-1d34-4e45-8bd5-1f490f34afa4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6a18a90a-e2b4-467f-b9c3-dfab40685afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6cbdd9-4fee-4243-8134-49b24da085a9",
        "cursor": {
          "ref": "d3e4c111-4a27-4b2c-b7af-70c13f446194",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d7f324aa-1136-4210-a032-c9e013de1993"
        },
        "item": {
          "id": "4d6cbdd9-4fee-4243-8134-49b24da085a9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "44ad484d-8ad8-404e-befd-c247ad3fb6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4218cb-f045-44fb-af10-ea02ad2ea335",
        "cursor": {
          "ref": "fece1c6a-10c5-4af8-b7d8-3be42d9bc6c7",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "947225c8-f922-4391-8ba7-8d459bad526e"
        },
        "item": {
          "id": "ac4218cb-f045-44fb-af10-ea02ad2ea335",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8b69d6ec-8ba7-495d-8359-91c1746b1358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a702e950-fe62-422b-ba93-1167e71c6965",
        "cursor": {
          "ref": "6fe3182a-7260-4335-8f2f-967972bc8046",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7b2d207d-26ea-4a14-968a-3ade833e727e"
        },
        "item": {
          "id": "a702e950-fe62-422b-ba93-1167e71c6965",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f0ec6bdc-b4cf-454a-9131-ace8646a2df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea317a81-93e5-4d98-b059-fcb6a27386d4",
        "cursor": {
          "ref": "3ad34692-3a90-449b-a15b-7df83882025e",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0f2fad0c-7996-4e88-a08f-ffffb884290c"
        },
        "item": {
          "id": "ea317a81-93e5-4d98-b059-fcb6a27386d4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c23abaed-454e-4036-8523-b42b9b31c91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709a7550-be17-4108-9910-493078f24197",
        "cursor": {
          "ref": "f42cde58-cb24-4e47-8e18-7d255a7b919c",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1ecd70d5-42d2-44bf-b837-8d3048801e98"
        },
        "item": {
          "id": "709a7550-be17-4108-9910-493078f24197",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8115158f-024b-4c63-81f9-6173b654ff6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bc345f-fe43-4063-93a6-8ec5563fbe2b",
        "cursor": {
          "ref": "45f4a674-a213-4e50-9b4d-c13b309c2381",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1b9a2e0c-5e2f-4db4-bf39-f8ed5e9d875f"
        },
        "item": {
          "id": "98bc345f-fe43-4063-93a6-8ec5563fbe2b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "81291144-dcec-4ddb-a10f-d7be0d42f124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7591b6-04ea-4c5e-9fc5-0f815829bdcd",
        "cursor": {
          "ref": "89ebd125-9776-4e60-b142-4a73855b9754",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f78c0f05-a92c-408b-8256-56966437c0bd"
        },
        "item": {
          "id": "bc7591b6-04ea-4c5e-9fc5-0f815829bdcd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "072a24cd-08a3-414b-8cca-69ac6f48a313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1519b58c-9041-443b-a00c-2e968476a440",
        "cursor": {
          "ref": "e47bb220-1482-43a2-b250-f1bac5205fa7",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1f64a678-93b7-47bb-b4f0-20da5f87b17e"
        },
        "item": {
          "id": "1519b58c-9041-443b-a00c-2e968476a440",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "20152988-088f-4305-a058-9d2f039d6832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d0d12c-46f0-47b2-9ae0-82db86bd2744",
        "cursor": {
          "ref": "24913486-f23f-4e7d-be2e-329dddb291bb",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8bf4b53d-9f2d-44a0-8103-72dee077c3d0"
        },
        "item": {
          "id": "14d0d12c-46f0-47b2-9ae0-82db86bd2744",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f4378dcc-c398-4eb3-a405-0c411e752c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98f72d0-aa69-43ba-a603-b71fca757eb0",
        "cursor": {
          "ref": "de538980-60a9-4ebc-ba07-ec763495cd47",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c6e46ff5-f0f1-4d2c-ac96-f521ad9cffe8"
        },
        "item": {
          "id": "b98f72d0-aa69-43ba-a603-b71fca757eb0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c9b1ab06-e90a-44a2-bec0-7776629d3eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cf5330-becd-47df-8e18-4047ae917a76",
        "cursor": {
          "ref": "e1e14ffd-7ca3-4be7-8f7f-522dd5cff081",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "722b8d82-6355-4bb9-9c02-a32d337722f5"
        },
        "item": {
          "id": "89cf5330-becd-47df-8e18-4047ae917a76",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fc78e452-3a33-4008-b0e8-43c72ff5c00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ee6c0c-de4d-4853-923d-7adb396decac",
        "cursor": {
          "ref": "a7820cde-5d56-4304-80e6-8340479e5c5f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c80f68f7-af26-43dc-90bd-6ed5d98de29d"
        },
        "item": {
          "id": "65ee6c0c-de4d-4853-923d-7adb396decac",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "09c1e4c2-0be4-4e9e-bb18-b26b783c779f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58013c4a-7961-45bc-b789-73837a7d6b72",
        "cursor": {
          "ref": "3e855d12-c581-494a-a59f-84d6bfe88855",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8cc3fde6-79d3-4ad7-adc7-a92587b4fb22"
        },
        "item": {
          "id": "58013c4a-7961-45bc-b789-73837a7d6b72",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a05bd1ed-5e7b-47da-be0a-dde0f47250c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d173189-156a-468f-9c17-f344af14b7fd",
        "cursor": {
          "ref": "e105b302-4a36-4fdf-9824-c994709ef0ed",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b57c9b85-b653-4187-8580-e3c3f1543cef"
        },
        "item": {
          "id": "0d173189-156a-468f-9c17-f344af14b7fd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "37aa5e59-c3e7-4e44-93dd-ed2294c62245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae89b59-8b53-4326-86f8-1f71929ad0ed",
        "cursor": {
          "ref": "b6093252-4fd5-4bfb-826f-d611854dc206",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0bd1db66-a060-4d13-ab5f-fa20458dd00b"
        },
        "item": {
          "id": "aae89b59-8b53-4326-86f8-1f71929ad0ed",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "00308fa0-7b64-47fb-b774-df7c515107bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e736289-3952-46c3-a2d4-1fe3db635a74",
        "cursor": {
          "ref": "612756b1-061f-4460-b0c4-a4887c6a70f6",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "303365e6-a20d-442b-adaf-e0829c1d0a36"
        },
        "item": {
          "id": "9e736289-3952-46c3-a2d4-1fe3db635a74",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "81d01d54-e940-4732-9f82-ee096df68b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb3e0e7-0c7d-4e68-b062-a90005739acb",
        "cursor": {
          "ref": "978eacdb-80f0-4b66-82c5-0966f8f38d53",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ea494b62-3e2d-46f8-a827-ddf6a503cf54"
        },
        "item": {
          "id": "3eb3e0e7-0c7d-4e68-b062-a90005739acb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c93d9176-7f28-431d-a649-94dadda98e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bdf882-5de7-44a4-9430-b5607f82575d",
        "cursor": {
          "ref": "8d83c015-3980-4ddd-b7f3-d41eb6cb5b0f",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "922aaf2f-960f-4d03-9759-a6f387344f85"
        },
        "item": {
          "id": "29bdf882-5de7-44a4-9430-b5607f82575d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "455c2225-ca51-4857-b95b-9664d844549a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cd007b-db18-4233-8b4a-f07af4d21c2f",
        "cursor": {
          "ref": "6fc7a99c-7fd9-424c-8659-88ffe33b12c0",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "234f5978-84c2-4886-9529-820c97d59860"
        },
        "item": {
          "id": "31cd007b-db18-4233-8b4a-f07af4d21c2f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b63cf778-d3e3-4f6e-bda9-3a4531fec4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2b087e-40d0-4a0d-8763-b223ad8743ea",
        "cursor": {
          "ref": "46f468c3-439c-45da-89aa-6136635caa9a",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3d6c5d7f-31ae-49be-a470-6cd033936eb2"
        },
        "item": {
          "id": "ee2b087e-40d0-4a0d-8763-b223ad8743ea",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "175e6a66-0b4f-4e07-8480-a4c2fd54c9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf18022-ed9c-438d-933a-f7fa7e1e1c4b",
        "cursor": {
          "ref": "cf8e54f0-3bcb-4853-9f56-acf7dca7a34d",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8c3c925f-3f34-4224-9dcd-626556b512f3"
        },
        "item": {
          "id": "ebf18022-ed9c-438d-933a-f7fa7e1e1c4b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b451a97f-df46-490d-ab7f-2638ece4510c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0374e355-1b66-4219-97ef-8a27729ac425",
        "cursor": {
          "ref": "6b23bdd9-eed9-42ce-a5f1-7160aad580a6",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ed24a9cc-6af1-4366-9d73-56aac153f5b2"
        },
        "item": {
          "id": "0374e355-1b66-4219-97ef-8a27729ac425",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "07012b0b-8a53-4526-8b20-d176ff4dc235",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64432ac-672c-4a5c-871c-59ecd89d9688",
        "cursor": {
          "ref": "3764aa31-1740-4c6c-a7ea-33d87ddad148",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e25e9938-ee97-484c-b107-5611c7f3e7d6"
        },
        "item": {
          "id": "c64432ac-672c-4a5c-871c-59ecd89d9688",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b6892178-e79f-4a4b-af63-5c5142db070f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4913f310-39d8-40e5-bec5-b0276632ec8d",
        "cursor": {
          "ref": "c5be5e72-09c5-4e5b-95e3-a7ac93560b8e",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "108102bf-2cab-491e-b209-1448a9a13ff6"
        },
        "item": {
          "id": "4913f310-39d8-40e5-bec5-b0276632ec8d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "10a3ea48-745a-421a-bb29-9e11b93ae999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedee7aa-cc9b-49a0-a8f6-0dcc14535913",
        "cursor": {
          "ref": "2b396909-b187-4161-9cdd-711d64fb8be0",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "41df3b75-3751-4b12-9f2b-33a1c1692e8f"
        },
        "item": {
          "id": "dedee7aa-cc9b-49a0-a8f6-0dcc14535913",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "208511b6-a7ec-425c-b128-ef10cfddf5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccfcc73-345c-465c-b414-f8bd529c79b6",
        "cursor": {
          "ref": "85e5e54c-d632-4101-90d9-c0fd274560ae",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d9879742-fc92-4d7c-9667-e10741e36ab7"
        },
        "item": {
          "id": "6ccfcc73-345c-465c-b414-f8bd529c79b6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8fdaec0b-0272-453e-bf82-bd050d84b1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a380919-a039-4734-89a3-3d4082494255",
        "cursor": {
          "ref": "408ac7f6-a433-4085-9d81-2c70ee3ab36a",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e21b9a5b-cdb2-4431-bfc0-8878c8be0ae0"
        },
        "item": {
          "id": "8a380919-a039-4734-89a3-3d4082494255",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b455ad5c-c1ce-44e2-a9ed-ee31270c01a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1e6b2d-73e0-4bf8-966b-dc3b749d3f6d",
        "cursor": {
          "ref": "54dec200-53ed-447a-94f1-3179c63fa4cb",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a20e35ad-f925-4bab-ac92-c4263835a2e1"
        },
        "item": {
          "id": "ed1e6b2d-73e0-4bf8-966b-dc3b749d3f6d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8f7a0516-89ea-4fea-9bf5-1d12b2f14b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07050af-428e-4761-8c2f-f625d10bd779",
        "cursor": {
          "ref": "511a37e3-6e61-44ce-bb5d-a413767d8ceb",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ac24f731-daac-408a-8eac-006d53024abf"
        },
        "item": {
          "id": "f07050af-428e-4761-8c2f-f625d10bd779",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "23bfe167-f648-4608-8de6-cae18b31ddea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2d84e7-423b-45df-842e-ce6e5ebd41ca",
        "cursor": {
          "ref": "6e5f0822-bf2e-4f7e-affb-b72ed06f0490",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "aa2490d9-c69d-45da-a70b-3deeca790f3e"
        },
        "item": {
          "id": "fd2d84e7-423b-45df-842e-ce6e5ebd41ca",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f4089bc1-fd73-47d0-ac8d-46dcfa0bc077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba9b474-22b9-4e81-9676-41aaff954dda",
        "cursor": {
          "ref": "af65ee5b-3297-437e-bd2e-24bc555ae378",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4ef1cfc1-6a09-4c9f-8e2c-fba01a0f8804"
        },
        "item": {
          "id": "7ba9b474-22b9-4e81-9676-41aaff954dda",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6ea1f982-c6f6-449c-87cd-d7900e0537a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1679c892-96a3-48c0-8ca5-7a6bead62e33",
        "cursor": {
          "ref": "10ce1bb7-672c-44e8-bbe6-575209b92fd8",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "234f6bdb-d891-4611-9698-c699b5f77e32"
        },
        "item": {
          "id": "1679c892-96a3-48c0-8ca5-7a6bead62e33",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "18b3da9b-c46f-41fd-8c23-e14b15804c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0c4d79-094e-48ed-9487-bf1fe256dcb2",
        "cursor": {
          "ref": "37abf84a-4b61-4949-a9f2-3ed42dd256ce",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "18469c48-58ce-41ce-a1a5-56eb79fdaf24"
        },
        "item": {
          "id": "1b0c4d79-094e-48ed-9487-bf1fe256dcb2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "456d13e5-778c-4d33-947a-95bd61fe9842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321a9976-f1e5-47da-9103-17628a6ecbff",
        "cursor": {
          "ref": "97ad531a-c108-4c73-aff5-f8394aa01dcb",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f66bc1c8-9324-4109-8857-d765da964134"
        },
        "item": {
          "id": "321a9976-f1e5-47da-9103-17628a6ecbff",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b60c08cc-fd57-4e61-8a02-fb7c1982d7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066c5e99-dfe0-4dfc-bf4a-6a0609ec2066",
        "cursor": {
          "ref": "987851f6-1887-4ee7-8a49-9bf5ae5c34d6",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e4e9623a-aece-4460-a017-9e47e4dacf78"
        },
        "item": {
          "id": "066c5e99-dfe0-4dfc-bf4a-6a0609ec2066",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "da78c290-cb86-4930-869a-eb1fa7251b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677ebde1-91ec-4ce0-8caa-f89901aba0a2",
        "cursor": {
          "ref": "afeaf518-5635-45f8-84bd-ad5d6952f47c",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "43c94bfc-1800-492d-9636-0b1eaa34a4a4"
        },
        "item": {
          "id": "677ebde1-91ec-4ce0-8caa-f89901aba0a2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c5ae3b1f-a0aa-499f-9f40-16f5f05131ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1c73dd-ee21-4ca1-9c3d-3c2ab3242cef",
        "cursor": {
          "ref": "110b7155-ce70-45e5-b4f4-4b2daf1a742d",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "20beff03-c588-42af-b286-ee7b159baa73"
        },
        "item": {
          "id": "2e1c73dd-ee21-4ca1-9c3d-3c2ab3242cef",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7c713c8e-fe49-422b-8fd8-8617480ec71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c06e994-48f1-470c-b13b-b03620414763",
        "cursor": {
          "ref": "b1b76e61-6fe5-4876-9132-24a44f763062",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "68f22699-e5ad-46a4-92ae-89cad2ab9518"
        },
        "item": {
          "id": "0c06e994-48f1-470c-b13b-b03620414763",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f872f3f8-8838-4329-90eb-fea88df00511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca80cd13-a57b-43db-8c31-04be57296fa8",
        "cursor": {
          "ref": "557b6298-049b-4c42-a655-7dbc0575a0f2",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bb4e7627-3b52-49aa-bced-510b3581c3a4"
        },
        "item": {
          "id": "ca80cd13-a57b-43db-8c31-04be57296fa8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7e668928-fe72-499e-88da-bf8c6fe5d30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20c9a5e-ea9a-4f92-b73b-7abb8e56fab2",
        "cursor": {
          "ref": "fab66374-2033-4697-8b8c-93504c688b8a",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3e27dbd5-33a7-4823-b8ff-171c79faf6c1"
        },
        "item": {
          "id": "d20c9a5e-ea9a-4f92-b73b-7abb8e56fab2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4334a300-18fa-4700-a2e5-deb33f067423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb957d0-121d-4be0-8d73-421e20f27aab",
        "cursor": {
          "ref": "a123fd49-23d3-4be2-9862-256d4d02b6be",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f807bcf3-a505-4c0d-8057-5e5988de2fdf"
        },
        "item": {
          "id": "4cb957d0-121d-4be0-8d73-421e20f27aab",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7a362213-1621-4a1b-bcb0-2294507f19fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90499e2-036a-4203-b25d-9ff414e9b192",
        "cursor": {
          "ref": "87cea6cc-5669-44cf-85f6-531ef51c2e3a",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "11c026ae-f570-44a1-bc6a-667dd044e63b"
        },
        "item": {
          "id": "c90499e2-036a-4203-b25d-9ff414e9b192",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1762f061-c309-4a2e-a9b1-3ec68d11204b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b6476f-2f17-4d8f-ad22-8be117685ed8",
        "cursor": {
          "ref": "158c24b1-1a6c-49e9-870d-61a4adc5207e",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4badd570-b1f0-4d2a-b8a0-97caf10a0815"
        },
        "item": {
          "id": "49b6476f-2f17-4d8f-ad22-8be117685ed8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8b71b803-185e-405a-ad73-355a12797e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3154451d-77b5-4442-aac7-3bb265804e1a",
        "cursor": {
          "ref": "0b29b0f3-b9ae-424a-a08c-d47f5e66f2c6",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5c0a67e3-bab2-4301-87cc-63a13e379e9d"
        },
        "item": {
          "id": "3154451d-77b5-4442-aac7-3bb265804e1a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0479a9aa-602e-44d6-b1ef-390aa6ccb999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59610a4e-fd45-4b5d-97a6-285c6d487596",
        "cursor": {
          "ref": "362f1ac4-befd-49b7-a306-9e1b5eba1acf",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b7297f64-e27f-4d69-a3fc-f6b37ecfd1f8"
        },
        "item": {
          "id": "59610a4e-fd45-4b5d-97a6-285c6d487596",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6fa7c81e-2435-4e0b-bae3-cac1261ea1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f88c35-c509-4b70-b5c9-d6dd6197ab43",
        "cursor": {
          "ref": "f631e577-43e7-49a2-a76d-0ff7b81ab580",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8dcded9e-7e31-4495-94f8-30b0eda20d45"
        },
        "item": {
          "id": "e0f88c35-c509-4b70-b5c9-d6dd6197ab43",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d8950281-45c7-4301-bea9-bf11dd8e32ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead26817-0bad-48c3-b300-9eb90ea134c8",
        "cursor": {
          "ref": "806b01bd-2466-4bc0-976a-0a48c5423908",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "25163cc2-0c71-4c90-bfa3-f578be53c00c"
        },
        "item": {
          "id": "ead26817-0bad-48c3-b300-9eb90ea134c8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "617c892c-a996-4005-a268-2608f8e73a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462db2dc-47aa-4ad7-b7ba-ca3cd473a096",
        "cursor": {
          "ref": "eb2fcf33-4d99-492e-bf9a-5c388e5e8500",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "47371433-feab-4c37-bcd5-6d2171452f43"
        },
        "item": {
          "id": "462db2dc-47aa-4ad7-b7ba-ca3cd473a096",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d0553488-4828-4bcd-a81a-ad3eeced062b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef866e15-de3c-4b81-b7a5-b992b4352efc",
        "cursor": {
          "ref": "8be05f35-81ff-4871-ad10-5d34c7dc9194",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6d45a368-cc6c-4bc8-acbe-5d7f0b2f52fb"
        },
        "item": {
          "id": "ef866e15-de3c-4b81-b7a5-b992b4352efc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a9b5d353-c1f9-4f4e-933d-1324bdadf0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2f8364-885c-4a57-b221-b9d42243c594",
        "cursor": {
          "ref": "8de41757-d221-45de-9ac3-507b6a942bfd",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9bb45718-7f81-4887-8609-cbd4a0f1cdac"
        },
        "item": {
          "id": "ff2f8364-885c-4a57-b221-b9d42243c594",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "20c92f14-5ab8-4028-9f7d-7f69e52a1fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db665de2-b72d-492a-81be-16209be2dc8e",
        "cursor": {
          "ref": "bbdf6c8d-add4-46d1-8acc-640dba72d375",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c07fbfcb-943b-49f8-b361-7ee8fdec4f7d"
        },
        "item": {
          "id": "db665de2-b72d-492a-81be-16209be2dc8e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5be90406-3967-434b-a659-722e1f00025b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bdff2a-d876-422a-87a4-aa0743f2271a",
        "cursor": {
          "ref": "a7a72514-1f66-4e28-bb41-eb15509298a4",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e7916c21-01d0-43d4-adf4-ea0e8ff35b95"
        },
        "item": {
          "id": "85bdff2a-d876-422a-87a4-aa0743f2271a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7714b843-47b5-4146-a08c-4dc804147254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bbf982-da7e-42f5-b757-fca11aeceb47",
        "cursor": {
          "ref": "67032c8d-ed35-4c5e-a166-b3660f243085",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "69803e96-21f9-4bd9-ae59-604caea80abf"
        },
        "item": {
          "id": "76bbf982-da7e-42f5-b757-fca11aeceb47",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "05b4bc04-40d6-4991-b3e2-607c6675feba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e7bc31-e2bf-438d-bcb4-62deac8be4c2",
        "cursor": {
          "ref": "8d7e5a9e-fecf-44b5-ad39-702a725008f6",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "16d4baaa-3c31-48ad-a72a-8141e11bd085"
        },
        "item": {
          "id": "84e7bc31-e2bf-438d-bcb4-62deac8be4c2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "db2f0585-8261-447d-a743-0f2b0a6288a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f6859f-a95c-40dc-b606-47c37e507a13",
        "cursor": {
          "ref": "396653f1-d5f0-429e-b832-94368ac10de1",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d6ff239d-6ed2-4622-999e-ef442fdd351e"
        },
        "item": {
          "id": "c7f6859f-a95c-40dc-b606-47c37e507a13",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e3c6381b-97ab-4d9c-a674-5f29b43bde21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2db603b-2ef9-4c7c-acd8-76353e24f2cf",
        "cursor": {
          "ref": "1e54204b-9ea7-40ec-9b06-0e14c3cd065f",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "96c11555-2fe9-4130-a068-904e4aee790c"
        },
        "item": {
          "id": "e2db603b-2ef9-4c7c-acd8-76353e24f2cf",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cf13863f-443d-42d4-816c-78d6e8677764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad54191-c4d4-406d-8d80-f101a23133b7",
        "cursor": {
          "ref": "5b40c9d9-d3a0-4894-8ecb-e4d9192f05bd",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ae5d7490-352d-4b95-8b35-360a34102b24"
        },
        "item": {
          "id": "0ad54191-c4d4-406d-8d80-f101a23133b7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3179256d-2477-4ff2-a84d-6a4129e867e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51cfb5d-3583-4295-9186-f9ec5830a838",
        "cursor": {
          "ref": "46da6855-8553-4e09-bee8-713ab851f276",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fbff0151-1509-45cf-8819-d47c103c2c14"
        },
        "item": {
          "id": "c51cfb5d-3583-4295-9186-f9ec5830a838",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c32b0150-66da-4568-888f-d0928590729f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cef8f1-960c-4d9f-a79f-07c48653ed52",
        "cursor": {
          "ref": "10d57d67-4876-4edd-977f-9f089af1a8e3",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "36eeebe9-49ba-4d94-9717-e4bec46be24f"
        },
        "item": {
          "id": "36cef8f1-960c-4d9f-a79f-07c48653ed52",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2d0aa7ef-259e-4767-9f4e-47a9b422e2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2bc903-f667-468c-a920-7009db1c9645",
        "cursor": {
          "ref": "0e350c0d-81e0-4c84-b09a-e63c02253bb7",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3b645448-aa54-4ea8-8cf0-1f07a9ecf4e6"
        },
        "item": {
          "id": "cf2bc903-f667-468c-a920-7009db1c9645",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "cf601a49-f90f-48fe-bca7-be5a7579357b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbb036f-e538-4ffa-8c61-0f3e9c6dda24",
        "cursor": {
          "ref": "23a4fa54-a842-4465-8823-928553a1938c",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f34aa613-a513-4cac-99b4-c8c04efc8e17"
        },
        "item": {
          "id": "fcbb036f-e538-4ffa-8c61-0f3e9c6dda24",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ff2cfcd0-8f47-49ef-942f-905646419108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d12ee45-5d3c-4e1b-b458-11e7ad964bab",
        "cursor": {
          "ref": "b4a1ce10-320f-46c5-a93c-a203f61fdd1d",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ad5f1f14-8fbb-45f2-96a4-f583e5fd6cab"
        },
        "item": {
          "id": "4d12ee45-5d3c-4e1b-b458-11e7ad964bab",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6b67c5d2-2467-4bd4-ab57-e9be21212392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f9728a-cb0c-4735-af85-cc3bc92fd097",
        "cursor": {
          "ref": "5988e0f9-c5f3-40d3-8a18-699cd8f09675",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "121ddd73-0acc-4970-9285-a0c4d6401906"
        },
        "item": {
          "id": "b2f9728a-cb0c-4735-af85-cc3bc92fd097",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "48b05a61-dd43-4cd2-97ba-7c3f41ae8bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17edfa90-4fde-4bb8-a0f0-43ab0b899512",
        "cursor": {
          "ref": "7035265a-9032-4aea-8f18-beb23d7150ef",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a637b2d0-e46e-400f-8496-ad798d177dd6"
        },
        "item": {
          "id": "17edfa90-4fde-4bb8-a0f0-43ab0b899512",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0f79dbd3-6ea3-4ff0-92e1-3d609761bf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718bb589-82e1-4e1e-8338-a244b8077d39",
        "cursor": {
          "ref": "f5803765-48bf-4fb9-a379-81d69e4c2bf7",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6536fd35-3448-492c-b577-af054fc76c32"
        },
        "item": {
          "id": "718bb589-82e1-4e1e-8338-a244b8077d39",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4c20ef94-dd9c-4588-880c-4320c20c4d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97887289-56a3-4e7e-905a-5421e40877f8",
        "cursor": {
          "ref": "04263c7f-dc22-4846-9a46-d7136a4f86e9",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "883bb06b-a6bc-48ec-ab46-63a95f690dfb"
        },
        "item": {
          "id": "97887289-56a3-4e7e-905a-5421e40877f8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4b03f93a-eb17-45a3-861b-5b0c139c8e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22f75d5-e732-4930-bc89-2c7470768738",
        "cursor": {
          "ref": "cdfa25c8-2577-40d7-9acb-1d8c25746146",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8057c1e2-5065-4744-9809-86625f9b7650"
        },
        "item": {
          "id": "e22f75d5-e732-4930-bc89-2c7470768738",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c97d64e8-9c30-4995-a97c-1c1692818c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e28e047-3419-40e9-bc62-7728441f4b6f",
        "cursor": {
          "ref": "2a166bef-718b-418c-a1e2-cfdda324b77b",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5143b05a-1169-4853-9020-0b102d864c7f"
        },
        "item": {
          "id": "1e28e047-3419-40e9-bc62-7728441f4b6f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2fd5f198-cd81-46f6-89bc-9e7c1a00c0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1537e010-eaa9-496f-a398-9f6f1513ebbb",
        "cursor": {
          "ref": "9943132a-86be-4eb1-b491-966fb659b9c7",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "187295c9-e154-4882-8063-60f5b628b152"
        },
        "item": {
          "id": "1537e010-eaa9-496f-a398-9f6f1513ebbb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "21240393-902f-4e53-a487-729d9cf5fb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ac8535-5f64-48b6-9aea-5d216a39e1fb",
        "cursor": {
          "ref": "a55a64ef-dd05-49a0-8a7a-59d1afa39969",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cc830227-a1b7-47cc-994d-3e1012889ccb"
        },
        "item": {
          "id": "c4ac8535-5f64-48b6-9aea-5d216a39e1fb",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6e0cc1a5-233d-41a9-bd6d-e4609f6b8058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988c6981-ccf9-4cb0-95fb-57e5b68fd6c7",
        "cursor": {
          "ref": "7a3071dc-f5d6-429c-b2e4-03b0978397ff",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f4d63204-5d0e-4e31-ace9-e72e2df30e61"
        },
        "item": {
          "id": "988c6981-ccf9-4cb0-95fb-57e5b68fd6c7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fb8411c8-3ea8-4328-a12d-1cb265a58215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a5b18b-215c-4bd1-9b51-b0f942784638",
        "cursor": {
          "ref": "9d6b0e3d-eb39-4623-a427-305a9a6e4500",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b38675d6-f80b-4d1e-957e-daaf4409082c"
        },
        "item": {
          "id": "a6a5b18b-215c-4bd1-9b51-b0f942784638",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fc2c8449-4916-416d-944a-5e552e9bd2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf5f060-7fe1-4c10-9388-9654016b6367",
        "cursor": {
          "ref": "31ca69dc-8587-42a6-af25-fc7de2bc7bed",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "daba6661-e357-4b3f-b52d-e8afb74bc136"
        },
        "item": {
          "id": "bbf5f060-7fe1-4c10-9388-9654016b6367",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2251dd9d-7c13-4594-89c3-cdef96026434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f9a1fe-4cd3-4adf-8daf-9983dac6a5f8",
        "cursor": {
          "ref": "710c7cc9-4570-42e1-9ba0-c6ea4a484347",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bc3ab9ab-4b79-4217-80f3-1165b5e54f86"
        },
        "item": {
          "id": "17f9a1fe-4cd3-4adf-8daf-9983dac6a5f8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1496a113-5de5-4195-ae2b-c88e8464f348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7184a0-4fb1-4e12-bc2d-2bea2ccc554f",
        "cursor": {
          "ref": "df40aaa9-c541-4fb0-8009-34d7a143ed96",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "96a978a4-53a9-4a87-874c-f93250fde190"
        },
        "item": {
          "id": "4c7184a0-4fb1-4e12-bc2d-2bea2ccc554f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4f2c7b55-4721-46b1-af0e-c0bc77f4078c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa878a7-d6c3-45ff-b285-947b878006e7",
        "cursor": {
          "ref": "3822285a-b4a6-48db-a20f-c98567c50117",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "432524b3-412f-496a-aa65-a54fb4337dcb"
        },
        "item": {
          "id": "0fa878a7-d6c3-45ff-b285-947b878006e7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "401e24a3-5d56-46fd-9298-7908e184a053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea30526e-a0f8-4d2a-be69-405dcc7966e6",
        "cursor": {
          "ref": "b31a5f45-785e-401b-9055-bcede19ef71d",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "75455628-9998-403f-b1be-ebb6754828f1"
        },
        "item": {
          "id": "ea30526e-a0f8-4d2a-be69-405dcc7966e6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a6f32159-e76e-4351-946b-157c04aad657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9843449-7141-47ec-88a7-bd71a0108afa",
        "cursor": {
          "ref": "50341b1b-177c-4dd7-a38c-ef80e8726ccd",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "368c6ab5-dded-4594-8b4a-5e8c8f0fbb8c"
        },
        "item": {
          "id": "d9843449-7141-47ec-88a7-bd71a0108afa",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d95cd1d1-7136-4eb4-a907-8ec54256b262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fbb46c-9682-4feb-b57c-489bd272c61b",
        "cursor": {
          "ref": "818de785-e185-49eb-8016-7ef2fda90ec5",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f3387643-cc70-441b-993d-17548bb773e7"
        },
        "item": {
          "id": "41fbb46c-9682-4feb-b57c-489bd272c61b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "717d2b6b-44ec-4890-bc39-631c8604fd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b1e1bc-01d7-4bc8-ade1-09f1d3f9788c",
        "cursor": {
          "ref": "26f59add-7c62-4153-992c-2f2afcf8a3d6",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "69d813b9-4094-4a50-8c32-8c205a00e1ee"
        },
        "item": {
          "id": "b2b1e1bc-01d7-4bc8-ade1-09f1d3f9788c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "690d48a0-d9c0-43ca-a74d-1a76efed7f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de4b8c2-05e6-43b6-bb56-0964fc844b60",
        "cursor": {
          "ref": "29a9564b-9a94-408c-9145-f3caaf9c90b1",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a5b73d37-cf94-4879-ae50-614d897e916f"
        },
        "item": {
          "id": "4de4b8c2-05e6-43b6-bb56-0964fc844b60",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1553db4c-fcab-48ed-8196-f75f2466fbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28548224-bd3a-42e3-8796-e540998550dc",
        "cursor": {
          "ref": "64e24218-861c-4513-ac85-e4b8727da107",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d91e5e88-5971-4b98-a562-5cb1778dff6f"
        },
        "item": {
          "id": "28548224-bd3a-42e3-8796-e540998550dc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5755c02b-f85a-43a7-9d47-9ab64d4c46f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30dd2972-1885-4fcf-800e-aa8eb6da8062",
        "cursor": {
          "ref": "5f13eb61-287a-43eb-83bc-cdee0c24b145",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ad07d0e0-2417-4177-98e1-8cd143abfd48"
        },
        "item": {
          "id": "30dd2972-1885-4fcf-800e-aa8eb6da8062",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7c88347b-d16d-485b-92e9-7a68fc47268a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5d12ad-a67d-44e8-a168-cbc46a444fee",
        "cursor": {
          "ref": "20bc2f60-e4f1-4e8b-b8ec-e7c7dab40ccd",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "94e7471c-4146-4951-aa45-13fa01f25d8a"
        },
        "item": {
          "id": "8e5d12ad-a67d-44e8-a168-cbc46a444fee",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4c3807f3-601c-4812-b918-d4c15e316bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f43f5df-e81f-4294-b935-2079017044a9",
        "cursor": {
          "ref": "f61d2dee-dc8f-45e6-81cd-264f6354efd8",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "11018ab5-ed9e-4959-891d-a1667fe02b7d"
        },
        "item": {
          "id": "3f43f5df-e81f-4294-b935-2079017044a9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4406f005-6f2f-4adc-aec1-27d98e701916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10095292-b42f-4c78-b810-463839de8c43",
        "cursor": {
          "ref": "fb5966b9-6239-4338-accf-d3df386c2dd8",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5ce81874-6ace-4642-a217-9e63601b6154"
        },
        "item": {
          "id": "10095292-b42f-4c78-b810-463839de8c43",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7e5af760-6e64-429a-a0ce-826d08c23bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0b0f3c-6fa4-4b3e-82b9-f576c27c6803",
        "cursor": {
          "ref": "7f600d2a-2476-4246-8f9c-eeeadfcc89c5",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3f51de20-d3fa-4def-97f3-a7550e6a7da0"
        },
        "item": {
          "id": "6b0b0f3c-6fa4-4b3e-82b9-f576c27c6803",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0d879fb1-db83-4ff4-b1d4-c74235f351d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3837b9e2-16b5-4c24-98aa-6579f25adc13",
        "cursor": {
          "ref": "73b8bdef-23b2-4807-841f-632ab5705bc2",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b16076c3-17be-4f43-9c50-14f22db4932f"
        },
        "item": {
          "id": "3837b9e2-16b5-4c24-98aa-6579f25adc13",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cfbce3b8-28a2-4551-8b1c-80ad7cad8649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4e471a-1c1c-4633-acd7-5dc4b37b1e8e",
        "cursor": {
          "ref": "59961567-840c-4c56-b5c4-9cbc93cc9baa",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e4bdc36a-f751-4c39-8801-7bbdfdde5d71"
        },
        "item": {
          "id": "2f4e471a-1c1c-4633-acd7-5dc4b37b1e8e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0f068e65-6235-4641-a63b-d4788766642e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d468e92-9be0-484b-916f-7cebd7ab22f3",
        "cursor": {
          "ref": "9b80f26b-26bc-492b-9cb7-c06c38b8bee9",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a24758fe-7c6e-4e7d-a2e4-5c5b8743ece2"
        },
        "item": {
          "id": "5d468e92-9be0-484b-916f-7cebd7ab22f3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7c7c5fc6-9b13-4316-9d57-73362b7d3d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60dd69dc-c07a-435a-ae8b-7680373dba86",
        "cursor": {
          "ref": "88801539-7eb1-4103-90f6-bda04d14b73c",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "52d10910-ac42-4261-a5b6-87a17e116629"
        },
        "item": {
          "id": "60dd69dc-c07a-435a-ae8b-7680373dba86",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fecf856e-a98d-41ea-9adb-806e7bd39dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec2b7ed-cc01-4318-ab3f-5d1b722383d2",
        "cursor": {
          "ref": "0959a647-972f-4776-994d-98537d5b971b",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0506aec9-2f16-448e-8387-317bd9ba0b9f"
        },
        "item": {
          "id": "cec2b7ed-cc01-4318-ab3f-5d1b722383d2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "51994947-eab4-4bc1-a896-07e8dfa89a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a892825-44dd-4235-bdfe-cf896f99dfd7",
        "cursor": {
          "ref": "0023b9c7-686c-477c-b6b4-6f95775cc62c",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f34ec732-13b6-4b6d-9697-92a9bdbfff4b"
        },
        "item": {
          "id": "4a892825-44dd-4235-bdfe-cf896f99dfd7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "84a8b582-63f9-45c6-b6c4-b2636c94c68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2a426a-f68d-4964-a27b-8b2439945aea",
        "cursor": {
          "ref": "89b2ac2d-8e2a-4d16-8012-0663a1f937a8",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0f05ca0d-dbd8-43e1-ab7b-1765007f8d1a"
        },
        "item": {
          "id": "1b2a426a-f68d-4964-a27b-8b2439945aea",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fc43272a-336d-46a5-b3b3-3892288009e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79d0373-018e-4b6c-8c0c-2d449d795ced",
        "cursor": {
          "ref": "39815a3a-710c-458f-9caa-f968eb987941",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9051621e-89fd-4253-a430-9cfca84e905b"
        },
        "item": {
          "id": "d79d0373-018e-4b6c-8c0c-2d449d795ced",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5920286e-0b49-4cc3-8015-08ea857935a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057b3e51-8eb4-4666-89be-8f5d407b04d6",
        "cursor": {
          "ref": "b8050412-66e2-44fb-8e1a-8abad1b233ac",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "df675f87-83b7-4045-b34d-9327fcd0fa29"
        },
        "item": {
          "id": "057b3e51-8eb4-4666-89be-8f5d407b04d6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0042d9bc-cd57-4c1a-8ec8-5dd415a5ebd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94433590-72df-4522-9e3c-9194468aa44f",
        "cursor": {
          "ref": "bfc9a43c-b905-4538-8792-dda85f4a4717",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6cfefc7b-ce58-4cc8-a42b-249f894683f5"
        },
        "item": {
          "id": "94433590-72df-4522-9e3c-9194468aa44f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "81092ee0-5cb5-45d8-8d18-5cba7edb2abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa2b754-5b8d-4093-8e6a-3b00a5494e41",
        "cursor": {
          "ref": "73a31e2d-9934-4e76-9a03-b69ba3ce44a7",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "70aca67d-c466-4b40-ade6-fb5e9e221368"
        },
        "item": {
          "id": "9fa2b754-5b8d-4093-8e6a-3b00a5494e41",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ae0e37af-fda3-45fd-9b51-149e1b053eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be34920d-e546-4468-bdce-66d9fe6b47ba",
        "cursor": {
          "ref": "c47af9ce-ccc6-4ba8-80fa-61ba7ee18c62",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0cda99c9-b714-4577-8b33-1ca927395abd"
        },
        "item": {
          "id": "be34920d-e546-4468-bdce-66d9fe6b47ba",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0e6379e8-18ae-4002-a722-f0206a4914cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df05e85b-1abd-42bb-82fe-b35750de924f",
        "cursor": {
          "ref": "ef84b808-3d88-471a-83a3-1cb0b6c51eca",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "771d7811-5309-4e70-a446-9d3ff4872e6e"
        },
        "item": {
          "id": "df05e85b-1abd-42bb-82fe-b35750de924f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "aa0f974e-f38c-41e6-981e-96c6ad74a29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e27729-ee4e-4bc7-98b9-9d09fbe7e86f",
        "cursor": {
          "ref": "2ab4493f-bc1a-4c10-9542-9f53e2c1a61d",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c3c5314b-2d97-4aa1-bf1a-7958905423ab"
        },
        "item": {
          "id": "83e27729-ee4e-4bc7-98b9-9d09fbe7e86f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c53fe4e5-4ef0-4838-b736-3d61d7d70822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57d7a5b-5472-4511-9718-b0d5f052d4a1",
        "cursor": {
          "ref": "0f265c4e-4e48-428c-807d-283d058e8162",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "84a6f60c-e2ed-48b9-ad4d-9473df8675ca"
        },
        "item": {
          "id": "b57d7a5b-5472-4511-9718-b0d5f052d4a1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f1a1fa19-53e3-4d5b-96b8-5feced19fe82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ed1626-02b9-489c-b446-67da036619a1",
        "cursor": {
          "ref": "582096ee-a8a3-4e49-9d09-38a0bb979cbf",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "eaec6579-1bd8-4da7-add3-b95654b00246"
        },
        "item": {
          "id": "b6ed1626-02b9-489c-b446-67da036619a1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "bc11f73c-8f7e-4830-b33e-e729c7dca127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72098f62-e1b4-4af8-8bfc-71e012684b78",
        "cursor": {
          "ref": "7946ea0c-8cb2-4acd-8aff-4e6971e054e8",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e219040f-7b52-4c0f-a2df-f039815c142e"
        },
        "item": {
          "id": "72098f62-e1b4-4af8-8bfc-71e012684b78",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d492cf35-6775-4f9b-9d76-da5a98b7d727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0683a78-ae38-4f13-a570-0e642110c586",
        "cursor": {
          "ref": "5916d73f-e656-4838-b0ef-a776681a46b4",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ded87a49-c25e-4548-873e-bb981f34b0c8"
        },
        "item": {
          "id": "f0683a78-ae38-4f13-a570-0e642110c586",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "28364c37-1d42-4b0f-b527-c73e95ab561b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89e8e08-a063-4719-8bd8-89ff3d14e662",
        "cursor": {
          "ref": "f98269e4-50ac-4272-99f5-1b5617a92270",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "67bdfce1-d111-410e-b506-38ef30c6eb99"
        },
        "item": {
          "id": "c89e8e08-a063-4719-8bd8-89ff3d14e662",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5da27153-d6de-4b42-aaee-e082455991d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281ac2ad-1a7b-4cfd-9a69-e0f2ab486f05",
        "cursor": {
          "ref": "5868c8a4-23e2-4d13-aff8-be1645397a59",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6464628a-73d6-40f4-bb35-71c5d4fa8d39"
        },
        "item": {
          "id": "281ac2ad-1a7b-4cfd-9a69-e0f2ab486f05",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fe7958c7-127b-4815-ad8b-66a1ea8427e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde403af-61e4-4099-8a01-43d69f2bbe6f",
        "cursor": {
          "ref": "06d38946-5140-4974-8949-d484ecf3ee94",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "71579bfb-2412-4100-b437-84c39ea8b377"
        },
        "item": {
          "id": "fde403af-61e4-4099-8a01-43d69f2bbe6f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "66c9240f-6b54-45ad-9b29-7f93df8de3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0336c829-7d17-409a-9efd-d8dbd02e2232",
        "cursor": {
          "ref": "fbc25c6c-7b69-4ef7-aafb-064f8d0515ed",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "774dc511-d83c-4fd6-832a-beb923ff2d69"
        },
        "item": {
          "id": "0336c829-7d17-409a-9efd-d8dbd02e2232",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f2bce241-9f7e-4d9d-aa7c-867f4a40c514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c5e726-5eb0-4b93-aa38-1274a519a89b",
        "cursor": {
          "ref": "1736da02-d3f0-4a83-819d-3e9dc1c9a478",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2fe6d6d1-37c4-4477-8c6a-b28f4a9fa499"
        },
        "item": {
          "id": "26c5e726-5eb0-4b93-aa38-1274a519a89b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bd0eec12-7e58-418b-a03a-b8813e20cb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812dadcb-79b5-4512-a511-4a62bd02add4",
        "cursor": {
          "ref": "2ae395ee-0139-421e-8322-af6c147f89e8",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1de9d3e2-4447-4580-9ed2-f12263e57da3"
        },
        "item": {
          "id": "812dadcb-79b5-4512-a511-4a62bd02add4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "35dff19a-dc8c-4530-aebb-9ad40abf07f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce43b73a-3f95-4cbe-b70d-26e4c139763a",
        "cursor": {
          "ref": "4b6ef25c-668d-4cd3-a642-8c407c236c10",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "f23fd47b-b737-40ed-b962-950846d5a674"
        },
        "item": {
          "id": "ce43b73a-3f95-4cbe-b70d-26e4c139763a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fd428fe3-3a8b-4c7a-90a6-45e1653aebff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b262a1-a058-4d38-9138-be5a05335e8b",
        "cursor": {
          "ref": "80c47545-abd0-4db9-9ad2-404d871c75a6",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8e97095e-ed64-4be6-9a5c-3a6aae29cb94"
        },
        "item": {
          "id": "06b262a1-a058-4d38-9138-be5a05335e8b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8f85953f-f443-4bdd-9e0f-5b623e3fc6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6940266e-9df1-4a97-a322-e9e960103360",
        "cursor": {
          "ref": "36fabe0f-d3db-436c-9b0c-4be69582c453",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0dab2d03-2eee-4c60-ab04-3e56169d5df3"
        },
        "item": {
          "id": "6940266e-9df1-4a97-a322-e9e960103360",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "dbdb5b3c-34db-4d4a-8b5d-e6500d7ee4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad5cd52-4934-4300-8c20-92e27fb0dec0",
        "cursor": {
          "ref": "a82db765-1bd9-4298-b8a1-becdf08b87af",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3adae920-bb5f-4d1d-9d2a-4eec8c38ed25"
        },
        "item": {
          "id": "7ad5cd52-4934-4300-8c20-92e27fb0dec0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "75ba01bb-86dd-433f-a6da-055263758d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd105a6-c2f8-44ea-b80e-54fb2da56ced",
        "cursor": {
          "ref": "adb5f786-9657-42ee-8ce1-3405c8b01f5d",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7a669adf-b878-44d4-a48d-c44ed0d1ada4"
        },
        "item": {
          "id": "dbd105a6-c2f8-44ea-b80e-54fb2da56ced",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "dac17c65-785a-483a-a7bf-710128036c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa16f45-2d29-4e8c-bea5-deb29849864b",
        "cursor": {
          "ref": "5f4bb2a3-b8e6-4e4a-a153-da4893c33b83",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "608b402c-b58b-4b0e-ab58-3753f928bd78"
        },
        "item": {
          "id": "7fa16f45-2d29-4e8c-bea5-deb29849864b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3e072e03-be55-41e9-af8d-ed0a4ea93a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb1a8ce-8617-4420-9f52-2d70d3e9a984",
        "cursor": {
          "ref": "44f95b78-4805-4b4b-807c-34fbccf0574b",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "01e506ce-1ec6-49df-83d7-5fe7d0cb0da4"
        },
        "item": {
          "id": "ecb1a8ce-8617-4420-9f52-2d70d3e9a984",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2442b782-2433-4c25-a738-05fa1de63f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafee751-c7c2-422b-8436-63afd8e600dc",
        "cursor": {
          "ref": "d6f008bb-605d-44b8-b78e-9eb93ab17ae9",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a19f936b-de0d-42d7-9e98-555d510e76ee"
        },
        "item": {
          "id": "aafee751-c7c2-422b-8436-63afd8e600dc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "542c5c71-908a-430a-be16-a1553db6b3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984b11d5-7b14-445c-8398-19489ff732fa",
        "cursor": {
          "ref": "9e615fea-4ef3-43d6-acec-abd5a09ce99c",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9354e6a1-310e-41a0-a94a-0ba960fc42c8"
        },
        "item": {
          "id": "984b11d5-7b14-445c-8398-19489ff732fa",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "983e1ead-78bc-40f3-8c1a-4073fb32f5d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d14451-39f7-44bb-b118-9be67a33770b",
        "cursor": {
          "ref": "2024804f-3659-490b-bf13-a8f34f4bff09",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "715bdc2d-b2a3-4534-a284-915d53ab04e2"
        },
        "item": {
          "id": "c5d14451-39f7-44bb-b118-9be67a33770b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5ab43096-356a-4332-a0e1-6ca370f07c48",
          "status": "OK",
          "code": 200,
          "responseTime": 114,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "616c189d-16ef-4407-a9c3-d80062fa2571",
        "cursor": {
          "ref": "84bd9af5-1017-4a49-9167-13d2e1ac9a82",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4a408e8b-49ba-4c81-9439-33270cbe6c63"
        },
        "item": {
          "id": "616c189d-16ef-4407-a9c3-d80062fa2571",
          "name": "credentials_verify"
        },
        "response": {
          "id": "88211a42-c3aa-4d83-b582-16876c129bd9",
          "status": "OK",
          "code": 200,
          "responseTime": 1887,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7f3311-d0d9-467f-8205-32a411c5c247",
        "cursor": {
          "ref": "d82e20bb-da16-4d78-86a3-281abc040bc2",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4db58f6e-a670-4061-b24e-363e8561ae5f"
        },
        "item": {
          "id": "5e7f3311-d0d9-467f-8205-32a411c5c247",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "107a6f49-89b7-4bc8-a847-c4d4896e32fb",
          "status": "OK",
          "code": 200,
          "responseTime": 1368,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b506bccf-03c1-4caa-85bb-23ddbe23f399",
        "cursor": {
          "ref": "3b67a5e7-82bd-4191-a0f1-5781142027c9",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "14bedf96-ca45-4c24-9725-916cdefa882f"
        },
        "item": {
          "id": "b506bccf-03c1-4caa-85bb-23ddbe23f399",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f67c2719-11af-4b6f-b4b1-66e4bcabcfec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b506bccf-03c1-4caa-85bb-23ddbe23f399",
        "cursor": {
          "ref": "3b67a5e7-82bd-4191-a0f1-5781142027c9",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "14bedf96-ca45-4c24-9725-916cdefa882f"
        },
        "item": {
          "id": "b506bccf-03c1-4caa-85bb-23ddbe23f399",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f67c2719-11af-4b6f-b4b1-66e4bcabcfec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8edcae6-cb61-41b1-a9a6-868481b3a8fd",
        "cursor": {
          "ref": "d302d9db-ce67-4c3e-9d1a-60f9bd946a78",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9ed7200e-3c7d-49e1-82e9-35e91d60e29f"
        },
        "item": {
          "id": "f8edcae6-cb61-41b1-a9a6-868481b3a8fd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4e2c53ff-c564-4ea1-bc83-943fc18591cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7121d8f9-1e78-4796-94b2-1762c98ed0df",
        "cursor": {
          "ref": "e5308878-f1fc-4c97-9220-ee1d7e046dd3",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "cdecb470-273f-42b1-aaf2-8dd316b6bd0d"
        },
        "item": {
          "id": "7121d8f9-1e78-4796-94b2-1762c98ed0df",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2d345cbd-92e0-4e7b-9bae-8e607dbc5727",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}