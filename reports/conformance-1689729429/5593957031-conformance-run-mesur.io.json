{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cae50260-fd70-4869-b22c-cc1d7074d7c1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "841390e6-20ba-4f53-b9be-853c2f62e816",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6da2f895-8a72-4d35-bf7b-8785845f1009",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6788c8fe-35cd-4602-a98f-c552b6514a74"
                }
              }
            ]
          },
          {
            "id": "ba789718-8580-41cf-90f5-b9235d727412",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bd367eab-080e-497d-8697-4459bd823380",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b2e70ff8-da3c-4c54-88ae-b0f5cc2487d8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d0a5fb3f-6822-4573-8fd2-5ed950bca150",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "23a4216e-6f78-4db5-8a6f-a511eb8b3485",
            "name": "Positive Testing",
            "item": [
              {
                "id": "02dfe811-c1a0-4ed3-8136-4708498d6576",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43ffb37c-6c1e-43b2-a21c-dc9d51b37822",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ad8e676-dbae-4313-a7ff-2c5ee7cc06cf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11287cc1-da64-4456-90a9-2d6ff1083fe5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7dcd9cef-c690-429a-b0b0-9a0d3dfb19be"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0387a4b4-98a9-428b-8a24-044db2f40907",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "010b0daf-4071-42c7-ac32-9d5f5b23a022"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bfb5d5e-02d7-4062-bfb7-b670f66348ea",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "27049454-dd21-4897-9086-29314bf235ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7ea1f16-e1a7-4ba7-b940-c8a1529573a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc75f52f-65e7-4dd4-93db-6d8cebe904e3"
            }
          }
        ]
      },
      {
        "id": "117a97f1-2c8c-437f-abec-dac7821bd24e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "da1910d3-80b7-4c34-879a-2f58a0b7571b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "64e4d3a6-163a-448c-a9c4-5b6e456257bf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "43fc9ccc-1166-4a45-a9bd-c3b33edda9fe",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96af0806-9021-4973-b24c-44509ef9d684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "217aefab-e527-4ae4-a54e-794a9924d407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64226f9-a5cb-4bd8-a4e3-83c5e09884b1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ce555c-f97b-45ec-bf48-1d90c87f0e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "196fe9f2-6828-4d2a-b638-38641e2271a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d469d8-0a2b-4e20-8a4c-86b8e0032b87",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9af6d63-98a9-44d1-91d1-d4b1fa1a5348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ad54613-a5fd-4324-8a8f-cad72aef8d0b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fdd34078-3ce9-487a-8bf5-669241bcb68d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8d04c58-6166-49f0-835a-4ddf4ea369e4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e379dff-c07e-4566-92f2-da1323770b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f274ef86-ab16-4d4b-8165-4b082d8d208b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04359ce5-a095-48a6-a135-f77f4fbd6b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b24887-aaee-4895-bd2d-c7e9bcda49a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b0cac57d-7ff1-47e9-87ac-491bdcb59c72",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d33ecc25-580c-4c8e-acda-f922ec57f810",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6270c38f-f4df-4141-affa-3e5d87ac96e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0e335757-bf6c-4c9f-9e63-1de4f0aaa6c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb82f443-ea34-497c-a214-4302b6609725",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0a8eebf0-c989-4cdb-8e26-e140fec72fde"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8580011b-63e5-4eb5-8268-b7238d6939a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a650ca31-822e-4968-8cd2-6a84bbf11965"
            }
          }
        ]
      },
      {
        "id": "2148491f-8a6f-4df7-8b7c-ac418e7f54a9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3ec5aa95-60bc-47ae-81bb-f26da60d1431",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34aa362b-7f31-4ef5-9e51-f13cae632177",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c4fa82e8-21e1-477a-be5c-e5d4fe6c66d7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b78fb7e-74b4-4a90-ba79-ae29586fff32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c032f8-c5ec-4dcb-b192-0e0bb0f76555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a584509d-9ac9-4a2c-8d6b-a77dc9446675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdde592f-d9d5-4cee-9336-6c58b5d11ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a26f1e0-72aa-4d71-af81-f485ffbb18f4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c882f575-caf0-4c4f-b0e6-df0d6138babc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f842fa-6bdd-4db8-bbba-936506736c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e2f2fa-b103-46ed-a590-a994b3d9a7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33576111-fd0a-474d-b3bd-73b8f0be8e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e67eb3-87a3-4053-9e63-143da83f60b8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e9ed7f-2f17-411a-98c0-9a4db4c13007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef571788-2f72-428a-8bbd-576f8ddee63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb49b50-66d7-4b4b-8dfa-4ca5c56c4493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a09e865-ef37-474f-8704-d82f273385a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae307e46-f06e-4b4a-a6db-e6bb19ef7f73",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0933d91d-3f41-4958-bbe2-d3545d6c5419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e65a805-84a4-4781-bd16-3d8663edd551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6867f4-aa6c-4ffd-93d2-9bfe08b824c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e50f62f-3251-4bab-9a74-35f5be47ff78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73561db1-5dd7-48c2-b239-4bf2854d0f8f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae515241-c86d-4fd8-9841-6312c8ee804a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8dea29-a93b-4ac4-aa71-be0bf71d0348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5b9ada-c067-4214-a170-1266640445d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b0888a1-a6c4-4180-9be2-a5ec9608d157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1376c5-c0a7-4861-96a9-bf7961b06341",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1619249d-d28d-4e26-9ca8-6b67cee202f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997b8bad-d776-45aa-9e56-5c5307b1a271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5dd6c3-4ef6-47f5-97d5-fc8e66f61c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27ab811b-2aed-46ce-a70e-67954e0e55d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8eb9d0-2ff0-46b3-a9e8-115ecb537423",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c686bdc6-ee04-4adf-adb9-533185953cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2333d16-aaa8-4972-90ee-f135ffdbaec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c061837-68e9-48ed-b98c-d5b820c6313e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c53c57f7-d14f-41fd-ab83-5bc4b8ce40bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4735b3-8ca5-4623-879e-0d045ea0dd3b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13902f71-2f16-44a2-a0ff-5bbfe02365d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f626f39f-c92b-4001-995c-d378d6456de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80acff5-c8eb-4d3b-ac50-ffbe12e6798b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66d36c25-5d2b-4117-9ab4-b5a9d83973eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20435c47-9c7d-4f80-b7be-9c5590b9c8b3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04f0b12-6f4f-4750-b190-26918d0a02e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b976d07b-0c10-49cc-96e7-a56919cbe99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd36f4b0-c1fb-4abb-9dac-c8670442552d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a18e7c82-23bf-42eb-97e9-838bbbe9714f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3408a43c-411d-4675-a535-acb8227f80bb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a648ebc-f2ee-4aab-8595-1889b69853e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cdd9ea8-32e1-4757-b746-1e71a38b3d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3243a195-3394-4cab-9765-192af5102e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d9e7220-50ce-4653-a6b6-66d3ca881469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080098b5-cc82-4b6b-a570-0d27884efa43",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c02b6a-97ec-4ac2-b9e2-eac46e2e03f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9e733c-7a7d-481c-8e11-47e807522d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acac75c-374c-4100-a120-fa4d865a2a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb5e8204-acb1-4812-bf13-04b4a481b26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdab9407-4e5a-4f46-93f2-4a257c069053",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc0097e-d925-4579-8928-ce06411a93b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81f865f-9b6d-4cc1-8e6e-f1c83ad382e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d1280d-6e97-422c-947d-874a1f3ed67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "345b1f95-c845-4c0c-ba05-fd6243de880e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41f19b0-81bd-4db0-b497-40c57ad2596c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4849237c-099d-4f6d-a299-5032a277520f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda1ac06-5f09-4bd6-bd56-71d8bae0bfa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522ceefa-1bbf-49cb-b2d7-ae31a2c7193d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fe950ca-bf8e-4e18-9b95-c1dea7ff60cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f699ec3-491d-4390-a022-a691edd32fa1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4365d118-6fcf-4a61-8662-edc58cd9cf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1cfd85-f769-4283-ac61-5de66b6a066d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3ea013-dc24-4b4b-b52c-85ecfc48261c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be5df0b3-8980-450c-acb7-53fb02ed10ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4cec6f-92eb-4f84-9867-75897ba9cb5c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b88637-d3d5-4129-9909-e949c5f526df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f6bd89-5b00-4cf5-bfec-e69a04111c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e6ddf2-7896-4f9b-af00-d411165f6150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "740524fc-4374-4595-b77c-7901cc9708b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c6f881-31f6-4e53-9450-2f958aa07181",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bfdfa7-1d87-412a-859a-1e2d1a6f38f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bacaf528-f274-4a15-a8ba-abb701c68408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee00282-c02e-44da-89ed-983905ea60da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24369297-083b-4a6f-8b27-5e411bcdd125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38421b4a-0b9a-4fec-9b18-af0c7ae64663",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9bc20e-458c-4d13-9057-7f9fbda7b9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a9be2e-335a-4b2a-95d6-405a406646ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab671ba-2a50-4cf4-b939-ab61acb413c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80a1e777-209c-42fc-a242-15c5648e1a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00c8e0e-4ca8-42e3-8b25-c43a516b2e31",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9219434f-0289-4c8c-98f4-4349bf7519d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3633535a-a4c5-4551-8cbd-c2007f5b26cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c63d47-5612-4756-836e-71a2544694c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4691537-97a3-4670-a776-11026c01b9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b04d000-82c5-4b57-8cd1-974e201d54f3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9114bd-13c4-4997-9649-4467eb7aa3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740a220b-95cd-4e98-acd2-3a9ec1d91dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd015ac-87c1-42db-a57b-cd12d4da480b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14926a3c-39b8-4b82-ab96-2ce22e3e895b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e04bcfa-c272-4155-9c11-1cc98ae8e06f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315bd51c-1028-4316-8297-2e9e342f866d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3daa5da5-1c47-4349-b97f-9e60db56bb00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9ede8e-be13-484e-820c-083ed89e4c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b67b21-3732-4d42-b92d-59a81fc638d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d10dccf-3249-4f6f-9b00-fc7c75567fdf",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c08c3d2-dcc8-480f-95ae-8502685223da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589344f7-6b53-46c4-8068-1f6f5324057f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6bceef-b6f7-430a-999b-a36860c12918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a15afa6-17b8-4830-a3d4-5e0700fec6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca079ab-d5d2-4fef-89e5-f21b400955a0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fc976f-0aed-457c-ad65-297f1cc39cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81041eb8-2e77-4ea0-a196-b9e7e12d2a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461de85f-3f97-42d1-a649-ee8b453fb9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "294bedbf-1ebc-4f16-be9b-f8d49d4d7faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fa0916-a86d-479c-9002-75209b274dda",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bce9a09-d629-4c8e-b42b-3c2ca47586e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96c09c4-4603-4a70-90fb-245eefeca243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1b3ab3-d687-4da7-b9b3-2fd33ed77a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "219aeeb2-624b-461c-9ccf-02b008a5cc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a75be1-c7b5-4d1a-a203-f75cb5798066",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cf3ef4-34a5-424c-91f4-7270c736dec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc874b4-59fe-483e-a8f2-9715699e964b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9a79af-f9d5-4acb-9a33-999f0e3ee676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab8a222-20fa-4493-8ce2-697b2c5e7def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976118a3-ff32-4fb2-a7f6-1ae8ef8cfed9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45076a26-aa11-4487-889f-ecddc1e8b8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f509dd1e-4f2f-46c3-a716-6f894085176d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3eab82-6eb4-46e6-918a-b2f31e44b843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e8935c-50a4-4f6b-830c-16eef8c74e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e112455f-e7df-4719-b3d5-835f8d5d3f2f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681c5f99-e356-4080-b583-5ef4a9bb5c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a721710-5d57-44c0-870a-cd78c5af8fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f8ae4e-daab-4471-ace0-d091e5eafbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cbaf8cc-ec19-42d7-a70c-6b56f772177e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f9c190-5477-408f-8441-1c3884e7a583",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5500884f-a5a7-4836-9cb7-547ad5bc347a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d7f00a-3064-458c-9962-1728f47cd397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f16544-b876-4d10-9b85-af9450cdff61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c3db76-539d-46bd-b07c-c75390e35516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6adbef5-3ab3-4644-93dd-c04c0b64d2f7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff92ec98-b3ed-4414-a53f-ea91611254ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65bb2577-1ea5-497b-98ff-7585d2be7e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75e563d-5896-411e-8c1d-371a78cec1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b44eec15-e84d-447f-9a1b-ab9b0efb3603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ef0506-90d5-48c3-a49b-26db30826d13",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b252cd3a-4ac9-4044-a47b-14f57434a656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96bb028-a23c-4999-8e6e-2d55b3771b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d076cb4-c593-4806-a256-617a00866dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ebe9a1b-196a-48ae-89ab-b488e7f761f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df892b6-2d5b-4433-b9d2-16778a80164a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41734170-b9cf-44b0-a7d0-6dd95fca4578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f8f637-b21c-41d0-9634-2cd9310fbe62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb1cdea-ce72-49f4-b42b-9761919b0991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1493e275-8785-4ccb-8dc2-aa23d58e5381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b99bc53-4e4c-4d8a-a01d-d306b9968a76",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a4814f-162a-453b-8b91-17074b867cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d05022a-3749-402b-814b-bb6544b681a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d21dd3-626d-4272-ae1d-2f0619e6d451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "91885a17-03f4-43bf-95c0-0322a1ce088b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e860a0ee-2047-4c15-a90e-8c2847836567",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4033a7b-beac-45ca-850c-798c19c0c75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82eedc7e-37ff-4b6f-be65-5629f232a4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c52976c-5118-4e73-bf7a-e6a4658473fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3927a6-d338-4448-8e58-551274d2d2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325b6a9d-6951-4b1c-ae4e-ed7e368900b6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5038ee-4b4f-4d1c-b707-4cb04e1f750c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1038fa-144d-4859-b508-933868452538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651a4d4d-d25b-4377-9c1c-03bf95cbb022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39adc96f-1782-496d-9877-13c5ace1cac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe8868a-6952-4692-a21d-4414b69835c7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a2d66f-16bf-47f9-ac54-d2e1cb603839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97acc484-c2f6-4eab-8183-08ee3e99d189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e526c15-54b5-4dc0-9b91-c9f1a9907094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c034d526-3529-4997-9d78-6e83a67d8dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5a665f-a532-4fef-8125-99228aeedfc7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ce1501-f10a-491c-9d55-5a59a91b4c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0616ac3d-1877-447b-8347-9d88b2c885a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee0bb8d-d2ae-4956-aea5-2867be793538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2334f200-3597-4516-a59c-72bdb8dc4da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7981e3d7-c3a3-4d07-ac09-5bb235c63167",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e5ee67-2400-4d71-a408-97f6188156f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6425b54-864c-4d99-b68a-eaf474bb53f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6875f455-5099-4325-b971-c9bebab35e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e0e8e3-69ed-4ff0-a712-ab5851e7423c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268fd26a-afa1-4545-b9f4-7443d3cd1836",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9102c50-fdfd-4ef8-a8b9-7daa923419ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba4fa94-0c0e-497a-b680-5280e822d4bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9659410-c981-4bff-a131-a09ca152debf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d56348b2-01ff-45ad-951a-95f756f94bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd3cd07-35a4-4efa-8be3-de0de0b14ac3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a5f8fb-4d79-4d16-b556-0ef686cb2d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c0683e-c290-4edc-b889-48bea433ddea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd017236-e455-484d-af8f-8fb14b4c8376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "483e3213-ad48-4a39-b98f-5111a0d70186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57498228-ed53-4dd5-921e-372f4de95a4d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f0fe31-171d-4a0d-8d45-12f67c78a2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2831454a-7b4e-4d0d-a5f1-a2375f34e6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789d575a-89ec-4d9c-a89e-d3c70ce79435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "21312f26-04ad-4b93-b768-ca1ac7735ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e221e1-3018-486e-8775-072765941a41",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36841648-cd2b-4148-839f-c16b8297c5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c5860d-3017-498f-8e2f-b4b4c3568309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c619a12-3f35-42f8-b834-d43354fb87cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1504ef-0420-4839-a8c3-2ed2d431d68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6801a1-309e-4bf9-b343-6dc30b621ade",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7e25b7-aae1-4821-a932-dc70585cfc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6272adef-bb2f-41ab-aea8-98ba7d38e3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4e2bce-71c0-4342-90df-8200054c849e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed4679b-cb07-42a6-9959-34f07fc01da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fa0e5c-4fee-4f87-9277-35ee8038371a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43bcef9-99cb-4e90-aed1-2775f843abed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49be31b-4d24-4813-96b9-c1fd906fc880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76f5065-1454-4514-ad25-247bc05d48c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fedce078-3891-4750-9303-f67435f5e245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f1c67d-b4b8-423d-8c78-6a9bc223570d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5097d8-4ca4-47e0-afd4-80bb4a8935bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3e54cf-f7fc-467f-8882-efc12f21eed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2bba78-ce00-4bfd-b5b6-dc18776e24e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "20dbff22-2fd5-443a-97d3-6d0693b107fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6250ce45-41b5-4545-b8f6-3c99afd4c70e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8c3377-e30b-485e-bae1-dce016be93e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d087d44-0f22-4f44-a5a9-80b0fccd33fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f484c729-c246-4427-9d0c-1804da22b4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1171ce-7021-4424-999f-133772fc6b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b785013-2749-4f58-a8e4-6c49c3a6a67d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4730dd-3a48-4c14-96a0-e65382d52092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9338951-e84a-4362-bfa4-ac95c299542e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb3d0a7-bb59-4675-bda3-c9294b9de148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e02a28-ef37-4a0e-92c5-65f78a37d4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ffa86e-c8ac-4d54-99e9-259a46e97811",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb2fcbf-0d7c-4037-b979-73a266385aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6441a56-196d-45ae-b0c8-49723c883a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ff4778-68d9-4efb-9228-c213b8a860b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87c76691-d88c-4153-a18c-8b2dd1ca7b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bbe337-c2f5-4f63-8685-f94fd7a81a49",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adf950c-977c-416b-a3b6-30578c37582b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af02d6f7-9a74-4a8f-95cd-c3287de0271b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b976af-7495-4b33-bfbd-5b1ca204dd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e9f5b84-6138-4ae0-a05b-a4aeda744182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034b318e-defe-4809-8194-e8dd33e05df3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea468f08-efb9-4e92-8784-0a21517e47fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877ec587-3726-4881-a310-2d41ca4d18fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499de428-b60f-4163-8ff9-42ddfb881802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6bad2f5-0931-4af1-9214-0fa5c0dc0ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce05a4b8-373d-4256-ac2b-7146c1d63a92",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852a2444-e314-4bca-af4e-dbc2966057ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebdd63ab-51dd-46f5-99e2-a5326b75b49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add76045-e0c9-41c6-853b-b21aec1fd18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54211289-f7b6-4ffb-bb63-18ce74dcc33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec94fc7-b1ae-4009-9689-dcf453c62399",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96d0105-43f7-40f9-8254-274d564d0794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd7b16e-71c5-4190-954f-3c1ede10c541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafd814e-9b09-46b8-b6a4-e1c010823eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93554a36-8d58-4c39-aac0-10492c9e2262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69b4c61-373b-4d59-b7a1-e17f4d1ce49a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829cf8e8-d8e6-4a52-9f1d-c83f03d2ea5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83cf159-456f-480d-adad-e9c0199c2b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0bb51f-36d0-4f54-8984-90cb98c7e3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "37f4a8d6-7c6a-436e-8859-36c661faa3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abf013e-e661-4854-9c9e-dddf0d8db162",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e747dc5a-1391-4278-81b5-2f90971c4c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43dfd00-b21e-45c0-9d88-6a9518c4cc85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a078629-38cc-452f-baf9-2b903cd4ea78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2da7b89-c6dc-4cde-8ff6-e79945f1e6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f3b299-1cd9-4520-8852-002c875232c3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbcca28-b85c-4418-a9ae-78d0749be79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d156b94b-d745-469a-946e-7ffa908d794d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9417315-bccd-4446-b1c9-4f6d5044c0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0c599e-266e-44b8-b875-682f94738396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a980f1-46f4-42e7-862f-00d166d0a4ed",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741c6152-232f-4e4b-b383-192c10d5de3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302ccb0b-fa11-4b9c-9097-bd2756f7d0be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8c5e7d-b585-4ece-99bb-0669878b3580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae801a20-5c76-4761-a835-72fdfec67fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d01dc6-f9e1-4231-98e8-86e45cee2e65",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c129d3f1-221f-4803-be21-345a6b8e97ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fdc42e-6ae8-477e-ade5-0422583bb3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e624d79-1745-4d5a-be15-1f149eb050e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e01e1b38-724e-479f-b68d-de47c66ea633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3fe8cd-49b6-4fb5-87f7-ac489c7de560",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f69021c-dcb4-49f4-a209-3484ded8590a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5008eb44-bb57-4407-b0ac-62b1c7d3973f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ac7143-79a5-4e94-a2db-40a9fe1f5050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "49943e76-ec4a-4e93-b601-1e1a44d8ea08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f5a506-079e-41c8-b46d-bb7402db26b0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7301232-f7ca-462d-b06c-cafd75077f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e78a58e-e19d-45d1-939c-8b9ae642f59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd590f3-43ad-46b7-9349-b6f854688b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d61a9a6f-f797-4898-9e94-a42d44b09ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2b7af4-dd66-4f31-8686-72998fc80a69",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06195b6-6d6b-4fed-9499-8978569b5354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fdfb6e-3987-4ece-860f-8d24921925fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e5caa8-6134-4ae4-8d61-483b8cd158e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3cd4c5-28b2-4e5b-83fa-c0b8f833676f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05828f1f-7ab2-4ef3-b9e9-efedb521a96a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90f1fda-ebc5-47c5-bacf-21a6b0e1db35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ddc919-6342-410e-88d9-23cbfdd71cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5b28cd-348e-476f-8537-b0d87e25ac12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "48515869-15ba-4e99-b246-924dde19f689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40197a78-98b0-49bd-a040-2ad3f2720ed4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7219d5ec-600d-41c1-a638-34af3e2ccba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbeadb45-2161-422e-8882-f90b4016e153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f578d628-a3b0-4a6a-9fb4-30e5e2831e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa519001-494f-4719-adaa-58109701c4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92c9fd5-ef2c-4235-9b7a-e71c23f7dcf7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56c9a4d-c8cd-47ff-890a-f61e30087e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f34bae-e1fb-41cc-866f-ac67ce8bd649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b687f96-8971-492d-bf02-6bd03845afcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "66650d6e-35ea-4c3d-ac67-589f9360b8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97463c2d-9ba1-4be6-af02-4758756a9c34",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42367543-f2fa-485f-b703-6feebe2d0557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29204dd-79ac-418a-a11a-3a8c2edd755e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e011ac-f692-43c7-bd04-b7c14045ba33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f54a815-17fa-4b98-8f6b-ac74d1ba97f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd398dc1-6941-4e69-b1be-3a5eb1975d80",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b171428-a5e1-474f-9d04-e9572952b1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e20d04d-a4c8-4988-b17c-0835ef72bcec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8f9142-a051-45bc-aed5-a8a9619e9770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "53629aff-685c-4e8f-8386-b58adba3b3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4eb387c-e51e-4195-8535-7f63f04e7d4f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a69017-c224-46f4-be02-2287921c4d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4b684a-97f5-4719-a90d-358040d858fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0341d01-0305-42dd-8022-2ccbc2ed3c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4a02a7-9f70-440c-b832-4676aea6bac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7abd48b-57d7-4166-96b5-8d0f28a80148",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f33762e-8687-411a-b7d3-e856d65da8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af59cfc5-d3ac-458e-a96c-ea9287073c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4800f0ff-a92b-4f9b-94fd-d4177210dfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6754cdf-b647-40ae-9003-6d79f1df9065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ec20f2-962f-4fa5-86f1-d9e2a9eeb8b4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b644b10a-1fba-4e6a-8338-6873a032d283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f2798f-83f5-4c9f-a879-32e1cf0abe4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99362733-dec0-4b0e-86d0-e1a7c5825486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2af2f84-1959-451c-a9bf-1d1e10264f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa531d7-a5b8-4fff-9a40-3b6fb522ac97",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7675ccad-30a3-4ede-8d6d-ae07fd600e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93bbfee-7623-4126-aede-d67c3a380c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae067623-90a7-4a82-ba00-104cf6119ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d48e7c0-e3b7-488e-b4ec-88363ef562b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79598692-60fe-46af-9fdb-57bd59eab46f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e41e90-63d9-4d0b-a4e4-700e95e32a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9127ce03-c854-44f4-8760-303deb37f620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f556f030-163b-4d17-b641-6fd01f560d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e52e55e-0799-4855-ba39-33117678fbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d307922b-92c5-4c42-a135-5efa65a9556b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53dcb1e-0299-47bc-89f4-3f83f2583a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817137f2-fc00-40ed-9c59-5cc9cf2ae618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c44bec-c836-44ca-b7b2-6aee96b10a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a639435-0285-452a-9b1e-99dc03900889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530be942-4b19-4ece-b1b1-e126c3f55044",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f26375-9f05-487b-bcee-ce6b8645a657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c7536d5-f09e-46ed-9c81-c67152311ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ea6cac-7e36-4312-aac0-40a7cff7ba1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "334c3090-0ad3-4d2b-8bbd-dbedf1b230db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbac988-ea93-4f29-8a9b-e6e3679bccc3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22d9796-e83c-4710-a8f3-cc0add6d7a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ccc6326-4c8d-42d5-9e6f-5d7bac7d4628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea0be22-d3e2-4ef6-9fbb-6677e6c4c0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc66ff04-d5ff-4364-8af8-657062f40eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed41e50c-064d-4559-98a8-f0a38d9da2c0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e91300-e702-4146-8976-1b059eecfeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432a9575-26cf-478d-a30e-3f254f215381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbebbd4a-3470-45b8-a6a3-107335a20f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ddea47-d1ea-4dd9-ae14-9e2c8d71cad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ff4170-2864-4776-9133-782e0159344e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8789528-5f2b-481d-9c89-1ac057524236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8d44d5-de2a-4820-971f-3d3911cca6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600ba9cd-d4a1-4502-85fd-a1ecfb75edc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4013e307-a9d7-4764-b841-46ec2349c1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68819391-9820-4d67-bcb1-39109eae6ddc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced203db-ee84-45dd-ac7b-c5890ee7e705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c22a94-17b4-4a4c-ab8d-f30e8a3ca4b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ead71d-9a04-4ab2-a5f3-cf077815a81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3e764b-249c-401c-a364-17a926f6309b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8602be12-3ef9-4b24-8064-022df48ef0a9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bafa255-25f4-491e-9c88-565b9252792a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4848b9f6-7d0e-4aaa-9022-f199492ac8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a34747a-ac38-4a1f-9a14-297652b14a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "90d19158-1a95-49f7-ae77-3eb2489a0dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f498561e-8c2a-4129-ae7a-418877568ad4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca18ac12-6ea3-497a-bd16-e3ec90976974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b802d5f2-a5a5-4766-8c9f-9af25d552717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385f2f3f-2d89-490f-a843-ec5b194059a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1be67ca9-164d-4fbe-82f7-0833b37c1f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1349b54d-4a1a-4d2b-bc2e-0845f24e35f5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a94c7f0-5701-4154-b901-c1f5d25bba2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d409bd-4723-43ec-8cff-399d6f6ebaa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6428145a-03b3-4fe3-a43b-b06d6e475a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dac4cf74-dbfa-4199-8580-7729ca23546f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147ecd1b-2f57-4d8a-a60e-71697d6b36e8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d35bc01-709b-4124-af93-5c0b7a11ac20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28943d57-119b-4dc7-8721-65b912538e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2332b53-af2f-4fd8-98e7-d7f6e23390fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "146308f1-4d7b-4062-b09e-76a62e8732c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991e5239-5a27-4404-925d-94e85976c48d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ff780d-d587-4f8f-932e-3d23d150c6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3bd466-4e65-4145-bcf1-065215cf1a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403ef840-4ee7-4837-8728-dc64d826e6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f152974-bb58-440b-9a9a-c761f71925c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6dab10-b1b2-4367-a1f7-0d578c3de8ac",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e891fb2d-8043-4b0b-aa03-5bf28fe51816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1e2349-d0fc-4a0b-a526-e1b563211c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae35a91-7463-4fa4-a52b-6366d29f0308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d816c5-7c52-45dc-ade1-830d280314a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10e90f0-ee4f-44f7-b89c-52201e7369bd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5a6a19-7a8f-4747-bba3-fd86dad31d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb95202e-fc22-4adc-8c14-cfa859555499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9d9524-6b54-4811-93a0-768afba5e777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "358742a2-0630-45eb-a06b-6036e64daabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5521dcfd-ca43-4571-a04c-094d9a36ea28",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fdfac1-7c2b-46bb-b958-111f0896d06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4623d6b8-30de-49ab-9eb3-940b74591621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cdbb68-2861-42f3-9997-fe675c604705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "981890d7-910f-4bf1-a074-0643413f301b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79393854-7d31-487d-8cb7-47f6b77fb66b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78fd14d-21e4-4b33-b07c-7995f1730f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb3d1f3-aa75-4fe7-b2c8-af25754e4081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928bf4f9-890b-4a65-af7d-9f4f9fa46958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80a3a391-bb49-4182-9966-55fef3c7ca3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeecc4d1-e182-4dc6-93af-da8553080ec5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0ca98b-efd8-4286-b152-ec3cc11acc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7af64a1-3f21-4e55-9b1b-85c1f8ffe0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911d244d-863d-4783-8414-342db381720c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b34cf32-6313-42d2-a625-388d5e919cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608f165f-7977-4a78-a0a2-2a63be44f704",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e19b1b-d4d5-4c85-9d4e-8093af15203b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6990109f-3e7b-4de6-9d2d-1013666a9ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec5ff5d-19a8-4257-948b-de1808e46299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e69d04ef-01ca-4963-9c0e-63586251b5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3b28e9-9440-4b4c-9c65-bb6ad9dd00d6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3128c961-bad9-4600-b053-cf49b56bf88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f7c6db-f344-4e06-9d9d-442bca32f0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5ed199-6afe-45a5-adc3-7560cb09bd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46f13f84-eab3-4978-95db-54fd6edf3631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff10dc2-477f-4c85-9acd-94c8ecbc88f9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d260632-cc82-4bd1-8679-07a8c5c84469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca7c271-2964-4243-abaf-acb2ea412825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af80586b-3f7a-4187-a9dd-9413082614cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "06b0f6f3-3da0-4670-9929-b513442defbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10a86fc-bece-4a88-ae6e-62f17af2866e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecc072d-d2ff-468d-b7ac-5a929c66e1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00395141-7496-4d29-a5dd-88c6ab0e714d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0917c837-c838-465f-b6f4-99d9cfd27ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "177ad762-092e-435f-b113-21b859bd5ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bebf1f9-fd37-45cb-a70a-f5d2f16aafa3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1a9870-930b-4728-816c-763734c7fe08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95a6e94-de7a-42ee-8900-a201cd42c124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a985c41-440d-4cac-8c42-af445d286325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a516680-4c19-4001-803c-5c184404fe35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f18fe90-1e94-4ad5-afc2-97bb96d74e24",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b51e3c-c09b-448b-8778-a81dc5e31768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46f497d-9983-4e36-8752-fc53f7312f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e04b46-11ab-4f2c-883a-78cdb05c1f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1512be2-6ac3-47b8-b336-d48e62d0fe7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f34d7cc-449b-437d-bf8d-4180b23f142c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee561e7-23d6-48bc-8851-3c4a4bb6d951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9669b14-c24a-4dc8-babe-db2777e8eeb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1997dc-f3b2-4425-9103-2944dfe19c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7651704b-4e96-4b2d-b627-75db11e842d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481bd2f2-0c4a-4693-bded-e1e8f36eb5d3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faedeba0-5dcb-4fca-ad8c-71b37c4bb5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "45c2a528-b9f5-4a5d-94d7-a95228e19be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c70d6f-a793-46b9-a541-f0892543e0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dff1664e-3b6c-4db5-a8c9-4ed892f2eff9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "83131572-e0a7-4a76-8a11-e2c56781fb94",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4193f2a-f5d3-4153-800d-93bb6aea4287",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b1b431-eee1-45bf-a5f7-add50502ead1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28f3ec7c-ef69-4b88-bbc0-aa8824023ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d53f674-dfa3-43d2-b852-6976f6409fe2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c8221d8-e79c-4453-89e4-909f85367fff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e429052c-5681-4ed4-901f-d68d91d361ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0240c189-304c-41e3-93ab-587cb703e23c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d558af2-8dea-4450-875a-fcb7fd58e0ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f093af95-50ac-4bd4-a7ba-33e455d547c2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cad96351-3ad0-463f-b275-68db1e1bfd77",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba315695-37c0-4924-abf6-ec0b1933d780"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9245c08d-b520-40ce-a5be-357e43d40aa3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0aad2307-a787-49d7-a123-929206b0c520"
                }
              }
            ]
          },
          {
            "id": "314c38b9-b9ac-44c5-8620-9012c66a4ebd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2b2830bc-6fd6-4eb6-a27d-a641dc64c69a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbeccbfb-6337-43da-bb3a-2e475781cd59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0a03fa1-743e-485e-a013-fc105c9f2d45"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a363284-440b-4bfd-a22c-92478ac07be9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d9f72d21-4cce-47e7-a8c9-80314460b48b"
                    }
                  }
                ]
              },
              {
                "id": "59c18873-e132-439f-aa31-e6835242f3bc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a3203bb-fb60-49ab-a735-e18e7c301e1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f564be77-128e-4781-a981-9483072ec9a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fe11288-21ae-4d49-a659-f21cbd74f5d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "16c68794-ec0b-4bf0-917a-7143d4c3e456"
                    }
                  }
                ]
              },
              {
                "id": "e7d76daa-bab2-4d2a-9eea-1c1d886dc1f6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e4cdd0d-cf60-447e-b57c-71b6418632f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d1344dec-6cc8-401c-bc43-4eff58268a83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69cde30a-5a04-4836-8a4c-b430ca937adb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e2c7c780-df4c-4d9b-89fc-fd24b9d2f710"
                    }
                  }
                ]
              },
              {
                "id": "b22562d5-37bb-4d2d-87f7-2e5d0ab2568a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c80d3b32-2438-402f-ad81-cbba44a8da58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc147a13-3a93-4bc2-a01d-9fb73c5c8daf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4013f90c-a3da-4380-a41f-3d048d69764f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4d936993-73c5-413e-bcfb-eefca4fa1f6a"
                    }
                  }
                ]
              },
              {
                "id": "d316a9fe-b53b-4e41-9480-6d4931c51048",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "343b8fff-aba1-4a55-acd1-1df49b961dc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf97f2cb-b6e7-4a3f-851d-644bff1e4f68"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e98261e5-5dc5-4f57-9718-13dc0f8c64db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0e93e3ab-9027-4aad-a591-1145b0d491a2"
                    }
                  }
                ]
              },
              {
                "id": "3b7b0f70-7069-4816-8822-f271a706d9d2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0239906a-53bf-4820-bd5f-a35d5453f577",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5be7497b-67e7-4de8-a6cf-4a3694780e7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bdffedf-9edd-45b0-8d03-8de5c66eaf5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2be0aa26-628b-4c6c-854f-7cdc93578313"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b867d15-15e1-4957-90b2-e2d2eaa71393",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66cd192c-7f67-4680-a7fe-fa576e6f273f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2b2f6afd-d842-4ee1-aa32-cc83cb7a78dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fea60a8d-b278-43c2-aabd-10f34e08701c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79e63553-9a1a-49d0-9759-ec8cc19837e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7b11f7e7-0ce3-4c51-ab96-2340e64239dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a6ef2f4-bf28-4316-bae7-c3cf0db9efb6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e07080f-8993-4ed4-a051-68d45a5b889f"
            }
          }
        ]
      },
      {
        "id": "a4c37f50-c364-4d26-85ea-e0a02eb72e0b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c5268132-045f-47eb-a4e3-390c13487d58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55fb85a8-7fee-45c0-823a-3034f3da6caa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5cd486d7-c4c4-41f8-b1a2-e23fea8af6ce",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abee905-4477-4ec2-bf49-43eee80c913f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76516f6-e5c8-4c49-b8e1-172ecd8f6876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbc5031-7573-428d-bd22-f1f5e46a4852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8357832b-bc6f-466c-b83c-412787919de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7817b26-5b0f-4dbb-956e-c2c8d63abee7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8f7339-d54c-463a-9c0a-e5f450c40224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd3fa0e-8d44-41e0-84db-8a9fe0f1cfdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3528ab0-4804-4629-b569-79b8d740c0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c59a60e-af8c-40cd-a3dc-ed0b78baff10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcce2257-5b20-4e36-ac01-b50732916697",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de8b474-68fd-450f-836b-906eeb7f0f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7dcd384-4764-4659-8ae4-c702c69f9521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536dd5ff-e1f1-4fa6-98ea-a58ed40dcff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6c875b-860e-4a8d-aed1-8115f8689583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88afd374-a518-4042-8f97-8622f50887d0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92f59ba-82b8-4f00-8719-e68a7b4e77c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5afcc359-b1a1-4853-bdc8-c954a1dc1f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca80ad3f-2209-4867-be3e-f4c81b537608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f47e80-475f-4143-a0af-f8769c48fd52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686a8338-cbf9-473d-a8b9-eabf656e0fdf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a010384-7bf3-44b0-90e9-49d8d46e5e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a4a279-30a1-4425-94dc-cffdd702ab8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36481d49-1324-4265-b2b1-1c89f47c9e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a295b43a-bbd2-4945-8e21-cf2c69d9f885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff52b3ee-a84c-4b2e-a433-6b68e619e97e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56892c90-e332-4a4d-8352-85e991e903f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41dae75a-5478-4fdc-ade7-897144e3806a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a636ef57-4eeb-4e1c-a82e-42ca466e3e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b04655b9-9b34-4e9e-9be7-b160c23c14bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2247954-aee7-46be-a2ea-b72672769ab1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a6e2a4-ef6b-43b4-8d5b-a29a6a170aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e16f7bb-11f9-48d4-8cca-d0eac45d04a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920a5e62-b06a-42a5-82e5-a78a32cf298a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cffe939-3b8c-420c-8355-bd6f1117e1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef271bf8-84e1-4155-89e8-1a132e56e570",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe564d1e-f401-49c4-91d6-b0156e69ecc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06423341-d226-4f24-8cb8-257109951a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ad10af-e274-4df3-9e69-497b8d725ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5328f57-3a75-4c96-8e1e-8e450ec54dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c217d45-dea9-402d-8a90-0ac794de0e6f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c8f5cb-bf9e-4e54-9e2c-90d29250a32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff46938-96ce-4fa5-904e-b94094319875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294006f8-b21e-4d18-aeb5-a05ef342542b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a988b950-17e5-4c17-85fa-20deea289aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afdae94-6981-4ff8-a379-d8fb5b792c58",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e58de7-9045-4bbf-95c8-4f69e7bcf184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad69a70-4235-4ecc-8753-998172c2ecfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae3d116-3f86-4e00-be5d-8eabeaadf357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6b7ebd-52bf-4dfb-be5e-3e3b9d503a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82af3eff-ccbc-4732-b187-1d76b3bc3d95",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067d80a5-0a1a-4e5d-9e63-d4c097693864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f925aef-3822-4da3-ac59-df95de8d0c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee24532e-4430-4491-a7c8-72484cf41688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "08201061-4ab3-40e1-9cd3-d298d85da76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edeaada-36c0-4bd5-ac8e-7de00620ee10",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd76aa58-844f-4eec-979c-25238e453e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37164c41-612c-4d47-ac8a-0039086757b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d9cb67-f7d9-4a69-a907-b6b920db0acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ebbf818d-10ee-4507-9fc1-a1133f2dfd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2787ec40-1a1c-4016-828d-8e0fe72ba6a9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab078eb-b912-4b91-a6bb-70f7e0480026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd2e9f4-06e2-43f5-a5c3-5ce5a2282bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3905bd-da3d-4acd-a844-7b45be1a7718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9770a31b-68e3-4605-922d-37519165a8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86428193-ff46-4999-9d17-7fcf20bed59d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6857087d-ef67-45a4-826c-c19a6385cf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05fd1990-3c8f-4318-b81c-f6657f42c25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac964a84-2017-4f47-b9ae-efd3ec7d5ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5562379-e560-4a4d-abf5-a409e31c00fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29cfcf7-6bd5-452f-86fc-990fee230fe5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cd8386-0bfe-4c72-a719-aa12b732948e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0f6a01-facc-4ac2-9a5d-d2463acd7c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fceeceb2-fc79-4285-8c56-45d96cbd9e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "76827457-bfbd-4eed-a29c-1c62323855db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9900a841-b454-42f6-a308-fbc2cfcb82a9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27377f7-d33f-4632-a7f6-ec549a13c924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56492600-028a-42a1-a357-8e6888868713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac40cce1-a952-422a-8838-32a7357749f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "af54e1c2-8701-4eec-8173-306180286cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be6d756-a48c-4f89-81a5-2d04014a6f51",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4b8754-5d61-4dd3-87c5-b9041fcca43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757ef211-5a27-4964-9dad-d87d2ed8706a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ca1b02-e05e-45cf-854c-fb9830fe3ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f143493f-8e4b-483e-a775-8530b05cd09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5972b80d-7393-4fc0-8b6c-7963b761b5e1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25db6ca6-3106-48b4-87fd-475503fbcdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89008466-ae4b-48b4-be93-2e8095ab4425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32883f90-f0a4-4de4-8f66-f5a6a9507df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "43487128-d102-46a5-84a0-333eb545ce04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92653d05-5eda-44df-a053-d9a558f52764",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7806c2af-719a-4660-b89d-054904336c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be7fd65-286b-4509-9a9e-47c0ad8e2d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6b0980-54e0-45c8-9194-f7ede4cca72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a18aaaf-b718-49ad-b764-9753e66ba856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e77a45-6c33-45e4-bea3-f48c457c9c5b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5f7a3a-b460-4ed6-ab02-ee6408540715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24dd19a2-20da-4371-aa93-59dd11792911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4a84ce-586d-40bb-a536-2292a2802f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef45706-1bb0-4922-b8f3-e55b191f4296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fab55ed-4ad6-4746-ab97-ba59d174df29",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdabaab7-fa85-4b5d-94ce-a295b1cee5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b423aee-0489-47de-980c-331aa46ae83f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd755cc-9e24-4c94-a435-0c88a18a24d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cad1b178-601c-4403-b293-fc10f0302143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1019a34f-b776-4f9c-a2cf-d22684dcae5c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7da4028-a5a8-4639-baac-993bbc652890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabeefb8-f29a-41ed-a2b8-880582474ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7996621-e41a-412d-a0b8-542db66f9e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51be0ba5-1f99-4ba3-9e5d-140914e389a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9d57ba-c85a-4cb8-8c45-27f26ef121c3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536fee53-1d70-44bd-bd92-d155c7d6d837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91a0dcf-be69-4acf-bec9-52a265e79113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bce1b6-4510-4dda-884e-a2c0f32b72fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "845efbb6-7934-49d2-a328-f06ca5504260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65e2c8b-dac8-4eed-b89d-7e6f13fcf70f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e0d3e9-263f-43d7-b324-869f1d0ce318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091adaf7-6734-49ed-ae6e-92c0941e2aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e46199-3680-4ba6-be31-9cc76e00143b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f64e42af-dec6-424b-a268-4e4b802c51f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d635512-3e95-4277-945a-9dd333d46335",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02e1cef-b351-4808-9759-ccb6ba79900a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f00af88-af87-48a9-af7e-f92042699303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b15798-9ed9-4aa2-a291-79c6fd10e1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a16f2fc-c472-4521-9d1e-76683d1b6136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cfdc7a-7a16-4cb6-ba68-c3072bcd4f9a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535266b8-7e36-4733-b754-a18db7051af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb13154-be03-4704-a3b4-51014d23c331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80dc46d-7337-4d0b-8b9f-03e74587c61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67722ce3-a57b-4a2b-aec2-6ad27a4e63aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d54562-4f7f-4756-8a08-054ff805d284",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae712f5f-afaa-442e-964f-1578b495c5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579b8130-8fac-4a66-b27f-96e5b9214c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964a5fd7-a22e-475b-971f-2edfd96db9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c11a20b-f5b3-46aa-b195-3101d6150e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c2f532-ec70-4ae2-98dd-0dcb792479ea",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb1695f-7591-488f-98ec-029d011a4833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d778d26b-319c-49e4-9fbd-1eea5f4656ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfa81ff-ebbe-4a3e-b1a4-af5e941e3720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "039ed16b-53f0-42c2-ad27-04549bf14ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd619de-eb2e-4540-9ae1-f9629f7cc288",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b3508c-32ee-43c3-8cb7-92685b912899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03b7b5b-be82-4040-b368-c6a7ce37e371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb594636-3293-4d55-acf8-b2624afca2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d907cb2-5d5b-4efb-bc74-b4772d3473ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea91f9d2-6cbd-4844-b97f-939997900a45",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bae960-1e6d-4cf8-9356-7c34ae758151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b0faf9-f33d-4ead-ac33-ee06408422bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a13f5e-601c-4290-9c61-96b8779e6c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d06e8e4-d39b-4f00-a75a-f124ba72ff6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a512a354-156f-4aa9-b676-e1a2702b98bd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a354a07-11a8-4599-bd91-4997e9ca65d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903da30e-6d44-4477-9cef-5e31f3263255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac9d577-62c0-4c01-8af5-1936787b70ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "383307be-b63b-46d4-b175-f674493b2afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db63dfb5-5791-4e71-8bd7-511794733c0d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c815daa9-6b50-4ee1-8214-5ba77a7d4b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8b6530-d0a6-40ca-aafa-19d9333de855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd15d19-2836-4da1-87ca-621a61949d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4caa3856-560a-41d7-b7db-a1a065603050"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "99a5409e-7c7f-4315-8be5-4e5b759dc128",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "692b1d0e-a2a9-4784-911c-30b1693b9843",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d211c99-1dbf-4c37-bb64-141ba7534687",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8e292e14-1da0-4a6e-8b7b-d5210860ce84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28ce3ad-22e2-4680-93ea-cd3669f07361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "526c736b-1b1a-4b42-84e3-8a54d440a4fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28720a31-af55-4c34-8219-28644572dc47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "789a11f9-cc66-416b-b714-f2c98fc42e08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f990fb63-5f33-4fbd-981c-145508e9694c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07e2f5c1-2e20-438c-a01b-305b61e9062b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1036ec2a-fefe-45ac-9ee8-0f3534eb1ea2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "23645486-40f9-4f93-a800-85f95aa9cad9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca3ab606-0cfe-468e-9572-657e24e10257",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ead3fc5a-0a52-4a39-9dc2-9f3d7fd6c659"
            }
          }
        ]
      },
      {
        "id": "eca379e7-2817-42a8-b58b-67a28de887db",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "664fe61d-55d5-4016-99b9-ee7571b58632",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d5d95cd-252f-41bf-8c24-c714c2e18fd1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c6cd3ecb-8e78-4758-a33d-5d3f440a1253",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3689007-9174-46cb-af8a-a2091fb0228d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1561bc-49ee-490f-9322-d9c6c804fdf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8438983e-546b-441d-b94f-ef31953f89ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "08ae6fb9-d152-47b7-b170-e3d1437b5539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0397e5a8-ffdc-4a9e-a391-c492b0746d0d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76af4e0b-867b-491a-b20b-9d275b562d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7a8b2e-d362-4eef-ae20-2cac0e1cbb77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871e88d4-c98f-4804-b152-083b292f09f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdbfec25-b98c-431b-bb16-0dd122b72204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd836122-a66c-4b51-8843-22bd6732a054",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85895954-e1d5-451d-b653-9a65da81a8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8a2646-e184-4158-8354-54c5a8bd2a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb3d474-5381-49d5-b830-dcac220c6b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d38a3e4c-dfa1-46bd-9c9e-7af64e44b733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e600bee-8da0-4883-8163-f441ff9c7710",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871fe51b-3474-4101-a94b-0c7adb4ef6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a219c0d7-40e0-47fd-8280-08dbd4289cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba0c2f2-d416-4f3b-9649-91749d29c87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f41e9dcc-689f-4c63-9e72-bb78777cdd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4032918-d32c-4b10-8b68-5edaa2571f80",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c91379-0b71-4250-b2d0-6ebc9d173e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d971b239-6066-479b-aa53-57976fec512f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b396f920-7e9d-4bf4-8729-8716d2ec15ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "679a0c60-abe6-415c-b556-40dce03a2f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db1ee42-7288-437f-905d-b04b2abe65be",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d00148-ba6a-4368-9017-f31673894c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54153a2-490c-4fb6-b01d-49bebc142792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22663f7f-c56e-4332-aa5b-ca73abaa6a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2cf1dc-584d-4300-9d39-0624ba046527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47791d13-90f4-4874-afde-905b89886668",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e3f8b2-18d0-42d6-b8df-f915571822d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f6c348a-0999-421e-a108-999cd39b57b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aabe708-fb30-436a-b2fe-a2e47d5a6276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a920e9de-fbe3-4879-9894-3e41fdd0a9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e832f0-a3ab-46a7-a17a-d84eea024dd0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3403fe-be85-4b95-b35d-660957ce6f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1390f17b-815d-4f37-be9d-0eae036fd7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96c8867-8629-43f1-b93c-43166456d394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a791e80b-5749-4a4e-bf5c-fd2ddfb1b496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f73736a-ce8a-431c-bb23-f779ca2aca6f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08e1d08-fd22-4ee4-b703-b2ecbe0cf1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf38afe-7194-4950-93fe-499d50320d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b445735a-d2e1-449e-9220-cd793b354a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a417171-5a3e-4f0d-81b3-4ac29260f782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896677bf-fb6c-434d-95ab-b8a3883bd871",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8a1dd4-dcfc-4800-b383-f9983f856641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "681baf5a-b7ab-4472-8848-48669976eba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f48ba3-4402-44fd-9f38-83fe9af27e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33196a2d-fdf3-44b2-9d80-31be5d31402f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99759621-868a-4113-a911-bbe6e69e1f58",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbba773-3416-48bf-8b13-04d0b2a5e740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab05875a-f7fd-40f6-8531-422661a249f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cf6e2a-1726-4fbc-b7de-c7b537b53c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5df8c054-a03c-45b3-8c20-aa75ce54e3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eebb8e2-ad84-4b20-84d5-1a7c763622ee",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad7b182-3518-4422-80b0-744a273608bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8dcd064-409a-4f63-863d-219fc92a12f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e158d5-3faf-4d28-8d57-3079cfe0bc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d016faf-42b7-4480-a6a4-5e84e5eae8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10d8012-2d77-455a-983c-57d6cf044a3b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158723c9-faa5-453e-a6ef-1224a326eb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c053f57-b26b-420d-b475-548be9e7fa69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f1c9f5-bb11-47d7-8b66-5dfa6c76d20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "50ba0a88-71b7-471a-a261-fa71bbca51e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc9217c-acc9-47e9-bb29-11aa0ed1e3bc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5514536b-0882-4a64-ad65-5de7ac2b9d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd261841-01c9-4fab-a004-cbf526fb8215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d823d7df-f7f5-47ff-ad43-f8324321bd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "01969648-98ca-4acc-ab0d-cfe53eccafa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452c0959-24f4-4ed3-baa4-b1f1b6868abb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ea5e96-9f59-49e7-8c9d-92865ff4b7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45862463-f1ee-4749-bcc6-e64884b8f4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4098bd7-85cc-47cb-9c1c-0f03962a96c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1c06c7-d281-4122-8135-73436c94e9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6226acfe-ab7f-47c3-b2f5-4767cb9e90a9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b6a25f-1010-4ad4-9bb3-adb62219e604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda414df-b07e-46bd-b440-ff5246f00964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6922ff42-32b6-4f0a-97e6-a9e24cf698a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "25fa8891-1f01-4d3e-895a-cc89f07f5ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94072ae2-ca15-4722-8cf6-380eeae63416",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48267265-b0d7-4b6a-9596-f8fc9dbb7bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0b359a-a4fe-4c55-9b45-7a779512f938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318adefa-3ac6-4027-bb48-d676fd865760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e49b753e-1122-4229-b3e6-e0d022e281ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43546db9-8338-4eda-9a0d-b5d0a4390e18",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2397cc5-86c0-46ca-9d96-12e74f7a0abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b8ca11-70f4-48ab-91f5-0dee754487d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cd1c9a-bd61-4b8f-8910-ccf99d1658bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "86f7409a-3521-4255-b934-1cf954b8da75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4dcd9e-8aa5-4a8c-b481-875eaf12575c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb052b69-1f7b-43fa-864b-63a066fdc79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2f0be7-399d-49b1-a7e4-9174129c649c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a79ae2-3bdb-4fb3-a12c-43fe3f2a21f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "708cc839-63cf-46b2-912a-d3f9144db37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b97209-64e4-43ff-bfab-3374d70f04dc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f797fa7-ef2e-40fa-9e38-bdab58ad9ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1b1754-d910-42c1-bb11-cad294a87452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a4605c-6719-41ad-b963-962eb7de73b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "033a7453-3eae-413c-8faa-b15749ae8801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536c6bfb-c2af-42ea-9ea0-f3289c9b9f0a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8a4d13-24cd-406a-865a-b6bfe466265e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6438c8e8-fb62-47a7-b6ee-f4c2fe217c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef80624-a3a5-4b14-a755-bea0fae7e4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39df1dfc-848b-409c-aab9-cf9a2b621c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71e0171-2ef5-4fc3-b4bd-c42366789a3f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174edcb5-e317-43e2-b108-40d45fc3054a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca164dd3-ffe4-416b-84ea-9c9fddf526eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd73ee4e-c41d-4130-ab48-7b96d0550b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd4124c-3300-46b5-9090-644bd8c43616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c077687b-dca1-4160-a46e-025f67a16423",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7803a5e6-44b5-4216-afa5-82f385a41866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2211d125-952f-4c26-b9c3-e4a7eeb829bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae2219f-35ba-4576-bc2a-e7fdb50f3ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a72b65-61ce-4962-8c8a-25f884eda5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53bf52a-e608-4242-b1ed-d12019470052",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f8fe36-59a6-4072-abf6-a8d076b3ee1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49acb09c-eabf-4cbf-8248-502f25bc3728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea01d75c-2ab3-492e-81fd-6c9bd6f8d452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83d0aa30-1ef3-4c97-b9f0-d782f3c2c7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afafc84-d672-497d-9744-d1ce47545a38",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c455af-b491-45eb-966f-79624a59b9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ccc054-6ef0-44bb-8cd7-9f50a2078877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d70a82f-17b8-4cac-bb3e-7fdce3165652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2b6c59-9435-40d7-a8bf-d043ddf85a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47130ef-6c2a-468b-9cc8-4e97edfc1473",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c25b7f-90f6-46b6-a555-9cbb6174696d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4724583-a247-4a17-8c4d-ee767599e407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7efab5-660c-4615-ac57-8e2219c17b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a537e89a-5e57-4287-b5e3-02169a39e680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a196089b-7cb5-4484-bff5-b7dba46217ec",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7402911-4e59-4405-805d-2f3189f15541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da33693-ac27-4e03-9f04-7c395a0a9275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976d9017-4d32-451f-a0d7-bfa02d8e35e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be191459-ff29-4676-86c5-704526d87d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5288e6a0-a8cf-44e4-81bb-12ebf8a2242e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e2ff03-9453-4510-8bfb-9e6f27cf35b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a2d1aa-4a4e-4e62-847c-a9c938aca61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabd89fe-5a46-4a2f-a34f-c51a4c0ab240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6048ce-295b-49b4-bf74-3bec47f775b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344797bd-1ff9-4e14-89f7-9b1346ce2524",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e095e6-5474-46c4-a561-edab1ba9ab3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a743e78-1dca-403f-8789-81382d5583cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae260f6a-6d11-4098-882a-71eabc9b240d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4157ecba-fba7-4552-80d7-53a6ee7ee6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9ec7bd-ca67-4b86-b43d-50cb9d907efb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38518503-0955-4536-86e2-db42625b3bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6ba67a-a8cc-4210-9f35-03250e86bc11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a03180a-5412-4b2d-95ef-784cd67dd3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe46110-b124-471b-a87b-af0253f4e7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69090c8c-9598-4505-860e-e1a5c9275401",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dd0f14-f94a-4c21-9bab-b0981b80ab3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19e2d1d-c0cf-4cd0-9e10-5f796b92d547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0417670-9fa4-4f66-b1f9-e26b4197333b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41119d83-a6a4-402f-948b-31cab7359ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893d0770-b36b-4c71-bd9e-8d27ade6ffd1",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdd002f-a616-4151-b52b-270cf782eb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08f83eb-f684-4396-9f66-3bffbb880d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6074c244-efc2-431a-97a0-f5b2d2d28089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ffa7afb-acb6-4155-bdd4-19e43a0dfd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4aa6558-fbad-4d60-bbdc-91a76e95c1ee",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64878cb4-d6a4-4e5f-8637-69f8f285373a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cdfff3e-4eef-4982-938c-a6828df53457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f711834e-df45-4c7e-b9cd-276d60315997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd85c92-0867-4fbd-b97b-bb02b69ae99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23aade0-6ed6-43e2-9cb3-66d1642ddbc0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54bbe39-f699-4f9b-98bc-0b4353d0b855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b6447e-a33c-4e7f-aaa5-330128170588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d315b594-9d83-423b-8b96-4ed9dfa5bd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b5002b4-ae60-46d3-b970-279917cbaec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a7f8d9-9c0e-4a06-93b0-1dd09fd16055",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c7dce8-3e56-40e8-9e4e-c1ca1ab5bda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f331e930-34f0-4e19-91ee-e5a3b868740f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf00b44-b091-420d-9939-81f629aca025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ffaf396-a7a6-45f2-a959-cb14f23c6751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f82bbbf-ff93-4e62-bd13-d1d21ac423fc",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e016783f-6cd7-4577-b2e3-9f7f82398b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851462d0-890c-4d36-bc56-40c67033193e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf22403e-fb65-4ce3-9e38-9a2edb0cf966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e1b698-7629-4cd4-9bd2-676231789466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdf3d2b-61c6-4f36-a699-755b1ab83ff6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af9bdb0-4b40-427c-83d4-ba548469f917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104ae552-a72e-4e58-bad7-3c78e6ab57cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b224ea5-1fad-45af-b961-682c2973e7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb604f10-38fd-407e-b2ef-8f8041e611a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9844e34e-17a7-4663-adcc-e53a203fc962",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06eeec59-4b9f-457d-a316-6c83722d8303",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c643f8c3-c1e6-4e51-b2d7-ff6f4cc8634b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4e637a02-e127-452b-8bfe-339e81e3bdca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d228d424-df9e-47e3-8a7e-0dcf183be968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c27207e6-ce92-4538-895e-4ff11efb3c33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be67ff4a-4160-497f-a827-2721d1f0c326",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7e2c810-9aa9-4c7e-b98c-a210429ec481"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "07919307-c1f3-4159-81af-aa9e35122bcb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f89516b4-e466-4332-8059-5544164b7c35"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ba6db49-f94f-4db0-a443-7fed0b0e0b6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9209ebca-0b9c-4b70-9f14-da8a6e40d3a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53e3e82a-df21-4b02-a1a6-6cbbc516e033",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97142c8a-e6a4-433a-a740-384232e69bd1"
            }
          }
        ]
      },
      {
        "id": "dd54e668-c6bb-4d0a-89b8-e01b74184287",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ec6aa455-fd38-44ef-b27e-6abd9d0011ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72c38bea-2f12-4012-8c9a-4ef192356669",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "105556de-6088-4e93-b904-658327280cbf",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0656ab7-8647-4f0b-a19e-dc50b9946f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d179ab0-7d64-47c8-9e35-cea0131da680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef59f9d-a833-4e5d-8375-af8d4ba4fe1e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b0a89c-a9e2-4992-9c4f-e5f7c4087cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3d97c0-2e68-4dd6-a337-c4230bc85243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382f9530-aeb3-478c-9166-a313e7954b24",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d180600-1967-46f1-9ad2-a05b2f5fa0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a874c746-3c45-4e1a-8ea9-8d7aa7093f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb434efc-b9e2-480d-b3d4-403952b4f25b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1240ad-6f6b-442d-8304-9f6e473faad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a2e568-3304-4aef-982f-0797ac8859ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9486978-edf3-4673-8804-6cbe666e0ea9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4fea3f-9a65-43b0-aa92-772dd8817841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a82c1b-db33-4020-ae87-53e9c0eafdc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d16294-9f09-4d07-b8d9-243d8ddcc044",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57a2e22-6d5f-4eda-91d5-4138faeb9e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8817dd6-e5f7-45c7-871d-bb014e2c66f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d6a749-fa7c-4198-a7e8-09cc055bc8b0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e99cb4-d52e-469b-9b8a-6a0e273b24c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0908d6b1-8f4d-4a3f-86a4-7e92e6226e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8920fa-d636-4785-9ae8-8df926f96735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09365eff-8371-4e39-87d6-f14cce1e2113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f4ca6c-c339-4886-b67e-286e5b25a7c4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38aea6b1-e3a5-4fa0-ae99-2c498ce274f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "691a489f-5da2-40ae-ae6e-087a7119695f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b4e2c9-f297-420b-aae4-5f0e32902e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe8c546-4108-40ff-a838-eed6477545c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74ea644-776a-40db-8e9f-22c9076ef843",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8bf16b-96cd-46b4-843c-845bc459a130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e098ec1-a9aa-4b00-8e1f-c07bf48d7d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54f6d86-4c7f-49ef-8fe0-6e125211c907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b876354-5d2b-4d42-a5b8-c7d7f65c24d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f0dc3b-a935-4a70-acfd-cc7a8e8b2a28",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f7d802-2dad-4dbb-885a-cb654c89b7e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad2b720-5b5a-40e6-a739-3d6cd920dcfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29de751c-0efa-4355-8a91-a0a985d89101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d6b999-b19b-4ab1-9f6f-3e8123436767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb0f7d5-62f9-4704-90b4-8abb5dd9b16c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2594d38e-f17b-41d1-a4eb-96cd1c5bae2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2472c40a-79cb-48ff-b3a6-778d83c0a858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdecc92-ee57-4b7c-994a-afad33a03c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0ee174-1508-42e1-9e96-4f518568312b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d4890d-1367-48cb-8906-606f11caecde",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695d78a6-37c9-483e-ae89-e80a273fc270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e186373b-277a-4878-8433-84d63f5b46a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e21ebb-fc4d-4475-bc77-d19e4731b744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4aa8064-8e63-4303-b9ea-18038fc5e1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a036c36-d424-4847-bbae-d4ae83482927",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1117ee8-c39c-4007-a6c3-ef49d288bab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59c74cdc-b216-4f91-b594-c2dd18f2876d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ae4975-1934-4fd2-a037-5369be0e2be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5554b0ce-f760-4009-983a-df0b047168e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b66afe-1c84-4c84-9d30-ba0ff96b393c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d7017b-084d-4905-afa7-1122fd5f647c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9326746-03f2-42bf-9896-04222b4342e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c3e0e3-70c4-4edd-990e-90681b6abebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b88158-21ec-447f-a57a-48ad060f448a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2f8a4f-c00b-43d2-8378-e1cb7159ce24",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925e9dfd-1017-424b-9f34-1e6a0ae9c129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecd4d1eb-14e1-4232-8814-8f4a10c6284a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5842049-7596-4278-a483-6a17169ad77b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3236e228-98db-4f75-9625-035da9236dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014fb4e3-70a4-4e61-a109-cc46e634f911",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d32a68-47ea-4257-983f-cd5d9c6d1b41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "039a0c20-b1e9-4399-9659-f7d8ec768fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd99a09e-1650-48b4-9517-131498c416c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efbc43b0-1f7e-45b3-8df7-40fea93b2af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a839a363-ba1a-47bb-8f93-643c618938e6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d12e80-ed2d-4ab3-ab8e-7ee2003cc16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b4b47b-c2b9-4253-9e01-23dd4969273a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "606153a2-0423-4516-bf5f-a5e903ef4bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23db4395-a174-4278-9cca-e6c1f3765f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3653c05e-7910-4546-8da7-9705ad001878",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1550fa3-ebf8-429f-93ca-2ea87f528974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508d99d1-b1d4-4e94-bc94-216b6d3b943d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfe610f-99a3-4253-b766-6badf8a68080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2064e702-c254-4090-8166-3d658a633e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d1650e-a3ef-4bd1-b55d-ee9a3e614b82",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8c9821-b5c4-46e0-9fb2-cfe8016b318c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a6ea1b-b1dd-4d2b-a27a-d087b4690069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e4647c-d867-42ef-b0c7-83bd829bb17c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fdd2f06-4df4-448a-a130-647429bd3963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0906288-2c93-4fc2-a89c-75780084c4b3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdeebc92-94dd-475b-b4ad-efe5b7e7472c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d241eb98-008a-49b7-be32-7f8eeadaabb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8f4cdf-b507-4d11-ba15-33922297af70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f3b33b-92a4-466a-9c5f-b49fb38545ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536275f5-03ef-487e-8551-75c336174c95",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f24428b-8ec5-4129-8a34-cc50989ba48e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec32d90-ae97-450d-961d-42751a0b655d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19b45b4-ec79-43a6-9eaf-b02e599d7f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee5c4b6-2554-45f0-afe3-3c5bf471330f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f978e376-2c7f-46ef-a7f9-0707f4992433",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7819a3-1dba-4558-8396-3f895c368c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b52a61c-e62b-4748-83ef-aec9b1d9e5c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb1253e-91ab-4510-bbac-370c45605f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f3605f-632a-43c0-b4ff-57a372599c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1892d038-8f29-47fa-801d-b63ee76278f0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa34878-79d8-44f4-a6a7-07705acd0230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe0a055-964f-4c95-88df-7aafb06c9017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f580b7-a96a-4e80-84df-6311d5a0a9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56917d69-4668-4fa5-ba41-8548d13d2783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d61eef2-2a8d-4d49-94c8-31668ec794b6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e806b51-63a8-4383-97f0-a863ad51d8ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a6fb9eb-ab35-4ac8-a9fd-24aaf28f22c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63922ad7-4f4a-401d-9066-3811d523d8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158cbb18-f4fc-4f25-b14a-47212abdc0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5531f1bc-46d4-4d4e-b521-8556a59011dc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a058a20-f7ac-46d4-943c-98d8fbd7dc6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35416686-f2ac-475f-8e43-1d9afd8ee4c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a068c3b-71f9-4a6f-b65a-4a7a57433943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906b200f-833f-490e-a312-7634aed376f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbf5d29-d097-4e87-a59b-990afd5586cc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b887d0-b940-4d64-b537-20e950686f76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa8d64c4-9a9a-4ac4-b95e-8fb0aee5d8e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a16b59-7746-413b-9050-08e2fb9c0700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e051a1-3f13-4e77-bf19-d90fee1a8efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd7d035-ba96-48e3-b559-d37b2f0293d7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630d4c51-c6a8-4a31-85b6-bf0d3ad3c3dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7f2175b-042e-4ce4-b733-89be4e22a7b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa09428-189c-4f52-b286-3814b0ca540f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ec3e52-38ee-439d-81ac-d3d3ab3ca507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef0ec00-1362-4340-9413-864734af3141",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a62399-2fce-4b25-8bcd-6973cb4bb2dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0d4810-6c48-4d4b-a0ff-a4137f606a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cb676e-3d5e-4fca-b21b-0d2003618b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906d4460-d39d-4c2c-bf23-31085fa64b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276077d6-4746-486f-803e-73eb2e1964cb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fecd2c8-02fc-46fa-aff3-a76c636a4c91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b8b4378-a450-4435-93d6-6353646d60a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b1a8d8-2c71-452e-a3bf-b7db6fad9397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb14565-f649-41fd-9706-ae0bb72fce93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706df348-4d35-4da3-a37b-f12bd2c5d27a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4783ffe-86c6-4459-a673-62ba327938cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8cb46ee-be96-4193-83fc-e0c01a22302e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5c3f1f-4d4e-488a-afed-0b48347949fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03bc2cd3-6839-46fb-ab5c-f9f7be1ea9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceeaebd3-33ac-49bd-8f75-bd028d9c2c0c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1b1866-feba-4e7b-8e81-dd6c9dcde56c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef161dd1-17a8-457f-8638-20ad81e3141b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68323a9-fa4f-43b2-b4c0-dab5bec835e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c306d79-d426-4147-84f1-31dd4d4cfb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd51bff-9c94-405a-9e88-4af44ee5ee28",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2bc0a9-86bf-40d2-84d2-877f0dd67f48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6863bb5b-91d3-4bd9-b9e2-816a288ee285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56bd8c1-a39c-4012-85dc-1c6fd13164ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc573997-4ccb-4189-b9d7-a997fdd6fef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ef00f3-63a1-4838-a845-8c581bf1714b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bb8957-0b6a-4f81-bb27-00cedac7df39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2acfd46a-7f29-4b74-a830-2ff88b84c7ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ccc307-fb9f-4e5b-ae5a-c2e4dd3a1b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc223485-0697-4aa4-a0db-5d9319ecf0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f8043a-d021-4fdc-94bd-f74acc5a11ef",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77692cd-608e-4b2e-bba2-1f12dddca7cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b8fcb01-0261-43de-b445-f18bd4e9079b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b23ae8-a65c-4311-9190-32b396359b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d3ecce-24e7-426a-beee-bcf28a54f792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea3e456-db60-4324-b164-1e9badfd7ae1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d6b374-f3c2-4ee0-b8be-28b271758def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666601cf-98e1-4618-8770-ce050c8f84ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4801a397-2612-4bb9-90bc-c2609a50318d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d1d134-cce8-4a3d-ba71-9ad3601bcb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94203d38-0db8-4ef2-a993-a77745b1ea47",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0347902b-cc12-4ff7-a996-862a059e32b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d17d75e-eb3b-4394-8a7e-a992a128366d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4944c6ec-fab6-48af-ba16-da5c7fa4da86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f9b918-3682-4c14-8c1d-1cecc226f203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1313dd4-7c6c-4f7f-be42-90e7991d0dd4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09633b02-1edf-47e5-a9e3-28c5d55140f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c266f2f2-bfaa-49b3-9a75-9a73a2b071cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0318f22-f640-4e23-a84e-208db345455e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe00ee03-141e-4033-b5c7-e2f531636d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26497e3a-115a-4194-b298-f869b1893535",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bdf698-6016-4061-82b0-4a43dc474c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b100c805-95de-4343-a754-9a2451a62882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1bf8a7-6e51-4c34-8d92-79754922418f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b48d66-b658-4e48-83bb-cb8b08203e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93097207-9135-4da7-beae-12ae316d76fa",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47bdb2e-9d04-4374-9e65-6307e88639ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10754f2c-be47-4690-ba4a-b9cb28e3d635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba3d9fe-b222-484d-8c73-71c4435e65be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a7851f-076d-4b8b-bdd7-188e019a55f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1f8787-ae2f-45a8-9671-5f5603b67486",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5732c78-5b6f-4fe5-b7f0-633997cf4ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969e775d-f6e4-400a-b352-ddc2d31848d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f22cf63-d94b-4229-81b8-7099d9655719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275e3659-f0f2-4212-b482-ddd07eb23f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019b7c20-5b60-4f18-8b61-9e32fe9ccc99",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c53ee7e-b029-4221-8aeb-9529fd6c9f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fcbe4e9-61e4-4e88-bd8e-d537d0858d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97f355a-25a0-4379-999c-e366d2fb2fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51207376-5592-46b1-8c17-384a923ba4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd7bf57-ee38-4a24-adaa-b0cd6657168c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9287ac8f-dcc7-4348-8212-28a1eebac6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61041ff-f005-4b04-9215-db51340e401f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bda6cf9-900a-4969-a3b4-799808269a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f292b0-af5b-4109-9d51-02ebdba2db5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285630f8-c847-4620-a9cd-e4bdb5480c0d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263ac8c5-2fa0-47a1-b73a-e5a8cf4c134e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd4e276-bffd-4556-8382-7cebb883bbf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fbee80-dfda-41d7-ab91-2e1e5aa3e0e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32bcbd02-8b94-460f-924f-bd91a8fc0c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8357622-71cc-45b4-b085-3a7d64a18f98",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff64312-ba46-4861-b71a-f4086683670f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f8b7ff-7f09-4004-9efa-0d990f174f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfef485-1fed-4210-abc8-27773988cb6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f270b7d-35bc-4094-b92c-0fcc7963deeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd5e95d-d5a1-43c6-83c6-981461a692fe",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10553140-45fe-4f08-81ac-56a9c881ea57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3842423-674c-41a8-a1fa-4f6dca3cefb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "886294f4-0f8b-465d-81f5-e198e7273a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b969aba-f2ff-4b85-a6d4-dc1831eca01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f580c499-3fb3-4b16-8143-58db46154d6c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20875a8a-a93b-4aed-815f-54b98cebfb76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31e8cb6-6fc1-4d20-bfc4-5ba57198e486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6139fa9-7977-414c-9322-19520dc94cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70de593-3d9f-46c3-bca4-672747544cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1d7809-bc80-4430-af07-6ae5e3cb5d64",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dedd9f6-d819-40c2-bd11-87cc991d6201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab22a2a-db66-460b-9b2e-972a268d68ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0a83a2-1f68-4f92-be40-976617247bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef1b8fd-344e-4d28-b858-b2ceefa2d860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a08eb05-6fff-49bf-a69d-a3a1ae762b42",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec1b0a8-1e8c-4a17-aa18-f5f9f7f73cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97de2054-cab3-4b1f-817e-64232141289e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "310b8928-12ec-4ebb-84a2-4e91645e2c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a65394c-39da-43a5-a98f-220a94f46a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6036fd9-9e08-4776-8ac2-f3b9b41b724d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ca1f78-bb78-402a-aeb4-00b223f68ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee803f5-58d8-45d6-9f8e-2e22bb3d634d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33880628-cd4d-41b9-b5ee-9b9a61495702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7c6639-6dcd-40e4-8aec-9886768573bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55774089-7d7e-4475-907f-bbacc925041e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c512ea5d-402d-4721-b775-9a3be1b1d6ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362cbb99-c1f9-4d2b-80b2-14635ac79364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d744ae-75ac-4dc9-8011-e8320d8bb1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38d431a-1f4a-48ea-9c1d-e840ccba04d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47150af1-22e1-45b1-82b0-90efaac68090",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985a0db9-0ea0-4493-ad00-2bc0f620eea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d6b7ce-13b0-43ea-8298-7418d66b5add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388c8560-d9ca-486f-bae6-fc93e10511a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5581e8fb-4d96-4bea-b7e8-1388c6d6cdb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459b55ef-8f35-496e-88cd-ebb7aaf64cc6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88b7bb1-c6db-4667-84da-81cf2921ffae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c92044-30ce-4505-90b8-25a8229d1a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79511dbc-0043-4cd6-8ef9-9cf49ab5f08a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f035661d-76ea-49eb-8c17-fbb10542f7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a196587b-d02e-4d50-9280-db9c9c4b1547",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e13e1cf-68ea-49b4-9794-59ab847f2a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70699389-82fa-4f8b-88c9-8fd8be746f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02af1fda-19d8-4a82-a090-ea9f956ff234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca865c8-a6c7-461d-bbe2-fee0c7be1a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70582a3d-d266-4492-9cce-05b10f86754f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad3a089-23f9-40e8-8661-3e73c8df1c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e010daff-8a4c-4b9a-ae7c-75584a69a56e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fccb6e-8bb3-4749-a057-bcbe209ecdc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46583fd9-0514-4ba8-abf2-72aa2ca3f86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bfd077-9c4c-41c5-a878-fe0ea452146d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7971ee13-20d0-42cd-944b-931be080e718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e4537b6-e5d9-46c6-b7b2-67beccd79e96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8458efc1-97a5-40d7-bdcf-dea1408a3519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49dfa4f-dfd9-4c71-ad7e-69d32345df11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adab164-47a7-4542-946a-bd3d8b7b089b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fda92f-0d65-4ae9-84ea-7fcb877390e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3101b0d5-f19d-4314-b425-716ff96f73a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "446c29f9-4dc6-43a3-afab-754fe12feb02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767f09e9-4ddd-4d68-a321-5179360fa9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b64a8a6-8269-4dc2-865a-4a82a02fc2cd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef40a3b-cfbe-4406-a201-831ec10353f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de8d1c7-7d68-4239-8c21-b014fffbe711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8264e9d0-49c3-4a98-9742-bca62b82e121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0963f49-4dea-4c64-9205-8ebd50918549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b175b8e-8150-49c5-9d65-df46d283a9c7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18871926-fe9f-49d3-8346-d42f9814c51b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c1a617-eca9-4b25-8f26-b8775f08e334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e0be68-c2f6-4632-81ba-7e4ec4c020e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbdab246-8a82-4715-ab34-89047c796a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b7881f-5b68-4fbd-981a-48824dc08853",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec14ac5-2d8d-407f-9eca-7d1bbc75f850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a0a092-7873-4278-b7d2-7a4a864b9f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "078775ab-d80e-4b40-8de0-e8de3ea2893c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74cd29b-26a6-4252-92b0-1cb4d507ea7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290a031c-5124-415c-ab90-0f7352464f19",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2933254d-ab09-42d0-b5fc-5f9a5e622672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f7af5c-bae9-4fba-9f6e-4846e233d276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07515d0f-f159-4df7-a5dc-69740f29bfe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8651ef-9a1e-40b8-83b0-a7c529fe190c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060d4dde-ed3e-4b35-9545-e4110160d0c3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8fb737-3248-422d-84c7-efbdcaf93cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94dc65de-73e9-42be-838c-f530c61f9cf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e2953a-1b02-48cb-a29f-1fffbb2f28d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e35585c-dfa8-4489-b27d-5148758e87ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d112d926-8e48-4386-8a06-454d690016db",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb63776-eac7-4d36-8b80-ba44e98c690f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "877e9e41-8bf7-4a35-b847-5c5663196468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cc2b21-e609-4b6f-bd7c-4132f80a4e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea99d6f4-0f8a-416c-82d3-34f0ddc0c250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798df009-d7e3-4b21-aacc-c6b83b24c395",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35ac9fe-f957-44dd-95f8-6060bf43c219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0b2aa8-7711-4d3d-8e46-c691435d8026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb39307f-14cb-41fc-a36f-e0a00734c838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02eb8a4d-0212-4c3b-bfac-4285b80c6a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c5932c-9483-492f-970a-a31aacb35b02",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec3adfa-5e1d-4d80-b9b3-14c6bd7e8d19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb62c471-9034-4717-9a7d-1aa9ac2bbe75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4ed8b6-2d86-4727-8215-19935eff3de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21f7416-147d-4198-ab6b-85fb65d75298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ae61b9-0268-4612-afbf-7b97a27e82d3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca6f366-40b0-4f74-9627-e499adabdfc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12b5e0b6-2d62-49cb-97a8-8d2b67262a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffcdf53-626e-4500-b618-e43eb9c1c9eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86413cb-1acc-47dd-99de-4ec3cc78f285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee424935-afda-411f-9298-49463e04a003",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcf0d89-9cd9-4389-bf95-3c72a8a4f40b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb74c77e-a8be-46d1-8bfb-e199fb019674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26a0c30-23b9-4f9b-b8c8-dc47afe2f757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12729b45-17d0-49f0-8668-d3b599de220b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ca1a27-fec2-4fb7-aff6-570363e887d7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9fb205-a0e8-4048-8879-e9f3233541f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11260c80-396c-4ad1-8089-5582dc73d1b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d4ab75-f6bc-4899-bb30-6a88fc104efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf3a12d-87f0-4816-b9c9-55242e2e0395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94719fa-1cfd-4947-b961-98b7022e34fc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc1a4aa-574e-424e-a2fd-33e5eefe2ffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad989123-48ec-4b7d-ac1c-99636e3bd710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9959a0e5-a7e1-4b84-ae2f-6b6bc0c3acca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a858d0-dc5d-4c44-8ccb-8a4070c77962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f2ed49-78ea-4064-8e68-b18ba35a7a69",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3f5453-5d3c-4311-b739-bb78b000f627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4857013-d703-47ce-b8a7-d10a6ce3ecc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91f4811-3fad-4ff0-8afa-38237ee4dbaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67bba432-f428-4fa8-858f-0f750eaad292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23858c7-e93d-4a0e-b95f-5bf1d4026b60",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50da2cc-eca6-488d-a6e8-6a1a3362b788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a90c7b97-4a58-4bd8-8677-a60090c69050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11e2630-9ab2-4b62-b7aa-7c36e0ae0c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2172ab0-9746-45d4-955a-d459f65f1da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab86ec5-2609-4ee1-8506-cdf5ca0a3bcf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5cf08a-0358-48be-8708-569c372a2119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7996d953-133a-4fb3-9165-d2e76ece9f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd9d361-4b27-44fa-96ae-12b806ebfb76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ffcdbbf-3ffe-479a-9bce-bb107fecb6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29e2ca5-51bd-4aa7-98ce-8770e8aa8557",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ce2268-fee3-4300-a4b4-70f5894320cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9ea5c70-b7b6-42f9-858d-bd773e5db949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38222beb-0079-4668-babf-b16b333877cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9943165-e42f-434a-a705-9cb95d88247c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa124e52-070a-4a7b-be5d-73821133d549",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61536ab-075d-469b-b010-5f0e82b2e64a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b11f46ab-6e65-426d-882e-0deebde1fd14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d10f5ad-e1b8-4137-8dc2-ef4398eb0581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2853f167-f80f-467f-b64a-06dc71d04a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3243503-977c-4559-a3c3-05ac1556b1fe",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af165fa-77e3-4cb6-9108-6cf8622213bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89f95a36-27bc-4a2d-aaf5-2ce51db88835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "393c7a96-a55a-4942-95a0-c4bd83ca48f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd628f3a-3404-49c7-ab3d-c9c862867236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cecbde0-f153-4c8f-9243-de97d6e3ee63",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884f4c81-165a-4a50-8317-1ffe37547ee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "931c5ebe-5f5b-4398-8695-c778237b15fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c45c01-0eb7-4390-9c1b-17942ae9f3d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c94b57-83c7-42f1-bfba-921ebcf98923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f50493-18bb-49c5-9187-f627fb7767bd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ee60f2-ef62-4081-b7fc-ef7f2037131d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4da3460-96aa-4658-862b-327920bed588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d96b796-3e69-4996-91d6-49bf801a5f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc58143-e7b6-4538-99b3-9f8f458caa67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72cf509-b6d9-43e7-892a-ca282fa321a5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0bd2ad-2f93-4b20-a94a-d61c3b787775",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67f6f742-4f10-4a9d-9d80-8fab3d36f6de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2067da-4f66-4dca-b9df-12b8779b6af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "879143c6-3f4f-44a0-bec0-1ec4efb22d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e1f354-f19b-492c-badb-61b9887bbb24",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df467a7-9aaf-48ef-998e-68829ec72247",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25f6f907-7b45-4900-867f-c65bb89019b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb6447c-1dae-48d4-97e8-673eee7a678d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2390faf-2c29-46c3-9429-56446e2713b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d308a04f-8dff-47ed-8523-0e8096d8e257",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e962657-9342-436d-8119-cd6c645fdb2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6f5ed38-4a84-4447-be1b-fcb1302162be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29518039-98a5-4dff-9ce9-a4c47f40299d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8f46f4-6424-4c5f-a382-f0f06965df4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c811ca0-4113-42fe-ab49-d036a05fa5ae",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e064651-f2a8-4619-9e02-427c1989d28d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3776d65-c3ec-4550-a0cd-77ed97b4f56f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c7fe2a-2397-452c-984f-cbd77228f248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4a3f06-e42a-476c-a8fa-6985341e3891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90995345-bde9-4090-8870-27fbd2b49e1a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51875b0-dc5e-4fdc-a3e0-278aec4b5785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7d85cd2-224a-4cd7-8601-8c7d7721740f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc6d034-9576-4021-bea1-73c87128f7e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345d29c5-1376-407a-9fc6-6c207a50a503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b91ac8-3922-4924-9339-cb5d623eb9c3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b1cda5-da95-4a1b-b3a1-5b6846847f95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4e2f49d-e336-4bb7-9b44-de70cf05ccd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320bd94c-533e-488a-8940-c1f1e50a2884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f8fa99-dfc5-4dcd-a34d-29e8b7099391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c61bbd9-b233-4c47-9259-4ab456d07c55",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3dabca-2276-4275-b786-89b8326cce07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "563f0162-34d1-43ab-911f-90c79f56b917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5732f7b7-34a5-40a0-a97d-49838c3104c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83ae064-3369-4f52-a1f0-00f7b941880d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0997c832-e1de-4b3e-bc39-afca2b534376",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0569a2-d0c7-41b2-bd4c-f96396834bcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ea31aec-a1d5-4257-8034-3279ba93af38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c402e03-9035-445b-b735-03b1e013d1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b0ceec-8bca-4b4e-aee9-e209829b4d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7b0ae7-2b7a-43c5-9fc2-cc058b53c6f4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682cbf51-cb43-4d46-9838-7e259e94cdda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb9ed16a-f4b9-4da8-a392-5321575f9f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7c385b-6db3-4dd9-a4b3-bda481c03a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea570b7-9827-455a-82cd-54d73571dcd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ed8228-a1a2-4d40-9158-2dd18380ea32",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882a0872-5291-4646-8240-baf56c918c6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7801d27f-c8cd-427c-af3d-8dadc820e5f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c9e5d4-c30f-4e75-9035-01b9d88c96de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2477d4c-86ed-4f42-be2e-0eb8e72df29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926b13e0-8c0f-47d2-afd2-6fb181c19066",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cc3b19-a97b-4fb2-b738-b338e2ff1d7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "197e2f29-0f3e-4a33-a979-7bc329df0000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7584b1e-5563-443d-8c6e-26d3e3922387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "390b2b63-6a1b-44d9-a9db-847d4af56d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4357fbdc-6f41-4b7d-99b6-f994c83a03d4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998b5e10-4a93-4105-a9be-b076ba2b51c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e267717-73cc-4cad-88b9-f964e4254a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c9121f-e20d-41df-a7d0-5d92a772e1f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013e8b9f-a93e-4f15-8101-effca096252e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb89ff6-0b33-4777-b010-e409981a23d5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82d0532-203d-4d51-8cd6-81e52cb68996",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e73177b3-3df2-4786-b699-b996159a22d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c282597-53ba-4541-bff6-b9a27ff450d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f109af-9688-4857-b46e-bcbc88aead08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffc31b9-1e3c-4280-8f00-f593c965860b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d688a8-936e-4ed8-8e05-6377e3687684",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "086ecbb3-d5e1-4321-bdc6-5b5d8c9f7ad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d36481-74ec-42dd-9aff-2ad94d7b2c2d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443eae6d-cfc2-4f14-afd1-cb86106808a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f59872-41d6-4d9e-83ce-541da717b415",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f45a766-a8aa-4e50-a8ee-8bdc8b8dfc83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "516aba98-a3d5-4140-bc60-64aa74c11f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0562b4d-0abf-4259-aa44-a1e8fffaf559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f559931-9cca-4031-ae70-dd7c6a071ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418cde28-03ea-420a-ac67-b665c878a7f2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98218310-8d24-4061-b826-4f89fd35cce0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b1167e1-7da5-42d7-b935-e3390caf20c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf9aa7c-8035-407f-afdc-20d89f1cf139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0012ae32-218b-4f6b-8aaf-efd9c4594d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb4aef6-84e4-4592-8de8-a3c25a5f1024",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26ad1d1-292f-42b3-8b42-3c6932f865b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1f7d05c-81f3-437d-9f5f-5004f1630fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a97bde5-a969-4288-a584-c11bc36ff7f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ecd304-54c5-4e13-b6cb-c4a20cf08336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d346f5f-d39a-4006-a73d-50647126c560",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecb55e3-a679-4811-a943-6ef502a34f33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c9d3ff6-4c9f-4113-bcc2-431569db1054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1eb9290-acb3-41ec-b353-57c15c3c63e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34893492-a0b1-4b9b-9d07-a8a4139e5ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44bc7d7-28cd-4014-bc3d-91716a40a070",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d043f1d-c723-4ec7-86d7-261fc732b1fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "297efd9a-4269-4d61-87d2-1bc7665e451d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb1a7b1-4087-449e-9eea-2dd5778e55b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b86d11-3a7e-4ae0-bd45-f0a8a4e69617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2140256a-d096-44ff-9bd8-60858ee75b12",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7439cd4-0084-48bd-885a-8a6bf097565d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b60f685-97e9-418e-bae2-f29d79cb6171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac68b6a6-b7d1-4410-b397-a8a9d38bf839",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92b720c-bcd9-4cb0-9a00-8893152aa915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45064d78-a8a2-4e27-b3ab-d2f718851a32",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16d6a4f-85e5-44f3-bb23-4af80900e37d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e55747a5-45e4-4d67-acde-29268af952fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "737f327b-9041-4d35-911a-fbe10b9918d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8270b6-1a74-45a2-a8ef-80e85259e9e2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "903c9502-d666-4a1d-98a0-812e5e11ad0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3053072b-d63c-4d1f-8f22-910d36db4152"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cddd58ca-789d-4512-aa51-350650babec9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a105bd7-1f3f-40e6-914a-2d3ff424b14e"
                    }
                  }
                ]
              },
              {
                "id": "7e837bc1-20fd-4bb2-a005-20e6f66da06a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65ea91fe-dc62-4def-b2d5-d901a786e947",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e418290-38a5-49d9-b137-067badba37d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b040fc71-d6d2-466d-b167-2eb34a0409eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b50c7e2-7935-4ffb-a9eb-1794e2b71658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93e53ac0-a1d6-49c5-95e9-2a7594d99e52"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5dafd704-daed-45f5-9a44-e15286c6c0a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30426628-41af-47de-8cb0-13baf7718bc2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "356fec65-b284-490d-b09b-bf1cb8c4c6f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d22b1f1-b65f-46e8-890e-417c423c5a22"
                    }
                  }
                ]
              },
              {
                "id": "6949bf8f-8316-4523-9913-4ea6efeaef34",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0867fc31-e75a-43a9-b7c0-5d7d82fa86dc",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdeee10b-1b7a-4c7a-b713-c3d2e94acfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "951b3c0b-3f1b-4220-a6d5-db7510445f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecd8caf-ccf1-4494-bb23-3d36546a9370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a696cd4-cbd6-4d22-9521-d27f6f88b3cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "38ee8cfe-5786-4cd3-9a3e-323301cda94f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7733c139-d4ff-4bb4-98d6-45c16c1387fc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aed701ac-a7ce-47ac-92c2-9511f1dbaf94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9f3d12d7-7699-4fb0-8a12-8cd5010826e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1b098bd-f17e-495c-ab6c-49b16daaed16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48008850-cf2f-47cf-8ff5-2b475be92405"
                    }
                  }
                ]
              },
              {
                "id": "39e9b6be-27e8-4bcd-b7f2-13af2098cd6d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2255cb92-9b8a-4057-a850-47b4cfd69b06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "565d16c3-1f6b-4db4-b2e1-c001aeaa8bb7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "975f3fac-9246-4fd1-ba91-21e5e88db052",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ecf025f-1b0d-4ad3-8813-140c53c97bff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba79e3ad-2bfc-47ff-a79e-06ca890cf171",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "87bf0c90-f7f1-4b97-b3b6-f8449e7fe104"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f42f8f55-a877-4434-b1b1-eb92044d3a33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8623509-a0da-4d55-907d-816cb1bb78e5"
            }
          }
        ]
      },
      {
        "id": "3ffcb2bd-f229-4001-b50d-e56514772ced",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "003d0f8e-27b5-4f66-bef5-ef390d5a0fd3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d614606-db8c-43d4-af5d-061d2c706775",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77fba251-88ad-4d36-a3af-89cee5d75316",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1234864-949a-4217-9c83-7038a5cda766",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e7943ec8-2231-40bb-9f37-60fafcf311bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19debaff-cd67-464b-972e-342f2acb6472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d824b9c3-9673-4ae1-8c75-6adab08fd9d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efd5937f-08f1-4154-82d0-9f15855fb4f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1b45e4f-0716-487b-ac8a-e7ab6eaa0e31"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bef7b4f-7ffe-429f-9c46-a5e5b3dcb238",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d337245-50ca-48cc-9218-591d103e605c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "210eb091-b30b-4696-9a53-3ba078396288",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f3c1df8f-adef-465f-ab4d-80665807b96f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06d24d17-b1c6-4ba5-9dea-5f68dd07cc3e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c597151-4681-43e9-8589-564a953e590e"
            }
          }
        ]
      },
      {
        "id": "724356a8-7536-4dd1-9fc1-e5b89febf73e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d947ea40-2c8e-4e64-a9e9-12315b2acef3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "467891c0-ee6a-4279-be0a-e8af2952c235",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d866488-e782-4c3e-83e0-7af9687ab1ac",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c2e6c5-f819-41e5-88a2-b8dcde86e656",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ba6ad02-fff4-451c-974c-efa798c8c478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "858bf875-05a5-4b52-abde-a2c49122f33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d737c74b-418d-46cf-bf5a-86cc06e02b2f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae6b9115-a680-476c-bd8e-397e043d019c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a26e4929-0b9f-4c07-8a3d-cca14b9c0746"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2100e0f5-1870-4184-b044-fb01d9307d30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abb60dc8-640c-4eb3-a98c-608f4e2448f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff366606-32c1-4567-b939-63c0eddec6e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eb772dc5-70df-46ba-b448-27eaa68569a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dace23fd-f60a-4ec8-8af7-c7aecc6664ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20afae74-399d-4db8-b4cc-33c7cef38076"
            }
          }
        ]
      },
      {
        "id": "cf546ce5-f2e0-4aaa-aeac-539f4d99c2d7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3616248b-87fd-4eb1-a819-05025536cb8d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad7526fe-a77d-4dd1-91fc-c12c6d6baeac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92a7b48b-f621-4a27-969f-2760cb8e5756",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d68b3fa-fca7-40da-ba4f-0f1c184f96d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0c21266-8267-4ba7-afcf-2d93950b3464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14d98e6-e78d-4140-abf0-19f74494a837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f08f4125-6f52-4a6d-a2d0-a9bad74ce55e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90208d9e-1c5b-4437-86fe-7ded2eb2981e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0efd640-4c81-497e-ac33-c42ba8e796df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b16777bc-1594-480a-849a-61f98bfc753e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d954a7b7-6498-4f65-8fcc-b3bcfeb6eedf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "640201d6-317b-4e9f-a847-d821fa76edb8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a98d32e4-b315-40d7-9e20-055cc3ec8ed2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "770da364-abdf-40ac-a465-a41b9c8b33e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad1773e9-e53a-4ea1-9d60-9fd0637a1cd6"
            }
          }
        ]
      },
      {
        "id": "800ead42-98dd-45b5-88f8-6f59d4525adf",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d83395d-d0f0-44de-819c-17f7b5125566",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6be2ac52-c92f-4030-b098-1cfd896528b0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c8add725-2115-4c05-9cfc-0367c42a1d4e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1bd3242e-010f-481d-b15d-de6a17c69351",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e95a47e-71bd-4c1f-bd06-667cfacab11b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.552816901408451,
      "responseMin": 3,
      "responseMax": 277,
      "responseSd": 20.001074596701386,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689729178816,
      "completed": 1689729192397
    },
    "executions": [
      {
        "id": "841390e6-20ba-4f53-b9be-853c2f62e816",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "30f13d80-6253-4c32-b154-91683de09e0e",
          "httpRequestId": "c855ee59-b54f-4ce1-b737-dfd741ed8f82"
        },
        "item": {
          "id": "841390e6-20ba-4f53-b9be-853c2f62e816",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "084bbbdc-3548-46f9-bd38-49225794011d",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "ba789718-8580-41cf-90f5-b9235d727412",
        "cursor": {
          "ref": "222d10ef-2ec2-402d-9cf8-f89e593eed36",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "61e25bb3-74af-4a2e-8583-b5c8425d0ff5"
        },
        "item": {
          "id": "ba789718-8580-41cf-90f5-b9235d727412",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "68b3378e-0c07-4c94-9388-52afa130cffe",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "02dfe811-c1a0-4ed3-8136-4708498d6576",
        "cursor": {
          "ref": "e03fa9bf-04f4-42eb-a246-d6bb69073070",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "09c58b0e-6b55-4aa5-b7d6-7d712267f438"
        },
        "item": {
          "id": "02dfe811-c1a0-4ed3-8136-4708498d6576",
          "name": "did_json"
        },
        "response": {
          "id": "e6ed9941-a70c-47de-84cd-ec85c6875f6a",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fc9ccc-1166-4a45-a9bd-c3b33edda9fe",
        "cursor": {
          "ref": "90f48591-3c1b-496b-a89f-28eaa3fc5221",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "85973930-d329-442b-8a22-5fcc7af12af5"
        },
        "item": {
          "id": "43fc9ccc-1166-4a45-a9bd-c3b33edda9fe",
          "name": "did:invalid"
        },
        "response": {
          "id": "d82f24d8-20be-47c0-87a6-b2a1a2664868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fc9ccc-1166-4a45-a9bd-c3b33edda9fe",
        "cursor": {
          "ref": "90f48591-3c1b-496b-a89f-28eaa3fc5221",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "85973930-d329-442b-8a22-5fcc7af12af5"
        },
        "item": {
          "id": "43fc9ccc-1166-4a45-a9bd-c3b33edda9fe",
          "name": "did:invalid"
        },
        "response": {
          "id": "d82f24d8-20be-47c0-87a6-b2a1a2664868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64226f9-a5cb-4bd8-a4e3-83c5e09884b1",
        "cursor": {
          "ref": "03edbcc2-fafc-4450-bc18-defc4df8b483",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5954e637-4211-4855-bddd-e1ca3418c237"
        },
        "item": {
          "id": "a64226f9-a5cb-4bd8-a4e3-83c5e09884b1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9cfc5e08-2efe-4c7d-a7a4-480c4ce69d6e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d469d8-0a2b-4e20-8a4c-86b8e0032b87",
        "cursor": {
          "ref": "2c8ab13c-492b-4e25-a54f-7bf557459767",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c5a90caf-ff43-4be7-843d-89188ec10c4f"
        },
        "item": {
          "id": "f2d469d8-0a2b-4e20-8a4c-86b8e0032b87",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c30d97e4-ca88-448b-ada9-3f271a509bc0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d04c58-6166-49f0-835a-4ddf4ea369e4",
        "cursor": {
          "ref": "7edce11c-1fc1-4b10-bec4-79fdd4264b11",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d77bd30e-19ea-4f48-bead-43afec70e901"
        },
        "item": {
          "id": "a8d04c58-6166-49f0-835a-4ddf4ea369e4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "889338eb-de68-4879-a209-396ccb31edc4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33ecc25-580c-4c8e-acda-f922ec57f810",
        "cursor": {
          "ref": "c3b9dff9-9396-4cc0-8a9c-a1269c703db9",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ab8a51a6-54f6-4283-9752-718e16451217"
        },
        "item": {
          "id": "d33ecc25-580c-4c8e-acda-f922ec57f810",
          "name": "identifiers"
        },
        "response": {
          "id": "b22093de-70b7-4455-bb21-510a43ec9ac7",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fa82e8-21e1-477a-be5c-e5d4fe6c66d7",
        "cursor": {
          "ref": "d9822a57-d219-49e1-942c-3760bd3e54af",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0ee7fdfd-3560-46da-883c-6527c4cef67a"
        },
        "item": {
          "id": "c4fa82e8-21e1-477a-be5c-e5d4fe6c66d7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7680faf3-e4e7-4e22-b495-f3fcc0dcbfee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a26f1e0-72aa-4d71-af81-f485ffbb18f4",
        "cursor": {
          "ref": "e4e574be-9e53-4385-b023-5954e65e8b76",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d67861ad-acd5-4433-9432-3981c49c9a16"
        },
        "item": {
          "id": "8a26f1e0-72aa-4d71-af81-f485ffbb18f4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "235474dd-90ec-4af6-b82e-54bcda7005d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e67eb3-87a3-4053-9e63-143da83f60b8",
        "cursor": {
          "ref": "84b4823f-b2cd-45a1-a047-15634d3e4883",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "87136bee-8f26-4c96-af3b-4dfbcf4fff84"
        },
        "item": {
          "id": "99e67eb3-87a3-4053-9e63-143da83f60b8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b1786cde-2df6-4807-a6ac-26687132cf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae307e46-f06e-4b4a-a6db-e6bb19ef7f73",
        "cursor": {
          "ref": "c10a2cf8-efdb-4a62-91f5-75467ce38fc2",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "494de3a5-0421-405b-af9d-46b45e05ee4e"
        },
        "item": {
          "id": "ae307e46-f06e-4b4a-a6db-e6bb19ef7f73",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "eee742ed-13be-486f-b2e6-4c68a561eb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73561db1-5dd7-48c2-b239-4bf2854d0f8f",
        "cursor": {
          "ref": "5bb424eb-a2cd-44fc-ae40-1288830848a5",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e06afa00-7f79-4711-b857-09c5112b68fc"
        },
        "item": {
          "id": "73561db1-5dd7-48c2-b239-4bf2854d0f8f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ad659d03-d046-48f7-87b1-6d4c049e912b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1376c5-c0a7-4861-96a9-bf7961b06341",
        "cursor": {
          "ref": "453cd765-cc20-48b1-9158-6d914664cf88",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d11ca401-3060-417f-96f8-c03a698966c1"
        },
        "item": {
          "id": "6f1376c5-c0a7-4861-96a9-bf7961b06341",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d06cdd03-1569-40b1-837f-5d56c96882d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8eb9d0-2ff0-46b3-a9e8-115ecb537423",
        "cursor": {
          "ref": "2522f731-655f-4537-a5a4-f863b66e2b58",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e48e6a95-c72e-4c4a-a49b-cab7db4d6a8a"
        },
        "item": {
          "id": "bc8eb9d0-2ff0-46b3-a9e8-115ecb537423",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9b8b1bfb-8aa6-4258-aa65-1e3ad0b8b280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4735b3-8ca5-4623-879e-0d045ea0dd3b",
        "cursor": {
          "ref": "d4705231-5a81-42cd-ac22-f0ef5d0ab3ae",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "075c3ae7-2410-4398-a16d-4f5d3c6cbcda"
        },
        "item": {
          "id": "8d4735b3-8ca5-4623-879e-0d045ea0dd3b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "849249f0-5c89-49e9-a64b-fdd5e47c0ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20435c47-9c7d-4f80-b7be-9c5590b9c8b3",
        "cursor": {
          "ref": "621cd9c3-5608-4852-9313-01a282221275",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7ca6ee1a-1b2e-4a22-aee1-0432ab408769"
        },
        "item": {
          "id": "20435c47-9c7d-4f80-b7be-9c5590b9c8b3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5e76834d-9eea-43b4-bee5-f3aa8c4cfd9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3408a43c-411d-4675-a535-acb8227f80bb",
        "cursor": {
          "ref": "e00ac205-ecb1-4a6d-ab78-b45dbb34b1ae",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "03f886a9-84ee-432a-bccf-f308c664ea6b"
        },
        "item": {
          "id": "3408a43c-411d-4675-a535-acb8227f80bb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "78624191-4765-4b0c-a32d-17c3ecac2d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080098b5-cc82-4b6b-a570-0d27884efa43",
        "cursor": {
          "ref": "e1677cf6-b1e2-41d1-9991-4945cf996f5a",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d3bd2cd1-ddad-4c86-9ad4-bdba37b87020"
        },
        "item": {
          "id": "080098b5-cc82-4b6b-a570-0d27884efa43",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "71a1a5cf-ab37-4c89-b3b3-c2af59919d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdab9407-4e5a-4f46-93f2-4a257c069053",
        "cursor": {
          "ref": "b207c578-d8da-49af-b17f-c06296057c79",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "dc1f5420-3961-413d-ac3d-8b217cd307bc"
        },
        "item": {
          "id": "fdab9407-4e5a-4f46-93f2-4a257c069053",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c1dd9777-584e-4531-aaef-fbef1c2df680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41f19b0-81bd-4db0-b497-40c57ad2596c",
        "cursor": {
          "ref": "60b5e30e-6f41-4e6e-8f12-a644c7fc2ca3",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3ad98c9e-031c-404e-9947-460e10284c79"
        },
        "item": {
          "id": "a41f19b0-81bd-4db0-b497-40c57ad2596c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4484fe9d-e81a-450a-a9e8-875ebd82b1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f699ec3-491d-4390-a022-a691edd32fa1",
        "cursor": {
          "ref": "14aab091-8bea-4ecf-a884-e27bf5d603f2",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1ce8d123-0e6f-42d8-b2dd-34f4dd75ed34"
        },
        "item": {
          "id": "5f699ec3-491d-4390-a022-a691edd32fa1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0f433559-919c-4aca-8b57-ddffb8c91c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4cec6f-92eb-4f84-9867-75897ba9cb5c",
        "cursor": {
          "ref": "a3289c67-e5a5-4588-9573-08166561361d",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9570752e-7b83-4961-b5c0-d0ed5d1b8bf8"
        },
        "item": {
          "id": "0e4cec6f-92eb-4f84-9867-75897ba9cb5c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b85cae1b-64a3-4620-9afb-01fa8783b895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c6f881-31f6-4e53-9450-2f958aa07181",
        "cursor": {
          "ref": "8e118974-c041-4529-b2c8-644803f912a4",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "18f3edf8-e338-49b0-80c5-5f2bf29691a7"
        },
        "item": {
          "id": "12c6f881-31f6-4e53-9450-2f958aa07181",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b9903eca-406c-4585-9f18-9870faafe415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38421b4a-0b9a-4fec-9b18-af0c7ae64663",
        "cursor": {
          "ref": "4c5789c3-50d5-4563-951c-8502807f7273",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e400cfc6-4110-4c61-925c-d7eee69924b7"
        },
        "item": {
          "id": "38421b4a-0b9a-4fec-9b18-af0c7ae64663",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "46a42a16-2d3a-43ae-927b-4a1f3a3dc542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00c8e0e-4ca8-42e3-8b25-c43a516b2e31",
        "cursor": {
          "ref": "c0369324-fcff-4eb5-8dfd-e59903a1aadd",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f96391c8-1ed0-41ab-83a0-c813db118740"
        },
        "item": {
          "id": "e00c8e0e-4ca8-42e3-8b25-c43a516b2e31",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8f01b5a4-3f6d-4a4e-a82f-b2a5d065aec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b04d000-82c5-4b57-8cd1-974e201d54f3",
        "cursor": {
          "ref": "e1d80d31-70fd-4f83-a5af-b76302c9bf01",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9e22a5f7-096f-4665-8f1c-c2ed910d5d6f"
        },
        "item": {
          "id": "4b04d000-82c5-4b57-8cd1-974e201d54f3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "470ffeaa-e7d8-4e1a-bcf5-375e8dcfa3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e04bcfa-c272-4155-9c11-1cc98ae8e06f",
        "cursor": {
          "ref": "171e6eb7-a550-40fd-b777-8f810f1f0554",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "53e423a2-5b64-4915-84f6-38edd9e3ced6"
        },
        "item": {
          "id": "6e04bcfa-c272-4155-9c11-1cc98ae8e06f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0af179cd-0dad-4f08-8b4a-48adfac3d324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d10dccf-3249-4f6f-9b00-fc7c75567fdf",
        "cursor": {
          "ref": "092f9908-075f-4302-95fb-d0ac99462e67",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5987f6ce-c88d-4678-b021-404b82092eb6"
        },
        "item": {
          "id": "1d10dccf-3249-4f6f-9b00-fc7c75567fdf",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "549026df-a518-4a41-99bb-6538e8b16a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca079ab-d5d2-4fef-89e5-f21b400955a0",
        "cursor": {
          "ref": "9f4e4859-cc48-48a7-9431-b5e71cf5592a",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e681c933-748a-4957-ba10-2e25aeac7194"
        },
        "item": {
          "id": "5ca079ab-d5d2-4fef-89e5-f21b400955a0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "21ae8a54-d136-4819-8fa0-8bd3511a8f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fa0916-a86d-479c-9002-75209b274dda",
        "cursor": {
          "ref": "cb074ed3-e73c-4073-805b-36c574691436",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "29a744cd-32ee-4199-ab8d-a5a363a9d472"
        },
        "item": {
          "id": "58fa0916-a86d-479c-9002-75209b274dda",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0e69eb40-f3cf-4f81-a38c-127500d9222c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a75be1-c7b5-4d1a-a203-f75cb5798066",
        "cursor": {
          "ref": "e125688c-bb44-4e33-ad9d-e76eb0a5ff4b",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "51962c92-db0c-4b6e-a987-91bd2bbdbe3e"
        },
        "item": {
          "id": "68a75be1-c7b5-4d1a-a203-f75cb5798066",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b804bb36-8a1c-4e14-8891-f0607b20cde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976118a3-ff32-4fb2-a7f6-1ae8ef8cfed9",
        "cursor": {
          "ref": "7bc72c52-211c-4232-8c5a-112e5a975634",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "543e9600-b104-4e6a-97b2-b5264d57ef9b"
        },
        "item": {
          "id": "976118a3-ff32-4fb2-a7f6-1ae8ef8cfed9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bdf72167-0a92-46b2-ab53-1806f1854f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e112455f-e7df-4719-b3d5-835f8d5d3f2f",
        "cursor": {
          "ref": "55da32da-e97b-42e3-aa9b-1791034270d2",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6b4a42c1-1a91-4a14-8fff-cd3dc131587f"
        },
        "item": {
          "id": "e112455f-e7df-4719-b3d5-835f8d5d3f2f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a6d30298-48cb-43ae-9a1e-3a6e5c765b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f9c190-5477-408f-8441-1c3884e7a583",
        "cursor": {
          "ref": "2c812202-ffd5-4212-8956-71f4d21f98d9",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "01b28f6c-0dd8-4fa8-841a-cc42f93b5d9f"
        },
        "item": {
          "id": "08f9c190-5477-408f-8441-1c3884e7a583",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6c2923bd-e567-4aa5-951c-b4b12bcfad9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6adbef5-3ab3-4644-93dd-c04c0b64d2f7",
        "cursor": {
          "ref": "4ae0de5f-5405-41fa-9f79-42bf0f870342",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "39ca91c3-3e82-41f9-9808-ab1fe682b61a"
        },
        "item": {
          "id": "e6adbef5-3ab3-4644-93dd-c04c0b64d2f7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "145d6424-6165-4400-bfc2-3356d30e5cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ef0506-90d5-48c3-a49b-26db30826d13",
        "cursor": {
          "ref": "b0b27f85-a3bf-48c4-8565-2d1c201f28e9",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "35e40227-53bf-495e-a152-36bfecdc81bf"
        },
        "item": {
          "id": "53ef0506-90d5-48c3-a49b-26db30826d13",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "71c51fdf-626d-418f-a09c-91f0c2d1103f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df892b6-2d5b-4433-b9d2-16778a80164a",
        "cursor": {
          "ref": "cd1b0768-be58-4f96-ad30-566d3ba4e472",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4712949b-7107-42cd-a7e4-61b19ba90977"
        },
        "item": {
          "id": "2df892b6-2d5b-4433-b9d2-16778a80164a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "672dac1f-3f9e-4b48-9d1b-0c96c412ef83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b99bc53-4e4c-4d8a-a01d-d306b9968a76",
        "cursor": {
          "ref": "58563f69-ebb7-435f-80ce-99e9f9650898",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7123fdcc-8617-4ec5-8b74-998b16bb6314"
        },
        "item": {
          "id": "7b99bc53-4e4c-4d8a-a01d-d306b9968a76",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "10e3aba5-097f-4770-92ae-7150f15b4c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e860a0ee-2047-4c15-a90e-8c2847836567",
        "cursor": {
          "ref": "9c0bc916-0706-468c-814e-a91d0c62c636",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "37a85bd9-8f48-49ca-9fe5-7e1fdf987ee8"
        },
        "item": {
          "id": "e860a0ee-2047-4c15-a90e-8c2847836567",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4e6ed4c3-ffe4-49eb-a576-abc6f7cd0b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325b6a9d-6951-4b1c-ae4e-ed7e368900b6",
        "cursor": {
          "ref": "bf4044e1-58af-4e52-843e-50d661e1ef6f",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a92e0951-e486-4582-bffc-ba9bbc708e8a"
        },
        "item": {
          "id": "325b6a9d-6951-4b1c-ae4e-ed7e368900b6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cd758d7f-1d0e-4189-8c86-828f7d5c8e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe8868a-6952-4692-a21d-4414b69835c7",
        "cursor": {
          "ref": "3cb83d66-4349-4957-8fc8-4f41dacead78",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b86b0e6e-e7b8-437b-b821-7cf3b21917d2"
        },
        "item": {
          "id": "5fe8868a-6952-4692-a21d-4414b69835c7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1848c540-db81-41e2-8a28-37c2cf8be08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5a665f-a532-4fef-8125-99228aeedfc7",
        "cursor": {
          "ref": "5a2007cf-8e70-4aff-8740-dd8ead827f3c",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "57907789-071a-4f00-8104-cd8df8ad55ab"
        },
        "item": {
          "id": "2a5a665f-a532-4fef-8125-99228aeedfc7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8d541abf-73ab-4466-b167-0afd30fe8ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7981e3d7-c3a3-4d07-ac09-5bb235c63167",
        "cursor": {
          "ref": "acb727a6-9d3c-4b56-a1dd-f25afe355cd8",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ca17ed02-1e87-44f0-bf1e-2582bc93f79d"
        },
        "item": {
          "id": "7981e3d7-c3a3-4d07-ac09-5bb235c63167",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "21274ee4-50e9-4b1d-8ed8-da133ffdff3b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268fd26a-afa1-4545-b9f4-7443d3cd1836",
        "cursor": {
          "ref": "b2e71863-1716-4916-ad22-a5e852daf027",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5f949fd9-8d9c-4bad-b186-551047b25401"
        },
        "item": {
          "id": "268fd26a-afa1-4545-b9f4-7443d3cd1836",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9daa973a-5411-454f-aff8-511b871e9ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd3cd07-35a4-4efa-8be3-de0de0b14ac3",
        "cursor": {
          "ref": "51cbbd68-c2d5-4628-9658-76b5b4546b01",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "aa6ec333-cfd9-47e9-a584-d5d173a52cf0"
        },
        "item": {
          "id": "2dd3cd07-35a4-4efa-8be3-de0de0b14ac3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b78db7aa-a1fa-472e-80d9-ea1dd1c79786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57498228-ed53-4dd5-921e-372f4de95a4d",
        "cursor": {
          "ref": "7f67a8e4-2016-47e9-9c77-90e51e87bff7",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "969febfe-8637-43b4-80f8-274b2a07f6f2"
        },
        "item": {
          "id": "57498228-ed53-4dd5-921e-372f4de95a4d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "dfa54bf8-d580-4368-9be0-0e88d35870c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e221e1-3018-486e-8775-072765941a41",
        "cursor": {
          "ref": "0606e29b-66bd-4145-afbd-68711c5913fa",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "27a681f6-8afc-4e64-af9a-3814d30c63ae"
        },
        "item": {
          "id": "66e221e1-3018-486e-8775-072765941a41",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9ef92070-d548-41a1-9d4a-70fa4be7e781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6801a1-309e-4bf9-b343-6dc30b621ade",
        "cursor": {
          "ref": "5f22d1cb-d33e-4b2f-a15e-38e975f761fc",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f57042d0-3e4f-40b6-896a-4a9459672dc4"
        },
        "item": {
          "id": "9e6801a1-309e-4bf9-b343-6dc30b621ade",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "854853d3-e0b2-4790-a1a4-66099f111cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fa0e5c-4fee-4f87-9277-35ee8038371a",
        "cursor": {
          "ref": "c61c9f2e-4f84-4c69-960f-f07dbcd8f28e",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ba01b1b3-7d01-40bc-834e-202d93c8653a"
        },
        "item": {
          "id": "f3fa0e5c-4fee-4f87-9277-35ee8038371a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c1e98e43-27a5-4a19-a7b9-9542c76bfcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f1c67d-b4b8-423d-8c78-6a9bc223570d",
        "cursor": {
          "ref": "bdcfe0a5-e2d6-4570-9fce-d700d775360b",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c3aa1a4a-6a95-4a9e-a851-69373757d586"
        },
        "item": {
          "id": "81f1c67d-b4b8-423d-8c78-6a9bc223570d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3fe7b0da-652f-4524-b7df-04db219565bb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6250ce45-41b5-4545-b8f6-3c99afd4c70e",
        "cursor": {
          "ref": "e0f98688-b2c3-41ac-8cbd-9eda57619f94",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c90c8d02-1912-437a-9fff-8e8551068012"
        },
        "item": {
          "id": "6250ce45-41b5-4545-b8f6-3c99afd4c70e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f7136b3d-5908-4a94-8c28-9351f9976160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b785013-2749-4f58-a8e4-6c49c3a6a67d",
        "cursor": {
          "ref": "58b98d5e-7984-4a1a-b3e9-57f79e5746ac",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b3284e41-91e6-475d-a6c1-4207c3de11ac"
        },
        "item": {
          "id": "3b785013-2749-4f58-a8e4-6c49c3a6a67d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a0a3a491-0160-4ed4-b6ef-950e7507dc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ffa86e-c8ac-4d54-99e9-259a46e97811",
        "cursor": {
          "ref": "e0ddb1da-940b-418e-a5e6-78c55c76b0fd",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "20debdcb-1619-4902-86c2-5630e4c65710"
        },
        "item": {
          "id": "59ffa86e-c8ac-4d54-99e9-259a46e97811",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8f01731c-2c74-49e5-bdc6-96536eeb18bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bbe337-c2f5-4f63-8685-f94fd7a81a49",
        "cursor": {
          "ref": "0ca7c0c2-0ac5-4c45-8d24-3194db523728",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "86fcfbb9-d555-4689-a22a-f56f6dee8246"
        },
        "item": {
          "id": "81bbe337-c2f5-4f63-8685-f94fd7a81a49",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "10823af2-eeb5-4ebe-9681-76944a32d0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034b318e-defe-4809-8194-e8dd33e05df3",
        "cursor": {
          "ref": "b3ba6ac9-dcc2-4ff8-b238-a8ec567af037",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d3d91f6e-76a6-4c61-b774-437b1ed61ecc"
        },
        "item": {
          "id": "034b318e-defe-4809-8194-e8dd33e05df3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e0de2324-2c9c-4207-a0d4-55b67fde59fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce05a4b8-373d-4256-ac2b-7146c1d63a92",
        "cursor": {
          "ref": "af2c8a8f-4689-4038-9050-37242895e89e",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "658be9b6-fa5a-44cc-b8ac-003e535734ec"
        },
        "item": {
          "id": "ce05a4b8-373d-4256-ac2b-7146c1d63a92",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f044e049-a32e-4416-9b5e-6b39149074c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec94fc7-b1ae-4009-9689-dcf453c62399",
        "cursor": {
          "ref": "178adf51-398c-40bb-bd0c-feb5d5911217",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2cc2cc7e-2c19-4b13-bc0d-571ad744446c"
        },
        "item": {
          "id": "bec94fc7-b1ae-4009-9689-dcf453c62399",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "13f03112-99e8-47a0-b507-f76093b019b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69b4c61-373b-4d59-b7a1-e17f4d1ce49a",
        "cursor": {
          "ref": "9959305b-e44a-4583-b86b-fc68d72c0a19",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a3b66b8c-f32c-4e0e-b837-f2e4e3f148a2"
        },
        "item": {
          "id": "e69b4c61-373b-4d59-b7a1-e17f4d1ce49a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1c462860-fc52-4f36-ab01-51552427438b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abf013e-e661-4854-9c9e-dddf0d8db162",
        "cursor": {
          "ref": "6fc6eb75-f60c-4bde-a0d0-8ead288dba24",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f11890a2-8a65-4ebf-8744-1e9771c56d28"
        },
        "item": {
          "id": "1abf013e-e661-4854-9c9e-dddf0d8db162",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "769698d4-7f7e-4335-95e9-6119231341e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f3b299-1cd9-4520-8852-002c875232c3",
        "cursor": {
          "ref": "4c422705-c4b1-434f-819b-2d739f7befbf",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e9103a69-2d38-47e2-a62b-3241f4986816"
        },
        "item": {
          "id": "f8f3b299-1cd9-4520-8852-002c875232c3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f08d60f7-68a6-4935-ba29-839b4ff94eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a980f1-46f4-42e7-862f-00d166d0a4ed",
        "cursor": {
          "ref": "08d16885-51e4-4c64-97fa-5ad0bf796760",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9e9f9f07-4baa-4f5e-a5b1-16810701c9cf"
        },
        "item": {
          "id": "37a980f1-46f4-42e7-862f-00d166d0a4ed",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a091e368-b7d2-47ba-9df6-2658ab162a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d01dc6-f9e1-4231-98e8-86e45cee2e65",
        "cursor": {
          "ref": "fcd3c48c-554f-44e4-a4b6-2229f4fdbcee",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "84296009-6ad3-45e1-b462-969aa6e3213a"
        },
        "item": {
          "id": "53d01dc6-f9e1-4231-98e8-86e45cee2e65",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3eae2479-b626-41f9-ad9f-016cd07c625f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3fe8cd-49b6-4fb5-87f7-ac489c7de560",
        "cursor": {
          "ref": "75265c56-746d-4384-8064-bba2ff4a8545",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "115fb5a2-ed6d-444c-815b-8d12f078029b"
        },
        "item": {
          "id": "9a3fe8cd-49b6-4fb5-87f7-ac489c7de560",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "51176bef-7b04-4a96-9efc-e6b47ff08f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f5a506-079e-41c8-b46d-bb7402db26b0",
        "cursor": {
          "ref": "a90211bd-d84b-4b1a-b6b7-02843539ca44",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7de788e9-b861-43cf-ae91-d91d6ea876de"
        },
        "item": {
          "id": "60f5a506-079e-41c8-b46d-bb7402db26b0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e8b8afe0-baf7-4d4e-826f-3555034ad003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2b7af4-dd66-4f31-8686-72998fc80a69",
        "cursor": {
          "ref": "1a7cbdfb-037f-4832-b5f9-a5d4a6538141",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "76544612-cbfa-4687-b63e-d357361f7617"
        },
        "item": {
          "id": "2e2b7af4-dd66-4f31-8686-72998fc80a69",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dd904cc8-3de8-42b5-baf8-582ff2d4d357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05828f1f-7ab2-4ef3-b9e9-efedb521a96a",
        "cursor": {
          "ref": "caf520af-001a-40a0-94ff-a7602c866543",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "929cd873-98dc-4f94-bc7c-ebd0e18be1b3"
        },
        "item": {
          "id": "05828f1f-7ab2-4ef3-b9e9-efedb521a96a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "18db81e9-8765-4a17-b37c-f46d02344776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40197a78-98b0-49bd-a040-2ad3f2720ed4",
        "cursor": {
          "ref": "4ea12c3e-13dd-4893-8e90-991793d80983",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2bf37980-c6f3-4f78-aefb-68b8d0400c58"
        },
        "item": {
          "id": "40197a78-98b0-49bd-a040-2ad3f2720ed4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "49e2746d-72b1-43f6-ab17-1192c8f4d506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92c9fd5-ef2c-4235-9b7a-e71c23f7dcf7",
        "cursor": {
          "ref": "86e0bed0-19f5-4986-9aa8-f5d850d49f28",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a2ac3af7-8aeb-4bb1-832b-3d805ecc5c14"
        },
        "item": {
          "id": "f92c9fd5-ef2c-4235-9b7a-e71c23f7dcf7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fdeb6918-57eb-459f-bb1c-958875dcb281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97463c2d-9ba1-4be6-af02-4758756a9c34",
        "cursor": {
          "ref": "9b7ef75a-978e-4f17-b454-41b9083fbd71",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0af81957-913a-48bb-8863-bd590e666aa5"
        },
        "item": {
          "id": "97463c2d-9ba1-4be6-af02-4758756a9c34",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9d7c6916-c89f-4494-8e49-388ee068d600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd398dc1-6941-4e69-b1be-3a5eb1975d80",
        "cursor": {
          "ref": "e22b428c-55ce-4017-a20f-0dacb42e2cfa",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "12b375c2-b1c5-426a-8d5b-695e04c5aa20"
        },
        "item": {
          "id": "cd398dc1-6941-4e69-b1be-3a5eb1975d80",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0e27f482-4915-4252-99fc-60ec4f7f831f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4eb387c-e51e-4195-8535-7f63f04e7d4f",
        "cursor": {
          "ref": "83c6f194-4243-4900-b9fb-e0934ecf72f1",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "55d8f756-7bf6-41d1-9743-cc0a3f159cc4"
        },
        "item": {
          "id": "b4eb387c-e51e-4195-8535-7f63f04e7d4f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9e5cc90a-ea70-40ef-b5be-cfba8bdc38f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7abd48b-57d7-4166-96b5-8d0f28a80148",
        "cursor": {
          "ref": "98cc1671-c7b3-4f65-81d4-43867845b412",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4bf0257f-5bff-493a-9f43-a325963d079d"
        },
        "item": {
          "id": "e7abd48b-57d7-4166-96b5-8d0f28a80148",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "faa2d149-d37e-4841-9dc5-ee00d3d887d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ec20f2-962f-4fa5-86f1-d9e2a9eeb8b4",
        "cursor": {
          "ref": "fa1e672e-4289-436f-9acc-5efd8e58fff8",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "31d9e1e0-8806-439a-a799-06af327ebf95"
        },
        "item": {
          "id": "12ec20f2-962f-4fa5-86f1-d9e2a9eeb8b4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6e827baa-784b-4a72-a5e8-66f1f0855b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa531d7-a5b8-4fff-9a40-3b6fb522ac97",
        "cursor": {
          "ref": "f5983eda-0b48-482e-9b0e-d659f0dc118d",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a5e4289d-6f82-48d9-9167-41e36f4c1113"
        },
        "item": {
          "id": "baa531d7-a5b8-4fff-9a40-3b6fb522ac97",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "40318867-2b39-4aa5-a3d5-34b7c8a4fa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79598692-60fe-46af-9fdb-57bd59eab46f",
        "cursor": {
          "ref": "8e96487e-69b7-4da8-a0aa-feeab1b308c2",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "04d9577a-8189-4d21-9bbf-d94023a94faf"
        },
        "item": {
          "id": "79598692-60fe-46af-9fdb-57bd59eab46f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "02708a22-1e17-4df8-859f-d989260109b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d307922b-92c5-4c42-a135-5efa65a9556b",
        "cursor": {
          "ref": "76594b43-6afc-4cca-a181-36ba1614702f",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4414ff12-4ac1-4bbd-9e40-9db2538bf560"
        },
        "item": {
          "id": "d307922b-92c5-4c42-a135-5efa65a9556b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2c0e7670-f6af-4b49-b056-0931a6fbcfcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530be942-4b19-4ece-b1b1-e126c3f55044",
        "cursor": {
          "ref": "90824f9c-5f2c-4ef9-95dd-89941565898f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "aeb4c2c7-65e8-4552-8439-801520a08860"
        },
        "item": {
          "id": "530be942-4b19-4ece-b1b1-e126c3f55044",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3c6f8001-165d-41e5-97d8-94715d23ed5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbac988-ea93-4f29-8a9b-e6e3679bccc3",
        "cursor": {
          "ref": "362cc089-19d7-4a2b-8da9-a6ce9d620d4f",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "842f2d9a-cc67-4ae5-ba3e-f0a2567861c3"
        },
        "item": {
          "id": "8cbac988-ea93-4f29-8a9b-e6e3679bccc3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b8aebee7-1c87-4c24-99f7-3deefe0f8075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed41e50c-064d-4559-98a8-f0a38d9da2c0",
        "cursor": {
          "ref": "cf50440d-b47f-4bbd-883b-400fce471aa2",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1e2761c0-4c91-4b30-a34b-75d58d0792f3"
        },
        "item": {
          "id": "ed41e50c-064d-4559-98a8-f0a38d9da2c0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "179fb871-cd3f-4732-a15a-64f9dddc1e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ff4170-2864-4776-9133-782e0159344e",
        "cursor": {
          "ref": "0023b554-5499-428a-94ef-bfea624a714c",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "68aaa8d2-3bee-4e9a-baa7-e322cd028d6b"
        },
        "item": {
          "id": "62ff4170-2864-4776-9133-782e0159344e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1bdb1d05-4298-41ca-93e8-1600b7086076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68819391-9820-4d67-bcb1-39109eae6ddc",
        "cursor": {
          "ref": "c9dab1dc-1fe0-4fd0-9c9d-cdf9cedf4d76",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a8f642ba-928a-4d78-902c-3af6286b3666"
        },
        "item": {
          "id": "68819391-9820-4d67-bcb1-39109eae6ddc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2d9fb710-62be-47e0-a7d2-d8617d6384cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8602be12-3ef9-4b24-8064-022df48ef0a9",
        "cursor": {
          "ref": "29c02911-ffc8-494a-866e-8cc529c05c99",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b0b831af-8672-4285-b344-778908e24f53"
        },
        "item": {
          "id": "8602be12-3ef9-4b24-8064-022df48ef0a9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "985010e9-3065-4a2a-bd62-9dd3f8da1760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f498561e-8c2a-4129-ae7a-418877568ad4",
        "cursor": {
          "ref": "dd380ed5-f00a-49ae-b543-83e54d38bf8c",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ad798ecc-3375-44bc-921e-e4cd11410cd4"
        },
        "item": {
          "id": "f498561e-8c2a-4129-ae7a-418877568ad4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "eec3ef80-5550-4e94-8edd-68627572e8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1349b54d-4a1a-4d2b-bc2e-0845f24e35f5",
        "cursor": {
          "ref": "11a1db93-b81c-446c-af76-8dd83ae8ace3",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c6e43fec-fab8-425e-8905-ccf1f56019e5"
        },
        "item": {
          "id": "1349b54d-4a1a-4d2b-bc2e-0845f24e35f5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2e5b64c7-1037-438e-92d8-4e3eca1c69ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147ecd1b-2f57-4d8a-a60e-71697d6b36e8",
        "cursor": {
          "ref": "decfbdca-98b3-4ec6-9926-8b8116dd1ecc",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "78de4889-a8f0-42cd-b310-54482440c8e1"
        },
        "item": {
          "id": "147ecd1b-2f57-4d8a-a60e-71697d6b36e8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a9a5ddb9-096b-4d7c-adaa-1c8feb595eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991e5239-5a27-4404-925d-94e85976c48d",
        "cursor": {
          "ref": "add66293-a93c-4aa4-b22c-0ea6c28f7667",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6a12570a-14fe-448a-b724-180bc04f9ccb"
        },
        "item": {
          "id": "991e5239-5a27-4404-925d-94e85976c48d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2ce6bbc7-d704-4126-914d-06f04d293273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6dab10-b1b2-4367-a1f7-0d578c3de8ac",
        "cursor": {
          "ref": "0f5a65c0-fa37-4c89-bf3f-288b39ec6714",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a0238583-bc8d-4ab1-88cd-47e6d6b5e1f8"
        },
        "item": {
          "id": "8e6dab10-b1b2-4367-a1f7-0d578c3de8ac",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3b91f6e4-ba9f-4487-9e26-5d8049edbe1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10e90f0-ee4f-44f7-b89c-52201e7369bd",
        "cursor": {
          "ref": "8af4fe47-c073-480b-8b20-d10006ce2f97",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ca721119-72c5-48a5-9fd7-773d0bfa5828"
        },
        "item": {
          "id": "d10e90f0-ee4f-44f7-b89c-52201e7369bd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a96489f4-0956-4db2-b3e5-2898e2c7d31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5521dcfd-ca43-4571-a04c-094d9a36ea28",
        "cursor": {
          "ref": "ab68b475-53a3-4a17-96a4-bc99f51ff45d",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d74cc5c3-cf88-4e3a-97d2-68a486681802"
        },
        "item": {
          "id": "5521dcfd-ca43-4571-a04c-094d9a36ea28",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ac01f9e4-017c-461b-b01c-5ef371738e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79393854-7d31-487d-8cb7-47f6b77fb66b",
        "cursor": {
          "ref": "835a2c54-eb50-4ac9-a27c-a7e79ae4b39f",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "02491162-92a9-4233-9501-3b71e44b2407"
        },
        "item": {
          "id": "79393854-7d31-487d-8cb7-47f6b77fb66b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b79f6e34-75cc-4fa1-975c-2ad2ed009c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeecc4d1-e182-4dc6-93af-da8553080ec5",
        "cursor": {
          "ref": "c18c630b-1d38-4890-9e22-6aa3478e215a",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e8d5f2bd-bd7a-423e-8ede-c1a5a0ce28e1"
        },
        "item": {
          "id": "aeecc4d1-e182-4dc6-93af-da8553080ec5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "93ba3943-2ef5-4bb1-8d6e-e81cd8ff8843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608f165f-7977-4a78-a0a2-2a63be44f704",
        "cursor": {
          "ref": "7b287ede-4a8d-48ee-b224-1b62fbbe80c9",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "092bac8d-7243-4883-878f-5087d258f2e6"
        },
        "item": {
          "id": "608f165f-7977-4a78-a0a2-2a63be44f704",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c9ad1320-315e-49d0-b364-7da575c889ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3b28e9-9440-4b4c-9c65-bb6ad9dd00d6",
        "cursor": {
          "ref": "eedca360-bc2f-4814-93b0-3978f6e62d8c",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "11ecd156-9890-4fab-bc84-0099f1fd5106"
        },
        "item": {
          "id": "7f3b28e9-9440-4b4c-9c65-bb6ad9dd00d6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e2dc82b3-2395-4748-a528-c369f1d44b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff10dc2-477f-4c85-9acd-94c8ecbc88f9",
        "cursor": {
          "ref": "f9b07d0b-f019-415e-96d0-59d53960d44a",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b71a2b68-1f9f-4743-9f6d-8997fcf57f1c"
        },
        "item": {
          "id": "cff10dc2-477f-4c85-9acd-94c8ecbc88f9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5fc5e5d7-8d18-423f-8559-b86c60cf51ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10a86fc-bece-4a88-ae6e-62f17af2866e",
        "cursor": {
          "ref": "11665454-3f00-4a05-aeb4-3f4dc634cc5c",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e724b536-15c9-494d-907b-8c43354896ae"
        },
        "item": {
          "id": "e10a86fc-bece-4a88-ae6e-62f17af2866e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3c6f6b78-10fb-46bf-a6cb-1d66dc70c7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bebf1f9-fd37-45cb-a70a-f5d2f16aafa3",
        "cursor": {
          "ref": "7ff92412-7074-4e35-b0dc-08e43f7e0506",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "dcc71060-f499-43b8-b0c4-fe5156a22174"
        },
        "item": {
          "id": "4bebf1f9-fd37-45cb-a70a-f5d2f16aafa3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "77902cec-970e-42d2-8ab2-9ed585ab4343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f18fe90-1e94-4ad5-afc2-97bb96d74e24",
        "cursor": {
          "ref": "e749875c-a20c-411d-ab05-5774080a1f43",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e387e4c1-8b7f-4356-b911-fcb99181d72e"
        },
        "item": {
          "id": "8f18fe90-1e94-4ad5-afc2-97bb96d74e24",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "34a20ba2-49ee-41c4-a415-0d2a6489699c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f34d7cc-449b-437d-bf8d-4180b23f142c",
        "cursor": {
          "ref": "537cf33e-83bc-4f5d-98ee-b5a2c986faa6",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b4cfbd7d-7fc6-47ea-8181-b183015d2bd5"
        },
        "item": {
          "id": "2f34d7cc-449b-437d-bf8d-4180b23f142c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e410dba4-c91a-4430-b61e-a91934b808cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481bd2f2-0c4a-4693-bded-e1e8f36eb5d3",
        "cursor": {
          "ref": "5441a5a8-ce3e-4e8a-8a1e-91cb35bf1970",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5e9877b6-29c9-4252-b410-71d67cb1ad3c"
        },
        "item": {
          "id": "481bd2f2-0c4a-4693-bded-e1e8f36eb5d3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f176fd68-ab6b-4a53-9728-93711deb92d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4193f2a-f5d3-4153-800d-93bb6aea4287",
        "cursor": {
          "ref": "25d2b7f4-a70c-4dad-a156-741b78a6c917",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "27abf7e3-4150-4d84-b2be-7cdffdc0e518"
        },
        "item": {
          "id": "b4193f2a-f5d3-4153-800d-93bb6aea4287",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ac10d057-376c-41f0-8ee1-4dab8c5fedc2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2830bc-6fd6-4eb6-a27d-a641dc64c69a",
        "cursor": {
          "ref": "7d554126-f8fb-4bba-afba-ed573b3aaa41",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "498858a2-fff7-4d76-89bb-cf0718f25e59"
        },
        "item": {
          "id": "2b2830bc-6fd6-4eb6-a27d-a641dc64c69a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ea3d893c-6d7a-41a8-8efe-fda81f90736e",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c18873-e132-439f-aa31-e6835242f3bc",
        "cursor": {
          "ref": "f0e9f502-1685-4c35-9079-45a65cf3c1b4",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "62850bb7-fcec-4f4b-b8ee-784bd14bbbbc"
        },
        "item": {
          "id": "59c18873-e132-439f-aa31-e6835242f3bc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "79d15798-464e-4374-809c-6113bbe7d8ba",
          "status": "Created",
          "code": 201,
          "responseTime": 165,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d76daa-bab2-4d2a-9eea-1c1d886dc1f6",
        "cursor": {
          "ref": "bc207ad1-7656-44c7-a91a-1674c8d34d28",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8dcc9904-bab9-4eec-8a9b-1521077ab4f6"
        },
        "item": {
          "id": "e7d76daa-bab2-4d2a-9eea-1c1d886dc1f6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "737db91b-f466-4d61-b1ee-876998af860f",
          "status": "Created",
          "code": 201,
          "responseTime": 68,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22562d5-37bb-4d2d-87f7-2e5d0ab2568a",
        "cursor": {
          "ref": "29fe6bbc-c267-4c7a-a611-b7c907f58883",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8537ed8c-93cf-457f-8119-b9ed483c4492"
        },
        "item": {
          "id": "b22562d5-37bb-4d2d-87f7-2e5d0ab2568a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ddb57a43-9634-42c2-8131-3191dfdd2e5f",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d316a9fe-b53b-4e41-9480-6d4931c51048",
        "cursor": {
          "ref": "ebfba2b9-e4e0-4512-8eb3-1a7f13ace58e",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "49559d2d-bf9e-4171-a243-7716c5fe6567"
        },
        "item": {
          "id": "d316a9fe-b53b-4e41-9480-6d4931c51048",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8911153a-0acc-4a35-8836-e9c41191ee4c",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7b0f70-7069-4816-8822-f271a706d9d2",
        "cursor": {
          "ref": "10fba6ef-0449-4010-be1d-9f4651322d5f",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a6ddec7d-c098-401f-b9b7-493579bcc7b1"
        },
        "item": {
          "id": "3b7b0f70-7069-4816-8822-f271a706d9d2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "03971d44-c5a8-4d26-851c-dc89b66a86e2",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd486d7-c4c4-41f8-b1a2-e23fea8af6ce",
        "cursor": {
          "ref": "c8247d3d-3cf7-4b2a-9596-5a4a081574fa",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "84803257-c8aa-4289-ba73-d57c31328489"
        },
        "item": {
          "id": "5cd486d7-c4c4-41f8-b1a2-e23fea8af6ce",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "35a8ea19-f8a1-413f-85ff-257cb7f6b0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7817b26-5b0f-4dbb-956e-c2c8d63abee7",
        "cursor": {
          "ref": "7fdb13dc-b5a3-4c2e-ab68-c603eb89d41b",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7920e761-fdda-4b45-bf00-b1eb4dd28d91"
        },
        "item": {
          "id": "e7817b26-5b0f-4dbb-956e-c2c8d63abee7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "65a88993-63b8-45ce-b9b9-e60f2367c294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcce2257-5b20-4e36-ac01-b50732916697",
        "cursor": {
          "ref": "4f655bee-47b9-44bb-b735-69252a9e029c",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f313abdd-ca50-475d-9456-8d503114655c"
        },
        "item": {
          "id": "fcce2257-5b20-4e36-ac01-b50732916697",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b7015950-e9ba-4381-861e-19a706541cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88afd374-a518-4042-8f97-8622f50887d0",
        "cursor": {
          "ref": "1e7433a2-deb5-4a33-a8c4-8947411e4caa",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "67e2de5d-9288-4857-80f3-7fc9e5238222"
        },
        "item": {
          "id": "88afd374-a518-4042-8f97-8622f50887d0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2759579f-8094-4319-893f-85a58d4829f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686a8338-cbf9-473d-a8b9-eabf656e0fdf",
        "cursor": {
          "ref": "a2ac5388-1398-489e-9118-d8f041cbabdd",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9a74c70b-2af4-4fcb-8dd5-230174717083"
        },
        "item": {
          "id": "686a8338-cbf9-473d-a8b9-eabf656e0fdf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9181fbec-1e10-4e46-a863-aa3e09bcdc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff52b3ee-a84c-4b2e-a433-6b68e619e97e",
        "cursor": {
          "ref": "dc67f58f-251f-44f2-a385-e675c92180f7",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fefe56d3-27fe-4e39-b807-a47a9f7e7113"
        },
        "item": {
          "id": "ff52b3ee-a84c-4b2e-a433-6b68e619e97e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ad9b4ed8-50d4-4e5b-bd2e-8b1d8f6279d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2247954-aee7-46be-a2ea-b72672769ab1",
        "cursor": {
          "ref": "143de18f-bf95-4613-8102-9a8e8e158bb5",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "345d978c-09e9-4d65-b6da-6bad5196f93a"
        },
        "item": {
          "id": "d2247954-aee7-46be-a2ea-b72672769ab1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "28a416e8-b5d4-4725-9bf2-1fb36a3f4cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef271bf8-84e1-4155-89e8-1a132e56e570",
        "cursor": {
          "ref": "37c8247d-b6a8-48c7-8050-e97a980f3593",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "825c843b-1b41-4800-94fd-da7402cc5559"
        },
        "item": {
          "id": "ef271bf8-84e1-4155-89e8-1a132e56e570",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b889a60e-2fb0-4bee-b3a4-1f928c345d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c217d45-dea9-402d-8a90-0ac794de0e6f",
        "cursor": {
          "ref": "aea34d3c-6642-4389-bf85-02ca46dc1873",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7a6958f2-368b-4f8b-9e3d-9f2548daed03"
        },
        "item": {
          "id": "6c217d45-dea9-402d-8a90-0ac794de0e6f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "444be82e-41e2-402e-a13a-8d4a38337043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afdae94-6981-4ff8-a379-d8fb5b792c58",
        "cursor": {
          "ref": "c42fd207-8932-4989-9f14-75bd6c80ee14",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "eddebfa3-14ed-4fec-8c62-4f3fbf22a74e"
        },
        "item": {
          "id": "9afdae94-6981-4ff8-a379-d8fb5b792c58",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "633ab1de-3925-47d5-a22e-83b137984dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82af3eff-ccbc-4732-b187-1d76b3bc3d95",
        "cursor": {
          "ref": "8980ad2e-9268-422f-a494-545102826b3f",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "22db4354-55c2-42d9-b302-f2aef24a16f6"
        },
        "item": {
          "id": "82af3eff-ccbc-4732-b187-1d76b3bc3d95",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a142bc78-50b2-457c-9b49-6bba85fbc0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edeaada-36c0-4bd5-ac8e-7de00620ee10",
        "cursor": {
          "ref": "006ffa5f-fb3d-438c-9f53-8bac59a8bd95",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "632c92a1-a24e-46d9-b24f-626f83828157"
        },
        "item": {
          "id": "6edeaada-36c0-4bd5-ac8e-7de00620ee10",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b9f1aa7f-44fa-4afb-a627-405e5a19a7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2787ec40-1a1c-4016-828d-8e0fe72ba6a9",
        "cursor": {
          "ref": "0b157afe-8714-4932-b751-ef53566004df",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f8bbc83d-69bc-44a4-94f2-d1dfb97df982"
        },
        "item": {
          "id": "2787ec40-1a1c-4016-828d-8e0fe72ba6a9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "23d96ca5-30a3-4ba1-9339-c583424d82c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86428193-ff46-4999-9d17-7fcf20bed59d",
        "cursor": {
          "ref": "04ad9b34-abaf-4d52-a5f7-3834e4fcdf50",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3b2e3f06-5b6e-4318-b141-4366e92fd46a"
        },
        "item": {
          "id": "86428193-ff46-4999-9d17-7fcf20bed59d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9c47acea-2070-43a9-806b-83f6d9e5f53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29cfcf7-6bd5-452f-86fc-990fee230fe5",
        "cursor": {
          "ref": "46bdb9e3-3fe0-4424-b863-fa5e551ca89a",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "13f87d63-7553-46e3-9726-01414842c8c7"
        },
        "item": {
          "id": "a29cfcf7-6bd5-452f-86fc-990fee230fe5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e7236aeb-6566-49a7-814e-bc51dc8c747e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9900a841-b454-42f6-a308-fbc2cfcb82a9",
        "cursor": {
          "ref": "ad767e6d-8ce5-4a9d-aa20-a0b5b298a8bb",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3a7ff71d-4030-4b59-90e9-964f1c6b6dc4"
        },
        "item": {
          "id": "9900a841-b454-42f6-a308-fbc2cfcb82a9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7630b279-a8b8-4db1-b2a2-62fcdce31534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be6d756-a48c-4f89-81a5-2d04014a6f51",
        "cursor": {
          "ref": "50fbacda-ceac-447f-a82c-727c12d41106",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "46150b65-8da9-4385-84fc-f660627eefdd"
        },
        "item": {
          "id": "6be6d756-a48c-4f89-81a5-2d04014a6f51",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7456fa98-0506-46ed-b337-b675c4bae048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5972b80d-7393-4fc0-8b6c-7963b761b5e1",
        "cursor": {
          "ref": "7f33c80c-0495-4f46-a681-529fe2dd149c",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0bfb097f-0bf2-45e5-9a48-826195c77825"
        },
        "item": {
          "id": "5972b80d-7393-4fc0-8b6c-7963b761b5e1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1a04a393-1fbe-4fed-80b1-0a8939d21a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92653d05-5eda-44df-a053-d9a558f52764",
        "cursor": {
          "ref": "5f1bc949-3453-4c61-a4fe-dafb5368c2eb",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "63ad6468-dc1e-4498-b8fd-470d1369595c"
        },
        "item": {
          "id": "92653d05-5eda-44df-a053-d9a558f52764",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0eabbbb8-7a69-4028-b2ac-bcc2284bdf9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e77a45-6c33-45e4-bea3-f48c457c9c5b",
        "cursor": {
          "ref": "cff6ee23-fa7e-4cae-b7c1-7427d41f735a",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "27fcb282-cc1a-472f-9dd0-2af19e5b1614"
        },
        "item": {
          "id": "30e77a45-6c33-45e4-bea3-f48c457c9c5b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "241b1027-decb-436f-97e8-b6a8ec5839b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fab55ed-4ad6-4746-ab97-ba59d174df29",
        "cursor": {
          "ref": "f24bcea3-8ff2-4639-8978-865188ac3943",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6a040b7e-670a-4cc7-ac9b-33559ae3eb94"
        },
        "item": {
          "id": "8fab55ed-4ad6-4746-ab97-ba59d174df29",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8ee55043-5497-46a0-a64c-36af025f733f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1019a34f-b776-4f9c-a2cf-d22684dcae5c",
        "cursor": {
          "ref": "2c18fc16-4afa-4372-afcc-572ffb70f824",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0fc31bc0-09b8-4bb9-a7ab-76000b3b0323"
        },
        "item": {
          "id": "1019a34f-b776-4f9c-a2cf-d22684dcae5c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a5e4cd78-b341-4aab-8bf6-479f852040d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9d57ba-c85a-4cb8-8c45-27f26ef121c3",
        "cursor": {
          "ref": "fed105f2-e577-446c-9737-45cee7bad4ad",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "36fe9051-12a3-45c6-8ec9-cb2a1f2b5a8c"
        },
        "item": {
          "id": "2b9d57ba-c85a-4cb8-8c45-27f26ef121c3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "10675f1f-1741-4950-996b-24dc1d69a061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65e2c8b-dac8-4eed-b89d-7e6f13fcf70f",
        "cursor": {
          "ref": "5bdb8eb4-59c6-46cc-8c7a-a73c31c0c41f",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "26f4a9fc-c46e-477c-ae4b-4540805b1164"
        },
        "item": {
          "id": "f65e2c8b-dac8-4eed-b89d-7e6f13fcf70f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d45e0d72-88f3-4646-a82c-c4568e249501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d635512-3e95-4277-945a-9dd333d46335",
        "cursor": {
          "ref": "058286d8-9a8e-4102-b3c7-86529e476e9a",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f889a68b-a476-42ea-a896-aa30630441cb"
        },
        "item": {
          "id": "1d635512-3e95-4277-945a-9dd333d46335",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0780ed98-2dce-4852-bb32-8a1b822c73d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cfdc7a-7a16-4cb6-ba68-c3072bcd4f9a",
        "cursor": {
          "ref": "2e0a8180-96eb-44e0-80e0-717da0303a9b",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6a140190-227e-45d7-97e3-3e0e369660af"
        },
        "item": {
          "id": "91cfdc7a-7a16-4cb6-ba68-c3072bcd4f9a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e441c185-9570-49e0-b2ae-3338aaf831a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d54562-4f7f-4756-8a08-054ff805d284",
        "cursor": {
          "ref": "9ee2c6fb-bd02-4ea8-8342-8a35d4eb4b23",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c87f8f56-bc3e-434c-881d-5836be83f526"
        },
        "item": {
          "id": "04d54562-4f7f-4756-8a08-054ff805d284",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "72f757ae-5fb0-4ec5-9ce2-9b3b8bbfd509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c2f532-ec70-4ae2-98dd-0dcb792479ea",
        "cursor": {
          "ref": "c9f8882f-10ea-4425-a688-39f00a60816d",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b2f2512f-0811-4b67-af3c-d146d1ab5eab"
        },
        "item": {
          "id": "d6c2f532-ec70-4ae2-98dd-0dcb792479ea",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5ef7f914-4b56-4b96-9a7d-a2364a686d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd619de-eb2e-4540-9ae1-f9629f7cc288",
        "cursor": {
          "ref": "8df916d5-2afa-4fdb-a29a-97b551068754",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2f5fc652-3ab6-4e5f-aac8-cf7a9c38cd8f"
        },
        "item": {
          "id": "acd619de-eb2e-4540-9ae1-f9629f7cc288",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "19e1d07b-1921-4ff5-9556-4dc988dac2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea91f9d2-6cbd-4844-b97f-939997900a45",
        "cursor": {
          "ref": "6c32c40e-db2b-4d4e-bc14-19d8e59017c5",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8abbd3ac-de31-4008-869e-af08e1990615"
        },
        "item": {
          "id": "ea91f9d2-6cbd-4844-b97f-939997900a45",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "74a56544-7f7b-4191-801e-004c9e424bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a512a354-156f-4aa9-b676-e1a2702b98bd",
        "cursor": {
          "ref": "3c377288-93e5-43b8-a937-31ef899971b4",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3ef9cb51-ae63-4189-8e57-913ae8e7b650"
        },
        "item": {
          "id": "a512a354-156f-4aa9-b676-e1a2702b98bd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "112ef2a9-d01f-46cc-ad0a-523b5ecbb147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db63dfb5-5791-4e71-8bd7-511794733c0d",
        "cursor": {
          "ref": "f2adee5d-da2c-4dd9-bfe6-bf35cd64abfa",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "31af2c7a-bfa2-48b7-8418-34accfc926bc"
        },
        "item": {
          "id": "db63dfb5-5791-4e71-8bd7-511794733c0d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0b300e53-568d-4757-9b8f-809ed2026935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692b1d0e-a2a9-4784-911c-30b1693b9843",
        "cursor": {
          "ref": "baddc2d9-233f-422b-ab8e-9f751a379135",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cb434114-927a-48de-95cb-028824b9c548"
        },
        "item": {
          "id": "692b1d0e-a2a9-4784-911c-30b1693b9843",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e641be32-e2b1-43c8-a774-569b2994c534",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cd3ecb-8e78-4758-a33d-5d3f440a1253",
        "cursor": {
          "ref": "4ed020a6-fdbd-4cff-874c-d8d600260a46",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c396ef72-975b-4892-878f-b71bb8dfb32a"
        },
        "item": {
          "id": "c6cd3ecb-8e78-4758-a33d-5d3f440a1253",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b56ffccc-4b4a-4fcd-8869-8fdec6d6d403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0397e5a8-ffdc-4a9e-a391-c492b0746d0d",
        "cursor": {
          "ref": "8fa98923-90d1-4fb0-a9af-045d4bab0869",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "163004dd-025e-4479-9be2-e328a20762fe"
        },
        "item": {
          "id": "0397e5a8-ffdc-4a9e-a391-c492b0746d0d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "186c272c-af16-4100-ae84-2568532e1f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd836122-a66c-4b51-8843-22bd6732a054",
        "cursor": {
          "ref": "7729c8e5-4edd-419f-a8cb-c762c7f2c045",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6139a2d3-3cef-4a7c-87cb-84fe2d3d30a6"
        },
        "item": {
          "id": "bd836122-a66c-4b51-8843-22bd6732a054",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1490bb66-44d5-4b34-a036-0f95855659da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e600bee-8da0-4883-8163-f441ff9c7710",
        "cursor": {
          "ref": "e6d7b376-98da-4ee5-8f0f-27ece00e8e4f",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "73b1e43d-628c-470a-806b-c914bfe91c7c"
        },
        "item": {
          "id": "4e600bee-8da0-4883-8163-f441ff9c7710",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1e1dd6c5-4ba1-4ba5-b1b7-a96544e61ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4032918-d32c-4b10-8b68-5edaa2571f80",
        "cursor": {
          "ref": "69f111f1-77d7-4402-bb94-9d0cbe871769",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7808b734-16a0-49cf-818a-1d0d15ec1b38"
        },
        "item": {
          "id": "e4032918-d32c-4b10-8b68-5edaa2571f80",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7850ec61-df9c-48c2-9495-0380ed154856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db1ee42-7288-437f-905d-b04b2abe65be",
        "cursor": {
          "ref": "25e491d0-3055-48d6-9431-d0feb4fb944a",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "99c1ca76-8706-4cc5-8994-9faa5d93fa65"
        },
        "item": {
          "id": "3db1ee42-7288-437f-905d-b04b2abe65be",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "61824a3e-cd5d-44a6-859d-4ca62dc7dcb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47791d13-90f4-4874-afde-905b89886668",
        "cursor": {
          "ref": "ac05f554-9b8f-4ecf-9347-d66f4154a771",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f55db3ab-4399-4208-8b34-871e2bfa3b55"
        },
        "item": {
          "id": "47791d13-90f4-4874-afde-905b89886668",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2a554262-f6f3-409d-8342-a562788fa185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e832f0-a3ab-46a7-a17a-d84eea024dd0",
        "cursor": {
          "ref": "1763b1ef-adcd-4a87-9493-fe96b6427dab",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "57f386a8-2f52-4f79-8956-219ae0c3bce4"
        },
        "item": {
          "id": "a0e832f0-a3ab-46a7-a17a-d84eea024dd0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d44fef30-847d-41f4-916e-9b3bd4c4f448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f73736a-ce8a-431c-bb23-f779ca2aca6f",
        "cursor": {
          "ref": "2aad0786-c447-42a6-a964-4709e7dfcc72",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ecfc6f43-7ca9-4dc1-acde-8f43ddd2ef58"
        },
        "item": {
          "id": "5f73736a-ce8a-431c-bb23-f779ca2aca6f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "469319aa-e4a3-410a-9b76-751aa5139342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896677bf-fb6c-434d-95ab-b8a3883bd871",
        "cursor": {
          "ref": "4451f192-d0fc-4ba1-9f50-13a05143357e",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9652d0ab-10dd-4434-acb1-ee6e3f2fe958"
        },
        "item": {
          "id": "896677bf-fb6c-434d-95ab-b8a3883bd871",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5c294764-289e-42ba-96a4-5f39d7cbe1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99759621-868a-4113-a911-bbe6e69e1f58",
        "cursor": {
          "ref": "3ff12a6d-4b33-4f6b-8c34-f3a45c00ad36",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b30a6433-069a-42ee-8de8-a12a60ab44a5"
        },
        "item": {
          "id": "99759621-868a-4113-a911-bbe6e69e1f58",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b9d1964a-da69-4ae1-a621-6aca46836a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eebb8e2-ad84-4b20-84d5-1a7c763622ee",
        "cursor": {
          "ref": "e2da45aa-6494-4362-a2ac-3f85cfc24470",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8070ab33-ed05-4d5c-a7c9-66389e925cfc"
        },
        "item": {
          "id": "5eebb8e2-ad84-4b20-84d5-1a7c763622ee",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "74a81ee9-565c-471d-aef5-d758f59c616a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10d8012-2d77-455a-983c-57d6cf044a3b",
        "cursor": {
          "ref": "a3f9eb4b-1a01-4a27-98ab-948ade06ddb9",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3642e038-a621-4899-9005-cc2690de2c8e"
        },
        "item": {
          "id": "c10d8012-2d77-455a-983c-57d6cf044a3b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "06b49290-0a9d-496a-8e1d-366ce0660208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc9217c-acc9-47e9-bb29-11aa0ed1e3bc",
        "cursor": {
          "ref": "91b766c2-7f13-4a1e-bd57-ab67ecac2122",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "777dc831-c6e7-4bc3-9629-016239913306"
        },
        "item": {
          "id": "7bc9217c-acc9-47e9-bb29-11aa0ed1e3bc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fd2d3b3c-415e-4750-ba50-4885ef041cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452c0959-24f4-4ed3-baa4-b1f1b6868abb",
        "cursor": {
          "ref": "77cb87c7-4144-4180-bdfb-34577ce0179e",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "dc4db6ec-b355-4422-95d4-ac0db4398228"
        },
        "item": {
          "id": "452c0959-24f4-4ed3-baa4-b1f1b6868abb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "09b1c3d6-7d25-47e7-b3d0-b809908f6f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6226acfe-ab7f-47c3-b2f5-4767cb9e90a9",
        "cursor": {
          "ref": "39c2edba-f846-4c53-93cb-a09a5971accc",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ecdfcb04-6645-4a11-81a0-d8bd6e82dd9c"
        },
        "item": {
          "id": "6226acfe-ab7f-47c3-b2f5-4767cb9e90a9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a5bc7777-6569-4eb6-8750-234dbbc076a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94072ae2-ca15-4722-8cf6-380eeae63416",
        "cursor": {
          "ref": "aac525f9-53d2-47d3-91a9-6e5132e0c2c4",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "94dd8b3e-e156-484f-8588-9ad255f3b25b"
        },
        "item": {
          "id": "94072ae2-ca15-4722-8cf6-380eeae63416",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3b004a71-6d50-4d45-ad48-6bc8a5c730db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43546db9-8338-4eda-9a0d-b5d0a4390e18",
        "cursor": {
          "ref": "427c890b-0649-4c80-b236-6a8acf8e185d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d8d674ae-e34a-4c3d-9bec-914a2411bc5e"
        },
        "item": {
          "id": "43546db9-8338-4eda-9a0d-b5d0a4390e18",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "51839065-8bca-452d-b390-604954ae315e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4dcd9e-8aa5-4a8c-b481-875eaf12575c",
        "cursor": {
          "ref": "f78b7763-4f21-4294-9e84-dd04c6e4750d",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "08589c49-ebc0-452e-aca3-3e1eb852be78"
        },
        "item": {
          "id": "5b4dcd9e-8aa5-4a8c-b481-875eaf12575c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d289465c-adcc-4d9c-82f2-e56e45485b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b97209-64e4-43ff-bfab-3374d70f04dc",
        "cursor": {
          "ref": "345ef45c-6a6a-42e2-bb31-7f89cf580602",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b6247c07-438b-42ce-9fcd-16920aa5ef45"
        },
        "item": {
          "id": "38b97209-64e4-43ff-bfab-3374d70f04dc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0fe81faf-f463-48b1-ae75-f2cbafc32833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536c6bfb-c2af-42ea-9ea0-f3289c9b9f0a",
        "cursor": {
          "ref": "20d4054b-87db-4d63-b6f1-e68d39a4779a",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "473ed27c-6162-401b-81f5-5ac429b8c501"
        },
        "item": {
          "id": "536c6bfb-c2af-42ea-9ea0-f3289c9b9f0a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5cdaeb01-7f8c-4937-892b-0f756f6a2612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71e0171-2ef5-4fc3-b4bd-c42366789a3f",
        "cursor": {
          "ref": "e2a417aa-aa92-4c78-afd3-69b04721e6c8",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2af85ea6-aff9-452b-9c9d-75a75ccd20c0"
        },
        "item": {
          "id": "b71e0171-2ef5-4fc3-b4bd-c42366789a3f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2f0185c8-3362-4adc-88fb-d9f38bb3c890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c077687b-dca1-4160-a46e-025f67a16423",
        "cursor": {
          "ref": "ead375ec-9d29-450a-a20e-517505405003",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6ca79a67-8d9e-4410-ae92-bf78700620ca"
        },
        "item": {
          "id": "c077687b-dca1-4160-a46e-025f67a16423",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3a7a5a80-2aff-49d0-aa5e-8b66d44c2492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53bf52a-e608-4242-b1ed-d12019470052",
        "cursor": {
          "ref": "1a7686a9-8ced-4506-bc25-ba07e2d91612",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "04501ff3-40e1-4187-8941-b4f895a7379d"
        },
        "item": {
          "id": "c53bf52a-e608-4242-b1ed-d12019470052",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "529210db-0ebe-4ef0-a977-18cb508ce05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afafc84-d672-497d-9744-d1ce47545a38",
        "cursor": {
          "ref": "aa8617ce-2bd5-40fa-9d40-abf8d786b4c3",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f4ea6a44-29a4-4a4f-9ccb-3cfaf36a0b86"
        },
        "item": {
          "id": "1afafc84-d672-497d-9744-d1ce47545a38",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3fe2fc45-b11c-4d91-bed5-8c62383e1600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47130ef-6c2a-468b-9cc8-4e97edfc1473",
        "cursor": {
          "ref": "1712513f-581b-4d02-bed5-63715f45253c",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "98968074-7f7a-4498-bcc3-099784374ed2"
        },
        "item": {
          "id": "b47130ef-6c2a-468b-9cc8-4e97edfc1473",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "78ca6fdb-0526-4858-8630-c9a7f880ba26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a196089b-7cb5-4484-bff5-b7dba46217ec",
        "cursor": {
          "ref": "755cf132-7522-4540-970a-d45348836b79",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "70b4936b-6de0-4be9-8c34-15b3628cabfc"
        },
        "item": {
          "id": "a196089b-7cb5-4484-bff5-b7dba46217ec",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "90c0bdf8-74d8-4a1e-ad92-a0cbca8e4c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5288e6a0-a8cf-44e4-81bb-12ebf8a2242e",
        "cursor": {
          "ref": "94e5a701-00f4-4f47-a308-d19b9c58eb46",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f495642a-8166-4487-9377-5542a884c29a"
        },
        "item": {
          "id": "5288e6a0-a8cf-44e4-81bb-12ebf8a2242e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "97beb3f4-d8ed-443e-bd6f-9e146cc1c768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344797bd-1ff9-4e14-89f7-9b1346ce2524",
        "cursor": {
          "ref": "9c0b0f63-7316-4275-83fb-8050c218af6c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cdf0d377-f52f-4ea0-a97a-37e3315d9f97"
        },
        "item": {
          "id": "344797bd-1ff9-4e14-89f7-9b1346ce2524",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0f5c7552-45e8-4be4-8111-d97bac5c6930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9ec7bd-ca67-4b86-b43d-50cb9d907efb",
        "cursor": {
          "ref": "85f24012-f47c-44c0-994b-68a901a3e68c",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3e146fff-ce81-47d5-8923-982c76ec9ee1"
        },
        "item": {
          "id": "bb9ec7bd-ca67-4b86-b43d-50cb9d907efb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dc8c7fbb-54d8-4950-aeb4-3788eda1d99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69090c8c-9598-4505-860e-e1a5c9275401",
        "cursor": {
          "ref": "d4d1502b-cf77-4439-978f-096f0891058c",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2f60e17f-dc3c-401b-92f0-0b859bc462f2"
        },
        "item": {
          "id": "69090c8c-9598-4505-860e-e1a5c9275401",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1bc76605-b892-44b8-9f74-5309f8c7df79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893d0770-b36b-4c71-bd9e-8d27ade6ffd1",
        "cursor": {
          "ref": "143f7995-999b-4318-9aef-476c2731d1ed",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "70a37c2c-dbce-4136-9345-74e806b65100"
        },
        "item": {
          "id": "893d0770-b36b-4c71-bd9e-8d27ade6ffd1",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b1160cd0-1526-4275-95eb-3e3c224902c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4aa6558-fbad-4d60-bbdc-91a76e95c1ee",
        "cursor": {
          "ref": "01cc655f-44d3-4c8b-a9fc-103f759388ae",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7a7a071b-f281-4e15-b741-07aea3cb00ee"
        },
        "item": {
          "id": "c4aa6558-fbad-4d60-bbdc-91a76e95c1ee",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "562c7624-e209-407f-ae2b-3023bb63504f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23aade0-6ed6-43e2-9cb3-66d1642ddbc0",
        "cursor": {
          "ref": "ccea350a-328f-42f4-b411-16e3257117c4",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c57cd0e4-e63c-4dad-bef1-f89bb53a035a"
        },
        "item": {
          "id": "e23aade0-6ed6-43e2-9cb3-66d1642ddbc0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "30f9ea02-5358-409b-929f-1974f2ac7c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a7f8d9-9c0e-4a06-93b0-1dd09fd16055",
        "cursor": {
          "ref": "34917643-fe75-4339-8a16-b0a18d614aa3",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a092ead9-d6ff-4fdf-bae3-8c5ee24f2303"
        },
        "item": {
          "id": "31a7f8d9-9c0e-4a06-93b0-1dd09fd16055",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fd28acb2-6ff9-4d17-a69a-e0e1893ccbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f82bbbf-ff93-4e62-bd13-d1d21ac423fc",
        "cursor": {
          "ref": "7956f956-c8be-4408-8049-30f007b64c7f",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8a5dc940-2c8b-4ada-83a4-40f049003855"
        },
        "item": {
          "id": "3f82bbbf-ff93-4e62-bd13-d1d21ac423fc",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "552fae6e-fbdc-4a55-8541-666024a88d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdf3d2b-61c6-4f36-a699-755b1ab83ff6",
        "cursor": {
          "ref": "23e60b28-af7c-4087-849e-9ebcd25fc538",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f4b54eb9-fe48-462a-a0a0-9017c1b98791"
        },
        "item": {
          "id": "acdf3d2b-61c6-4f36-a699-755b1ab83ff6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "303a920d-ee6e-4287-b58c-8c30bc309351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06eeec59-4b9f-457d-a316-6c83722d8303",
        "cursor": {
          "ref": "88bcab18-611f-418d-b133-fe7c6337fdf6",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9e5d5a84-8c1f-4ab0-afbd-9662aefb8994"
        },
        "item": {
          "id": "06eeec59-4b9f-457d-a316-6c83722d8303",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e5960e75-06f3-48df-82aa-7baa321af2b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105556de-6088-4e93-b904-658327280cbf",
        "cursor": {
          "ref": "0b991cda-b132-4401-b87a-a344f624ab53",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "edbd0868-2485-4386-8e18-34420f65daba"
        },
        "item": {
          "id": "105556de-6088-4e93-b904-658327280cbf",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bf881a26-3eb2-4d7d-bb44-7df2818234fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef59f9d-a833-4e5d-8375-af8d4ba4fe1e",
        "cursor": {
          "ref": "6661ba56-a448-4fad-a7f3-5585edadb5b5",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "222b23dd-a6ef-4ee5-8a26-88e068bc8a06"
        },
        "item": {
          "id": "0ef59f9d-a833-4e5d-8375-af8d4ba4fe1e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "53835ce1-d03a-4c54-b4a5-cbec19e1bed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382f9530-aeb3-478c-9166-a313e7954b24",
        "cursor": {
          "ref": "0361ee33-b08a-469e-b3c0-4e83c0c6f54a",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d30399db-8dc3-49c6-b4c6-d7f3ec7eedbd"
        },
        "item": {
          "id": "382f9530-aeb3-478c-9166-a313e7954b24",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "85144922-1d41-4236-a9e6-32dc50cc0f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb434efc-b9e2-480d-b3d4-403952b4f25b",
        "cursor": {
          "ref": "c35c2b2a-18fe-467a-8115-c57dc3db096d",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d74df3aa-2c7e-435c-9162-38afa1ce8d74"
        },
        "item": {
          "id": "cb434efc-b9e2-480d-b3d4-403952b4f25b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "91da8937-294b-4001-b9e2-ee1c7a61059d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9486978-edf3-4673-8804-6cbe666e0ea9",
        "cursor": {
          "ref": "2294a6c6-8440-4b21-b2f4-d6353570ab58",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4e61221a-2c55-4067-b6e5-e9b8af9995cb"
        },
        "item": {
          "id": "d9486978-edf3-4673-8804-6cbe666e0ea9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6301fbe8-3920-4037-9a4b-c34c3a99878c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d16294-9f09-4d07-b8d9-243d8ddcc044",
        "cursor": {
          "ref": "d743abb4-a58b-4102-81fd-6e25856be007",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9c7b2d5f-6c9e-4683-a0f1-8fc905ae9395"
        },
        "item": {
          "id": "e9d16294-9f09-4d07-b8d9-243d8ddcc044",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "eef28a44-4ef3-448d-bedd-d21c9f78c74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d6a749-fa7c-4198-a7e8-09cc055bc8b0",
        "cursor": {
          "ref": "c6f0ceeb-a523-4729-b335-042a7ba30df1",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8e87230a-bbc7-4c13-8369-278a0c81bb75"
        },
        "item": {
          "id": "c6d6a749-fa7c-4198-a7e8-09cc055bc8b0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bc3eda88-4ceb-48cc-868b-616c9f5b9f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f4ca6c-c339-4886-b67e-286e5b25a7c4",
        "cursor": {
          "ref": "3459f04e-fab6-42af-8c2c-61ca2f8f37b9",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d17cb97e-c2e0-4a0b-8a5d-bf96489fd505"
        },
        "item": {
          "id": "d9f4ca6c-c339-4886-b67e-286e5b25a7c4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "15df75c1-8af3-4374-9753-1580aaddd443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74ea644-776a-40db-8e9f-22c9076ef843",
        "cursor": {
          "ref": "82989a9d-358d-492d-b49c-fa18acfee1c3",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "09d2ded9-bc1b-4940-a99f-e2e113422078"
        },
        "item": {
          "id": "c74ea644-776a-40db-8e9f-22c9076ef843",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "86e79d0b-5789-4295-b183-e4ccb5e0b5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f0dc3b-a935-4a70-acfd-cc7a8e8b2a28",
        "cursor": {
          "ref": "9d7569b2-f497-445f-b3f8-1664d76a7604",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "851138b1-d64d-4c3a-8e18-bb8de529e30d"
        },
        "item": {
          "id": "25f0dc3b-a935-4a70-acfd-cc7a8e8b2a28",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "70dbc1ac-5e66-4417-a20b-bc2ebc85717d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb0f7d5-62f9-4704-90b4-8abb5dd9b16c",
        "cursor": {
          "ref": "9fa85221-fcb8-4f5e-baee-07e4f3d879f9",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4915d4d7-625f-46f4-8846-b0e2bc8463d7"
        },
        "item": {
          "id": "cbb0f7d5-62f9-4704-90b4-8abb5dd9b16c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2d752991-bbd7-4195-a231-572e53daf2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d4890d-1367-48cb-8906-606f11caecde",
        "cursor": {
          "ref": "72816ef2-84d9-4e20-8ebe-3ae4d4e4058f",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d493cbe7-3989-49f3-8e92-90a573e94988"
        },
        "item": {
          "id": "44d4890d-1367-48cb-8906-606f11caecde",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ea74cf7c-acf8-4160-be8c-a76521faa140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a036c36-d424-4847-bbae-d4ae83482927",
        "cursor": {
          "ref": "3d1ffcc3-43ac-441f-a87e-bad9e4d1125c",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "70cd2efe-8ca5-42c4-8e76-c7d1c4e021d5"
        },
        "item": {
          "id": "9a036c36-d424-4847-bbae-d4ae83482927",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a0118962-a892-4498-a497-1a98c14a0276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b66afe-1c84-4c84-9d30-ba0ff96b393c",
        "cursor": {
          "ref": "d6ed04b7-6439-4e4c-992b-532e817ffe9b",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0d1b436f-53f8-4053-90be-2aab123b3304"
        },
        "item": {
          "id": "b4b66afe-1c84-4c84-9d30-ba0ff96b393c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1ad61f68-e073-4073-af8b-07aff3412ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2f8a4f-c00b-43d2-8378-e1cb7159ce24",
        "cursor": {
          "ref": "c541b7bc-23e8-4e0e-8105-95a549985621",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4ba83546-57d9-4909-bc19-50a425316c63"
        },
        "item": {
          "id": "1b2f8a4f-c00b-43d2-8378-e1cb7159ce24",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2cf2c888-3a18-425c-817e-45df87cba193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014fb4e3-70a4-4e61-a109-cc46e634f911",
        "cursor": {
          "ref": "a915d919-1b4e-44d7-b875-d5e21aaa870c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e335c097-f35b-4bef-b956-9aa515c3f0ab"
        },
        "item": {
          "id": "014fb4e3-70a4-4e61-a109-cc46e634f911",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bf3f99c6-638a-4563-abec-7eff9470c6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a839a363-ba1a-47bb-8f93-643c618938e6",
        "cursor": {
          "ref": "1fd88dab-3776-4e94-bd09-5e31825298f1",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a8d3824c-a3f6-459a-93e2-029f0f4104b2"
        },
        "item": {
          "id": "a839a363-ba1a-47bb-8f93-643c618938e6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "657f08da-5c7b-4068-ae1c-aa313ea4af1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3653c05e-7910-4546-8da7-9705ad001878",
        "cursor": {
          "ref": "cb1c4310-1616-4d18-85e0-5ed1b8c2aa23",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ac33969f-a811-4a1f-a41f-fd92d265f225"
        },
        "item": {
          "id": "3653c05e-7910-4546-8da7-9705ad001878",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "83d6f78d-99ce-4d6b-8f67-d31446cf7255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d1650e-a3ef-4bd1-b55d-ee9a3e614b82",
        "cursor": {
          "ref": "477820b8-21af-45a9-9fe8-efdf1b459924",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ea95953b-6c5a-4199-813f-d3ff67baf833"
        },
        "item": {
          "id": "49d1650e-a3ef-4bd1-b55d-ee9a3e614b82",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "12c06650-7d29-43fe-93f4-7456829cd394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0906288-2c93-4fc2-a89c-75780084c4b3",
        "cursor": {
          "ref": "f551d846-4b27-4711-bb49-41aafac6e37c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e4805038-9144-49e7-8e6d-22d976245ab4"
        },
        "item": {
          "id": "d0906288-2c93-4fc2-a89c-75780084c4b3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "316e2335-f763-4082-b2b6-0509f0cf4b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536275f5-03ef-487e-8551-75c336174c95",
        "cursor": {
          "ref": "777b779a-c8b4-4852-8b99-109b2a29d25b",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "47943fc9-6889-4755-9708-241e6d5bd589"
        },
        "item": {
          "id": "536275f5-03ef-487e-8551-75c336174c95",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c8755eb7-33fc-4eba-838b-e634c5bb6a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f978e376-2c7f-46ef-a7f9-0707f4992433",
        "cursor": {
          "ref": "d94a8b28-b15c-4d4d-85f4-df06f7b247cb",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cf69c27d-31e6-4ca4-b336-e2e2c6881f90"
        },
        "item": {
          "id": "f978e376-2c7f-46ef-a7f9-0707f4992433",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "56b96116-05d3-493b-a686-254b4ee019cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1892d038-8f29-47fa-801d-b63ee76278f0",
        "cursor": {
          "ref": "c30349de-991a-4857-b119-2d370a484fcc",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9b79e531-6025-42c1-b7ed-eb206e9c44db"
        },
        "item": {
          "id": "1892d038-8f29-47fa-801d-b63ee76278f0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2aaaff3a-82ce-4fd8-9ec0-ab5cc1d4c757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d61eef2-2a8d-4d49-94c8-31668ec794b6",
        "cursor": {
          "ref": "a549dc54-8e37-4428-b087-612a88f8c17a",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "09e90627-5aff-4825-89a9-ec864b65802c"
        },
        "item": {
          "id": "1d61eef2-2a8d-4d49-94c8-31668ec794b6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3b4205ba-ca36-442d-983a-ec2423fbeccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5531f1bc-46d4-4d4e-b521-8556a59011dc",
        "cursor": {
          "ref": "24071a82-7c73-402a-ac5b-fefbd46d388e",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "47b121d0-fd58-4e7d-9444-039c296dae4a"
        },
        "item": {
          "id": "5531f1bc-46d4-4d4e-b521-8556a59011dc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "cdfb7ea1-a368-4556-87d1-7ad6ce064034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbf5d29-d097-4e87-a59b-990afd5586cc",
        "cursor": {
          "ref": "9b6931b3-0692-4feb-baae-a9d8513e0f20",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5ad7a91b-3837-4b77-aaa3-34f54e31aa4f"
        },
        "item": {
          "id": "5dbf5d29-d097-4e87-a59b-990afd5586cc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6ea97195-42e3-4fb3-957a-302bf42c2da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd7d035-ba96-48e3-b559-d37b2f0293d7",
        "cursor": {
          "ref": "c2c4d843-c666-4cf7-9e46-cdd847b1e8c9",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "524cae4c-6415-4571-88ac-bfab7e3cd2da"
        },
        "item": {
          "id": "3bd7d035-ba96-48e3-b559-d37b2f0293d7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2d77fd48-04da-4646-9892-07d3754ba04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef0ec00-1362-4340-9413-864734af3141",
        "cursor": {
          "ref": "b4600c2f-4ed3-4e15-ad21-ef30c3a6f3df",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c1bb0630-0e60-4d67-9dbf-f387e42128b9"
        },
        "item": {
          "id": "fef0ec00-1362-4340-9413-864734af3141",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8d231cf9-19a6-44b7-a6ae-e2e62d364086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276077d6-4746-486f-803e-73eb2e1964cb",
        "cursor": {
          "ref": "226ebd89-a1d4-4307-9d4a-30b7c9ae83a6",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "51fd9ad5-b603-4abc-94ab-645fd80f4974"
        },
        "item": {
          "id": "276077d6-4746-486f-803e-73eb2e1964cb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5e01f576-85cb-4e1f-8f75-7dc34e73f1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706df348-4d35-4da3-a37b-f12bd2c5d27a",
        "cursor": {
          "ref": "899ee5fa-c1b3-4cb2-8a04-e632887b8db2",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3ff96f0f-d3db-45ed-acc4-19fdcaf7ac45"
        },
        "item": {
          "id": "706df348-4d35-4da3-a37b-f12bd2c5d27a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "be70ab9b-1334-451f-b885-d251174ddc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceeaebd3-33ac-49bd-8f75-bd028d9c2c0c",
        "cursor": {
          "ref": "017d0542-ee40-47bd-8b93-347f9663ad19",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5e072746-3274-406b-914a-b4e75f61af6a"
        },
        "item": {
          "id": "ceeaebd3-33ac-49bd-8f75-bd028d9c2c0c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6543b16d-d37f-447f-b8df-afe2bdfe50b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd51bff-9c94-405a-9e88-4af44ee5ee28",
        "cursor": {
          "ref": "4389846b-efc1-41df-9438-723e64a73192",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9ed73c0c-d953-4090-b726-5b8c57808871"
        },
        "item": {
          "id": "4bd51bff-9c94-405a-9e88-4af44ee5ee28",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "10917eb1-57df-4e8b-b518-3d79d852ddae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ef00f3-63a1-4838-a845-8c581bf1714b",
        "cursor": {
          "ref": "10656710-09aa-42d3-b1c6-1db94f6a4592",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2216b6a5-c598-4d05-8387-3364298ad823"
        },
        "item": {
          "id": "60ef00f3-63a1-4838-a845-8c581bf1714b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ec2ba9e1-083e-44b7-a6d9-34870cd05dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f8043a-d021-4fdc-94bd-f74acc5a11ef",
        "cursor": {
          "ref": "f9977be2-e7e2-4404-808a-e61cbd3d53b7",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6ddcf7b7-1dfb-43b8-a69a-486203607131"
        },
        "item": {
          "id": "b2f8043a-d021-4fdc-94bd-f74acc5a11ef",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a90aeb74-fc06-4dfd-86eb-d22bcec83771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea3e456-db60-4324-b164-1e9badfd7ae1",
        "cursor": {
          "ref": "b0673662-742d-4622-a5a5-1e306f88b7a3",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "49248a54-8a16-4a99-8d4f-f0a715a5b594"
        },
        "item": {
          "id": "bea3e456-db60-4324-b164-1e9badfd7ae1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8708e25f-c041-4df2-8440-23b2053edc8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94203d38-0db8-4ef2-a993-a77745b1ea47",
        "cursor": {
          "ref": "e5ff0b30-6004-4ebb-951a-20c5162d6c91",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3cee8bb9-d138-4043-b8ac-a7e7df8ca015"
        },
        "item": {
          "id": "94203d38-0db8-4ef2-a993-a77745b1ea47",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "db8273cc-877b-4dd3-88a9-3256b45bd8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1313dd4-7c6c-4f7f-be42-90e7991d0dd4",
        "cursor": {
          "ref": "0d9fe683-2894-44f0-82c6-4c7ecca85d63",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5dc3d1c0-e03c-447e-9d94-7f9e9c131e24"
        },
        "item": {
          "id": "e1313dd4-7c6c-4f7f-be42-90e7991d0dd4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e4f253a6-aa66-4096-9718-668245a1776f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26497e3a-115a-4194-b298-f869b1893535",
        "cursor": {
          "ref": "d26b089d-53f9-4d82-8798-0aadaa3be137",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6cc0dfed-00b4-4662-943c-340a3e64cb84"
        },
        "item": {
          "id": "26497e3a-115a-4194-b298-f869b1893535",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b434c657-b700-42a3-8f65-b11dd80a6af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93097207-9135-4da7-beae-12ae316d76fa",
        "cursor": {
          "ref": "54a57b7b-7894-4df6-b527-f5b2239ea892",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ae07fdc9-2049-4406-8c36-654a51361dc0"
        },
        "item": {
          "id": "93097207-9135-4da7-beae-12ae316d76fa",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9c8988e4-7448-4430-b160-750a77fafc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1f8787-ae2f-45a8-9671-5f5603b67486",
        "cursor": {
          "ref": "fd1fa3b9-da61-40a2-a0f7-6fbccca5ac29",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c7de721e-06d2-41be-a750-dd92f8a271ad"
        },
        "item": {
          "id": "8a1f8787-ae2f-45a8-9671-5f5603b67486",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0ae45e17-3c1a-450f-84ab-4d2f7b1a6019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019b7c20-5b60-4f18-8b61-9e32fe9ccc99",
        "cursor": {
          "ref": "87951955-b83c-4fe2-8dd2-be981c4ddac7",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "23ae5e53-95bc-4ccf-a80d-5fc9f07b2a98"
        },
        "item": {
          "id": "019b7c20-5b60-4f18-8b61-9e32fe9ccc99",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "be7c2058-1492-4b90-a563-2594438660c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd7bf57-ee38-4a24-adaa-b0cd6657168c",
        "cursor": {
          "ref": "94967019-e5ea-4cdd-a751-b78bcda6078b",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5446ded6-0bc1-478f-8b60-16264844bdc0"
        },
        "item": {
          "id": "cbd7bf57-ee38-4a24-adaa-b0cd6657168c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "826f1975-79cb-4584-b39e-3353a8277814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285630f8-c847-4620-a9cd-e4bdb5480c0d",
        "cursor": {
          "ref": "229905fa-6883-4102-a4a7-77915431bc10",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ec438e80-a373-410d-9d14-d6cccaf9fa5e"
        },
        "item": {
          "id": "285630f8-c847-4620-a9cd-e4bdb5480c0d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b3d72e52-c1b5-414a-b261-7e9e0431cbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8357622-71cc-45b4-b085-3a7d64a18f98",
        "cursor": {
          "ref": "8eb0f4fb-b949-4c08-8285-4d1e785d52f7",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "757ff3ae-c2fc-4076-a055-2a97e13bc009"
        },
        "item": {
          "id": "c8357622-71cc-45b4-b085-3a7d64a18f98",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "17117095-33b5-4c86-8091-3e0cfa380dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd5e95d-d5a1-43c6-83c6-981461a692fe",
        "cursor": {
          "ref": "2e3f0d7d-5dca-4c3b-8b32-49c454a7a29f",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e3c62353-9100-4c8e-9500-8944c19bfa8d"
        },
        "item": {
          "id": "ecd5e95d-d5a1-43c6-83c6-981461a692fe",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "280abc81-b456-42e8-a9ff-a3de0b9fbf50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f580c499-3fb3-4b16-8143-58db46154d6c",
        "cursor": {
          "ref": "0d343f32-a0ee-48c0-a4d5-e59c30dc83b7",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7d372569-128a-4b8c-8c9d-52add50ea81d"
        },
        "item": {
          "id": "f580c499-3fb3-4b16-8143-58db46154d6c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fa1698b7-93c5-4f2d-ba38-65c2981d2150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1d7809-bc80-4430-af07-6ae5e3cb5d64",
        "cursor": {
          "ref": "7966c747-629c-4fc7-b090-300a757901bd",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a52be5cb-b4c6-46da-8127-2869d27f37fb"
        },
        "item": {
          "id": "bc1d7809-bc80-4430-af07-6ae5e3cb5d64",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e474ceb8-badd-4f8a-8873-fd456d71d36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a08eb05-6fff-49bf-a69d-a3a1ae762b42",
        "cursor": {
          "ref": "14559d77-a0f2-44cc-97cc-5bfb06face28",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "591eea16-164a-47c0-adaa-9badf31a0a7e"
        },
        "item": {
          "id": "5a08eb05-6fff-49bf-a69d-a3a1ae762b42",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "385478d0-8d13-4fbc-a38e-60bf808929a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6036fd9-9e08-4776-8ac2-f3b9b41b724d",
        "cursor": {
          "ref": "2cdaaf40-2f1e-400a-943a-ece0d9e6d4df",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2655a77e-0425-4b77-9943-e0e9e87e4552"
        },
        "item": {
          "id": "d6036fd9-9e08-4776-8ac2-f3b9b41b724d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d7b17e54-e38b-462e-83f9-875b1975980a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55774089-7d7e-4475-907f-bbacc925041e",
        "cursor": {
          "ref": "2fb0cc3f-a324-4ea2-89b4-7e36e2912621",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d6c83e66-b980-4cee-ae1e-cc17205e0afa"
        },
        "item": {
          "id": "55774089-7d7e-4475-907f-bbacc925041e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "784d5a02-07c1-41dc-8f08-cba9b8d32084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47150af1-22e1-45b1-82b0-90efaac68090",
        "cursor": {
          "ref": "03e9d09d-5592-4786-8583-4e6ee4054cbf",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3aa5bbcb-5f3b-4af8-9f48-e1b28c5c712f"
        },
        "item": {
          "id": "47150af1-22e1-45b1-82b0-90efaac68090",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e04d047b-ea93-4cb8-9dcd-1ac11fb4ef1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459b55ef-8f35-496e-88cd-ebb7aaf64cc6",
        "cursor": {
          "ref": "051fd872-a404-4844-a869-0e41af4d3d72",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a1502e4b-d8bd-41e1-88ef-48afa1ef472d"
        },
        "item": {
          "id": "459b55ef-8f35-496e-88cd-ebb7aaf64cc6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3cc7bb2b-05ab-4fc2-b249-289be232daa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a196587b-d02e-4d50-9280-db9c9c4b1547",
        "cursor": {
          "ref": "ca2d9d01-7b66-4392-85ef-5436f759672a",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1a14007c-fd95-4ec2-a548-86598b3c1fb0"
        },
        "item": {
          "id": "a196587b-d02e-4d50-9280-db9c9c4b1547",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e899ee59-9307-4fc1-b962-1726839b45b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70582a3d-d266-4492-9cce-05b10f86754f",
        "cursor": {
          "ref": "29a86929-8abe-4803-a9e3-d7614befafa6",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "aa69a5c7-2c4f-4f13-af02-5c068eb28e5c"
        },
        "item": {
          "id": "70582a3d-d266-4492-9cce-05b10f86754f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "29ccc4d2-5f3c-4c21-8ec3-f76d79a2cc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bfd077-9c4c-41c5-a878-fe0ea452146d",
        "cursor": {
          "ref": "559d9edd-0f24-4cce-820e-f73a1ebfcf70",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6c2e52a8-4c89-4d02-87ac-6c4d4c295be8"
        },
        "item": {
          "id": "f2bfd077-9c4c-41c5-a878-fe0ea452146d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d442366c-e3c0-4463-b555-edef58892ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adab164-47a7-4542-946a-bd3d8b7b089b",
        "cursor": {
          "ref": "c9d167b1-4755-49c2-9755-637c417b2cd8",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6463456e-0990-4486-ba8e-1243fff6f128"
        },
        "item": {
          "id": "2adab164-47a7-4542-946a-bd3d8b7b089b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f0423a8a-172b-4b33-9327-50329ee5ff4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b64a8a6-8269-4dc2-865a-4a82a02fc2cd",
        "cursor": {
          "ref": "66056aa6-f652-4648-8b24-fde200b4ff2d",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a7b73145-d612-40e4-91bc-16e3906b46b0"
        },
        "item": {
          "id": "9b64a8a6-8269-4dc2-865a-4a82a02fc2cd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1bab747a-ab35-40e0-a64e-dbedd4c717f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b175b8e-8150-49c5-9d65-df46d283a9c7",
        "cursor": {
          "ref": "07121b07-1fd8-461b-b475-571cf40b6351",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c59b3c82-5f83-478c-bd77-f29c3a06b1ec"
        },
        "item": {
          "id": "5b175b8e-8150-49c5-9d65-df46d283a9c7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6b4b892f-c89d-4b1c-ad1c-4301b712e8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b7881f-5b68-4fbd-981a-48824dc08853",
        "cursor": {
          "ref": "b71b5461-e4ff-4dd1-b631-c90cb726f058",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "db0fc852-b0d2-477a-81e2-6a36fc854394"
        },
        "item": {
          "id": "e1b7881f-5b68-4fbd-981a-48824dc08853",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "aaf99d02-9fd4-429b-9361-0c4a1697f286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290a031c-5124-415c-ab90-0f7352464f19",
        "cursor": {
          "ref": "889a3330-d145-4e0c-9600-89289f7b14c8",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b63581ae-23e7-4764-9d57-66c46d93daeb"
        },
        "item": {
          "id": "290a031c-5124-415c-ab90-0f7352464f19",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ae23e874-114f-4fe5-8301-e7e8c647a12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060d4dde-ed3e-4b35-9545-e4110160d0c3",
        "cursor": {
          "ref": "6d7bbda1-ce4e-4957-a952-a19e48fbd767",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5e1b4ba6-73aa-487f-8cac-c655df31c8fa"
        },
        "item": {
          "id": "060d4dde-ed3e-4b35-9545-e4110160d0c3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "da1a39c8-3983-4c02-ac11-9da4ebdcfd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d112d926-8e48-4386-8a06-454d690016db",
        "cursor": {
          "ref": "2a080343-032e-4466-af57-cb7dc0cc042b",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0bf8bdb2-7369-401c-9ad5-9693e9297f86"
        },
        "item": {
          "id": "d112d926-8e48-4386-8a06-454d690016db",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a465fe56-0cc0-4573-9b37-9ea55702d812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798df009-d7e3-4b21-aacc-c6b83b24c395",
        "cursor": {
          "ref": "927c3e2a-f59a-4aa9-a0e3-49a19ea32f5d",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "61eb1946-8ea2-43f0-93e5-e00ef5bd1a3c"
        },
        "item": {
          "id": "798df009-d7e3-4b21-aacc-c6b83b24c395",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e41238b2-eaf0-4022-bb51-e9f94d9fee6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c5932c-9483-492f-970a-a31aacb35b02",
        "cursor": {
          "ref": "d79832cf-867d-447e-b0bb-03acba324d2c",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8cce129f-e962-43d9-8372-75e1d393054f"
        },
        "item": {
          "id": "f6c5932c-9483-492f-970a-a31aacb35b02",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "588177a0-5cfb-4613-a5e6-515464f4f9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ae61b9-0268-4612-afbf-7b97a27e82d3",
        "cursor": {
          "ref": "2e9874f2-5270-4a9a-9b5a-897a1bb0e2a1",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "57530f1b-ce03-4ba4-8d16-4be1ba94c1d3"
        },
        "item": {
          "id": "36ae61b9-0268-4612-afbf-7b97a27e82d3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "05f31a6d-f797-40bc-a0bc-fd760b114886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee424935-afda-411f-9298-49463e04a003",
        "cursor": {
          "ref": "b8afb57d-23cd-44f7-b1d5-eb0c2929f0da",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d3f0eb08-17cc-4c12-9277-c103bcdddbef"
        },
        "item": {
          "id": "ee424935-afda-411f-9298-49463e04a003",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1a7d4c2a-3d25-4f46-a872-f7c239590393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ca1a27-fec2-4fb7-aff6-570363e887d7",
        "cursor": {
          "ref": "e90b2b45-6b27-4379-bb2c-05e96ccf594b",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "db7bda28-0eab-4614-93bb-ed0077a3df68"
        },
        "item": {
          "id": "84ca1a27-fec2-4fb7-aff6-570363e887d7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "28788cb1-6b94-43bc-981d-b6546d36e6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94719fa-1cfd-4947-b961-98b7022e34fc",
        "cursor": {
          "ref": "e199b0bb-036f-43dd-b8cf-0c20674d11d0",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "79c17c73-1a4a-4563-b2cd-92809c0471aa"
        },
        "item": {
          "id": "f94719fa-1cfd-4947-b961-98b7022e34fc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0467c1f6-5eba-4458-b12f-cbf9a4800e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f2ed49-78ea-4064-8e68-b18ba35a7a69",
        "cursor": {
          "ref": "b9cb56e7-b4b3-4715-aa35-7913643c69b6",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "04e8123e-74f5-4d42-8cae-84d741b4e3eb"
        },
        "item": {
          "id": "37f2ed49-78ea-4064-8e68-b18ba35a7a69",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c22c6a58-9a25-4cb5-a65e-75e580c3311d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23858c7-e93d-4a0e-b95f-5bf1d4026b60",
        "cursor": {
          "ref": "a0d17c8a-e7b8-4f32-a380-fe4824a4a56a",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a186f800-f7a7-4bbd-9a41-9e53c101ffe8"
        },
        "item": {
          "id": "e23858c7-e93d-4a0e-b95f-5bf1d4026b60",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c8e70e23-117a-40cc-863a-0f801d6b62c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab86ec5-2609-4ee1-8506-cdf5ca0a3bcf",
        "cursor": {
          "ref": "70200e69-69f7-456b-9b59-c7ef0122004e",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "20a1645f-9229-49d3-a429-2c00caa7f1e3"
        },
        "item": {
          "id": "5ab86ec5-2609-4ee1-8506-cdf5ca0a3bcf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ba7cda52-f54a-4de0-901b-c02fd15e7d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29e2ca5-51bd-4aa7-98ce-8770e8aa8557",
        "cursor": {
          "ref": "672b03d0-747a-4c9f-ab3e-e014e0e18b23",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "733081eb-8157-446f-8db0-d696f844cc54"
        },
        "item": {
          "id": "f29e2ca5-51bd-4aa7-98ce-8770e8aa8557",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "815f9f9a-4e56-4693-b85f-9eee898c3658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa124e52-070a-4a7b-be5d-73821133d549",
        "cursor": {
          "ref": "bf63fb63-b3e4-46b9-8b1d-ef1e16afec6e",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "18f96816-7856-43d4-be0e-ce6e8acdb927"
        },
        "item": {
          "id": "fa124e52-070a-4a7b-be5d-73821133d549",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6682e6c5-526d-44a3-8248-0b7fb0851082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3243503-977c-4559-a3c3-05ac1556b1fe",
        "cursor": {
          "ref": "0073551e-741e-4e43-b7e1-2930cfe9f5b7",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c3a8a299-9b86-41c8-a5ff-eba87a41c730"
        },
        "item": {
          "id": "c3243503-977c-4559-a3c3-05ac1556b1fe",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e14777d0-3610-42ef-8597-8219ed0cc586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cecbde0-f153-4c8f-9243-de97d6e3ee63",
        "cursor": {
          "ref": "64f5419b-979f-479f-9f8d-273d9da2afc9",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ae7f795c-c006-454e-b8e7-03c7cace1898"
        },
        "item": {
          "id": "4cecbde0-f153-4c8f-9243-de97d6e3ee63",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8fa303f9-f867-4169-a3a5-cf10d9712f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f50493-18bb-49c5-9187-f627fb7767bd",
        "cursor": {
          "ref": "07f2c013-4e30-41d3-adb7-ce820a709c57",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6d164a2e-c338-4a54-80f7-e1fcc19dfb8a"
        },
        "item": {
          "id": "d2f50493-18bb-49c5-9187-f627fb7767bd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c62b0eeb-9980-4bfa-8b04-e10b6e76d15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72cf509-b6d9-43e7-892a-ca282fa321a5",
        "cursor": {
          "ref": "480d2c38-6fee-4c65-b745-1ff75d90cd85",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3a9bf513-7e91-457d-9436-667b8db7f3ad"
        },
        "item": {
          "id": "c72cf509-b6d9-43e7-892a-ca282fa321a5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d77a721b-e6ab-4f0f-920c-ce309e7e31e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e1f354-f19b-492c-badb-61b9887bbb24",
        "cursor": {
          "ref": "adfb6770-2192-4518-8a5b-fb05c02a3450",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "fdb3a400-0c26-4452-a81c-7bd4de5c2c1b"
        },
        "item": {
          "id": "04e1f354-f19b-492c-badb-61b9887bbb24",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4faa93cc-586a-47aa-9ae2-e019cf51b58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d308a04f-8dff-47ed-8523-0e8096d8e257",
        "cursor": {
          "ref": "922503ae-e551-4709-a4bf-ef84b8a59e80",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "1ed949e9-cb8a-4902-89b1-6440f265bc19"
        },
        "item": {
          "id": "d308a04f-8dff-47ed-8523-0e8096d8e257",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5b010f36-0ef8-4e32-a324-2905b6ea87fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c811ca0-4113-42fe-ab49-d036a05fa5ae",
        "cursor": {
          "ref": "e58aae05-53a1-48ba-aaae-58435d2a1ab4",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3cc68288-16a8-42d2-b3dd-1f383caaaffb"
        },
        "item": {
          "id": "4c811ca0-4113-42fe-ab49-d036a05fa5ae",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "16dac985-5fca-4784-b867-35e17a2d72c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90995345-bde9-4090-8870-27fbd2b49e1a",
        "cursor": {
          "ref": "5bb06193-d02f-42c9-ad74-4d5e15e01842",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5048ad10-bbb4-42f6-8c9b-e1f5314670a5"
        },
        "item": {
          "id": "90995345-bde9-4090-8870-27fbd2b49e1a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "df1bdc02-605d-4c53-9a57-ff22ef160a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b91ac8-3922-4924-9339-cb5d623eb9c3",
        "cursor": {
          "ref": "e89a669c-1af0-44e8-a05a-c178de296025",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "bf852a2f-f88a-49cd-8b33-9bbd44fc63b3"
        },
        "item": {
          "id": "61b91ac8-3922-4924-9339-cb5d623eb9c3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a04b7963-cd4e-433c-9e9f-c4812f524f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c61bbd9-b233-4c47-9259-4ab456d07c55",
        "cursor": {
          "ref": "fc9ef586-eb25-45a7-bf7e-112b0711e1b3",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "884804e6-f218-41f9-9922-b9fa68c1e2d7"
        },
        "item": {
          "id": "1c61bbd9-b233-4c47-9259-4ab456d07c55",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e166374b-167a-4317-9e63-6c92b014c578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0997c832-e1de-4b3e-bc39-afca2b534376",
        "cursor": {
          "ref": "e7fcf743-2358-4105-bf0c-73fef5191e08",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e3bebc53-ad74-4e04-9e37-c7c182298cdf"
        },
        "item": {
          "id": "0997c832-e1de-4b3e-bc39-afca2b534376",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "13e70e2c-0627-4497-af5b-c45c3a69db7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7b0ae7-2b7a-43c5-9fc2-cc058b53c6f4",
        "cursor": {
          "ref": "3edf37dd-89d7-488e-adf6-71fcd4392d9a",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7392a7e9-0ec1-4822-838b-f53fa47dd53b"
        },
        "item": {
          "id": "cc7b0ae7-2b7a-43c5-9fc2-cc058b53c6f4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0cab1507-ffb1-43fa-9d88-ac0128b8a8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ed8228-a1a2-4d40-9158-2dd18380ea32",
        "cursor": {
          "ref": "4bafc710-065b-4a72-88ad-d305863dd42d",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "85f575c4-007e-43b1-82c8-12ea346d3058"
        },
        "item": {
          "id": "40ed8228-a1a2-4d40-9158-2dd18380ea32",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a3e66d79-04fe-4f47-b4c0-3e2a6e6c8969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926b13e0-8c0f-47d2-afd2-6fb181c19066",
        "cursor": {
          "ref": "057bdf2c-e77f-4083-b3c8-ea46b283430b",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0b0bd4cf-4101-4c05-9dff-8ab2bb1c7e6e"
        },
        "item": {
          "id": "926b13e0-8c0f-47d2-afd2-6fb181c19066",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "79d66821-7e1e-49d3-a771-3eb07c8a358f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4357fbdc-6f41-4b7d-99b6-f994c83a03d4",
        "cursor": {
          "ref": "4c36359b-72c9-405b-b064-0bda09430be4",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d25d921e-7fe3-4206-8bce-e98c6b2af410"
        },
        "item": {
          "id": "4357fbdc-6f41-4b7d-99b6-f994c83a03d4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c8ff32df-1f41-4f42-ae08-d6ef38c1868c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb89ff6-0b33-4777-b010-e409981a23d5",
        "cursor": {
          "ref": "bc0321b5-06d3-4b12-baa7-23bd5f6466a4",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0a443ed5-d020-4fb0-8ff7-0dcd1a74393a"
        },
        "item": {
          "id": "0cb89ff6-0b33-4777-b010-e409981a23d5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f658c88e-9d4c-4bb8-ad43-f5a114d4f59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffc31b9-1e3c-4280-8f00-f593c965860b",
        "cursor": {
          "ref": "f4f0a4aa-02e4-4ff1-aa92-1ea1c021d8d6",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d7ca4700-a370-4b53-9343-fca19dbfe3f8"
        },
        "item": {
          "id": "2ffc31b9-1e3c-4280-8f00-f593c965860b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "88c437ef-8a3d-486d-9f12-7eaf291f90d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f59872-41d6-4d9e-83ce-541da717b415",
        "cursor": {
          "ref": "cf21ed25-3327-4faa-be4e-eff5913f4c39",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "aa3b125e-f204-4190-b8cf-075f3b28a82a"
        },
        "item": {
          "id": "23f59872-41d6-4d9e-83ce-541da717b415",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d8f1ef48-59c8-4064-800c-de4b79d42603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418cde28-03ea-420a-ac67-b665c878a7f2",
        "cursor": {
          "ref": "5508d7d4-4d9d-451c-b093-70aeaf344396",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "dd056c0d-1f7a-460c-a2cc-b5fc8afcbcda"
        },
        "item": {
          "id": "418cde28-03ea-420a-ac67-b665c878a7f2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "46733657-e633-4aa5-8c55-8770afe51ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb4aef6-84e4-4592-8de8-a3c25a5f1024",
        "cursor": {
          "ref": "cffb079b-f203-4336-a1ff-4cc99c3d6bfa",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "00cf525e-828e-42b9-bb79-22401e7a14fb"
        },
        "item": {
          "id": "2eb4aef6-84e4-4592-8de8-a3c25a5f1024",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2978d8c7-377a-44a4-b33f-7031e60c5d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d346f5f-d39a-4006-a73d-50647126c560",
        "cursor": {
          "ref": "a8616af9-3b59-4c5f-a897-97b672e41d18",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "775c7f14-a884-43fc-9ff2-e07d69978602"
        },
        "item": {
          "id": "4d346f5f-d39a-4006-a73d-50647126c560",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "93f49d9c-3e6b-4efc-b646-71dc7644ffe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44bc7d7-28cd-4014-bc3d-91716a40a070",
        "cursor": {
          "ref": "59338fa2-9167-4c4c-88b2-d4f73a2ff828",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4793e70f-2418-444f-92ed-a4551d50722e"
        },
        "item": {
          "id": "c44bc7d7-28cd-4014-bc3d-91716a40a070",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "964197fc-cfe0-440b-9295-fe5d5a6f51cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2140256a-d096-44ff-9bd8-60858ee75b12",
        "cursor": {
          "ref": "eb782a2d-fa95-4cac-8598-6d5db427a293",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a66102a8-1d59-461a-b9b5-a7fbb34d9ca9"
        },
        "item": {
          "id": "2140256a-d096-44ff-9bd8-60858ee75b12",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9ca48f79-e384-4851-b304-a62a9fd2095a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45064d78-a8a2-4e27-b3ab-d2f718851a32",
        "cursor": {
          "ref": "a93b5f05-59f1-4b2a-b56c-368b4897bcc1",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "6e7ebfa7-d83f-4f97-939b-e4ed29f8ea7d"
        },
        "item": {
          "id": "45064d78-a8a2-4e27-b3ab-d2f718851a32",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "40f20f85-41b5-4e17-906c-6b016df22793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ea91fe-dc62-4def-b2d5-d901a786e947",
        "cursor": {
          "ref": "3815bd58-e1ff-4395-9068-7a53e98770e3",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2de6ecd7-7960-4c88-a2cd-dc1d4f1b1b43"
        },
        "item": {
          "id": "65ea91fe-dc62-4def-b2d5-d901a786e947",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ac60a4d8-ddb1-485c-9f25-6e4bf46d6856",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0867fc31-e75a-43a9-b7c0-5d7d82fa86dc",
        "cursor": {
          "ref": "6d3cd8bf-30e5-4063-bfa8-2dddea992273",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "991382eb-9f14-4af0-b487-df28689e54d5"
        },
        "item": {
          "id": "0867fc31-e75a-43a9-b7c0-5d7d82fa86dc",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "44c58925-e896-4b29-8496-b4c37075ab15",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7733c139-d4ff-4bb4-98d6-45c16c1387fc",
        "cursor": {
          "ref": "b573c72f-5683-48c4-9927-2bcd1031f552",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "84cd1e17-7f98-4661-be33-c6955148b51c"
        },
        "item": {
          "id": "7733c139-d4ff-4bb4-98d6-45c16c1387fc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ed1a7718-f25a-4dc4-9433-4a313583c67e",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e9b6be-27e8-4bcd-b7f2-13af2098cd6d",
        "cursor": {
          "ref": "70b9d411-ab2f-4160-80d0-df2f86ccf0d3",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "51f2f6c0-c524-45fe-a096-56c38476ef87"
        },
        "item": {
          "id": "39e9b6be-27e8-4bcd-b7f2-13af2098cd6d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "874cdb67-0b8a-45e6-94df-655a399ffbef",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fba251-88ad-4d36-a3af-89cee5d75316",
        "cursor": {
          "ref": "7518cca3-c8bc-4f96-bcb6-321a69fb8795",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2b5fd933-9de8-4692-a7f8-da369502b8d3"
        },
        "item": {
          "id": "77fba251-88ad-4d36-a3af-89cee5d75316",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c8a84126-e4f5-4e7c-ac22-7ef4917c663e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fba251-88ad-4d36-a3af-89cee5d75316",
        "cursor": {
          "ref": "7518cca3-c8bc-4f96-bcb6-321a69fb8795",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2b5fd933-9de8-4692-a7f8-da369502b8d3"
        },
        "item": {
          "id": "77fba251-88ad-4d36-a3af-89cee5d75316",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c8a84126-e4f5-4e7c-ac22-7ef4917c663e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d866488-e782-4c3e-83e0-7af9687ab1ac",
        "cursor": {
          "ref": "7b14dfc8-ade4-4877-9f96-bffd1694d919",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "824f761f-19a5-4635-936b-ad10bcda2457"
        },
        "item": {
          "id": "1d866488-e782-4c3e-83e0-7af9687ab1ac",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0442c9ca-3606-4486-828d-aad86a57bf39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a7b48b-f621-4a27-969f-2760cb8e5756",
        "cursor": {
          "ref": "1a327c65-361d-464d-9ed8-beaac7b62b9d",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "eb446adf-d720-404e-b63c-cc79d1387778"
        },
        "item": {
          "id": "92a7b48b-f621-4a27-969f-2760cb8e5756",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9f0a845b-e4cd-4a18-a8a7-adcdcceb4576",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}