{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "44346d9d-f53a-4f8c-8619-bc0ecac5b956",
        "name": "Clear Cache",
        "item": [
          {
            "id": "541e0758-cc69-4df8-a52c-a7728327149e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4a471623-26af-4f07-b420-bbe85497fa85",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3fb09d85-58a0-4720-98e3-a6112faf1633"
                }
              }
            ]
          },
          {
            "id": "ef302669-2b10-45e0-9770-bc63641a4f75",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6def72b-ee24-47e9-8a30-b09e3d148ea1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eaa5c99a-8152-4abe-b1e6-a21e9b6011d2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "25e203c6-56aa-4da1-8ab2-40cd6d21cde2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "198f4be9-5fa3-45d4-8a84-b8287234230d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "213e44d9-8762-4e29-8759-0e5dbd90d67a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a69a4a6e-33d2-4341-987c-8dddd3b4f3af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13499c40-1d01-4c9a-9196-1fa3e577053e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c77a86a-7465-4644-94f2-95976c848f96",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b77ced47-38c6-43b9-9f0d-c4ffdaaa1f37"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7840d0af-c240-4caf-bdac-d1099205cbdd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "535caec5-e136-4153-9072-8220626bf0ad"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34ac2da7-dbeb-400c-9be4-b501c135bc3d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "46c6ed34-adc7-4737-a0a4-490cf19c97b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "464640cb-ae38-4471-bf57-1b6ec52572a1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8f116a6-7c2b-4c8c-80eb-091920b54a6b"
            }
          }
        ]
      },
      {
        "id": "43106f20-55b5-42d1-bc43-c01eb474a585",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5f802863-41fa-4c80-8191-0b96fc09dfc0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "416224e2-aa82-4b37-86ca-c05475891062",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e0de54ff-c786-4224-916e-e6f44d7ae5a3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3523374-4710-43d0-a349-64ac3a128a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be96eb96-9328-4ce0-817d-a6de204f5acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217fd81e-2bdd-47a1-9ea7-2208ba3144e5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca9b51c-7097-4024-b749-77833ff63bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a51c973-7fad-4305-a108-4bfdefa22bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f167201-95f6-47bb-b43b-abbfec62be3a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5315ab88-ba23-40a5-b7bf-8d43f9fa2d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81868153-4899-45bd-890a-0f6a1aed91cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "533086f8-cf04-46fb-9dd3-0ea81e668948",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4341d86f-e84e-44f8-aadc-946d2aaca0e6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868c7769-7f04-4da5-8086-06cce4aa9329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc091e23-d217-43e7-bde3-912698d03b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62583c7a-5403-482a-a685-27986f7edada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91f4b5a-b45b-4307-a556-2d46e41f4c83"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b5eb7cd4-c5ea-4100-82d7-0a2cea3e4a97",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd4f2709-660b-4963-8f86-056a08d2e920",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f9f8c6a-b449-4eec-bd99-e8a9bc731353",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0a696c80-b46a-4965-84e0-15cb6819a9d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f97e7ce4-6d7a-4a2e-8d6e-007f2eb4d377",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "27008c70-a789-4d45-b02b-4c3ee0bdef23"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "730059f7-2fb8-489e-8e6e-e2676fa4dfd0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9782b28-9948-4e78-9b07-7e1a35b21cd1"
            }
          }
        ]
      },
      {
        "id": "2bdbf8ed-6b5a-4b13-accd-3037aa89cae9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "df9ba8bd-30dd-4595-8178-aa93600f6136",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e04fa032-2fa5-4ec4-834d-15007666e732",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c8f0c869-88e2-47a3-8a98-e1bb77f45c44",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d1bda0-4cc5-4b98-9e1b-429cb64baa65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f47e3f-342c-4a4b-bad6-c8a578ee87ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363ab487-343a-42be-a57f-cd74c5ab09c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce89e394-2282-47b3-9fb4-5c7d7350a170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9dae38b-a795-4767-be4c-14ed20f636a4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35fb18e-1467-4668-9add-4460315bfe8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fcc2db6-0300-4ca4-90fd-0f8eea1ab06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08770dc-ccf5-49d9-80b2-37e154ab851b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fb16e95-5830-4091-9e96-0278e99d3e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f83865-4d05-44f4-a3a0-5848f5d9861b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12483de8-a7bd-4731-b880-20e065e1a79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa65011-5338-45af-a3d9-9e32692ab7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072367c5-ee68-4d68-b623-c80a8563c750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d1ff13f-010e-4d44-bf17-7a31f1ba1bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3731dbc-67f4-4c41-b820-52b636557643",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abaf2abe-246a-4103-978d-23cc2cbdc5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a0d00a-d217-407c-af1c-6d3092378331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48496321-9cf5-46ca-ab82-a56c2817db6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f2abac8-c4a5-4e5a-be5d-fabddbb6706a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550a5ae2-7469-46c8-867e-8f306f3d9089",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01b074f-e839-4580-8f35-c1d19e46ac59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f900a5b-6d31-448a-ad21-397e8a7c5d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fd4611-d6b9-414a-b6f1-b291192ce27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0a9c148-21b1-47d5-ae61-bde1c10b68a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021d63cb-da95-48f5-b050-797ffd3cfbff",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cb3413-0d23-4ff9-9d42-94ec71a2368c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65d8137-2f4d-40ba-a24a-a80025878788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c744c9-0713-4207-91ec-affc8a91f0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9d4838a-6cb6-4b95-8186-bd90d785505b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a975249-fd73-44e5-8436-2d9de0dd8b64",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f686e83d-baf0-444f-8c1f-61eb86c3d89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6609629-37d6-45ca-9ff2-dbb4f3be069a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497dcada-aa38-490e-a444-43f78240be8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d828fe4f-a097-419d-96d6-4d96ba015886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e24fe3-133e-4ddd-bb7a-90b73dbf9469",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96aec589-708e-46a9-b836-8d91003b0bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1316f20-8a61-41bb-be50-7581342d5a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78e47c7-03ef-4813-b299-9e4d961dbbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2048ab56-1aa1-4bdf-a03d-1bb3d001cb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1978135f-2030-45d9-9572-bab6561c9124",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "effc7b49-6e9f-418a-ae61-c59e510a3586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d99bc951-d663-4ff4-a9a8-8eb9dacb4f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ede594-d5ae-42e9-b0a2-bb7ae2b1fe57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67dd17f0-ae90-4284-8c69-0476847533aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0214e6-bb16-4346-afbc-dd702b4c59f9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8575c1b-fb6d-400e-9c54-7a93f0e0182a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26de822-b7a7-4434-9aeb-2e8d7cf585c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cab922-5591-44ba-a0e2-f4832e3877fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a89bfc1-eaaf-4e8e-9a09-408b5176e30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc331205-f85f-4b08-aa79-e3a73cbf7311",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b59acf5-1b7c-43df-8cd8-0318bbd2691b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3bbf24-7bac-4fb8-85c7-a0749f96032b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e19f178-0aea-45e4-b538-148cc1806cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4968e8d6-4333-4d36-84a8-5334d728478b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb58488-b672-41cc-9ae6-4e661bfb710d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331eb45f-d2e7-4e98-a7f0-51f946492486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b042c747-17c3-4fd7-a326-af667e0b4606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b118f4d-9cc0-4388-b8ab-405665d795d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95418f82-709c-45ab-a31f-521b4da940ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbd97f7-db03-497d-8353-b7b55c117175",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526a7dc4-c597-4632-a115-29d4f06c0a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f84f752-61af-4cdb-abe5-865fd763fe1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a84a7bf-43ec-477f-a405-fc019de6e9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83b66bd3-1a0a-4816-beef-ba721e40cf89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17066e12-8ce4-4b52-9278-6fb763d6b4c2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6b02ba-60af-4a8c-a27e-2a7f21832b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff01a538-610e-49ed-a940-54bad57cd79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f10893-7fb0-4cdc-a13e-ddfffbff0d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29b3de4a-66d2-4e4f-b5f4-bf1459667d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e94569b-606e-407c-8af8-a097223a3e03",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c9864c-736a-41f4-9658-b7b732857b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce2b21d-a5eb-4e50-b0a5-2d334e7a8385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b131fc88-0959-41da-9fe5-6aa132f9c71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e77833e2-3e88-47f0-9051-b3c3cea51596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826ecd87-0fcc-436c-88ab-265c3c8615b3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6541ab33-563f-4564-aaf4-04d978a3a950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e57a9f-225f-428b-84a6-9f3b7f44b400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70262f9-c286-4bbc-bc41-a06fc033d4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf543789-5988-4340-851f-1d2d21554c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef72c9a7-710b-4299-b584-f26521c9fdf6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58524518-3837-4828-98ef-b008e65e1873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fb8f32-2ace-45a9-b280-18bfa122493a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a136bb9-a503-47c3-afc1-9781caa62f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22457851-1f36-472b-b40c-f136621b262e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ec1dc8-90f5-4e53-a231-848f7d02872f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69eaf94-3bbc-4d92-991c-f37758630d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e55008-168e-4068-a7cd-669b1ddf9ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2406b1-431e-4269-a84e-0c158c7aef0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "31b5c945-9a89-48c4-a224-74620d9e0f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5dd4f6-8460-4f07-acd2-3b1670b4ea67",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f3c2a7-bbba-4742-b667-ab50c91c6abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf3b6c0-040f-425c-add5-0813383eaacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11251622-3ec2-4290-98c0-83f699d4af66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "944bec71-d908-43bd-a2fd-974ae660a22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5414bb6-533a-4dc7-a069-62bd1a7ccbf2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46129e33-09bb-4f02-8499-c976211e9817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb069f4-6c79-4fc0-81cb-810c9aa0ae6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423cb39e-846d-4ab0-97bf-9b2ab1934171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c50e80a-fe7b-481a-b413-d8c714da4b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3a8060-ca3d-4089-840f-b27441597991",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77707e8a-ae9f-4951-b579-e182e2b5c241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a2a98f-8bfe-4a12-b451-b7a0e49077a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d19f073-6387-4854-bbb4-da356d55ede0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "917f775c-96fe-4be8-8f0b-2bad15f4d331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2032f83a-69b1-483c-871a-b69d5d13d0cf",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "098c96bc-d89c-4f82-86a5-6d3a2d8b7321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d7511c-6623-4bfc-87bc-bd2fbe86d54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4f7965-a00d-4fde-813c-5cb38a9d067d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca168dce-f8c4-4a7d-a877-76e5520e7bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de24f7a-903e-4c7b-b3fe-d29cc1431ea1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b00638-2a69-4a09-a3c7-214c7a094461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0500c09d-d709-4514-97a8-163461ec2352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c95fe4-34c8-496c-9ff6-b0a798d1b647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa119c8-2dc2-4eb3-8bfb-83f1157d07ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7582cfa-b3a6-498c-a5ba-bc92614a4153",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a6b886-96b4-4698-807d-881cf4fb9bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264a2426-acc9-458a-bb4d-6ddafa4eb925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e00648-126e-483d-aca6-cacece0e0941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce869f87-fd1e-4b61-87ab-df2c94932dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7dec4c-5f52-4a5d-938f-e0223da9c3b7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb68771-42a9-476c-975f-f25a89672ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4effaae-2533-4b84-bf08-31ed228ba946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107411c3-6b4d-4d74-b25f-603113f82ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "03f4dd04-b06e-4bab-851b-ac5e29a81cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cbfcd5-fb81-4e58-9955-3392eb370aa5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441be386-9145-4165-ba11-daa89274b3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baaccdc5-e12d-40bf-860a-9f414bc716d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ee6eed-ed61-4ba9-b652-a53bb0da96be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b2988d-7d61-49e4-aa42-a8b9358c50a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe1bc49-c85a-45bf-81d0-02d05d05c021",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d41b899-ee0d-4ce7-a846-398118c1eaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cb5bff-d4a9-4db3-9f6a-02b259824fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0d0380-17f3-4c4c-9305-41c5d643cdfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8116645-29ea-4ede-b4da-24a62abaa45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ef1e3e-c20b-478f-9217-1d6fa3e121b8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e1886e-540b-4b12-8bea-7620edbe0c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cdd22f1-b6ef-4c8b-9cd3-ae582ea97204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d9062f-0acc-486f-8e5a-5396e1c27d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15b31f9d-4f88-457d-9582-3b4be968611b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faead92e-3ffd-4595-9af0-434cdbb5cb8c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5174c0-5a7c-488d-966a-a8d10eabc1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82bbcb98-66e7-44ed-91d8-8d4a54200cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b2c20c-264f-41d7-92ce-e58991c4c5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "351004c9-e49d-4f52-bc82-d8466f01903d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c33808-89c3-4d06-a4fd-ef5fafcb28bc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e673b48f-0b46-4e5d-850d-a5c755860d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ed4650-013b-48ac-a02e-03fe435425a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c937c3-3f54-4916-acbd-e362dffff3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "df245a26-0498-4274-9c36-c24e17b01bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb876601-6365-40c4-a44e-b9738a18c2b6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09d6835-f8bc-452a-91a0-7d6f7ca75db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8d46ff-fb27-4043-928f-9b93384c6bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3b84f7-b8d5-4255-aea1-39a61f04ffe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c172c228-c8be-42a3-9bdf-33b174024fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f6cb4f-3a13-4680-9e66-a7f8a74a4548",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d03fb4-c0ab-4646-a966-2236b0f22699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf4880e-fc00-43c2-9960-a6ce158e8f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc789be1-be17-4565-8ea5-924254285afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "641970b1-7c61-4be0-81dc-0711bcb22613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3913a399-0fdc-4b3a-985e-ada0f983917c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1ba676-f613-44c3-80f4-2b76971e1d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2407e92-5d13-43f0-b500-8e794c66cfed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02765a7b-c6a5-4ab4-853b-0a713e28902d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62b1c3fb-06fc-4bc0-9d8e-808decd95b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a65fb1-b4cf-4b49-b1e3-032ae2bee56a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4daa0b7-b3c7-4984-94f0-84ce3f5165a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4070f6e5-d316-4e5e-91d6-b1e70cfa06d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79947bee-5c64-4561-9554-2d2cd2a485f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd8526b-6c69-4331-a420-4843c6e66cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813de204-d000-4c0a-961c-ee5147bfa512",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4aea13d-99f8-4d0d-ac87-ccc80b2c55dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e568539-62fa-4fb9-a975-65ec49edbc52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5444d3a6-cdeb-44f3-a965-f4ff2fb2439c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "be6aa675-046a-4441-885d-c745e2148e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4219c4-c2d9-40d4-8d09-1e83e25b9e50",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d2049b-da3d-462e-afee-a9765a5df7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c61c7e18-ceb6-496f-a64a-819d021eadeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82797ab6-afec-4db2-9288-71d29dc3ea1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0335bd1b-4e67-4d08-90d4-e8ece7c21e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd5f571-81a6-4368-afbd-ce348b3eb5b2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e8951c-9c9b-4fec-8aa4-97069ee33853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239813f1-1cd9-40a2-9354-708a536f4c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbba744d-73d3-4665-b091-ce5094fa8aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "959e20ef-1aae-4365-9605-71b76537ba59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b945952-8f20-45a2-8d56-7f9fb45a838e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682e5cc1-6a4a-4912-8dd5-ca3d5269ae57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c75aa6dc-f17b-4f16-a490-bb8d1167ed22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514f0352-8207-4ae5-8593-bbb2f0389851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "71e46447-23fd-447b-bcf5-6c515dfdaa59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3716a40-b512-429a-8de6-9321663d6fe6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb05fb9d-2164-4d9d-82bc-abbeaecb46ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33fe59c2-2385-4e09-b9a4-6321db7d83d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50a280c-9125-4323-9674-4b073f29d08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7215e94-bb6b-4484-9b35-db4e10753cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aadd7a32-429f-48d5-b758-9d25f30afe77",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2516df0-97fd-4a9f-9497-7f0492d3c563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2471ee19-cc2c-4336-8119-3f47b222f0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33bddf8-40e9-447f-b498-e910b33cc111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd43697d-b49f-4f26-a84a-ce2492fbe68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2281876-8e1f-49f3-bca3-1253d230456f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ff7537-402a-4fe9-8f27-c2b10220b351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f644ff11-e234-44fe-a558-ec9e30144af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6107c37b-17ed-458a-beac-0940bf4506b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "abac2e44-ae05-4ebd-acba-2d2b19ba1093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f403f0a3-d39a-4573-b1c8-a4c92e11ae5d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945ca07e-3c9a-4fd8-9af7-732f6117bf4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e97e86-0643-4d6e-8611-b88f6995ea31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec2f2cd-bed1-4916-9b66-e4641f24579b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "27783d48-3323-41ed-a11e-4e49fea0a7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d94136-f58c-409a-99c2-61e6d7c37a3b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928d9df2-5f1e-407f-8dd9-d6854592b643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e5be4e-efbe-4f88-bc0d-5de0602b76d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8232b5-bc31-4f98-a3bb-9e98723fc637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "04c6fbab-05cd-4d6e-9948-dce850c2e922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94a0756-e0d5-4fa9-8468-6e46a604fff9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fd3dbe-d8c3-4fbc-b923-6675ebbd1025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c976ebcf-ee33-464e-bf01-59d78bcde568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c255520-94cd-45ca-9713-b11e03f0bac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6af0798e-f701-4340-a5ed-1c00f3fc07e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcc1a33-d05a-41e5-8df9-1865f99ede06",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658d88a1-5c61-460c-8b6c-6ce1ff3b327a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8824b9a6-3611-4d56-bc47-298a0333e8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31b735a-2854-4c5e-938a-6a51cf8c8d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19d77523-25bb-4089-9757-47d70daa264b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cc4b9e-2bc5-4d26-9e08-6578bc15cd02",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd8412b-bffe-44b7-a116-73282aa3bee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb533d9c-daa4-484b-aef2-2a84b1a66fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b48306-8962-4630-ba29-98bc8c65f9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afe2e08b-4a32-4493-84f1-b6018273f4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82d3bfd-4a37-46ba-8842-172c4d81a4b6",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adafed3-0c8c-481b-8e92-7fbc34617d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09b6f29-fa5b-4f30-80e6-80c51e4ebf11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5563bd5-f9c0-4079-b1c0-07facc9ba22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0bc5c5c-fea9-4362-a307-debd797af3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc74dfc-2d58-420e-bb75-9f49c31b3223",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b11651-e2f6-44c0-a91f-70585ebf869b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ed324e-4fea-410f-a882-def105936eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e772463-71a2-438a-9967-6750e54cc3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce19104b-3050-4622-881f-ba239f7ebca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c321e3-0505-4de3-8f91-0112c2509192",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c5652b-4581-415a-a838-bb863123b642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfcdf883-2347-4cb8-8078-960e642ad49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5779ea-ee5e-430a-8c93-e730fa23aeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "febf611a-904b-4558-bc86-c2a75d666b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbd3d5d-0589-4128-ab86-078d1c9f7ac9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f14c837-867e-4f23-acc6-e4a696f06182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d731cc7f-828e-422f-aea2-67c318cf0674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8196eb2a-c5dc-43d2-ad14-46ba52aa159a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82841721-5628-4516-a233-9ee5d71a8ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aacbcee-8fba-4de4-b33e-721b239af4e7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbeeb9c-a9f0-472f-a523-9df275c0c90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11baecb-2d9d-412b-b28f-f3480aefefea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0036bcac-03d5-45be-bfd6-6df89a039cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "331b4cb5-2fed-45c7-b1d2-26d9c2041bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057df3cb-bb96-4a79-b633-1051d78b1d7e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9159f457-e6fb-4c0e-a001-0432608bcb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358137cf-c37c-4a34-a7b2-ff11940e8827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95cb65f-8b1e-4378-9d7b-861f5bba3191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a583687-8cdf-47ed-84f9-ba95d80e7715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319ffe2c-eb0b-42f4-b69f-c8026f1c0ef6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "244409db-9c97-4d01-9d95-ef6248085b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017b4aba-1141-496d-ba8e-ed28baa6fec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb763de-5286-416a-97ec-f3e080669f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6fdc50-f895-48f0-81c2-dd66c3c5e2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa39382-2ca5-4513-87a4-112362b61925",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b71dc60-bcf8-404f-bae8-7ba04d6c352c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1f7b2a-c983-43f4-bfa8-d85b90a51edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ceeba5-6357-4f67-bc76-11f94854fe6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec118b8a-4dc5-413c-918f-255a6d025f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1323c102-bd95-409b-9e34-0e2a66da10e1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127b7c49-f2b1-4487-845d-898cbecbe9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a71e0b-1607-4c22-9be7-78d51d5b6f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018bcaaa-f708-459e-a141-7b5798366578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de061b1b-9c7c-43f9-8555-71d8066193f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2ef632-defe-49ed-a80e-da37faca0c41",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4054cb14-2431-4b1e-a71a-3ab739bea153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588b1eca-e7e5-4648-9850-83b2f7f0647e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77c390c-140a-4052-9aac-4d6c63c51650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8c45239a-8cd5-4128-a919-f48d7e6f0d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfb8adb-08c1-4cc7-8dff-4ec1e87becc3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58a53c7-51b0-4318-a2ab-e7fa8ff3fb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4c9df7-ddab-4eff-b39a-bd78428e44ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8304f454-be7f-4074-a64b-0cc6fc91e0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea3747a-cc26-4c7a-a232-fe1ebb67f3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c0c2ce-1b5d-49aa-a04a-d207ff5d8640",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bbcf74-927c-430e-a8f1-600c2c9ad9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6cfde8-473a-41d0-a21b-fdaf28fae67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac9bde6-fbbc-4c16-8701-a58dfd900079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "469cbf44-db0f-4e5c-97cc-c5ccc13ddc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081b842f-e53f-40c6-b92c-b136e583292a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d010ec9-7cd9-49a9-bed4-a8f6c1795084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a6fa75-0467-4589-bab5-2c9fa33e9ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e92d91-57f8-4713-869d-ed750ad094c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0680225-da66-401f-bed2-0e0b1192e1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd35011-4bfc-481e-b36b-012eb035bec9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d79b28c-31c4-4799-ad09-5df36fa8297b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a0d8999-aa8b-4179-924f-8e7470b1e421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5472dc61-d4ef-43fa-992d-8b804e25a93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de870b21-dd8e-44af-b7f5-f3a2e193f8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7aacd2-987b-44aa-bc84-4c5693789b0a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af684398-3a38-458b-bf3d-48efbcb0de7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d60d81-ebd6-4849-bda8-54e181cfb2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec9a6fc-3764-4970-8e0e-8193642f406c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd9b615-523a-47fa-b658-77dfb1bc6983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9222d5ab-9b30-4212-a1b8-a7230e9e47c4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6bcd42-310a-4536-9138-a1ab0faa60c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a5de5e-38ad-4e6a-8383-723b1d37baa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0baa4b2-c35b-40ca-9b83-38f111910e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6051ce96-f3db-42fe-b5bc-55c165051d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea70ab79-163c-4707-ba7d-f514d37dd9b0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d092b475-bfcd-40b9-ba44-ee1a81b349ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225edda7-20ff-4f13-9fe3-1ad88ccea358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60aca1a5-01d4-4d52-b0e5-9879038e4917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e610c12-9a94-42c4-b24e-7cb73672719a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2534027c-0bce-4790-89c0-25e77d319dbf",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2afea8-cf57-4a99-b726-c482f91b707d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2508b4c6-2a4f-4a8d-acdd-0defaedbeea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b281d6-5a0d-4eb0-859f-e5ef319e2ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21e7d024-40e0-4561-a27e-48eac8f3614a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9d8158-eb1b-402e-aef8-dfcaf4fa4118",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3b5a10-0dba-47ee-93f7-6186c428cc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fca6f4-c776-47a5-9d38-87fd96f82a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aac7cc6-982a-45c6-b285-e471db00b923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c896ecfb-715f-4587-8151-68e5d0ceb2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea549d57-afe0-4918-8cfe-c30910d0e01d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd27731-b696-43b7-811a-e7961075cb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9618c7-5f41-49e1-b1b5-30e6edb737ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a7089e-af2a-4c62-bf91-f83fa8555e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f804e643-e8d6-40bf-993b-6e6392bf8f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b51b48-61e9-4a37-a1a0-ba44d7408a18",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54883a6-328e-4872-a656-abb9bd66cd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226ad787-2510-435f-8976-7d4a13800d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfdf7af-4446-4a92-afee-2c6277a65de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "badc7393-22d3-47f9-86bd-e93ee291bd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cf11fa-3014-4c23-95a1-f59168baae27",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f86d1d-a409-48b5-a5b2-7261b222361c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5666ddbc-0f7c-4be3-bf66-f093ed45a5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a178213-2333-4e94-a5de-d1f3d3d228c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d460d7a-e9f6-4e36-a5df-2c1f80ff732d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ebbbe7-38f3-427b-8809-6fc776bca328",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503afc13-d688-488f-9d49-40525ea8ed21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc569f4-56ca-455c-8c19-2d9a3ba28716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f353d264-6fdb-4f4b-ab8e-e58877da5ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e22a29d4-20ba-495c-9b4f-2afc4d89d80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917159fe-6d55-403d-aec5-37233b320cf3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c46a662-7e6c-4793-a74a-251d4732c07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861d801a-1e14-4fe4-9784-e6ad765b7037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c24852-e8ae-4ef4-8abd-382727f40d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7674cc38-6dca-4bb3-9c9b-f801500b2279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e68ab4-cd10-48b1-b8c8-2c57a80560cd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73aa7b01-b857-49da-b829-2c0d3d205745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aed729a-59f3-4007-beec-0e5af92be450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec7c1a4-5558-474a-88cf-db872730ebd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8172b227-4729-46ea-ac04-b23a690f7c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5fe262-8660-4ecd-b445-c515998ab8aa",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe13e77-3745-455f-8302-241203269042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04bb1d82-249a-4441-9a12-21bf2c83c8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c149c7a6-3fc9-4150-ba1c-897a4f1a15d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fbc261a-7bfe-4a45-8868-b314b0479ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb879e91-69ce-4f43-a09d-3cddd96ebec6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1732f1fb-7568-4a98-8c95-77d2dbb6e646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78212ec8-83ec-4599-aa68-e4bd334e86da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5d6dc7-91f4-4537-bc04-8e7dae850547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a483a75-6d89-4446-8067-4912925d24f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f2dc96-179f-4358-a249-39edd9387e0f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e7c1dc-b243-4173-841b-8734e57a9c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65379fd7-425d-43a5-8656-a45a0f506f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c2e521-485e-4e4f-99e6-9748d21c04ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0077618-3477-41d2-a75c-0927c6d3a04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca6a421-d3c2-4270-bf17-bde061d4ae59",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9366337a-c13c-4575-84b8-52f89505f7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9d3062-519a-4cc9-a709-7c4cdc1f67fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead2173c-84bc-47cf-8d96-61856cc190c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2868e7c-7d9f-4589-b30c-f28d7bfda1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec72aeb-a07e-4de7-a41b-455e6ff46e4e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37151cc-174c-4666-aa9f-1e56784bb314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be79f166-3eb5-4351-9f7e-0681b77ea59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade7be00-8d00-4ad6-a02d-378d92999055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b31261b-4f93-43fa-95ce-03cf9b1a1e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb1f551-07e5-460c-a4be-945c430b044c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b301dfe-68e4-4af1-8e5d-09b176645b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e830247-7c8e-448c-b55a-b9e98f8c21b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5327ac-7955-48dd-b065-80740af2454d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "805e5702-16f2-4fee-8033-559d56233a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c74cacd-9beb-404f-aead-00e359669ac8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa2f536-5c76-44fe-a2a9-7e076a49fb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f81aac-b618-4c4f-998a-b0ac8d239499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304b5875-5cf3-428d-ba14-6eed658aba2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad3c26a-e084-4a98-aa2f-9a6c016a4621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f65c791-8924-4905-ae15-ea8604cfbdfa",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6e5076-80ce-48ff-9abf-43ef15dc3e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02eef7cf-d167-4782-9f80-b01d5a04f2ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f21d84-d80a-4bba-a457-b32cc9545f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a777874-b36a-4e95-9549-e556bec62115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338e95ce-284b-4a2d-a8c3-622a09f44ee8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d1477c-89c5-4fa8-a347-4773859dce0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabaefb3-780e-4159-af13-16105afaa325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db3135f-22ea-4038-8dc5-ecbde0555f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "135bc865-51ce-42c8-9ecb-fbdbed0b6e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97496ca9-1f82-4efe-a7fd-09daecb5972b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c5ad31-3628-44cb-b6cd-947013bf2bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72c85bd-0060-47ac-a79a-d16ece575083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3672ac-7940-4c73-8473-14b69943d2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c03dc49d-00b5-4135-9b7b-c58966598755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5335eb1b-bf4b-4eb0-89f9-7c83fd26bd50",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a4a0ea-d317-4628-9854-0cb0734284c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92a9579-c15a-407e-9b3b-e54eaaf4efb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d356ef-57d8-4ed9-8185-40e4c75d3a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1c441f-30da-4e65-8a2c-1dba785f5b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c0cb4d-4b2c-4691-a311-da3266fa443e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2157097-4ab2-415c-8d43-02823aed589c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a0614c-ea8b-49dd-9649-65a8c5630093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0738e105-9d46-4266-a3a7-6535fa2042d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9fe03c-a685-4172-8d68-83f2d21a1514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86e62e4-ad5e-40e7-9314-750b57cbd930",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4decce92-69a4-4be9-8c7f-21561d466a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7271cd1e-b9b5-4162-b8e3-3100ea4286af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0890f849-630c-49ad-98ad-3a5e36f25213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f9b00a-fcd8-46e2-9e08-2ecf4b580c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cab31a0-4db2-4e97-9b2d-6de02cb4f273",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9849a3-1efa-47c5-8e44-0b5c562414fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a35017-ad6e-4f67-842f-97c6879a362e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd469b4-815a-42f2-a32e-f5e80d54e5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf1f866-88a4-4c79-8041-72815d6d6115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b08173a-1bca-4bde-b341-603a0a1aae74",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94214b54-b639-448a-afae-74bb14b8ff66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7831b5e-2cc4-430b-aa25-32e2c3d2ea43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa27d143-fe8e-45f9-bf52-46ea20b5e67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c6fd942-314e-4714-af66-fb4183a19374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d155ef82-8182-4fd6-91cd-40f8a39af6ff",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ca0943-1112-4bda-9fba-feea401ecceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053139dd-3790-4aa3-a311-712407475114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a8368b-2c5d-4eb9-bd73-188133077058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e771af13-2c16-42c4-b2e6-9735c4aee226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999b7ea6-d609-4b88-b5b9-7bdcdb38f43b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984e02d2-9fa6-42c6-b40d-9dae90a80821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af37d3a1-6552-451b-892f-96d54f1b2673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a70908-d758-4acd-bdb3-f4145b32dc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1edc71d7-7185-4b92-a897-4a0135f40e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5b0e47-cc8c-44bd-9692-cbcda387da3d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c797d94-9c34-4cd0-9f08-dc71d6edf327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f31ad0-240b-4982-97dc-4db7d8022a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7beae462-5faf-4ba4-9d91-7a01c4952b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e00b033c-ac52-4bdb-b5f5-c5609ebcddee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b596ce-b8af-4f28-aedd-da1205e619f0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b5b075-a3cd-4816-8463-7ba3daabe5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11e33e7-d7b0-4751-a4f3-340060b45324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1d031a-c35e-4630-94c9-d9d0f856882b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b075728c-031e-40f2-ac6a-be926dec33c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6291577-8c6e-456a-aea3-86a183297235",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b30e472-7b9c-4ce9-b3f7-8f6642b26301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025d5953-72af-4759-86bd-1686a375895c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45725a6-9ed2-4c93-be22-c9c56db173dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "813dd14c-105d-4aa2-b80f-a524d0665f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e2abe3-047c-4740-b418-001e71eef5f9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2874018-1f71-4d6e-a4b5-4ee2b64815b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "167aeb30-3c46-4933-9117-163948c8eebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29ec258-63ae-4de6-9f25-fc56ef80c418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0efe00b6-a0ce-4bc0-9d0f-1089883248c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5dc334fd-9f44-40ee-9d03-c5daccd082f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2348dc8f-81a6-4ec0-9819-2ef06d253e0b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faee88e3-bdc6-409a-9a26-c6b63d592fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e84deee8-4292-4a6c-a95e-6f008e3869f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd9d083-e250-4d99-b203-700ae91c06d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0694864-23f3-4036-907b-df135be0d216"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b31b5cd-4070-4add-a637-9a65c5c02405",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca7b0e90-6a36-49f0-9478-d41f98cb82c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7aba571f-6f46-43dd-b4ae-d41223914740",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00266e8c-e282-4faa-a979-76f21e017888"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "46688a60-d4dd-4480-9db6-f7a5f763f4ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff14d3b8-34e5-462c-88ff-5a6c9dd93a5f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "152471f8-651a-4938-b535-777ba0393e30",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed98f594-6287-491f-b1ca-8b599f67153e"
                }
              }
            ]
          },
          {
            "id": "7e3243a2-9f4e-48ce-9ca7-e36104ad1b1e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2398ffb0-2dfb-4dab-83c7-bb5dfb128f0d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d87c666-028c-4966-bdb9-edad6cbdfd2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e635ade2-1494-4afc-86de-67ad2d2feef3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d08eedbd-e66d-4c54-bf6e-ba2cf9bead8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3f1f29c2-25fb-4a05-9a45-bb29b027702f"
                    }
                  }
                ]
              },
              {
                "id": "3c4a2c4a-0cd5-41fa-b89c-ff951e4d5ca0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7f56310-c522-4c94-8c84-4fa388e30eb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "901540f0-8c5e-4609-ba84-6785df89ba93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b31e65ec-dbb5-4a1b-b6ac-77b6a8b22c23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2d0c3a58-1280-4f9e-837b-f8274ee2a8fd"
                    }
                  }
                ]
              },
              {
                "id": "4ef9a53f-f6a4-441d-b1ec-34f47ab0d200",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8aaa348-c5ad-4b01-ab83-e3064b88e7a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4c5567e-f987-48cd-8b91-3764bb460f0b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbd1f9a3-32a3-4061-ba1e-d5ba5355a803",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "91543e8b-f0f1-4b97-8c5a-4c56407bb302"
                    }
                  }
                ]
              },
              {
                "id": "d1721643-5f56-4537-a9c0-35d386feeb03",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a82b44d-ed35-471a-b2e5-3bbd50546c96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a415d98-af1c-4c4f-89e5-d53ffa95132c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "539e4501-6610-4dd1-997f-b6d7550d4d28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d2349b6e-2ae2-472b-a33f-d8c97df88a45"
                    }
                  }
                ]
              },
              {
                "id": "b7724e27-eae3-4aef-9af8-42c90da890b7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "085f1716-befe-4807-9551-1ea47502e82f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf3530cc-1364-4fec-bd56-b2e880bf2c5b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1f395ca-63bb-482a-8760-be38fb941a6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5d42edab-39a1-4dcc-afcb-822cd54e8950"
                    }
                  }
                ]
              },
              {
                "id": "3607fb73-6556-455f-9674-472fa6843a84",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b4e4601-d09d-48bd-8817-1a42a71da103",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eba0fd88-526c-488a-9d38-6a4e4fd2fef3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86544a5e-e841-4e71-b947-bc82316211cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9c598437-917a-4e00-969e-8f90dadcfb8d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ecc19aa-28c4-43fe-b7b0-30009eba7820",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f9aeb75-c3f4-40f1-baf3-ab8b23434a9b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "86d1e5ad-89fb-4161-933d-4749498216a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f68c147f-c091-4fe8-adf0-457f7cd7ef13"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f508f81-1939-4a88-8bdc-4abc72f19652",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1c15f450-1fd0-45f7-97f7-e6960845d9df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75466ff3-a446-45d2-9cfe-1475f419ad3d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e504fcca-9616-492c-be0b-13585ddac0d9"
            }
          }
        ]
      },
      {
        "id": "e96ec5d0-3de0-4ff3-858c-9d43da91ba7e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "61cab8dc-0254-432c-bdf1-a5de2f6bc0b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a41440c-06d6-4a74-b7ad-544637ee648c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8f753ab7-57b4-438b-bb05-063eabd603fc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5de24e-4801-4351-ae9f-0abe04030eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a698f98-a6db-4da2-9880-cf207cf6e031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9340574-2e0e-44f1-94e6-1f0a06042637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8f76b8-9a6e-4a4d-b3c5-99fa56c85b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ab7da6-fc0d-48b6-80b7-dd6c4a46b01c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb829b9-3377-4157-8ef7-31fc7ca6efde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60cc3fc8-9e6c-4d13-a67b-f2d6adc35980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99a37d8-bf1b-49e1-a5e8-5f621bc50ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "985a52c9-4669-4fb2-8bb1-5a445b6a7302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9423626b-5fd7-4c1e-bc03-d700a26fc5cc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c309deb9-bf2a-419a-bb0e-8f41915a0fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32e91c0-b407-4c79-bd0c-83397e3c984d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f5f491-9a22-4cbd-a18b-8f43b358b116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73a5180f-dbd6-4cea-b3ff-258e3948ee2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcf521b-2734-4322-8fbd-18afd6dcde80",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbde775-0f85-42ed-b98d-a9e493461121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f93e6ff-1c46-45b4-9e69-15c71701e64c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d4ddd5-2747-4a0b-ae7c-250313d2ef2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e054484-0d92-4987-aa66-c56953f6c0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51182e6b-a102-4b5b-9fd2-a9ad755f9267",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1cca11-fd57-45db-8067-7f80dc0907b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79068a98-64b2-4f13-84a0-8ead513f5510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28cfc6a-dc72-432a-bed4-666373c2955e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e9fcccd-ebf4-42c0-80cd-7dcae787c7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef4263b-a5fe-435e-8357-3a94e4cfa124",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b58359a-16df-430d-ada1-0ea3a575e3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03b63da-e717-420c-8c7c-f03439de1104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afd4d6f-afcb-4b3d-8616-0afa42baed5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ade0a36-fb45-4c51-8ed3-03ca39836052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6bcba9-3bde-4f6c-95bd-81c8a6eb2a5a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fab971e-bb73-4488-ba6f-39015a0a1d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e02dc4-66d1-4361-8e58-5e6bfbdc41be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ffc4bd-fd85-40ff-8599-2eda231bfe17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "080eec90-e4f0-414f-a2ae-8f6714a21e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c7c4e6-6f34-48c4-b184-5d25d199cfa9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb58a40-2b47-4ec4-8ef7-a2febe8f4610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6355d7-1398-4854-9480-3eefa22597b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdd5162-7de1-41a0-b931-e217459e5243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b7a565-12a0-470d-b5c4-0cf0a8414a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3763dc2-6a65-43e6-9ff1-fd0975c7123c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f64eb9-aa2d-4541-8c97-85e8fde9561d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a492dd-7ba7-4777-97c8-fa0f07b3d166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2b5bf9-a206-4552-8dae-8bf336945c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b83d7f59-bb49-45cb-9c40-3fa8f39c97f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440f4509-2922-4389-8562-b46abf4c016d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046ef9c8-2c89-4ad1-9a79-a2159a7fc83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2362991b-c57f-4a3c-b8b1-b9772fa58f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36666a82-53f2-4539-a2de-655dfc75a0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66c8dfd0-ef24-4ea0-b425-24e47a156f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c55f4f-4873-4e37-bb4c-4d67deb5586d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00a55b9-1725-4488-a773-cd07f9b15092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617bf4cc-7d31-4eb6-a398-efabddf7341e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e71476-0360-4696-b04b-9edac8ef6bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2d406eb7-266b-4ef5-9b8b-de6c24535a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa94ca93-0d98-4c61-8007-b4aeaa7823f9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fce0ee3-5393-4fb9-9e01-35658c0d235b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aafc456a-4ddb-4fbe-82d8-72ba932f016a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8191b1-fbbc-48f8-884c-3ba7f016f330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18ea21d9-b752-4ca3-9f15-50280788f957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8081258e-7138-4212-b1c5-99842915d029",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b53685c-beb2-4723-b893-c93ccf2104aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54a208a-6417-40c1-8a48-d67a29dc1b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069f8299-3b16-4ef1-9d4d-471c56231b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "57f2e5c4-81d1-4871-8d17-23747afe0dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011e496c-862b-4e9a-a95e-8d544025731e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecd29d3-6dd4-4932-82d3-f339cefc682d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2836e841-f94b-4e37-92a8-33c1f7ecffda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96bd269-b3ea-447e-9f3e-2441d1dbcdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "99811ba2-bc1d-4f5e-b52c-2d22e276700e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b595a75b-d6bc-4b49-9941-ed5f1272c32b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5befee6-5284-497c-9504-14c3ac1ffd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4477f551-197d-40ce-9a25-2c9ff4d77a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfe74a3-749f-4a12-9310-247db09ca8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dadc28f3-978e-437a-910e-508bab569aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e79593-20f7-4918-a167-29819c89025d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f368c16-10c5-428c-a197-8810c566da9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c163ab-230b-43c7-89ba-0e70d1fbe178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84135c8c-4700-42f8-9d36-486a467be612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "31c64601-535c-42ab-a3c8-374863d3c1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b1414c-eceb-4c25-929a-2ea8a9a3781f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f752f628-f218-4b66-a6d5-faafd51fd00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52f3f18-d656-4227-bd4f-9778cb51ef2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859f736a-c53a-4bba-8c1c-f87a479bf01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b25c91d4-a665-4841-a649-eb93e8c72d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c17f4d-aba2-448e-a4a1-b3f92c5858be",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd5116d-2dc2-4a66-b849-b0786b065b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d29f20f-f1ac-422e-b902-59b3be57349d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40801eda-c7db-497b-b786-49e39ac33cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7775382-96a9-412b-bfe1-c61abc7c1c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a8d9a0-a2af-4b06-89b8-614f21647ef0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97da4b5-bc03-476c-bc5b-ba395c9cd5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9c409a-7649-42dc-902d-7d89e49fbdd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47acb8c1-621b-4491-830e-cd05d6b692db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59c82c80-1e95-405e-804f-c76681782117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3abe67-5ae3-4134-bc8a-6002c552ae93",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bd3caf-ef77-46a2-9ff1-b4dcbd90bcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bd2dd5-ad25-4865-bb9b-2e90c3ef56f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f0892b-1896-4470-ae5b-f1dbce8a6785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a62fdb9-dd8c-43ad-b104-091cfe286fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96d93fa-ba09-4fae-a355-d8dc3f937981",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b527a75f-3c50-4754-8e24-cb4b9db96245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cffe7448-42f9-4de7-bbd4-6de9fce3066a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac51cf60-5ad3-4b0e-b72b-3e9f740510b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "765f789d-0432-4e5c-a35a-821d0ff4852e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f5c761-9b9e-478f-82f7-ea445609d58e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45b9d8b-98ac-43b3-85e5-3fafa18d9aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac62fad-979b-463f-baa5-9d043f480565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9d8f8b-706f-4f27-a1eb-fb6f31200e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "126e5852-57e1-4e62-a8c6-b21d6f62725b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4bdf5c5-490a-44d7-95e4-fe186c93af9d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f464c2-4a26-4d0d-8466-21c51bf6c1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c7d59e-2a80-4b70-95e8-b8e84d3c9c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2919f5-ab1e-4bf2-9edd-4dc8f6e5efae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95d4e759-bca1-4fbe-b860-522ae78e1925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f326de-6252-407c-aa52-a4071009bf7c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df16c799-8b08-4ba9-a731-169907248e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8826ad7-5d79-492e-b37d-b31eda6ae934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6de2d7-4b8c-4e41-ae64-f286d8804603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d57bda64-09d9-4b3e-9934-8a61573f1edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c70eec-ce36-4a0f-884c-1f9ec2f7b3ae",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c44891d-1e0e-401e-805b-6f27eadb1e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601b0e8c-cb59-42d9-b08a-6bbed0b725b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0347caf6-e895-4838-82ca-9b288c616d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "196af4f1-9203-465f-a07e-aef40b1db0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5a61e3-c630-4087-967c-89482655616f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d763d522-96c4-4e3d-b47a-5c6a746631d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860cc7e2-50d8-4652-9c3f-9339e3db785e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b66ed1-bd27-46bd-84e3-1190f1cd953e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41fa0f52-44aa-4743-965b-345ab7fa3cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e96bf2-b644-4b5c-89e0-83c22be03fad",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c56c4f-4f92-4f1c-bace-461f7b9223c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89453ec-eaa4-4793-8ad9-c01b5f48abe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1a0b7b-e9ec-4566-b1db-1115971e24dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aed0b18-f77e-481b-83de-07fd7a44ae6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a147895-2487-497a-8b22-e968945f4da2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1a400a-22d3-4d1e-9131-ff28bc2266d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b3661a-c71f-47f2-b95f-f17cb0d948a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797b2bd9-cdd7-4822-a542-fd6291d3bd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47cde006-652d-4ce1-980c-65eb26707bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab52542-9f80-442d-b422-013559db3d0a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e97dce-5058-4c4b-85ac-76810c17425a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191837fd-3033-4e23-ac65-8bda6cf2f802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0555be2d-a135-4e29-8d35-ceb8c23375c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89ff7ddd-507b-4980-90f7-0a7504ffda76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a66a04-6ccc-4fd6-9648-f24cb100463f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bcac0f-2372-40dd-a373-ed7a294a83ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f6330b-ae82-4050-b27c-baa48c2b9f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3469ebc2-c492-4cfa-b226-45dcf8fdee55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b65390f-55e5-450a-bdf7-fc2bf38e0ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990bc413-4718-411c-9ea6-aa32776e7496",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e056f0-37b7-495c-a283-b960297f40f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3cf8d9c-b3f8-4c0c-b553-89ddb5c2d588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c23efdf-ee2e-4e24-81f0-0201cfe232e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ac7979-bb5c-4701-9b6e-5c64d16ae754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1be8d0-b2b8-4906-8679-50170ab329ab",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1983129e-f2f8-44f7-a951-e035c25c0c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e7af71-400d-4f40-a457-03fd9e8799fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ab2de2-76c0-47d3-b588-bc5c7a2c2a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57f58e20-509e-4995-89e8-5b117cf5532b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a0817c7-7b84-4fc6-836c-8fd517d1fbe7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "370fec48-2887-47ca-8a0b-9bc5bcb42099",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082b46d2-642c-4cd0-a17d-52261fb6b37c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6c412037-68dc-4770-b3fe-bc5cb41f1654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "139792ba-2a17-43ae-8032-32e6d512834f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ff501ed-d537-4176-8629-a166ab70ce1e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a32e884-f397-48e1-9845-9c035dc2bbe9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e895dd3f-f11f-4440-97b7-b8bf62813c76"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca063ffb-916a-4814-8655-b467ec7d7ab1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bba41e05-2092-404d-b3a7-552271981ca4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e8dc43a-7ef2-49c7-b367-c6733b71120a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f9ef16ed-341e-4a56-a292-eb0cb1b1c85f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9dac1a43-c042-4da3-b446-05390d48835d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80c48166-1a9b-4ff2-8e91-7cca72dad53a"
            }
          }
        ]
      },
      {
        "id": "01640fb5-0df1-42b3-a1df-25b514755dcf",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8899df96-a004-4ca6-843e-23c6c3058df7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9454c9fe-4587-44d6-a2f1-b9a7057aeba0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bd9dc747-5b8f-4832-9299-35fb62160619",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48167265-ce5c-4b59-a67d-f880669aa239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e615443-4438-4dce-85a6-4c5d8d98d11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0d9e87-70f6-4015-b13f-0372fc5aa2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "89e5112f-beeb-4856-a4f5-c2884044f4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d585cf2-9653-4cba-81b3-757bb8cb7c3c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2241dc01-22a2-4aa1-a7ec-a50901de7bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9d54d3-a044-4b22-be21-0e35217f61c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5acfb8a-055f-499d-84d5-b1dcb8676631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca537c62-7622-4d1a-aab2-ddd22bdfd429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49706d36-ddaf-41d3-8461-985a1d2d4d9f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0611e6f2-2d56-4821-a389-94e4b1d662a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579766c5-3714-47f0-9f01-dfe1bb8fdabc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787e47d3-e8d6-41f5-bbd5-0e43b24582bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fed67beb-d5a6-40cc-901e-e5cffaa01eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481615ca-7189-4ca5-b94a-da90d3e69b35",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d626f0-fd8f-4e97-be9a-d8c999b5f506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ed8d1a-b7f4-436f-a1be-62afe235bd46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7489356-6fc6-44a8-b34f-60fad1b1c53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0043a609-0d97-4df7-a50a-4e7a01f072ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c9fe18-47c0-41a4-a0b9-8f5e0d9f6266",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64db59b5-3ec9-4a48-ae1e-2cf13409a7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcfff5e-cddf-45a4-a36c-d04a70cf46f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf5f5c7-86f1-4307-91cb-0a7eb4ddf0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee85364-c354-4dba-9bb7-2a43b29b792e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82142553-34b2-42b6-9afd-6ed8bf24a591",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821b49d4-2b66-40a5-bfe3-68c21af5c9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afb13f29-d758-4bde-bb3f-4427c31a6993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84abf4c1-e892-4f13-a23f-3d0996f9cfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc8ef25-2034-43ba-ae91-66659d1af751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7254f4f-f67b-4b71-89ad-3629d181dbea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b13656f-87dc-4802-9d07-a18dba8fbc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe9e8fe-6bcb-40d4-b7f4-85580b820c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52957d5-a116-456f-a22e-e85e9fb3c0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "76228c8c-f7f0-495c-a82c-cd2dc6503c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa58991-d586-431f-a33e-8fa894ebecb2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b809a9b-b0f2-45a3-bbfb-f21e4305a5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd7c8b4-d13a-499f-a710-11064d0461c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472e2ac3-9182-4b0f-b21b-64d6fcc2f744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9017ab-ca97-4d60-8e3d-4a9301bde4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defeaefd-cea8-4832-b6ed-5438f34cf492",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0769ffe6-ccf8-4ec6-aa49-d3eee49d44da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8d4533-f33d-481b-bf2a-e3fc1fe349ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8d9778-fc4c-44c8-916a-bee1884e4ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d096fc6d-a548-41d1-a8fa-9c93824b5ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f52b0a1-07e5-42ba-b0cb-01d6d97debfb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b64a60d-b211-4c23-81f8-61456b2d4942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd68de86-a7ba-43e8-9f5d-d935161189ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d3516f-5a70-4230-be3d-1f30731db19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69b6da80-283d-4944-bc17-94460963991f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66910a07-2cc2-4423-8c42-adf62fca740f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b48d830-02af-48f0-aabe-29fd3b352921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed91c14-87a6-4e64-81a4-fb8a12d84ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aed895d-4c07-4396-b07c-73548518d106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ad73b0-7fa4-4bf9-a0aa-0e16ce31fa78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83225c5c-213d-42ca-af4b-277860099c75",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e182cd7-e927-491e-9c12-9916a187f2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de4297e-7ebd-44cd-ad73-9d88bbe28b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb8da1d-4e39-4446-815f-d6a2d68d4cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "adc08b12-aae4-445a-bfed-23f135bd79d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7585cd1-07e4-4deb-b5e6-ec8890c11d82",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfc21c8-0ca0-454d-add1-9918a00034b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ef4999-780c-4379-acb1-0f91a41ae844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbfef56-d0fe-4453-a984-c9b6e9d326e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd375305-d836-4e31-9460-e886075a7b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ce105a-63b1-4d3d-9858-789058aab826",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a81d67-f826-4dc6-bbc1-592a5c9b4e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0ef1e3-d842-4d8d-be81-e6583fd64484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c21aa65-4d18-4de8-af0b-34e1577bb52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "32af6d2e-328a-4cb7-bd1a-8ac17bfecd64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df5ab02-8e7b-4b51-8842-2170a34d66a3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf24612-1807-40d4-aa14-1efbdb25070e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920f76bc-b635-4421-83d6-15001de2d330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711e924b-eee7-403e-946a-6ad6bcbcf33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "da868cbe-21c6-432f-8088-7de5a68218a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e0bfe2-2c76-4528-ae20-24376deb9c4e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd64f2b8-3a72-4bee-8d20-d06d041e6ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb81c227-434f-408f-86de-f7bdd23b8865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131b3468-cb10-418a-86a0-5c7d803b8c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "997233d2-a4c5-42ee-bc45-b3ca20928a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580c044c-ee77-47c9-b32f-c5745e20eabf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f630c88-38ca-4b3c-8156-239016768645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dda6dc7-2ded-43fe-b17d-a6bdd002f8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181e66a6-88af-4a15-9678-369285472ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "325a8bba-b8b7-4933-92b8-7e4c8abb06da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77d2bdf-32c4-41ea-8abd-68d9a07b3b45",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0179c0a8-0965-473d-b775-4d6fcd6151af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0d04d1-6678-46fd-b2ca-ab8f34045cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42a78cb-7eb3-43fa-b2f2-672de71af321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "188393db-4afd-4775-b063-8bdb0dc00bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615707c2-09d1-4961-becf-52926c852448",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5359a7-b24c-4a2c-978e-ac8c9b9d5939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509ce990-ef21-4b00-93da-58545e1b42b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05d6f4d-2da8-48d7-ad13-ebebbc79bd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1c7950-875f-442f-8514-f9e6e15988f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92ebc58-fbb6-4f42-85fc-ac0fa4778501",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c3b608-d230-40f1-a6bf-d5ff3c9f02e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e97b44a-a5a1-45b8-a217-fa1d5fc64db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac549a1-ab10-490c-b097-bedc99d7ca0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03ec1f85-080f-4fe0-b3dd-ba73168b573e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511f00c2-eb09-497b-ac79-1e59526f62ad",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7542bc-3f89-4c3e-bf78-af8bd4381928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5022366c-2e7d-4f3e-b5bc-2fca1aac55fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cf3c18-8487-4071-a34e-f1973f4290f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a966e9-26cf-43ec-b698-8f0f817a668b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84f1e74-b403-4126-9e6f-cd0448e141a3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823afb2d-8096-4018-924c-e984b986b9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142ac89f-f57c-4e85-9bf7-f6b2464216c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916588e8-3c37-4b97-9d18-3d0f5c593689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53e542e5-5c90-4196-b761-d44ceeb1d8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b61353-88d7-4b1b-86fd-b5a74f5b13b1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1610211a-bacf-4b9d-ac66-1b7dfa4b55de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f01ef7d-3a28-4889-ae60-8f1d123da4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce85a6f-aedc-4468-9b5a-b465061e4fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45d7257b-a635-405a-bdb4-4da2da70a20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11783906-1639-42ae-b58c-7d9f3fdaf75f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84f531e-0d34-468e-8115-71d8b9bd56f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74027b93-bfb9-4d0d-9459-a316e1bf29e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6b04a0-ea71-4d45-9f1a-61a52344af55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56a3c21e-49cf-4ba6-ada6-078114fd308b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb26482-e32d-41b3-a058-4b13d2262d33",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f31cfe-aa70-4b0b-8e0e-864c0e5490ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa75253-db2b-4988-9f97-9e1cb7e9b51b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7492c096-dfd6-453d-8826-2d42e3670b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03e2495d-6bf3-4a79-b347-561ad79724b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3236d0a-d359-4c53-89c4-1848f8adde36",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f45e1b0-0341-4d3a-8d90-5256fdc7107d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c589ede8-1ae9-476d-9ab5-0350c7c8893a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4e97b1-964d-4722-8d16-8bd3acccd02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd15d1e7-4aca-4ebe-8e16-383067ab5c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9b7597-c7a1-421c-bdfb-5f3028faf88d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f13168-c6a7-44b0-b865-fa306de998da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611d271a-f875-4ae9-bd9a-3f7aa2752150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2196409c-4f49-4bf6-830d-f84e944384a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dca38505-b2d6-4d66-8fa8-be3d026d5df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656295a2-3b92-4d9f-91b7-9304aa9c0dc6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad004ed-5c50-496f-b7f4-a9cdb4c9f15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de97cf32-58fa-4ad6-bdc8-3a1116eb88f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44703903-93ce-42dd-b8a2-e2cb33b109c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9cb985c-0cc6-4f8d-bf9c-cdfb9a275aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4619b6-0907-4cd4-ab46-3350f4d216cc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b143096c-28c7-4ae6-8bd8-9088cc7be335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2d58a2-2685-46b2-a48d-cc53a6e9ed3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64242c8-c22b-4d6f-b8d0-1fe3da22130b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09f9a63f-2c62-48f1-aa9a-e5d5ad3350b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a3c0e3-aad8-41f9-919a-22d07a83bf09",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e9abfc-323f-4fca-b272-a4b3c86f3c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcaaf30f-71ef-44fb-ab4d-5c518d357678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff55ce6-a98b-45ae-8575-1b51fa57e6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b229b4ff-999c-4c4b-ae51-7e99021be799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22a3c31-c8c5-4b8e-97bb-86d80a5c3f1d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b435da-7395-4416-879e-65b3454424e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a3ba57-7116-4b41-91ce-656354c762fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832f6b7a-f3d5-470d-acd9-6f28bcf6ed2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "112c5710-26c0-4d3e-b8a1-2c17fd86de93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a54044-5b16-41b1-b216-e78e05b737f3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e82271-8c09-4c13-a22b-ed38b0a6f0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00898356-c388-4005-9cf3-f774519fdd51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c0dea7-66f3-4450-9b77-29cde97409ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d65c459-fc4c-4d84-a905-d19e1321fcf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e19e4be-32dc-406a-b936-179f2323ce4c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf79a850-e0c9-413f-b6eb-d2fa4dddd59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de5d4cd-e02a-45ec-8332-0faac116f691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2509e8da-1cc8-4ded-83c2-03ad8c205a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75640c78-f8f7-49f3-ba6a-35cf94b155a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe8cb5e-11f1-4641-ba94-80c7be514e67",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a355da4-b8f6-4b37-a91f-b14c2a04be86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393d67db-f861-4e53-9ba4-263852c936ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7051b8ed-2f3a-482f-b2e7-674656aa54dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89c7fd67-00a3-4c48-b32b-a62bda7768ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13cd9c9-d2c7-4f4f-8c13-709817ad0b77",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc58b06-54c8-41a5-8f81-ddd83cb45652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50684cf-ecd8-4c4b-a09d-fbfd2f3f50c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5c7830-b42f-4376-a484-e64318653961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4450029-cfa9-4c72-ae7b-38ce6efe4b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a49b0f-d729-4d04-9143-39939cd328aa",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b4edee-e33c-4db0-8c72-406f80d8b3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3196a723-b04f-4b7a-bcaf-4cf899776289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1442b646-3d56-42ff-b888-d71f213c825c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5036eb8-46d5-4a04-87b0-fa911d929b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88abe6d2-5de9-45c5-b9cc-e843b909f2ec",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8bb12ba-c1fe-4cac-8207-b474232d7fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a35cd5-3a01-4f46-a35d-2df29786a0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68bf79d-239f-4c42-805e-03036d589072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a40cf39d-20e3-4cd2-9ee2-b2dd01384fe0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7ed8000b-00be-40e5-865a-e9214ef3572e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34088245-d8a9-44ba-b4c0-1d9764848e98",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227747bd-e4fa-47f6-a32b-e2832519eebf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "62cd7bac-5224-4bce-b9df-b75d694c5c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4329c984-2919-4180-a8d0-f04ffb0e08c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc87569f-6aef-4907-8be7-619934a8683e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4c2e14a-404b-4fef-98e3-9788b51dde0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d35bda68-e597-49ad-97ae-df631699cf6a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9b7daac-9fae-4443-9813-45a8cf2a49ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9634acae-c7e5-4fbf-8ad7-226700950f80"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a01acb3b-1019-49fa-b385-971004ec3dde",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5675d441-04fb-4134-a59f-80fa52ccca41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc14874e-6b8b-495b-9238-8e57380dc60b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b34f4d04-9697-4288-bdfe-b8d39713821b"
            }
          }
        ]
      },
      {
        "id": "e7e8e723-dbc0-49f1-a8c1-bca66a41554c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b639f30f-0a97-4eca-85cf-41a28954e846",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3edf28f8-eaa2-49b6-b184-207677be131e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2955a56b-e11a-439c-aef2-4d7db5fcf4db",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076903b9-492f-41b2-9c43-a55117c42521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3f786f-e178-4b18-891e-eb4a2d7d42a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f519518b-9634-4de4-8068-13b4ebe2e672",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0f6e72-5bb5-45d7-b75f-9f7e946d5dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da692f56-c06c-4a80-84ac-a7b97998bd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd4ebb4-d713-4f73-8a2e-6f0c9902c4cb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a742bb-8a5f-4fff-ac71-8df3ccd97ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abda961d-63b8-4bec-b49a-cc4a4214df54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce740ea-1bb5-4920-9ffc-231c9b577dbb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9e0240-1440-497b-9477-89987c9fce1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea75a5e-2f3e-4ab5-8d90-3a1a2abe9238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ff2e25-3d3c-41d2-a2c4-ceda12aa9ba1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b86ab5-b809-4acb-97d1-7fd5333a73a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b821ba-a4f9-4220-93f7-7709a82befc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c53655d-ec95-4779-a57f-f21f44f03467",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a5272d-203e-416f-a430-a139e46abd33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e593b52-455e-4670-8714-b4067a21dae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e986e50e-23db-4265-b57d-650ccd2abc2a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15db34bd-521b-4707-b822-c1e35475b77e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b04ad06-06f7-4da3-8efb-452a32154fe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e615886-bc16-4ca6-99dd-38bd783db4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b137f3-5373-4b1a-81fc-45e943e8734e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52db514-e33f-4f37-a79c-fd55881b3fbc",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4045b87d-a146-4f5e-aa3f-066b0992d7f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45b17f4f-4073-4d9f-9b7c-7fc0f5e45510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f1b36c-8a37-44ec-951a-f57a641d7bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f10a66f-199c-4ef5-bf7d-e0fa2eb6db2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf280d9e-447f-458f-9ee9-988c8f96cfc3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622fcfc4-eff2-4239-9d4e-49eefa4851b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d10498b-5c39-41d7-86a7-31fa36a842f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21019f9a-2b8d-485c-83a6-6544349a2117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77853979-721c-48d3-9a52-b1193b92455d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b72ba5-85b4-4fa1-89f3-6cf8a19bbe05",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365d6002-0713-407b-95b7-6be9c1d7d3e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efba1d04-da0d-4584-9ba6-e894bd57525f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcd967f-fec2-44d8-bf70-39691d156c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f436148-aacf-4a84-893c-0258ad0c1e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5734a05-c2ae-433a-b2db-d2a14ac2642b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f798fc28-ad34-4596-a4af-8253952625f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e2b596-7a79-412f-8487-75aa3949979a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71284ee8-a6ff-42d1-9e5a-63e131ada654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c98170-235b-44e8-9585-1b312c5732f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94941347-1715-416d-a3d0-0cf9e5e959b0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc08b0a-5e94-4f88-988f-6a04695e7e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bbd5d44-f86d-4fd6-b656-b3405fb8fc3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b2d0f9-bfad-49c6-9810-b7a04cd9be98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa2a381-5875-4cdb-840b-2c84d5d0142e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43cec22c-a89c-4a4d-8762-2407cb5fa17f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5671725-218e-424d-9ed8-6a7441677de4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41ce1938-f2d5-439b-be0d-6888ac0d3814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53edc951-2557-40eb-b556-a555968bf0e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff12fb2-8710-4db5-8109-7c3e3cc79472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91724961-3466-4558-a251-861c56c88b8a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4a7d73-0d3a-4bdc-94b9-621e6739ea9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5925fa9-5f6a-4846-80b6-be1cb44738c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d1aa8b-500b-48c5-b3d3-514ad9b9adc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b47ebe-8711-4158-835a-bb0b493f4bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d122806-dd3c-4b81-aebe-de07de7606e4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58140c54-ae9b-4980-bca2-6fde0a09067b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "569c73b7-c76e-4715-8a82-3418c511e6c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1727c61-7915-4b6c-ad3e-b59a2b22db92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3277983-b5f5-47ab-9dad-a456806314e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9aeceed-8321-4320-86b9-2aca8d6c4871",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e13c1b-931b-41a0-9c9e-79bcb1ab1cfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cac63ad5-4c9e-4e14-9d5c-eede7ee6d35e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e826ac73-93fd-4027-86d1-f4e81037c4fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350ef402-40ff-4e9d-bdc9-26d28ae92838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78a56a9-b05d-4983-a6ca-677814a45419",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f877c3-66a5-472d-9739-aa561bbdf027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff340d1-f980-48d9-b848-2c5376f8400c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edf0a36-dd63-4580-ab36-46627eea4b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167299fa-17d7-4b54-aa53-564f02557dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21275fa-27a2-4e79-b074-e4dc87b5a31a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78447b4-da2f-4af8-a90a-9e5fe337bf48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07941c7c-f779-4e01-8a93-0e0dc1b89204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48357942-44ff-417e-b1c9-1fe89892400b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0921d6-28cb-4817-9413-4b8811fdce4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e248e35-9048-4408-a1d9-82984fb8ce83",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54530498-6176-45e1-9d77-527994cfc9b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8332b6-23a4-4df8-96d6-3899db5dd561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00dcb465-7eba-4180-b2af-fb0f6bc2d7f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e960f1df-4e5a-4723-b0bb-9dde012a99af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3667d0da-fa73-4bf7-8101-a7d18310b1ad",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ecb8a6-b97c-4480-be4c-abdcef777f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5032950-aadb-4ddd-ad53-63b19cbd4e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc02e20-00fc-4291-b18c-2799e1c6a310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab608f73-195f-4eab-8b7f-fbddbc7c36dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d4611c-1093-4d20-8b0c-ef956f2a0107",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2039c76a-9a1c-44b6-a841-353b1a311f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c57186-30e2-40d4-805b-a2f945afba1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b753bd7c-37ec-4867-a249-32db08abd3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd03dc8-ff08-4c3a-9795-c0704dd195dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19264ae-3555-4ab6-b6ff-640aba321cd0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5562b17-48ad-4d65-8aa8-d9b91b14d64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452cdf1a-fad8-437d-80f5-6a7ca6afbfd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7010fbdd-0509-431f-9706-c0ebca5681ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b1b0b37-1116-419f-a809-2eae49bd154e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b2d5ea-546a-4dc2-bffe-76534e643262",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34fd5c6-62cf-4dce-835c-dea4f040629f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e87d64d-c4bf-418e-8384-2cdd5b646716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61660234-d1b3-4410-9317-a527d78b1c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8672202-9663-4d0b-8e6a-fd26de6ae880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3918e9-830a-4e39-bed3-90f29b9424a6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ffbb60-e14c-4044-bca9-56fc028ca9c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1a686b3-9c17-4153-9988-cb468bd09822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7a91ec-d67f-461a-bf40-e3f729ae4b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a407bb-d239-43a8-80d7-95ed4830d1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24ccbd2-a950-401b-a969-c9b0c3d56821",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359b957c-9385-4e22-a76b-5db092186cab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4be7a95f-33fc-4696-a0ac-24cb9e940f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c02e91-c4b0-405b-a982-f3b2212f923d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43899f0-783b-4c21-b389-c3c1c016d862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd824c86-17fb-42ec-a2e9-9035df197ce5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912eb188-eb06-469a-aaa4-84140bd5fea1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d0b276d-4d22-449d-b9f8-267b304b350f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "372ec89f-6f7c-40db-9883-ffcf284df59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14dacd9-89e3-42fd-8947-6931289cbc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876b2469-7639-4e45-b3eb-86b3231f3e14",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cc7386-dbf6-4c94-b7ee-137fcdb0ddad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c962c84-4f4a-45e1-a372-d7271d4a73a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c602ea6c-6a37-4f2a-b718-572797d39da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a90ca4-73fc-4351-96a5-392858949b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9feb18-2735-465d-8317-3469948f715f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad67d8f-3292-40c4-b043-2da9c7526fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b09544a-a198-4544-8f4e-47852aed1be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00afced5-fcdf-459f-83b6-5ed6bf579e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a557a5-5a06-4acf-bab3-fd15152a1c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f747b2d-4c63-4a62-9461-89a6804c1d5c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ecdd24-c14a-43ca-9873-c808f4667c5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca6eb22c-32ec-467b-85b8-14f73df92df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7da00cf-5649-497a-9256-11b34f68e9bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350e035a-988c-429a-b09e-b9a82f8ab1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e014ccb-a35a-4f43-a4a2-4257e90dae71",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1adc68d-0c9e-4a1e-90a8-668c0ceec48a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa2ad2b8-92c9-418f-a5a6-e8f4d15d2209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8362966-e785-468d-8962-1ca9fc3a437b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8545c76b-1042-4e0c-a9d9-17fa6ff21ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5101539b-4c2f-4b28-b9ba-8259ab35bf6f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0084fa6-d5da-4609-bf87-fed6c45b8626",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5f1e8de-3015-4451-972a-33ba5a4ad818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f284cc23-4701-438b-9770-3d2237c8b1ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060b53d5-1e73-4f57-b838-1d99c29882db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7526a09f-a614-4807-903d-b965638fa44b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98964c51-b2db-48ec-8caa-022504475830",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0e0ae69-f8d6-4e56-a35b-1aa7448283f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "056d0e3b-c674-4b05-acd2-86ccc201e9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2761e3-7962-4719-83b1-cfe91135d06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dba768f-d9ac-4057-8c43-b6aa0a815333",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb8a9dd-ac3c-485f-be28-a8bff4ed255d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18e9b4e9-b240-481e-b68f-871930b6023e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "688f4783-8810-4873-9209-0f99eff2d010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4755f6-1488-4042-8c31-ff51ea506825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6910e667-c10e-45ae-aa89-3f38d3ce4c3b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b0181f-55f4-4bbf-bdfa-bcdb25828b7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a19b141b-a7de-4f97-8f78-1e57654a78c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47576610-e39f-4b91-a327-f62b254384ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7b2c6e-1182-47c1-9257-5285357c684d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6754b2c3-9ca6-4a43-9063-078fc7d2bbca",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a305016d-3060-447c-b405-072e81d8e9ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b36dc20-b0c9-4df0-a398-57530c33c76e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cb7e9e-93e9-415d-bb61-0eb8ab12b7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba28f52e-04b2-405d-8c20-3fef6f92b968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec821fd-372c-4f0d-9e93-2856526f31dc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c76239b-8f40-4321-ae6d-d99a5f81c0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee2a046-c153-4392-b1a2-a07d8fbc70db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57dde9a-142f-4728-99d6-7ea1ab879f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46317039-75b5-4032-b36e-783b8f0ce125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075f9b7f-55c3-4351-b05a-f4b22432bf24",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc26cf0-477a-4471-861d-9e8c3ff10aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d656a7-9810-4449-b42a-93e0291164a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ff8d02-0361-42f4-9965-cf8f1712be73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919ec00a-2a53-4eed-94a9-7dcb2cb9feb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a531ce-8c1f-47c2-a848-7ad604a296b2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b9ef90-f821-4b88-85ae-061896946669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2e65ab-72d8-41bd-bd25-b88565df1796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e13d9f6-0c36-40e7-8bed-636a649844df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5203d9-08f5-4b74-98dd-61a794961a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a605b8bf-52fa-4786-bbe5-7aaf407c1b19",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7045162f-57f6-420d-b000-477c2e5e8656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca48ea8-a3d6-4d16-a975-ad059256ad84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7c5c5f-e4e8-438e-ac3b-59aa4270a42d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e9b435-d7fc-4b63-ae0d-ba6c3e9b5f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7ba2ea-5869-423e-b1ff-8f3139e50952",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589de43b-f1c1-42ce-a909-9cfdae2c0c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34813288-036c-4d1a-94b7-7b27164847d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d45bdc9-2d5a-40fe-9e98-03e54d828c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba2c50bb-1205-437e-bf5d-48a07668967f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8028981d-a24a-40a5-ae77-9d508560b3f3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b8ce04-6e98-414b-84d3-df3243a7cb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6409c3fe-f9b3-4c5f-9820-995d36e53757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b818f5d4-2b6b-4cef-86b4-b59339096931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8559a540-42d9-495d-a64f-ccebba8a8caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00afd89-d4f5-499f-85ea-923d2807b890",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c461cb03-040b-4cff-9b95-ae015d8b6780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dae8422-a226-4cfc-8fdf-9784d0d5fd4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dbe1fd-9cb6-4ea0-a69c-30f994b01cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae55ab1-9980-45f3-9451-5ab43cd42ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6054b2d2-6d74-45e1-9301-e5077a438525",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bec409-eabf-4a32-983e-5d33101142d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "babe6f68-b7b7-4caf-acdc-e82509ab4ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ce3a44-f4f8-4946-ba0e-002d77f5026c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e157ebb2-a59c-46b4-a273-198bff289e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955535f2-50fc-4a51-b2f7-9cf092fbf28f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda240ab-f907-41a4-85eb-32bb389a7bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92818934-9c19-4d83-953a-199fbfe680f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb2a6f0-81d9-4249-b671-4bac61a3325c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb3550f-a6ba-49fe-9877-5d0f0c8b802f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f62de16-68fe-4ecb-b90d-63414669269f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48df1b5f-b4fc-40d6-8964-78b801a2bef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99aa9a66-7eae-4a28-ac82-77c75803281d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f6c9c4-011b-459d-bed3-3f0ca1055bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813d5368-385c-4ccb-b3b9-4c694316b6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a98bc8-e73f-489c-9538-4d93ecfe2734",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da26536-219f-4506-be36-e5063cefdafb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c6670b-b0fa-4b37-95b6-eab2f30da341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3f39db-6d83-4ae4-b561-35ece21602d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc2dfcb-3ed6-4a8e-ae51-d832c50228ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02bafb5-ac14-4bfc-b08f-30719eb1f2a3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53b986e-46ae-4fd1-8c9d-923c1ebc69de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd38c77-098b-45f1-8f71-84d406093d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88b0d61-cd76-488d-9557-e066d86546d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e352a9-404d-4a86-a0a8-bcc83cba52d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5584ad91-d95a-4244-afe9-f4507bc3928a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6665d5f-e80b-4364-93b0-c7b7bb32cfae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7493bb79-6e03-4129-bc7f-d88f6ab9424e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0952aead-e9ba-4bc3-a3cf-93bcbdfb435f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bccf0ea4-44e2-4ccb-9422-11c50cd2b96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5e54bb-f4b6-44b4-824f-903b707da4c7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76140364-8dfe-49e3-875e-5a0d6e88c542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07643e33-a4f6-4b86-8935-d073fdd02be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aeb826f-c54e-4eb5-8afd-271a42a8fb7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2191a0db-2e9a-4305-b090-704992c82f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d8ae8f-2870-44d3-b934-97cc707754a4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763a6560-db07-4918-abd3-77a0fbb4f5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71213fbc-351e-4472-981e-9afee90d7a6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7353e5-8885-4442-91f5-a3d80cf69fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c942c772-6331-4f3a-ae8b-3dfdf79e339e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4009643c-b1a2-45ab-812c-6e4b110bbcdd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4200325-de85-47d3-a291-50747685deb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9a1d34-f5a6-44ca-81e0-f1e7d23d6f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8d114f-c6d4-4b03-bf04-99e7c8a74d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2edafbd9-08fa-4c24-818c-4abedcc61069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdb9734-f783-45a6-a007-5cc97c2d2f33",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a602805a-a357-42b5-9f5b-6659a09741c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31189bd-8301-4883-8201-2f198aa99a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fc5f96-0f17-4091-b32c-7ce6d2530b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2da013-4eba-476f-8841-e54b22539e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aad9f00-f16b-4486-a1c5-153b3aa002fe",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29602ae6-d040-412d-91ba-e907375c901b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5ad255-47d6-476b-aa88-b0115566b644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021a8067-eaa5-4b8b-a92e-ae9df3b71dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f98e934-b8c9-48fc-89a5-fec05086b1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbb33d9-e741-4daa-aefd-294cfae9e68a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ac6586-e978-42b7-9205-ac936df15bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b9505a-c811-436a-9198-96d3986454ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98775b3c-71a6-4bdc-8e52-6dfa45b258c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda16b41-8312-4e7b-a8be-c792ffb1ea28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6203554-144c-4339-b0af-afbdaec0cfac",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c513ce-0e22-4c81-83ed-db5796a3bea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d62cf3-f6e8-4681-a5bd-df8e59013b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69630f1-2bdd-4e96-8e7f-054a76364da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ececed-2a7b-4f85-9971-12e36f52a50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30415220-c0d1-4a40-8e72-4af393dd09f1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a11b8cb-c992-4e51-bd3e-5f4bff0c9c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358b2590-ec42-4480-ad9d-d98a0ef1d0d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "609c74f4-1230-4b57-991c-6b9a997c3a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0239a783-75f3-4a7f-baa1-f6430c85f1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dca5296-43d6-4196-9711-03da9a4d4015",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4e06e6-7dcc-49ac-b514-c9218c6f3bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf1fd7d-4b82-4ac6-b9f6-7898ee7b9083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70780f13-0ba6-4915-b54e-6d199b66df0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d881c11e-5446-4311-aba0-387587c3a4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94389b3f-06e5-4de4-806b-bf2f458b50b8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150655a4-72cf-46e7-ba79-bfbd86565729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46bb7ef6-831e-4e0d-84e1-6dd7832cccc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2884ff50-f6e6-4641-9c20-45ac26698f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9172bc-9e40-40d4-9366-30de58a912bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff9b7cf-3c36-4a2b-979e-8dbd3d24194f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be1a6f2-4bc9-4a74-97fb-707eb852e07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066d6a28-6472-4ded-91d0-23f06a531c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fce7221-e947-40ba-b2ca-2353bd07ed6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949f43c1-a3e9-4569-9ebc-b96e7ac9ea7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba919067-c957-470d-b411-c7f4bc93d592",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3315eada-e7ad-4525-b674-f3772a6c9eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29359c62-7ed5-46d1-9625-40919a919756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68478d7-befc-43a3-b422-9fd4672b15a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18aa930-1c29-43cc-92ef-e18618f41fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f46dc71-b9cc-498a-b92a-4a5e3b2b7850",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67770e18-3967-4950-a06f-ee3d8df9780a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8290e5af-f83d-4f06-9145-566d47c6731e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048d09ea-eac5-4cf2-a86b-a927f1fe43a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693a33db-375c-4955-9541-2faa1f90d762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a2372a-4e8a-4904-bdb6-454a257f570f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce132117-f360-4c6d-9f76-6021d7bd8d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c47604-3f71-4208-a47a-e9f8645e7307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cb2e21-dceb-4d66-ab36-70ded84757e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2392e03-b58f-46e6-a669-122d478ed252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b033daff-8843-4728-b81d-cb89d8eb187c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f3fb9e-1b74-4af2-8fb9-68145b3cac50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9f1bb6-f9c4-4dc5-a4fe-0e4f58998b20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd7826b-d33a-41df-bfeb-e349bc5f4857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4116adf1-16f3-46e8-98fb-3f884b6e9528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5fd7b2-e04b-4fa8-a50e-e5c48a7feaa3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05ad021-dd32-4cc6-ab83-3e51cbd1125f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15f65196-5130-4c5c-b419-3c86d41b9935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "696a4553-1f1b-497f-9243-49cdd783a891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3b472a-d5ae-4d2e-8c49-facd37c4c2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11069ba0-4de0-42cd-9ebe-1744e28cf514",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3317226-2fc6-486c-af72-245099a1e7c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0259211f-ee82-460e-b875-7ca7fc7dd6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ee6b75-ef42-481d-b410-e632a5e7ea72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd3cbd7-19fb-4450-b6e2-416581c75269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33da99f4-0102-4fc0-b89c-6722ce817b23",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d6d0ea-765a-4166-8175-50135ebd5966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00256060-1110-4aaa-b065-82fb2d62de2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cf3509-6616-4bbc-acb0-e14e1aaaec80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ee27a3-ddbc-43c2-b3bb-3546188e6f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50201af-6b19-48b6-929d-5308953f33fe",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b122cd-9ec1-4bfc-a3d2-afb764f2e79e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e8517a5-11f0-4928-988d-9483c52a2f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "901291bb-079b-492f-a179-d83f903cbb16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79593e76-4d76-4942-8c58-415bc96953eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238a7348-e275-45bf-ad77-756769151226",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577eb3f0-5034-4e3a-9675-27d066bf7c95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3f9ae2-507f-457b-8556-fa508f03c20d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21dbb4e4-665e-4382-8407-11dbe0b47fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817e1e80-e626-4593-96d1-caf0e9edd7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fa6c5f-9484-4b26-acee-362a3bb62569",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdf4c15-0af9-41e9-8e3f-0ac15a00023f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec2523d1-f1ad-472c-91bd-167a5b392037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b25951f-1e81-4c57-aa54-1badd0f8034a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f31607-6b6e-4402-9edf-0838a1f4f7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a74a0fb-e583-4c91-a7c4-32681765725a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1080d1f3-c76b-4ff5-9815-72142e95c028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79523782-d183-467d-88f5-641889648a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef8292b-c84d-41ff-8f03-fff4b1ded979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190a9a25-df57-4e49-9d5b-194241100863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63c8e20-5fbd-4a21-a9f0-0a09cb906eae",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6668d6-98c5-473e-955c-20537102d3ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b49a60e-fd08-4ce1-b7b4-9b973c5f3bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb77cc4-3fb9-4c52-ace5-6c60165ef4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1192d0c0-ca33-44e6-89f2-5a966853860d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a9ec63-c925-498b-a934-a97c6954a729",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ec71d2-6535-495d-a710-948d6963b02d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52553fe5-4f6e-4a0c-ad7b-b218e7bae3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "803fe9de-6556-412c-87ad-8fe84f0ea41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5366fa-4fb1-456f-bce3-8a12d597dbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65701345-070f-4f24-a4d0-448610251ea9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adc3b1b-154c-4077-8083-6e9f4f9719c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9fc20b7-2560-476c-bf5c-df0681988ad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92086ee5-4a58-4519-8df1-55cdabdd05af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f570c1-2f14-466d-b95e-e2f72f52487a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd39ccfe-2f2d-40cd-a7e2-d306430c50e3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d5e8b5-3a05-4228-a27d-43a38d352cd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3f93784-42de-4e29-8f61-58cf27561a98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5097a500-3bee-4135-ae6d-6098f0e0db15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c76189-de9b-4a5a-bfba-84bec83939fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c5907f-33c5-4b21-9af1-84da64ed9437",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d5a149-d9df-4284-affd-49b9aafeb6dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85006f72-5a7b-4ee9-9935-f2118cb848f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df695f04-d6f3-46a5-8058-d8b06208f9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06c6a34-1067-431b-8880-b26f1a51c238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266fb55f-a9cf-4f38-9de8-54d72f2a5a4e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b00e6b-b763-4a6e-a691-1fdaf9cdb8e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f32c8ab4-8a14-472c-81b6-a76b6916172a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b87660-e32b-419e-8f58-89704f8218fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd997d1a-53c9-44ea-b4eb-bd584276ba55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c023d828-466f-49fa-be1c-2e05d680b9ba",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8921571-4150-49c9-8f2d-dde23be981ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a34bfdf-e8cf-4af0-8f75-98adf0831813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f17137-162a-4121-a98d-75257175e277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c75c7f05-9211-4e9b-bf7c-9559fc8691e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd550b9c-d452-4dda-9366-350059bb631f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4f3c27-3320-45ef-b944-f3a577549d0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a6f2436-2d26-49d2-9e93-e15060ce29fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c22b94b-d241-4759-a78d-2933314597ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3baf9340-cca2-47eb-947c-f977870037ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7de4327-6ee8-4ea2-bbdb-47df46ef71cb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be87e38-aa6c-4f6a-9fb6-cf869f69faed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce60a911-6a87-4ac8-8878-6ca8cfaa46db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9c3b03-8995-4426-97f0-e439be5d618c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70605d6-06f2-4041-b9c6-a223153e83a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cefee35-0f0c-49d9-a26d-a18e895ad8f4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cdd26c-3c22-49f6-a659-daff6363e441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67d5208b-026b-479a-b301-1f3374338f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b85068-ebb6-4bb6-9715-3ee4fa362d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c4076f5-a47a-4a40-b252-0b16aa32d389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67d3a58-b84f-475a-b66a-f716efcd300f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766efcde-22dd-4903-afd5-6c14078222a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2ac90f8-0510-498d-ac17-030b21d7b4dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c021c687-229a-41a9-a874-6615ef8f5014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c09481-c41b-4662-b4b4-37d1e49b52ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206a7549-693a-48e7-83ff-798215cc1cf8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0596c47b-8397-4aa5-8a78-2c46a4b37217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6a1d865-a7fa-4efd-8910-9bc80b2979c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d318a7ec-09d3-4322-bb13-d72aef0d8ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3877740-f826-4573-a2f7-26ed4d6e60b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b77266d-8b2f-4c46-a36a-64abcd6d2301",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78273df7-0fc1-437a-8a92-78ab81b07cc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa3fdd6c-8a20-4b3a-a937-b1e32df1f697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fe886d-1b31-428a-9d0f-38947b3e4003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e0318e-13ee-4750-81d1-7bf74a69a411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e5ea6d-3441-453c-9da9-451610c36bfe",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dbaac1-cc15-4f7b-bd70-19269c63ef04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d39cf835-cf40-436a-aa4e-24823c785929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3efca0-5109-4c6d-ba0a-d0bdab93541d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71c6768-0a08-4228-b122-a6cffbb09539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99043ac0-e8ed-4ba6-83cc-f9b968c9b277",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b2df49-a3cb-4a63-9953-1368dea7474e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c42420b3-ed8c-4288-958c-c7251eab681e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f387166f-5e13-40c4-9308-25e35f3add66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746e8b4d-939b-4973-8794-dd86b4cc5623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbe7caf-c541-4e51-b26a-a9da68ba8067",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edde4509-00c8-4e0d-8b7c-d95b2b2e8039",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3316a11-67ac-40cb-af3c-d2cc077ed0f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c323dd53-b7cb-4cd2-b68f-bf592825f3ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4bdb49-d24e-4634-acd1-0c32805f4439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ea60a9-191d-4020-a44a-7857f5c7a4c5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328cca2f-8bd3-4984-b4f1-fcc3895b8bce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ef337f7-22e4-4009-9d41-0f83602a78a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed308dfa-d896-4248-ace6-927e5c5bb5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9039357-d389-473e-b5b7-e226c2a4949d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ba29eb-97aa-4d24-8014-b47273bfdf3c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353883a7-f2cc-4d4b-b54f-b06e707fc49d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99c8875d-10d0-4ac9-8a0f-0ce5d51908cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06dfd24-2730-4566-9c79-13fa19be8585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d1387c-23b3-40d4-800a-6a724bfcef4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c276d7-9505-41f3-9113-1c0cfb03fa60",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd6de0e-dc1b-4b24-805d-2907f5877538",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1a5ffb5-b8dc-4fad-8a16-8095e324b94b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f936ca27-8b63-4ac7-afdb-d73de85973fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e608ebfb-ab60-4e42-8774-8f86e57a6949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc05505c-0be5-4641-8e77-05b4a6b3f3a6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ff944d-a090-48a0-a9de-f3bb9eb519d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f1a6023-5876-4cd2-8d83-92ad4184f5c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7686a146-c33e-456c-a0e7-0e0ca7addeae",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ef358b-806e-4c99-8c42-3b5a13872bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b97eb4-ff8c-40ae-a3f2-0df1df441958",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030fb2e5-e896-481f-977e-9605f61fa123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae9d8938-7f09-4765-9e8a-6699ca1b8bc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8828e6a-c6c2-4fd2-ab51-a525d6e3ea16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b13cda7-25d4-463d-adab-9003bf58a6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b862e2e-a46b-425f-a050-b67216f52aa8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4727952a-9d6a-446d-b34b-ac04b29d3d18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e233e01d-5298-499c-a454-883699669a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d10dece-d814-4249-9f61-bc027a1ce46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75684a02-6ad0-48b2-9625-961020d4979f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49813b67-622f-4186-b2fe-fbed4f4659e6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bae554-50cb-4f26-86d2-70313f723f4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70b04c97-dba2-4bde-aeb2-eb7f58b0c5c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ec0c92-2e02-4a1f-8b97-b8eaaa09bdfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d774d9-c96b-4d72-8a73-73d232337b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0c0ec6-2953-4bfc-8cf5-beef63b62c99",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4ebe3a-e00e-464c-b185-5209525777f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b4824eb-59f9-4155-a8a4-a994d0dd5147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d1be6f-7b9f-482a-9a91-2487ec381d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d89b681-fb0c-4e89-87ed-92d38cc06a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793b0109-5af7-40ff-8587-081c89ba5626",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d919207f-274b-4b3e-8d1e-0aec073e4aca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15d94bcd-a7c7-4633-b4c4-6a0ea1313fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "826a9f50-3fcc-4fe7-a154-c6d1413a5a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73d0e26-5802-4c66-a5de-ccf8c8b2ff4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0faa72-c847-4640-be52-080e2464a9d1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65993556-a106-4f49-bad6-24e316d27576",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee62a201-90ae-4d45-8254-4e44b22cd049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "577ca4bb-56bc-4648-a1b8-9ac1e8d95026",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d40c6b9-d469-4643-9466-668285fc92f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7840ef-c44b-40c9-8464-77068294241a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646e6d6c-3708-4ccb-9a13-fff7a192b090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "484755d0-c2a7-4a5a-a6aa-1a8feb5df212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7ed08f-6386-41d1-bf5b-34553bb57a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0bed6c-b69b-42f2-959a-37501e100d5d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d301e97-2793-4a0b-b1bb-b57979278041",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50efb799-6391-4aa1-ad87-72b2c644f9fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c52eb8e-f856-42f0-b213-0923732ccf59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2de913a6-8480-4292-8327-1c76c8f786b5"
                    }
                  }
                ]
              },
              {
                "id": "52afb830-fdd6-43af-86bb-92448cc4ad08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af259407-6053-4f83-9c38-21277e89fbfd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8d48c8-c50c-47c4-bcd7-01483a3aa943",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c6776d17-e596-4def-9a58-506290d49bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de932e2-0ef8-4179-b7ec-7e88914cbd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9dddb68d-fbc9-4ae8-93b8-046a65ec8a74"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "971945cb-1809-4c54-a0ab-f76821070629",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c5bd5e5-5da0-4147-b054-0bfc60098405"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3a915d6-6beb-477e-8838-f9eac42adf9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9030391f-2ccd-4438-9977-eda4b2d3506d"
                    }
                  }
                ]
              },
              {
                "id": "d47245a3-99dd-46b6-a4cc-1608ff02daf1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fd5fd6fe-a39b-4d58-861c-b178f47c3fa1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8277baf6-38c5-4c5c-bd4b-07d311d9ee1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0268efcf-0b78-426e-9114-6351cb03753a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20feb5a0-0058-4a26-bc69-680570e7d4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d99acf-928b-4a44-a80a-0d77df575a1e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3d97f02b-65e9-4b3b-96ea-f9ad3be28ca0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f568d41c-37ec-4dff-bd67-fcfb53780431",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57f17bfe-b392-4855-b868-4c1641463f15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ac888c8f-690b-4f7b-9b02-6c8145927998"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbb9ed86-6c4d-4537-8c81-6d141d926c7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "909e902b-1626-4bc2-9cbf-5bf9c50ce439"
                    }
                  }
                ]
              },
              {
                "id": "3fd2ad08-fb41-4560-b63e-2d9cf1b52809",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1680119-0bed-4d05-a75d-99207cb9646a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6dd28097-390b-480e-85f1-d6322f72b404"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fec3dc9-fb7e-43cf-9a63-fa022d9e566d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b26e7c3f-5d62-4bec-8c8b-2e46d1b17d6a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d88aff4c-29a1-4ca8-a040-664c55e466c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3fc6c1e7-0955-4098-85d1-dc4baf586d75"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9afc13ac-f494-4e92-af1f-ae516454c3b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2cd2980-4262-406c-8040-b496c80922d1"
            }
          }
        ]
      },
      {
        "id": "6424e1f3-cae5-4f19-8308-0c9cc4bcef7c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2729998e-3f7b-4804-8fbe-783daadf8b14",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4ccd789-f503-43ce-820b-5b67b606f6f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eeaa0361-c564-4a28-8ac9-1730448923aa",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90898f4-32cd-4177-8866-ed6220c7e76d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e2072437-9f0f-4a90-80cc-c8f2d742f27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c4c115-8f1d-43c6-b992-e78641aafa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "389e76e1-f5c8-44ed-87aa-47f975c34f0a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53e1604d-0a72-4b28-85ad-d27747de36b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33de497c-4d43-4e32-8e5d-8b7ded3862f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddc9a1b0-46ca-4340-962b-ae9d5a52fbe5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19924619-f1cc-4588-9d2c-a51a0caad901"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3222f6d8-1489-4aa3-bdf2-2604440d61f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9db93439-8a58-430f-9578-00bc18585f5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcf561fe-e2d7-457e-ba07-aefe1ba1d28d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aefe578c-ad3f-450b-9c22-869637f579f8"
            }
          }
        ]
      },
      {
        "id": "fe3f751c-ad86-4325-b141-f40981e6533f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a04d61fb-05b7-45e7-bbaa-5e2915e464b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa4d44db-6a78-4972-82e5-93ff2a918143",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6fffdfe-2d48-4dc4-87fd-377304b70e2b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a48ab1-37ca-4b86-b2b3-492fa64fa8b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f10f850-70e9-408d-9f9f-90981718899f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e13f78-06fa-4505-9628-63b03ae1543c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "505fbc02-31b9-46c4-a92c-b95d45aab5c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbe220be-ffd8-4955-972b-0cf933a73bd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97815455-7149-4b45-8f2e-d469c4317899"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f297f66b-53ad-46e9-81f6-8d470d57da5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f757f916-bfb8-4dd5-baaf-fdd79fb5e75d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4786ac5c-d0b5-4774-abdf-51ac54bafeec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8fde7a2a-2f27-4089-8caf-b8614877c8e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08ed7aab-56e1-4b54-9253-c130c91f940b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "248a6bbf-6bc1-45f9-928f-ea998c405ec9"
            }
          }
        ]
      },
      {
        "id": "a300c503-b5a9-48cf-a31f-7c9afc1254d4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7cabb452-5381-4ee4-aff3-bb96764dc2df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6998a1fb-810e-4cb3-bc89-679b7e3efc1c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9578e438-6546-43b0-a766-b96fe715db7f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e659d0a-a072-4609-8c9f-ecbd3598f1ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0efc178b-7e87-4096-b336-237be8513b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212b0468-e5ce-4c28-9b89-5d0fa59e9368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30cf0bcf-f4b3-4251-a889-514b1d0dc8d2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6beb8cf1-c3bc-4230-915c-e44ac7b2b330",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "417d9db5-a79f-4745-8c93-5e2042b1e147"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc1e7d83-21e7-47f4-8a74-42945d829f97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7c3a7c4-148e-40c1-bc43-937e89a671c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e5f4453-ae97-478b-86ab-3632ea1b511f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "563fbd3c-851c-49a8-b030-f02395af6f31"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7e33f6e-60c3-4748-b89c-e84379b9e463",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eabc1156-a78f-4200-9402-9bd82a315bca"
            }
          }
        ]
      },
      {
        "id": "0f40d73f-3b68-4092-bb52-96792fb824e1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6753fe21-caea-4f8c-aa11-eb5ec6fa3cfd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4af31dbb-95b9-4c06-80bc-2e27568a812c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "667254f2-e9b1-4ae9-83d5-eea3a38d6c79",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bcbeb0e6-b259-4503-8cce-c1a92049419a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "233f5fd6-550f-49bd-9d4a-2a01835e39ce",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 204.53521126760577,
      "responseMin": 11,
      "responseMax": 6992,
      "responseSd": 685.6493443503421,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689729177675,
      "completed": 1689729247140
    },
    "executions": [
      {
        "id": "541e0758-cc69-4df8-a52c-a7728327149e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "77f5011b-4f96-4087-8221-ee59b9b5294f",
          "httpRequestId": "34795165-8ded-4d1a-b462-2f0e5dac364a"
        },
        "item": {
          "id": "541e0758-cc69-4df8-a52c-a7728327149e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "76ac74b7-5567-43a3-b1e2-9ed880ecbe3e",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 0
        }
      },
      {
        "id": "ef302669-2b10-45e0-9770-bc63641a4f75",
        "cursor": {
          "ref": "c65de831-3267-4777-9bf1-fa771b0dab4c",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9573c55e-7656-49b6-80f5-442aebbf5938"
        },
        "item": {
          "id": "ef302669-2b10-45e0-9770-bc63641a4f75",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e8375fc1-ace9-4679-b35a-d9041e7939a9",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "213e44d9-8762-4e29-8759-0e5dbd90d67a",
        "cursor": {
          "ref": "153fa7de-b9fb-4c45-b555-052867cad4d7",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "835c29fb-18ab-4bf1-a903-318199c8c77f"
        },
        "item": {
          "id": "213e44d9-8762-4e29-8759-0e5dbd90d67a",
          "name": "did_json"
        },
        "response": {
          "id": "ed3fba5e-d24d-4b11-905f-6a662a7abee0",
          "status": "OK",
          "code": 200,
          "responseTime": 494,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0de54ff-c786-4224-916e-e6f44d7ae5a3",
        "cursor": {
          "ref": "5be7bba6-9209-4d2f-bff3-629a972a97dc",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "99f68cab-6260-468c-a8bc-9bcd18fb95b8"
        },
        "item": {
          "id": "e0de54ff-c786-4224-916e-e6f44d7ae5a3",
          "name": "did:invalid"
        },
        "response": {
          "id": "a00129a1-0b52-4fa9-81df-0a6bf7ca1cae",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1207,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0de54ff-c786-4224-916e-e6f44d7ae5a3",
        "cursor": {
          "ref": "5be7bba6-9209-4d2f-bff3-629a972a97dc",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "99f68cab-6260-468c-a8bc-9bcd18fb95b8"
        },
        "item": {
          "id": "e0de54ff-c786-4224-916e-e6f44d7ae5a3",
          "name": "did:invalid"
        },
        "response": {
          "id": "a00129a1-0b52-4fa9-81df-0a6bf7ca1cae",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1207,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217fd81e-2bdd-47a1-9ea7-2208ba3144e5",
        "cursor": {
          "ref": "442f03cb-8b12-44f7-835b-485277c265df",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "999dbf00-5923-486c-9973-c053d98e125e"
        },
        "item": {
          "id": "217fd81e-2bdd-47a1-9ea7-2208ba3144e5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3bd3e438-5e41-49d4-b08b-958c4668fa41",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f167201-95f6-47bb-b43b-abbfec62be3a",
        "cursor": {
          "ref": "7d45d14a-a19d-4baf-a5c9-d51fe5c7b600",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c7d640f5-767d-42b1-984a-15b734677d79"
        },
        "item": {
          "id": "8f167201-95f6-47bb-b43b-abbfec62be3a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2056b2ad-98b3-40c2-97a0-96e31da52d90",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4341d86f-e84e-44f8-aadc-946d2aaca0e6",
        "cursor": {
          "ref": "1b4f2882-48dd-4c4c-9f39-c730a0974c84",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "aad12bb3-9333-4a66-b9ba-1ecbb684c20e"
        },
        "item": {
          "id": "4341d86f-e84e-44f8-aadc-946d2aaca0e6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bf539234-2b29-4b15-8ee3-3456e31b4571",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4f2709-660b-4963-8f86-056a08d2e920",
        "cursor": {
          "ref": "6afe11b6-2cce-4c42-991e-ac14b856fa2c",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "768c1faa-19f4-4227-b902-6884135d3370"
        },
        "item": {
          "id": "bd4f2709-660b-4963-8f86-056a08d2e920",
          "name": "identifiers"
        },
        "response": {
          "id": "6429d683-8156-47d3-b3c7-9e41b996676f",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f0c869-88e2-47a3-8a98-e1bb77f45c44",
        "cursor": {
          "ref": "8539693e-320e-4c32-a4ad-69fb1926568c",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "65bf860e-ce3f-4257-a5a8-238fba11e9a4"
        },
        "item": {
          "id": "c8f0c869-88e2-47a3-8a98-e1bb77f45c44",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2ad18dc3-9298-48c5-a1f3-9e42365798e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9dae38b-a795-4767-be4c-14ed20f636a4",
        "cursor": {
          "ref": "4f36e17a-5b4d-43a3-995c-9f8a88ad3c20",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b0a6c120-3678-4b53-adbc-556da1a74f4b"
        },
        "item": {
          "id": "e9dae38b-a795-4767-be4c-14ed20f636a4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "84a85b41-bbbc-488a-a77e-19f6dab5554c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f83865-4d05-44f4-a3a0-5848f5d9861b",
        "cursor": {
          "ref": "dbf65131-c82f-4cf0-a132-bd211cf4b066",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "080d1219-ad05-4918-a307-1cf0b1ce91e0"
        },
        "item": {
          "id": "88f83865-4d05-44f4-a3a0-5848f5d9861b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6b16c35b-49da-4c87-a111-79aeacd501a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3731dbc-67f4-4c41-b820-52b636557643",
        "cursor": {
          "ref": "b8212591-d38c-45af-acc9-eb7b986c9321",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2353c325-c615-457e-a9a9-94af7af6f1ad"
        },
        "item": {
          "id": "a3731dbc-67f4-4c41-b820-52b636557643",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fb82327d-74d7-4caa-b32d-e3310dc41347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550a5ae2-7469-46c8-867e-8f306f3d9089",
        "cursor": {
          "ref": "62467614-acc7-47f6-9c54-a3e7ddd38103",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ed592587-524e-431c-af00-4d19d50dbe6e"
        },
        "item": {
          "id": "550a5ae2-7469-46c8-867e-8f306f3d9089",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "44eb2596-18c5-4567-b6b9-d1a9b3c91d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021d63cb-da95-48f5-b050-797ffd3cfbff",
        "cursor": {
          "ref": "ecd6d816-4fc9-485d-b409-fc9ecb9c864f",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "35c3fdd6-8bb5-4850-af59-e772a78aa80e"
        },
        "item": {
          "id": "021d63cb-da95-48f5-b050-797ffd3cfbff",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "889d46e1-2f93-4f43-9a14-8e3ce0e41524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a975249-fd73-44e5-8436-2d9de0dd8b64",
        "cursor": {
          "ref": "98d44e85-5b81-4f6b-a526-01b7c45a8c56",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4a0c82b8-4539-40fc-be85-ada30219414f"
        },
        "item": {
          "id": "9a975249-fd73-44e5-8436-2d9de0dd8b64",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b019aa5a-fe7f-48b5-a6cc-5ee4af687771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e24fe3-133e-4ddd-bb7a-90b73dbf9469",
        "cursor": {
          "ref": "1c722d04-d8c0-4116-81b6-57e5c6c8a167",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "922b434b-c077-48bc-be0c-7ee0141e128c"
        },
        "item": {
          "id": "87e24fe3-133e-4ddd-bb7a-90b73dbf9469",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6c12a2b4-4899-4b5d-8819-ffa84d07cb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1978135f-2030-45d9-9572-bab6561c9124",
        "cursor": {
          "ref": "b614d93a-d926-4c77-8fc0-a6e2580171ff",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3fc259d1-a7b7-4110-91d5-170b034dc5b9"
        },
        "item": {
          "id": "1978135f-2030-45d9-9572-bab6561c9124",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9e67d158-cc18-482d-9acb-a056d223a2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0214e6-bb16-4346-afbc-dd702b4c59f9",
        "cursor": {
          "ref": "4d9e00d5-3164-4e51-9f60-79a59b083b62",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a9f0e97c-0ff8-4577-b207-8804c433dbfe"
        },
        "item": {
          "id": "3a0214e6-bb16-4346-afbc-dd702b4c59f9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1b550a65-9cd6-4ab7-a70b-b02643b1c760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc331205-f85f-4b08-aa79-e3a73cbf7311",
        "cursor": {
          "ref": "def45bcf-106f-45d7-be4f-bdd64f673c46",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d034308e-b0f2-447a-8350-9201a9c74e77"
        },
        "item": {
          "id": "bc331205-f85f-4b08-aa79-e3a73cbf7311",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "41317aba-b941-4fbd-b4e8-495e887839b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb58488-b672-41cc-9ae6-4e661bfb710d",
        "cursor": {
          "ref": "0d0916b0-4e0a-451f-89e9-4c9bebed7938",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "682ba016-6fe2-46ba-aec8-d74919b6cfc9"
        },
        "item": {
          "id": "9cb58488-b672-41cc-9ae6-4e661bfb710d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2dc15433-c08f-4bc0-90b8-a566aa86b7d2",
          "status": "Created",
          "code": 201,
          "responseTime": 881,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "0bbd97f7-db03-497d-8353-b7b55c117175",
        "cursor": {
          "ref": "2e688017-bfe0-4e89-8394-894f8207b2b1",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f7a6c8e3-f487-45fb-9937-66c7393682f9"
        },
        "item": {
          "id": "0bbd97f7-db03-497d-8353-b7b55c117175",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b427714b-c61d-4da0-af31-9aa0a87c7232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17066e12-8ce4-4b52-9278-6fb763d6b4c2",
        "cursor": {
          "ref": "74e0e5c9-aac8-4884-a45f-7501936e4304",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8a37be57-d2e5-4670-9cb4-c80d10a5428f"
        },
        "item": {
          "id": "17066e12-8ce4-4b52-9278-6fb763d6b4c2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e1d307af-03a0-466c-8005-76b9156ad2d3",
          "status": "Created",
          "code": 201,
          "responseTime": 6992,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "5e94569b-606e-407c-8af8-a097223a3e03",
        "cursor": {
          "ref": "bc6504c2-d071-40e5-9305-bcc2acecb5bc",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "438f34e6-a496-4e50-baea-b05ce15f0433"
        },
        "item": {
          "id": "5e94569b-606e-407c-8af8-a097223a3e03",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "25d56863-ffc5-4c6a-8f9a-29649abcca04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826ecd87-0fcc-436c-88ab-265c3c8615b3",
        "cursor": {
          "ref": "ab62dff7-9e5e-4f43-ad8b-9008a9481885",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "57e63898-6266-4987-9ff9-c0f35fec7a6c"
        },
        "item": {
          "id": "826ecd87-0fcc-436c-88ab-265c3c8615b3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "26146c3a-2f42-4892-b534-ace7d34fea1d",
          "status": "Created",
          "code": 201,
          "responseTime": 3130,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "ef72c9a7-710b-4299-b584-f26521c9fdf6",
        "cursor": {
          "ref": "65cb0617-beac-474b-8b22-c982a748003b",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3212b655-ec1f-4846-9c98-283a74cfe87a"
        },
        "item": {
          "id": "ef72c9a7-710b-4299-b584-f26521c9fdf6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2264f5b6-12df-4afa-b617-a6b40e3e3fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ec1dc8-90f5-4e53-a231-848f7d02872f",
        "cursor": {
          "ref": "bfe49931-de94-4197-9315-25d6348a9d8b",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ecebb23a-a877-4324-a9f8-8840221dff88"
        },
        "item": {
          "id": "03ec1dc8-90f5-4e53-a231-848f7d02872f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6c9372d8-bef9-493a-84ea-582f54672eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5dd4f6-8460-4f07-acd2-3b1670b4ea67",
        "cursor": {
          "ref": "bea1aeaf-5c8c-464f-a619-4f42b611bfe0",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "16778e6c-3958-4ef4-b9d6-a098549d1ec4"
        },
        "item": {
          "id": "ae5dd4f6-8460-4f07-acd2-3b1670b4ea67",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8b70d231-ab4d-42a1-bcea-ce4df50992d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5414bb6-533a-4dc7-a069-62bd1a7ccbf2",
        "cursor": {
          "ref": "9bef9b88-0a48-48cc-8bc6-2f5da611d872",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5996d548-9a3e-4378-ac69-6c5b3783455f"
        },
        "item": {
          "id": "b5414bb6-533a-4dc7-a069-62bd1a7ccbf2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "844c9e30-0654-43c5-83fa-73eba5edab7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3a8060-ca3d-4089-840f-b27441597991",
        "cursor": {
          "ref": "5e788214-f241-436c-a960-43c37720e4b2",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4c8c59df-b5b7-4766-949d-9c16dae90a47"
        },
        "item": {
          "id": "2c3a8060-ca3d-4089-840f-b27441597991",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3af6dc4e-2a02-4789-8a73-8531ae69c9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2032f83a-69b1-483c-871a-b69d5d13d0cf",
        "cursor": {
          "ref": "6bda754d-9818-47b2-b08c-0db7ab695273",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2fc3e709-1997-45c3-a654-f7483cff44a6"
        },
        "item": {
          "id": "2032f83a-69b1-483c-871a-b69d5d13d0cf",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6e74d9e8-0c42-4051-b319-fdffb95b1e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de24f7a-903e-4c7b-b3fe-d29cc1431ea1",
        "cursor": {
          "ref": "6947352b-af8f-4195-b668-34d0e3475fd0",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4b40d967-e531-420a-a895-36828809a251"
        },
        "item": {
          "id": "2de24f7a-903e-4c7b-b3fe-d29cc1431ea1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "377bfb8e-5d5f-41eb-b259-7f17f22026c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7582cfa-b3a6-498c-a5ba-bc92614a4153",
        "cursor": {
          "ref": "282f6ef2-b248-41d4-ae1c-fae52d404bd8",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e3fcd5bb-c300-461a-bcf9-96b577d81a13"
        },
        "item": {
          "id": "c7582cfa-b3a6-498c-a5ba-bc92614a4153",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1f0f35aa-c93b-4893-95e9-8b6419ad3578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7dec4c-5f52-4a5d-938f-e0223da9c3b7",
        "cursor": {
          "ref": "4b73f2a4-35d1-4d3d-8de5-584d7da9e8a0",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fd369083-e97b-498c-a466-615856dfcf03"
        },
        "item": {
          "id": "4f7dec4c-5f52-4a5d-938f-e0223da9c3b7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7e37b31b-859c-4d4c-9074-43f3ebf0125b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cbfcd5-fb81-4e58-9955-3392eb370aa5",
        "cursor": {
          "ref": "fe836e1b-e8ec-41a6-90e9-8c66d1dfb48b",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3b09e570-7a08-44d8-aef2-90f8dc3291d1"
        },
        "item": {
          "id": "b4cbfcd5-fb81-4e58-9955-3392eb370aa5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8be2baba-3b04-422e-ac2b-efa377b0debf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe1bc49-c85a-45bf-81d0-02d05d05c021",
        "cursor": {
          "ref": "b05d328c-480d-4a19-aa8b-92a0bbef428e",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b5623644-65fc-4820-abf6-7e796e9594e1"
        },
        "item": {
          "id": "0fe1bc49-c85a-45bf-81d0-02d05d05c021",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bd355446-b176-4c04-9d6e-5ba40f5ddfb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ef1e3e-c20b-478f-9217-1d6fa3e121b8",
        "cursor": {
          "ref": "bd85dcd0-ea85-425a-9afb-c0d14cbbc397",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "57a5b896-8c85-4491-bf21-46ce852ea58e"
        },
        "item": {
          "id": "f3ef1e3e-c20b-478f-9217-1d6fa3e121b8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "af543be2-7df9-41f2-9fd2-1f4de3cc8eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faead92e-3ffd-4595-9af0-434cdbb5cb8c",
        "cursor": {
          "ref": "5e0946b6-4615-4dc6-8531-6e398e1f3229",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d94dfaef-f67d-48ec-8c71-ecf766046480"
        },
        "item": {
          "id": "faead92e-3ffd-4595-9af0-434cdbb5cb8c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "94f90f7f-3c9a-4628-9d2c-03cb0aa387bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c33808-89c3-4d06-a4fd-ef5fafcb28bc",
        "cursor": {
          "ref": "3ae66287-0bfb-487e-b843-663fa71603ab",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b8640395-e7a7-411e-8c59-81e5690b41d0"
        },
        "item": {
          "id": "e2c33808-89c3-4d06-a4fd-ef5fafcb28bc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "398f1f87-da04-430b-bf12-71e4eefddc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb876601-6365-40c4-a44e-b9738a18c2b6",
        "cursor": {
          "ref": "8e549111-f338-4298-9099-2840de57735f",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ec98a7b6-cac7-4f49-a225-3a0a461ab026"
        },
        "item": {
          "id": "cb876601-6365-40c4-a44e-b9738a18c2b6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "21b25f76-c40a-426c-9354-28924d97b709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f6cb4f-3a13-4680-9e66-a7f8a74a4548",
        "cursor": {
          "ref": "d95decbb-28f4-4700-99b9-4f40f194e939",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8e8e7a19-336c-431b-a312-f3ff22032614"
        },
        "item": {
          "id": "41f6cb4f-3a13-4680-9e66-a7f8a74a4548",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7e305f72-85bf-4915-b86b-d51ef1c3319d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3913a399-0fdc-4b3a-985e-ada0f983917c",
        "cursor": {
          "ref": "5ff06c0e-8b85-4b0f-874d-16a84ccb00d0",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6ba2715c-d4c1-4690-97d3-7fb0048742ef"
        },
        "item": {
          "id": "3913a399-0fdc-4b3a-985e-ada0f983917c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0126469d-c31b-4219-8571-8bbccf23a800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a65fb1-b4cf-4b49-b1e3-032ae2bee56a",
        "cursor": {
          "ref": "761e1be8-cd47-4816-a69b-bf5343e2ca05",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cc8e82bb-cde4-48b9-b836-bf6f190b78f0"
        },
        "item": {
          "id": "04a65fb1-b4cf-4b49-b1e3-032ae2bee56a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e3af7888-e9c6-4747-a4b9-bb5fb1766786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813de204-d000-4c0a-961c-ee5147bfa512",
        "cursor": {
          "ref": "61c51c5e-1f60-458c-b2af-6621599e32b4",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "03352df3-a403-45fa-8e36-45e45b2127c0"
        },
        "item": {
          "id": "813de204-d000-4c0a-961c-ee5147bfa512",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b36ff9a0-4287-40af-88db-cf490670ee3b",
          "status": "Created",
          "code": 201,
          "responseTime": 2699,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "9a4219c4-c2d9-40d4-8d09-1e83e25b9e50",
        "cursor": {
          "ref": "fd91e3c5-4584-44e9-87ea-de860d8d20cd",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a9207161-6ad7-45a8-a0fb-c6ff7f7f81f6"
        },
        "item": {
          "id": "9a4219c4-c2d9-40d4-8d09-1e83e25b9e50",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "61240dc2-f063-4dd8-b7ee-816ba5327fb8",
          "status": "Created",
          "code": 201,
          "responseTime": 2670,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "0bd5f571-81a6-4368-afbd-ce348b3eb5b2",
        "cursor": {
          "ref": "a4e88026-8b9f-4db7-8528-12a37bde887a",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "16535691-9b49-4ab6-a8a2-84b55ccf6c50"
        },
        "item": {
          "id": "0bd5f571-81a6-4368-afbd-ce348b3eb5b2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "68a66b27-aac6-407b-9264-c4a957f866b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b945952-8f20-45a2-8d56-7f9fb45a838e",
        "cursor": {
          "ref": "8a84b132-e292-4a3e-bc08-ef609d5e3733",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "917c8b69-4529-4859-903a-c0fed879a7ec"
        },
        "item": {
          "id": "7b945952-8f20-45a2-8d56-7f9fb45a838e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "90e5d066-232d-4940-9d92-f698fbb3ccce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3716a40-b512-429a-8de6-9321663d6fe6",
        "cursor": {
          "ref": "61c16b78-e087-4444-bb5e-935677e1c661",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "92a937ac-f274-44da-99ab-8853631ac771"
        },
        "item": {
          "id": "a3716a40-b512-429a-8de6-9321663d6fe6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a250072b-1487-4c20-b8a4-7e6bf43a3570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aadd7a32-429f-48d5-b758-9d25f30afe77",
        "cursor": {
          "ref": "8f064f83-8409-4a3e-a318-5b12d6792abe",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "03ba4d02-428c-4ff9-81f9-47f2d1aeabd2"
        },
        "item": {
          "id": "aadd7a32-429f-48d5-b758-9d25f30afe77",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d729ab42-6820-4acc-96f5-185cedfe2e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2281876-8e1f-49f3-bca3-1253d230456f",
        "cursor": {
          "ref": "c926d7f4-ab81-4396-a314-6431a48e95ed",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5928f465-6069-405a-8be5-ad8349ec077b"
        },
        "item": {
          "id": "d2281876-8e1f-49f3-bca3-1253d230456f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e85260b5-33f0-4761-b968-e1aa879950ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f403f0a3-d39a-4573-b1c8-a4c92e11ae5d",
        "cursor": {
          "ref": "6097e7f1-18c1-49f5-beca-c21f0cf39c2a",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d9d11556-8b16-46ad-a772-59ae25d1979d"
        },
        "item": {
          "id": "f403f0a3-d39a-4573-b1c8-a4c92e11ae5d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cc76bb62-847f-48b3-874a-3afcd724e036",
          "status": "Created",
          "code": 201,
          "responseTime": 2454,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "b3d94136-f58c-409a-99c2-61e6d7c37a3b",
        "cursor": {
          "ref": "0523c150-1eb8-4ba8-af61-d656b40d50ea",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dce625c6-5111-46dd-adc6-19387c45af43"
        },
        "item": {
          "id": "b3d94136-f58c-409a-99c2-61e6d7c37a3b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "02638711-006e-4830-a053-48dde5fb57ad",
          "status": "Created",
          "code": 201,
          "responseTime": 2792,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "b94a0756-e0d5-4fa9-8468-6e46a604fff9",
        "cursor": {
          "ref": "7864b255-f5ea-47f1-b2a5-8ad62550ab65",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "29046989-2907-4f42-86e6-25d714fb0289"
        },
        "item": {
          "id": "b94a0756-e0d5-4fa9-8468-6e46a604fff9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "29a8fc95-9bd3-4647-b422-efa6c960d79b",
          "status": "Created",
          "code": 201,
          "responseTime": 2745,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "1dcc1a33-d05a-41e5-8df9-1865f99ede06",
        "cursor": {
          "ref": "f96ce016-e615-4d23-9718-af5b1a10879b",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ac3bd42e-19e4-420d-8487-9d8659153819"
        },
        "item": {
          "id": "1dcc1a33-d05a-41e5-8df9-1865f99ede06",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "42c8002f-dd7b-42bf-8c4f-7310a2558a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cc4b9e-2bc5-4d26-9e08-6578bc15cd02",
        "cursor": {
          "ref": "f7355cc3-d13b-4db6-b5c3-a6e74dae068b",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b66b67f0-806e-4347-af38-01128f5cb868"
        },
        "item": {
          "id": "44cc4b9e-2bc5-4d26-9e08-6578bc15cd02",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6cc7f5f0-72c9-463f-8d66-73c32456efbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82d3bfd-4a37-46ba-8842-172c4d81a4b6",
        "cursor": {
          "ref": "2cc105b2-7b3f-490a-bbae-0a453b74f1dd",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5a8d8968-6f6a-40dc-afa1-5c0ffcf4f56a"
        },
        "item": {
          "id": "a82d3bfd-4a37-46ba-8842-172c4d81a4b6",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ecb01c09-3a28-4f9f-8454-fc9e750f017a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc74dfc-2d58-420e-bb75-9f49c31b3223",
        "cursor": {
          "ref": "766c7b15-a649-4fad-ba18-aabeb8319bd9",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "22307b7a-c701-4009-b99c-430741c92bcc"
        },
        "item": {
          "id": "efc74dfc-2d58-420e-bb75-9f49c31b3223",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bc8fe8d5-6f27-4207-a70e-1bb037a43201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c321e3-0505-4de3-8f91-0112c2509192",
        "cursor": {
          "ref": "36b91ee3-a43c-451d-a20b-c491a78c0533",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "346602c0-afd0-4215-87c5-c6e7ae6a8ecd"
        },
        "item": {
          "id": "89c321e3-0505-4de3-8f91-0112c2509192",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fdca317b-deae-4807-835d-2ecb6cec3d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbd3d5d-0589-4128-ab86-078d1c9f7ac9",
        "cursor": {
          "ref": "c144ffb1-d7bf-4c3d-b27b-f915e7866e1d",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c88f3caa-e014-45fa-84d6-977bb29a890f"
        },
        "item": {
          "id": "5cbd3d5d-0589-4128-ab86-078d1c9f7ac9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8945e488-5616-4cd4-a30e-17f809c5e0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aacbcee-8fba-4de4-b33e-721b239af4e7",
        "cursor": {
          "ref": "dfd8f797-64d7-4fce-ac29-d657d0778bbb",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "57977fb2-a785-4853-935e-e23ace0da9dd"
        },
        "item": {
          "id": "0aacbcee-8fba-4de4-b33e-721b239af4e7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9b521110-aec7-428f-9c27-87724df142bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057df3cb-bb96-4a79-b633-1051d78b1d7e",
        "cursor": {
          "ref": "f812b0d2-210e-4bf3-bfda-de3f9ef816b1",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a479adc6-3cfd-4b5a-8e2f-0ccd1f283c47"
        },
        "item": {
          "id": "057df3cb-bb96-4a79-b633-1051d78b1d7e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7128f385-938a-4ab5-b882-e3e9336ac03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319ffe2c-eb0b-42f4-b69f-c8026f1c0ef6",
        "cursor": {
          "ref": "0179aece-c054-43df-b236-9a1e2efcb020",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e65b8df8-adb7-429f-b304-07e3c88758d7"
        },
        "item": {
          "id": "319ffe2c-eb0b-42f4-b69f-c8026f1c0ef6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4272e931-7c3f-45e3-a066-5da6e31c98b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa39382-2ca5-4513-87a4-112362b61925",
        "cursor": {
          "ref": "c3ce60bc-4961-4efd-abf1-4054bf865b87",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "851d5ed2-4cce-4bbc-b396-2036830b4d8d"
        },
        "item": {
          "id": "bfa39382-2ca5-4513-87a4-112362b61925",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5cd80226-6004-4c48-9a2a-550242cba8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1323c102-bd95-409b-9e34-0e2a66da10e1",
        "cursor": {
          "ref": "1ac2a38e-e9d7-476a-8feb-93b5ade0c8b0",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f597115e-e8d1-482f-a903-78fb43e32f28"
        },
        "item": {
          "id": "1323c102-bd95-409b-9e34-0e2a66da10e1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "20abf73f-6381-4adc-8fbf-30340da7787b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2ef632-defe-49ed-a80e-da37faca0c41",
        "cursor": {
          "ref": "22938978-dd3c-40b6-8a12-bdc87aeb4f0d",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d2c8cd94-7f31-4ebd-9ed9-89ebd0851402"
        },
        "item": {
          "id": "aa2ef632-defe-49ed-a80e-da37faca0c41",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a6500d07-1830-4629-b724-f780036d852b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfb8adb-08c1-4cc7-8dff-4ec1e87becc3",
        "cursor": {
          "ref": "cf014c72-d704-4501-ac0d-13b5eceae13d",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4cd09bf8-aa99-4e50-8ae9-50f408007ecc"
        },
        "item": {
          "id": "1cfb8adb-08c1-4cc7-8dff-4ec1e87becc3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b2e9bfa1-170e-4dbb-b783-6b9e0868253f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c0c2ce-1b5d-49aa-a04a-d207ff5d8640",
        "cursor": {
          "ref": "d9d6ae41-fe14-4073-9eb6-b312d30d3b22",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7fadaa28-cbc8-4bda-aac2-dec11bfbb0cf"
        },
        "item": {
          "id": "f2c0c2ce-1b5d-49aa-a04a-d207ff5d8640",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "73cc9a39-d5aa-4b80-8739-a49c4bd3a0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081b842f-e53f-40c6-b92c-b136e583292a",
        "cursor": {
          "ref": "c8007218-f781-44ff-a77e-a0dbb46f0ca0",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "90391bd7-6ba6-4a27-8b91-3408b9a86ebf"
        },
        "item": {
          "id": "081b842f-e53f-40c6-b92c-b136e583292a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b39abd72-c1d7-41ba-9043-98b2b4cd581e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd35011-4bfc-481e-b36b-012eb035bec9",
        "cursor": {
          "ref": "d8544423-07f5-4c8e-b1e8-c8e54a78439c",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "39fa78b3-e882-4ff2-8f48-6a43295d527d"
        },
        "item": {
          "id": "5fd35011-4bfc-481e-b36b-012eb035bec9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7996458d-9547-44e2-817e-d701d45ba34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7aacd2-987b-44aa-bc84-4c5693789b0a",
        "cursor": {
          "ref": "6b68e361-be8c-447d-8b6a-ac89814cfa25",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c444b4bd-abde-4b55-9f55-51f9ae9ebdd0"
        },
        "item": {
          "id": "8b7aacd2-987b-44aa-bc84-4c5693789b0a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c2588430-992a-4077-9fd9-0edaf6822faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9222d5ab-9b30-4212-a1b8-a7230e9e47c4",
        "cursor": {
          "ref": "17132a69-2526-48ce-a1dd-a44c7628e4da",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "19980209-51e6-47a6-9a5a-0ff41e7c1339"
        },
        "item": {
          "id": "9222d5ab-9b30-4212-a1b8-a7230e9e47c4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "893763bd-698a-4cff-b117-c5baf7864c21",
          "status": "Created",
          "code": 201,
          "responseTime": 2158,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "ea70ab79-163c-4707-ba7d-f514d37dd9b0",
        "cursor": {
          "ref": "f0b57b8f-bda1-49af-bf2d-c71c06dc2c46",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8280c1c6-da5a-429f-8f2b-e87d91c1b9ed"
        },
        "item": {
          "id": "ea70ab79-163c-4707-ba7d-f514d37dd9b0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2af69991-68d8-4ac8-afe0-e4e7ef61b423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2534027c-0bce-4790-89c0-25e77d319dbf",
        "cursor": {
          "ref": "4fe14b7e-470a-4467-a53d-991eb367e5f3",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e0a1fd72-4644-42f0-864e-0c6d59f29e89"
        },
        "item": {
          "id": "2534027c-0bce-4790-89c0-25e77d319dbf",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fe4edbd3-a6f4-4b5a-9585-046d241b41e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9d8158-eb1b-402e-aef8-dfcaf4fa4118",
        "cursor": {
          "ref": "8fcfec14-3f19-431b-b7c0-ec89c36e3f97",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f74da17d-3ccb-4339-bf7f-5f0b34d78c12"
        },
        "item": {
          "id": "0c9d8158-eb1b-402e-aef8-dfcaf4fa4118",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4a173f60-d8e6-4913-9b04-bf1bcf85e16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea549d57-afe0-4918-8cfe-c30910d0e01d",
        "cursor": {
          "ref": "448bdf7a-6468-4a9f-964a-0528e3b41f8f",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7d3c2131-dcc3-455f-a0e7-eef8a706b319"
        },
        "item": {
          "id": "ea549d57-afe0-4918-8cfe-c30910d0e01d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "515161fd-a2af-43f8-b14b-128c6607e354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b51b48-61e9-4a37-a1a0-ba44d7408a18",
        "cursor": {
          "ref": "52dc6a2b-a472-462c-b6c1-440881a66764",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0646cab8-c9b5-442a-bb93-93f9e1b9429e"
        },
        "item": {
          "id": "06b51b48-61e9-4a37-a1a0-ba44d7408a18",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e8d5c600-5d24-49d9-8e4f-5c77a071c78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cf11fa-3014-4c23-95a1-f59168baae27",
        "cursor": {
          "ref": "3464f3a8-7071-4b8f-a0ec-19113be23b09",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4e9c6c19-d6db-4b25-9c40-ba863c998505"
        },
        "item": {
          "id": "f4cf11fa-3014-4c23-95a1-f59168baae27",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1b7f106e-e89b-40ac-b16e-101611b7ebee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ebbbe7-38f3-427b-8809-6fc776bca328",
        "cursor": {
          "ref": "71a6cc30-e88c-4307-bddd-4f80c0cbd13d",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f97f1e6d-5e06-4548-a1ad-0e29f4d7af90"
        },
        "item": {
          "id": "34ebbbe7-38f3-427b-8809-6fc776bca328",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "29205af2-1569-4345-a433-237430830958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917159fe-6d55-403d-aec5-37233b320cf3",
        "cursor": {
          "ref": "3cb3b10c-53d1-4a49-9e99-0b6513f25b84",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f10ce4cb-5df8-48ce-b97b-eac8b4696fb5"
        },
        "item": {
          "id": "917159fe-6d55-403d-aec5-37233b320cf3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bd794e0e-d8ea-4dd7-b7c1-3d53e53b304d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e68ab4-cd10-48b1-b8c8-2c57a80560cd",
        "cursor": {
          "ref": "14fd7413-a54b-4933-a591-7c52910b2157",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2b8454b7-ee4b-498f-9fe6-5def6a7466b1"
        },
        "item": {
          "id": "21e68ab4-cd10-48b1-b8c8-2c57a80560cd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f17f951f-9712-4935-b74d-ebf0e2486037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5fe262-8660-4ecd-b445-c515998ab8aa",
        "cursor": {
          "ref": "719b7f52-1f93-4cba-843b-081295b1b5bf",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "60c7da81-f810-4b51-b662-24a4f724e01d"
        },
        "item": {
          "id": "ca5fe262-8660-4ecd-b445-c515998ab8aa",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b21d8a1a-1014-4629-bd37-3064642968aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb879e91-69ce-4f43-a09d-3cddd96ebec6",
        "cursor": {
          "ref": "770c8211-2824-4b42-8588-66c319732563",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b5b2b686-7577-47fb-afd7-504b20e89a2f"
        },
        "item": {
          "id": "bb879e91-69ce-4f43-a09d-3cddd96ebec6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "dcd4c070-f5eb-441b-b612-2051af5510b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f2dc96-179f-4358-a249-39edd9387e0f",
        "cursor": {
          "ref": "85feaedb-ab72-4ca4-a80e-b22b7cf7fc12",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bb3170d6-82e3-4940-b5cf-3c4488d5f41c"
        },
        "item": {
          "id": "d2f2dc96-179f-4358-a249-39edd9387e0f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4cb7e61d-bd9e-4641-82fb-cf01c1dfd406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca6a421-d3c2-4270-bf17-bde061d4ae59",
        "cursor": {
          "ref": "cdd739e0-2292-4b69-9147-d71e19dc8fd8",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ea2c30c3-5e98-4359-b829-b09423869ecf"
        },
        "item": {
          "id": "0ca6a421-d3c2-4270-bf17-bde061d4ae59",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1ee5b87f-07ed-4130-8127-cce56651c204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec72aeb-a07e-4de7-a41b-455e6ff46e4e",
        "cursor": {
          "ref": "1259563d-964b-4eb1-8e23-73fbcb6aadec",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "537ad152-798f-4bde-b06a-9b43de557576"
        },
        "item": {
          "id": "8ec72aeb-a07e-4de7-a41b-455e6ff46e4e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "265e7adf-1197-46dd-91c9-9968340fc9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb1f551-07e5-460c-a4be-945c430b044c",
        "cursor": {
          "ref": "d0b209ff-3a47-48e2-b7e6-163764ba8baa",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2840742e-accd-48b3-9feb-da73c256e45e"
        },
        "item": {
          "id": "0fb1f551-07e5-460c-a4be-945c430b044c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "36d9d73e-37e9-4b50-9b9c-c65832221ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c74cacd-9beb-404f-aead-00e359669ac8",
        "cursor": {
          "ref": "ae60f287-dff2-4147-8c5b-285432b8320c",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ce72f805-f899-4df4-b7ac-190f125f2ee2"
        },
        "item": {
          "id": "3c74cacd-9beb-404f-aead-00e359669ac8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9dba3f41-359f-49f5-94d8-950a48839f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f65c791-8924-4905-ae15-ea8604cfbdfa",
        "cursor": {
          "ref": "f89a09ef-527d-4d17-88e8-e4c45b6fa5ef",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1b54df3b-6b6e-45c4-94e3-71299e5e6c64"
        },
        "item": {
          "id": "8f65c791-8924-4905-ae15-ea8604cfbdfa",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "292330de-a671-4c7d-b55a-d71ce0c0c533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338e95ce-284b-4a2d-a8c3-622a09f44ee8",
        "cursor": {
          "ref": "956a00c4-f0fc-45e6-81ae-23df4e4666d2",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "04983df8-7887-4aba-8aa2-f73993213aa9"
        },
        "item": {
          "id": "338e95ce-284b-4a2d-a8c3-622a09f44ee8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4d14d6b5-d749-4204-bdde-61e3db9521d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97496ca9-1f82-4efe-a7fd-09daecb5972b",
        "cursor": {
          "ref": "1fed6e93-f8e4-4e87-aba4-8b38a099339e",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ea812a52-ccbf-4926-94ba-051560d31334"
        },
        "item": {
          "id": "97496ca9-1f82-4efe-a7fd-09daecb5972b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d558d2ed-9605-468e-b3b1-207f8a409857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5335eb1b-bf4b-4eb0-89f9-7c83fd26bd50",
        "cursor": {
          "ref": "a6158467-9c29-441a-a8d2-a92db6ccfe62",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7298156b-5a04-43e3-9e70-6097f002f456"
        },
        "item": {
          "id": "5335eb1b-bf4b-4eb0-89f9-7c83fd26bd50",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bf5125bb-6a4d-4786-aeb0-caf38fb55c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c0cb4d-4b2c-4691-a311-da3266fa443e",
        "cursor": {
          "ref": "02e10b11-991b-479f-b966-55934b65286e",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1cb49451-4e0a-47ff-ab92-baf7b2317064"
        },
        "item": {
          "id": "95c0cb4d-4b2c-4691-a311-da3266fa443e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "95064a46-ff05-4d7f-9778-9747edf1aa77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86e62e4-ad5e-40e7-9314-750b57cbd930",
        "cursor": {
          "ref": "96b1acdd-d812-4ce7-9097-edb901cb0dba",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b4aba5ca-782b-4c0e-8b21-83a2ce8d05bc"
        },
        "item": {
          "id": "c86e62e4-ad5e-40e7-9314-750b57cbd930",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ffce8b39-8f71-4500-acab-021401b3742f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cab31a0-4db2-4e97-9b2d-6de02cb4f273",
        "cursor": {
          "ref": "4082b00a-06cc-4aba-92a0-4b0a4e108661",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e049d063-b782-43b7-948f-e84849ef7829"
        },
        "item": {
          "id": "0cab31a0-4db2-4e97-9b2d-6de02cb4f273",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fc3e5d81-6a6e-4933-8521-7755024c3ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b08173a-1bca-4bde-b341-603a0a1aae74",
        "cursor": {
          "ref": "a244e0ff-2fe2-4103-b581-4fcaa03918f0",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4b0ecf33-7878-4083-9f53-735f4a72ba23"
        },
        "item": {
          "id": "5b08173a-1bca-4bde-b341-603a0a1aae74",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6149cdd9-385e-4f5e-9586-d33c95a10317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d155ef82-8182-4fd6-91cd-40f8a39af6ff",
        "cursor": {
          "ref": "e633d773-1c3e-4966-9b00-94850e82652c",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a2e6d3b1-4c82-46ec-aed9-224de1aa0421"
        },
        "item": {
          "id": "d155ef82-8182-4fd6-91cd-40f8a39af6ff",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f848f563-2056-4484-8b9a-b09ba9d511de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999b7ea6-d609-4b88-b5b9-7bdcdb38f43b",
        "cursor": {
          "ref": "1caee923-bac6-49f3-9283-c83e17f0b45b",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c105c3f3-ace4-4a09-bb43-8d64fcd46256"
        },
        "item": {
          "id": "999b7ea6-d609-4b88-b5b9-7bdcdb38f43b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "19338115-0a6f-412d-bb43-bf35be27912b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5b0e47-cc8c-44bd-9692-cbcda387da3d",
        "cursor": {
          "ref": "727edf0e-58a3-4b61-a92f-6806c30cf0ec",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "56878684-8fa9-435b-b47f-5982ffcbdf0c"
        },
        "item": {
          "id": "cb5b0e47-cc8c-44bd-9692-cbcda387da3d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "59803dd4-d997-4606-b30f-411ae8f2554f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b596ce-b8af-4f28-aedd-da1205e619f0",
        "cursor": {
          "ref": "de512bcf-c8ad-456f-9900-d50071a266d3",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a4807a3f-a717-4ab7-8311-c494e4218196"
        },
        "item": {
          "id": "09b596ce-b8af-4f28-aedd-da1205e619f0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5913d14b-63de-427c-8676-1fad7d047e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6291577-8c6e-456a-aea3-86a183297235",
        "cursor": {
          "ref": "a1344e39-d25d-4b87-ba06-72227504c993",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "44ca0ed9-88fd-4c48-8b40-76b1ede6c079"
        },
        "item": {
          "id": "b6291577-8c6e-456a-aea3-86a183297235",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "32abb1ee-4be9-46d5-92d3-925f026c5b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e2abe3-047c-4740-b418-001e71eef5f9",
        "cursor": {
          "ref": "4fbd9c61-052d-4ed6-ae15-d90dae4dfbf4",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0f4423d2-381c-44fd-8d6b-9b4e29ea80a5"
        },
        "item": {
          "id": "62e2abe3-047c-4740-b418-001e71eef5f9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2f527e27-9e80-406b-817b-4468fddd936e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2348dc8f-81a6-4ec0-9819-2ef06d253e0b",
        "cursor": {
          "ref": "1477da12-3124-4d12-aa67-b2f9117e7659",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d8dc4d3a-9c4d-44aa-9376-d96103d77500"
        },
        "item": {
          "id": "2348dc8f-81a6-4ec0-9819-2ef06d253e0b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5d30828b-605e-45ed-9b67-320aa50f822e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2398ffb0-2dfb-4dab-83c7-bb5dfb128f0d",
        "cursor": {
          "ref": "40ad8464-904b-4535-b442-cfc1692537fd",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e064c3bb-4aa1-49f2-aa0f-55c5f47c113c"
        },
        "item": {
          "id": "2398ffb0-2dfb-4dab-83c7-bb5dfb128f0d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "444ddc1f-e45e-4507-b81f-e1f3c0885454",
          "status": "Created",
          "code": 201,
          "responseTime": 2088,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4a2c4a-0cd5-41fa-b89c-ff951e4d5ca0",
        "cursor": {
          "ref": "4e7e1954-f98a-4470-b4c4-ba48137bae64",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "35292d83-16d1-4660-8c9d-10cee4530fbc"
        },
        "item": {
          "id": "3c4a2c4a-0cd5-41fa-b89c-ff951e4d5ca0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e71a37f6-8625-461f-b940-fede0b17e1bc",
          "status": "Created",
          "code": 201,
          "responseTime": 2525,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef9a53f-f6a4-441d-b1ec-34f47ab0d200",
        "cursor": {
          "ref": "d3f02c98-078f-4668-a56b-744aba6c114e",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "46bf31a0-3493-4aa7-a15c-9bcd9cda6c27"
        },
        "item": {
          "id": "4ef9a53f-f6a4-441d-b1ec-34f47ab0d200",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9f1d498a-047d-4aa1-bd83-bd7658a69fcc",
          "status": "Created",
          "code": 201,
          "responseTime": 2757,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1721643-5f56-4537-a9c0-35d386feeb03",
        "cursor": {
          "ref": "ea2c2dc4-1d0a-46c6-99a8-45d5b91f4716",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "88d72bb3-92a8-4836-844b-c17245ba4c11"
        },
        "item": {
          "id": "d1721643-5f56-4537-a9c0-35d386feeb03",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a1fcb4b3-0a04-4a9c-9272-d478542acae6",
          "status": "Created",
          "code": 201,
          "responseTime": 2725,
          "responseSize": 995
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7724e27-eae3-4aef-9af8-42c90da890b7",
        "cursor": {
          "ref": "3235f77f-f4b4-45e1-bd57-3112d9881716",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fe0f9596-4572-4eec-839e-2899172d1da3"
        },
        "item": {
          "id": "b7724e27-eae3-4aef-9af8-42c90da890b7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "99547629-3690-4965-b958-9d2e1e473c1e",
          "status": "Created",
          "code": 201,
          "responseTime": 2408,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-19T01:13:47Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-19T01:13:47Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "3607fb73-6556-455f-9674-472fa6843a84",
        "cursor": {
          "ref": "3a8e1041-7e8c-42df-9cbb-9ce34a607b70",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5b576a6c-418e-4c61-bf6c-f96dd5636051"
        },
        "item": {
          "id": "3607fb73-6556-455f-9674-472fa6843a84",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "56a3b8bc-6f34-487f-809e-8e751f3e3ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "8f753ab7-57b4-438b-bb05-063eabd603fc",
        "cursor": {
          "ref": "d8d61ddf-c80a-4d58-826e-c9e5d0e2c339",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bd9fb8ed-3a0f-480e-8789-feb003b20204"
        },
        "item": {
          "id": "8f753ab7-57b4-438b-bb05-063eabd603fc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "73038427-c406-47e9-bb39-c489ff1f15e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ab7da6-fc0d-48b6-80b7-dd6c4a46b01c",
        "cursor": {
          "ref": "e44be25b-ef1e-466d-9463-bdef57f705d4",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e812674a-3db7-44cc-afaf-eac5fabd7ab0"
        },
        "item": {
          "id": "42ab7da6-fc0d-48b6-80b7-dd6c4a46b01c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a1399ad5-2104-45bf-bed7-8236bdeb41f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9423626b-5fd7-4c1e-bc03-d700a26fc5cc",
        "cursor": {
          "ref": "9340b236-5531-4272-b69c-43b3ac7b5003",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "66dcc260-9da8-4a59-b1cf-d51c6af7c4bc"
        },
        "item": {
          "id": "9423626b-5fd7-4c1e-bc03-d700a26fc5cc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d310693c-8baf-4a91-81cd-72c6ded35ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcf521b-2734-4322-8fbd-18afd6dcde80",
        "cursor": {
          "ref": "b47d914c-741a-4f10-ad77-6225852136e2",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1966e1c2-37e7-4268-ab24-936853ce4a10"
        },
        "item": {
          "id": "8dcf521b-2734-4322-8fbd-18afd6dcde80",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ea30d5bd-906e-47dc-a4d4-4e76d024a6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51182e6b-a102-4b5b-9fd2-a9ad755f9267",
        "cursor": {
          "ref": "27f67749-c529-4b00-9bf7-8b5b9ba9bdea",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f3202fd6-9610-4e59-84e4-38ce14bd8a5d"
        },
        "item": {
          "id": "51182e6b-a102-4b5b-9fd2-a9ad755f9267",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e11b1ff6-2170-439d-8868-b1ba0e395b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef4263b-a5fe-435e-8357-3a94e4cfa124",
        "cursor": {
          "ref": "a8c887d7-8372-4c09-ae63-da4cd0d53bf3",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f4f88d78-c641-44d1-b2f4-5c4932b3d8d1"
        },
        "item": {
          "id": "1ef4263b-a5fe-435e-8357-3a94e4cfa124",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "28bea056-08b7-4226-be44-329e884ce03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6bcba9-3bde-4f6c-95bd-81c8a6eb2a5a",
        "cursor": {
          "ref": "baa3823c-b361-4584-915c-71cbf49985dc",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ef0c0e48-c719-40df-9c41-8661ad4f9adc"
        },
        "item": {
          "id": "5d6bcba9-3bde-4f6c-95bd-81c8a6eb2a5a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e6db6ab2-2443-4620-88a5-60419c5611d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c7c4e6-6f34-48c4-b184-5d25d199cfa9",
        "cursor": {
          "ref": "db66411f-1f8c-4884-872e-1b43664ee1c6",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "345bb42d-a404-42c5-96f4-ecbf211a5b27"
        },
        "item": {
          "id": "86c7c4e6-6f34-48c4-b184-5d25d199cfa9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e3ee474d-05e5-4348-ae49-a4a61d347cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3763dc2-6a65-43e6-9ff1-fd0975c7123c",
        "cursor": {
          "ref": "6b3dd97a-3359-4ac5-a14f-672757048e61",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ccc7a9d1-70d3-4b37-b602-374e9c83c026"
        },
        "item": {
          "id": "d3763dc2-6a65-43e6-9ff1-fd0975c7123c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "829d006d-0d18-41bf-a99d-c26e2eec0b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440f4509-2922-4389-8562-b46abf4c016d",
        "cursor": {
          "ref": "3ef89334-d376-428e-bdd4-268b7989c0a4",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b8e7f76c-1251-46a1-8b3a-5852b9510ec2"
        },
        "item": {
          "id": "440f4509-2922-4389-8562-b46abf4c016d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1bed17ec-66bf-4835-9843-7de79d4aeb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c55f4f-4873-4e37-bb4c-4d67deb5586d",
        "cursor": {
          "ref": "6a6bfb46-da51-4325-9b7d-141cf38c4689",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "685d4dd0-0255-4c49-b731-8827b869d8fe"
        },
        "item": {
          "id": "58c55f4f-4873-4e37-bb4c-4d67deb5586d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "510de67e-f98d-49e9-8f9a-08d278e35a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa94ca93-0d98-4c61-8007-b4aeaa7823f9",
        "cursor": {
          "ref": "062c4d7b-23e9-4322-8f1f-cadda31d7f6e",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "56d6df40-7560-4877-aab9-a0bb6ae66f3e"
        },
        "item": {
          "id": "aa94ca93-0d98-4c61-8007-b4aeaa7823f9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dac16967-b088-443d-82d1-9609fd846a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8081258e-7138-4212-b1c5-99842915d029",
        "cursor": {
          "ref": "15f21564-513b-424c-a3fd-e2168ebdb32a",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bbe26f39-1ada-470e-b4d7-5a20fbf5ec26"
        },
        "item": {
          "id": "8081258e-7138-4212-b1c5-99842915d029",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "55dea07b-8e89-4294-8a19-3734059855c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011e496c-862b-4e9a-a95e-8d544025731e",
        "cursor": {
          "ref": "8a2c1712-18a2-45dc-8c8f-f113af27b18d",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "823868f7-8212-4f8c-ac82-729f95d97bd9"
        },
        "item": {
          "id": "011e496c-862b-4e9a-a95e-8d544025731e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b822b443-270d-4903-9a05-d994777365db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b595a75b-d6bc-4b49-9941-ed5f1272c32b",
        "cursor": {
          "ref": "7850f5a9-bd2e-463b-b738-72852a91914e",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3c5ba0f2-c6fc-4345-b714-f653152f23f8"
        },
        "item": {
          "id": "b595a75b-d6bc-4b49-9941-ed5f1272c32b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3fd65d7f-654e-41b9-9cd4-3e2da0a91a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e79593-20f7-4918-a167-29819c89025d",
        "cursor": {
          "ref": "aa6644dd-a74e-4439-bacd-d8acf0928844",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e2d343cd-14be-4e3a-b7c6-93f88e923339"
        },
        "item": {
          "id": "d9e79593-20f7-4918-a167-29819c89025d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e132fc83-13d4-4fee-a3d6-ec04d0b9aae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b1414c-eceb-4c25-929a-2ea8a9a3781f",
        "cursor": {
          "ref": "79df9150-7dd3-49d3-a6b7-e7c97d7109a6",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f4a288f3-5080-46b3-ad58-06c1fc05fd0d"
        },
        "item": {
          "id": "96b1414c-eceb-4c25-929a-2ea8a9a3781f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c2058879-87a0-4d02-8222-6c5aef60d0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c17f4d-aba2-448e-a4a1-b3f92c5858be",
        "cursor": {
          "ref": "77a217bc-9a92-445c-82ce-283d9a356604",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6cb71c24-5dde-46d5-aaee-185f4246f6cf"
        },
        "item": {
          "id": "c8c17f4d-aba2-448e-a4a1-b3f92c5858be",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "25da2b90-a0fb-47b1-8e43-5f34ae46856a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a8d9a0-a2af-4b06-89b8-614f21647ef0",
        "cursor": {
          "ref": "9cd14080-f478-4840-b36f-c70428639394",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9824ce80-1b74-4a15-b50a-3b4ee697b6c7"
        },
        "item": {
          "id": "54a8d9a0-a2af-4b06-89b8-614f21647ef0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1ec2cf84-d1d3-4d03-bae4-d5876b6b98d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3abe67-5ae3-4134-bc8a-6002c552ae93",
        "cursor": {
          "ref": "eeeee067-615e-4c52-b1a9-c31f40ac5d67",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "14792df0-46b0-4c95-b436-97645ce39cde"
        },
        "item": {
          "id": "6c3abe67-5ae3-4134-bc8a-6002c552ae93",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fdc9df46-54c1-4808-86c0-94ce60a4149f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96d93fa-ba09-4fae-a355-d8dc3f937981",
        "cursor": {
          "ref": "1cf4643f-d539-49b9-ada7-47d80a61b828",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f44e20ae-8066-4f38-9851-b3c6ff7b6604"
        },
        "item": {
          "id": "c96d93fa-ba09-4fae-a355-d8dc3f937981",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fa16a54e-dbab-4115-9662-28dc3206fa60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f5c761-9b9e-478f-82f7-ea445609d58e",
        "cursor": {
          "ref": "0199c067-9ea0-429a-bf51-7bb277c3e932",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2540127b-8a1d-41e6-80cc-ddb5f52c5235"
        },
        "item": {
          "id": "08f5c761-9b9e-478f-82f7-ea445609d58e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "799d739d-5f5f-441a-8c49-2707afc11518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bdf5c5-490a-44d7-95e4-fe186c93af9d",
        "cursor": {
          "ref": "15fe9fe6-3573-4ec0-83ad-079e8a1720e1",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5b9360ca-9e1d-407e-8e7c-63c68bc44450"
        },
        "item": {
          "id": "f4bdf5c5-490a-44d7-95e4-fe186c93af9d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "707842a3-8188-4726-8a69-8f0a98c2a52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f326de-6252-407c-aa52-a4071009bf7c",
        "cursor": {
          "ref": "444f3c3c-9c8b-403f-a9a0-17e9ab3aa398",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "642d2410-1680-4d3a-a283-9a38a79bf529"
        },
        "item": {
          "id": "e9f326de-6252-407c-aa52-a4071009bf7c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8854f2a7-b6b2-45e3-a9c8-5a6677c53b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c70eec-ce36-4a0f-884c-1f9ec2f7b3ae",
        "cursor": {
          "ref": "a57d55a7-cc1c-4270-a1de-5b5b2d3ca1d9",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d9fb7e81-883d-465a-b710-cee9d75a743d"
        },
        "item": {
          "id": "a2c70eec-ce36-4a0f-884c-1f9ec2f7b3ae",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "43aa03b2-07fa-41a0-8cab-6d05abddb7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5a61e3-c630-4087-967c-89482655616f",
        "cursor": {
          "ref": "5731f64b-6102-4ea1-b052-5a2ce530b369",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "15f764ca-9867-4b32-a361-9c85da9582d7"
        },
        "item": {
          "id": "0d5a61e3-c630-4087-967c-89482655616f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1729d218-0089-4bc1-85aa-3a4d363b5937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e96bf2-b644-4b5c-89e0-83c22be03fad",
        "cursor": {
          "ref": "56132a63-845a-47e5-84fb-eb8557079a5c",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "cf78774d-2c8d-4469-8193-83df535155f4"
        },
        "item": {
          "id": "56e96bf2-b644-4b5c-89e0-83c22be03fad",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b7109859-7382-4ba1-bbdc-26cfc27bcdeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a147895-2487-497a-8b22-e968945f4da2",
        "cursor": {
          "ref": "fb09447e-ecba-479a-a289-8a94a0d7bb21",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cb1a4125-7378-4a7b-87fe-495e971a07a7"
        },
        "item": {
          "id": "3a147895-2487-497a-8b22-e968945f4da2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ce1e1793-635b-45ce-80d5-4de5a50adc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab52542-9f80-442d-b422-013559db3d0a",
        "cursor": {
          "ref": "568c05dd-e4be-425e-9505-fede2db62a17",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e10008fc-e3fb-4d03-84b7-1d78b4118f27"
        },
        "item": {
          "id": "4ab52542-9f80-442d-b422-013559db3d0a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "94567d57-23c5-41d7-869a-5967d12c09d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a66a04-6ccc-4fd6-9648-f24cb100463f",
        "cursor": {
          "ref": "ca73edff-458a-45b5-8bc2-61e319c0270b",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "dcead4c8-58d3-4385-8553-4bf2ad6ed535"
        },
        "item": {
          "id": "a2a66a04-6ccc-4fd6-9648-f24cb100463f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "33c301ce-b085-4523-970a-08e0bfa80894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990bc413-4718-411c-9ea6-aa32776e7496",
        "cursor": {
          "ref": "c99b1b66-2047-4145-b8c6-4970118b94d0",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "851e3d75-db75-4a45-8e0e-fbd362fbe3c5"
        },
        "item": {
          "id": "990bc413-4718-411c-9ea6-aa32776e7496",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a8edbea9-86a6-4045-8ea4-a9ab85991e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1be8d0-b2b8-4906-8679-50170ab329ab",
        "cursor": {
          "ref": "5be0a41b-dede-4f9f-82ff-702b69e03fa9",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "15ec8ae0-7d2d-423a-b0e2-0b3b4ea8ecba"
        },
        "item": {
          "id": "7c1be8d0-b2b8-4906-8679-50170ab329ab",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "31dc8141-8d2d-432a-8cbe-6efa40ff4398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370fec48-2887-47ca-8a0b-9bc5bcb42099",
        "cursor": {
          "ref": "c682f225-2649-4812-abe4-42f84fe0b67b",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a45b957c-74a6-43ed-aedd-ddb8ff6c3dd3"
        },
        "item": {
          "id": "370fec48-2887-47ca-8a0b-9bc5bcb42099",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c2bf73d9-9215-44a2-afe0-9a10073297c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9dc747-5b8f-4832-9299-35fb62160619",
        "cursor": {
          "ref": "de6ee427-42e0-4c73-baca-25818129d3f5",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1aeeb17b-78c4-402f-930e-0d6d1ee6aef8"
        },
        "item": {
          "id": "bd9dc747-5b8f-4832-9299-35fb62160619",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "645993a1-a7f4-47c2-a035-0722c72efe62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d585cf2-9653-4cba-81b3-757bb8cb7c3c",
        "cursor": {
          "ref": "a400e750-780e-4553-87ff-b2183ab0b4fd",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cd9e170e-7aa1-4f6e-b264-6798000ad665"
        },
        "item": {
          "id": "9d585cf2-9653-4cba-81b3-757bb8cb7c3c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ec252d48-7a88-4ec6-a55e-97bdac5ccde9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49706d36-ddaf-41d3-8461-985a1d2d4d9f",
        "cursor": {
          "ref": "eb7aff70-c954-4c6f-b1b8-fd16faabb12a",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d4834927-25b0-4129-844b-ca006a38b1be"
        },
        "item": {
          "id": "49706d36-ddaf-41d3-8461-985a1d2d4d9f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "912b7cb4-f49b-4e9e-a44c-cadbeafaf471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481615ca-7189-4ca5-b94a-da90d3e69b35",
        "cursor": {
          "ref": "31afdf6c-122f-4dfa-b591-33ed05b0b278",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b2e703f0-a9df-433d-9517-b6f5ee99fba9"
        },
        "item": {
          "id": "481615ca-7189-4ca5-b94a-da90d3e69b35",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f5bc9deb-5a00-4818-9c70-a21dee38dab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c9fe18-47c0-41a4-a0b9-8f5e0d9f6266",
        "cursor": {
          "ref": "b0ab0965-59b7-4ddb-9d5a-7d30fe939244",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4f5f3cae-7b99-4bfa-897f-f5de9099e7ad"
        },
        "item": {
          "id": "18c9fe18-47c0-41a4-a0b9-8f5e0d9f6266",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "28737775-53bf-4560-9a1b-41952072cff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82142553-34b2-42b6-9afd-6ed8bf24a591",
        "cursor": {
          "ref": "5f374241-215f-4296-a025-269424492f68",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7cffca22-0ee6-44fb-b098-f28b6145d6be"
        },
        "item": {
          "id": "82142553-34b2-42b6-9afd-6ed8bf24a591",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "113bcfe9-75f6-4102-826c-3fec3c45e819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7254f4f-f67b-4b71-89ad-3629d181dbea",
        "cursor": {
          "ref": "463b1aea-dc4b-4979-89f3-1bdaa6bb1cad",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b6ab286a-1020-4a7d-a783-1ad30e226b55"
        },
        "item": {
          "id": "f7254f4f-f67b-4b71-89ad-3629d181dbea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "06bcf6b3-0f88-4da3-8f4b-b7fd0d56f63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa58991-d586-431f-a33e-8fa894ebecb2",
        "cursor": {
          "ref": "da7f4312-a946-4c99-8291-fca8de613c92",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "883a62fd-3e50-4876-8e33-176939da4a6e"
        },
        "item": {
          "id": "5aa58991-d586-431f-a33e-8fa894ebecb2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "18de3f10-867d-4d3b-87b1-adb6295f426c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defeaefd-cea8-4832-b6ed-5438f34cf492",
        "cursor": {
          "ref": "6234c1df-0c1d-4a17-aceb-4f6e7e0fcd49",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "38243204-3514-47c7-8e63-30df2973be10"
        },
        "item": {
          "id": "defeaefd-cea8-4832-b6ed-5438f34cf492",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a81e732a-321a-4eb6-943d-54ba1abda2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f52b0a1-07e5-42ba-b0cb-01d6d97debfb",
        "cursor": {
          "ref": "82d8a79b-8cf7-4881-b816-4e25f37fd160",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "129471bf-4fd3-4597-977a-d07d225919f4"
        },
        "item": {
          "id": "1f52b0a1-07e5-42ba-b0cb-01d6d97debfb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "69cad487-57bf-4dce-9e13-72da5fa1614a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66910a07-2cc2-4423-8c42-adf62fca740f",
        "cursor": {
          "ref": "d0d7f784-e639-4e31-ab62-339aa583a583",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cc8a45f7-a0e1-4255-a93b-695415dcb69c"
        },
        "item": {
          "id": "66910a07-2cc2-4423-8c42-adf62fca740f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c3ef8842-f93d-4155-8a58-3676a2e95c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83225c5c-213d-42ca-af4b-277860099c75",
        "cursor": {
          "ref": "4280d0cf-0b25-4a78-9705-768e301ca8b5",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0975aa75-2f4e-4f21-9257-d663d77b12f1"
        },
        "item": {
          "id": "83225c5c-213d-42ca-af4b-277860099c75",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "70a53693-f731-4c90-8013-f80187e3c6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7585cd1-07e4-4deb-b5e6-ec8890c11d82",
        "cursor": {
          "ref": "12ca9f39-6fb3-4dea-bd1c-a9912dd0b05b",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9327b331-263f-4550-917b-59663a21eb6a"
        },
        "item": {
          "id": "e7585cd1-07e4-4deb-b5e6-ec8890c11d82",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "35d65528-bfad-4d58-b5f7-c7e1dbadbf40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ce105a-63b1-4d3d-9858-789058aab826",
        "cursor": {
          "ref": "74c9147e-d16c-4183-891e-aad5758edb43",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "10deede3-876d-4ec9-bb0d-49ed644e1f42"
        },
        "item": {
          "id": "f5ce105a-63b1-4d3d-9858-789058aab826",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9549e80c-4563-4775-81ad-8d7489a76098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df5ab02-8e7b-4b51-8842-2170a34d66a3",
        "cursor": {
          "ref": "59209a59-ccc5-4b23-8eeb-3c8bd8d0927d",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "91feec51-3800-418f-98fe-518ac700d4bf"
        },
        "item": {
          "id": "5df5ab02-8e7b-4b51-8842-2170a34d66a3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9e028014-f103-4bf6-b2f2-d69563b8a02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e0bfe2-2c76-4528-ae20-24376deb9c4e",
        "cursor": {
          "ref": "9fded5a3-0831-49f5-b61c-2e06415a1d53",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fa6681fa-5acd-4b07-99f8-83e060382f9b"
        },
        "item": {
          "id": "43e0bfe2-2c76-4528-ae20-24376deb9c4e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e08238be-71f5-4d5b-8765-a60f2fe89a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580c044c-ee77-47c9-b32f-c5745e20eabf",
        "cursor": {
          "ref": "f8b99da6-6db7-4ffe-aacd-ecaaf592122f",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9f022fc7-1293-426a-b905-a9aa8f115497"
        },
        "item": {
          "id": "580c044c-ee77-47c9-b32f-c5745e20eabf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "085d4849-025c-419f-8247-97c3577a35e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77d2bdf-32c4-41ea-8abd-68d9a07b3b45",
        "cursor": {
          "ref": "663751e5-e72a-491d-b49c-9614982ca91a",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b0a21042-9e1d-458a-a925-a11827a844ed"
        },
        "item": {
          "id": "f77d2bdf-32c4-41ea-8abd-68d9a07b3b45",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "eb5b10bf-c8fe-4892-9b18-e53dc4457310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615707c2-09d1-4961-becf-52926c852448",
        "cursor": {
          "ref": "66fd6ad6-37b1-443f-b676-823c5206da83",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b5ceec85-8d78-46bc-ba64-724798697fc3"
        },
        "item": {
          "id": "615707c2-09d1-4961-becf-52926c852448",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "38f979d7-f469-4e25-a85b-fa455e49ef1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92ebc58-fbb6-4f42-85fc-ac0fa4778501",
        "cursor": {
          "ref": "4de44e45-4df7-4e0a-bce8-cfa6d96cf6be",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f13998e9-2d40-43ea-82ce-9bd22fbcfd27"
        },
        "item": {
          "id": "e92ebc58-fbb6-4f42-85fc-ac0fa4778501",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d3b8ecc7-73db-40f0-afe1-a14a8a4cdef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511f00c2-eb09-497b-ac79-1e59526f62ad",
        "cursor": {
          "ref": "accbc136-6902-4486-82e9-4442b651dd76",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "28b8e58a-d2e5-4caa-a9f6-fd7e87b22752"
        },
        "item": {
          "id": "511f00c2-eb09-497b-ac79-1e59526f62ad",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "95d0f8ac-9293-422e-b579-38a33df03079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84f1e74-b403-4126-9e6f-cd0448e141a3",
        "cursor": {
          "ref": "b0a4927c-634f-40f3-b6bb-e21e05989f1b",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d5fabdfd-2ed9-4e2d-8e7a-bf4ceb679e90"
        },
        "item": {
          "id": "d84f1e74-b403-4126-9e6f-cd0448e141a3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8f8b8321-23b9-46d5-ad50-873c722bae4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b61353-88d7-4b1b-86fd-b5a74f5b13b1",
        "cursor": {
          "ref": "aabc6cb8-4c10-468b-8cfb-947dab53869c",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d0ddecae-b2ec-41be-a99c-9a8fac4ef452"
        },
        "item": {
          "id": "c9b61353-88d7-4b1b-86fd-b5a74f5b13b1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "86b66337-fccc-498c-be2e-46364b638f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11783906-1639-42ae-b58c-7d9f3fdaf75f",
        "cursor": {
          "ref": "4343ff79-d2b3-4aba-b9bb-ecab6ea2fd30",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ed161e53-e9fa-4f47-a0cc-7e816284fd04"
        },
        "item": {
          "id": "11783906-1639-42ae-b58c-7d9f3fdaf75f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bfb53d25-2613-4347-939e-710ccaebf192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb26482-e32d-41b3-a058-4b13d2262d33",
        "cursor": {
          "ref": "e6317d80-7a32-47c8-84d5-1bad58f9f3d6",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2606bd63-4fc6-401a-9df7-e57f2f8a2ab5"
        },
        "item": {
          "id": "3bb26482-e32d-41b3-a058-4b13d2262d33",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a77e931b-d333-4588-8a13-383835267f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3236d0a-d359-4c53-89c4-1848f8adde36",
        "cursor": {
          "ref": "5026ba29-d717-47f4-8378-a9f0c93f0640",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8334a7ac-9192-4612-b9de-0c7849d52e48"
        },
        "item": {
          "id": "a3236d0a-d359-4c53-89c4-1848f8adde36",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "db74c649-65c8-4614-b492-8cb8a5168857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9b7597-c7a1-421c-bdfb-5f3028faf88d",
        "cursor": {
          "ref": "f9144089-6077-475b-8e7c-46aadf4db3a1",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "11eee1f7-39db-4e50-b414-0de8c6410bee"
        },
        "item": {
          "id": "dd9b7597-c7a1-421c-bdfb-5f3028faf88d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0a62b86d-c949-4508-ac36-7378cbfcd08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656295a2-3b92-4d9f-91b7-9304aa9c0dc6",
        "cursor": {
          "ref": "c957d5af-dd48-484a-bcf1-cec378294530",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9aea5385-c875-46a9-bc4b-7028010937e2"
        },
        "item": {
          "id": "656295a2-3b92-4d9f-91b7-9304aa9c0dc6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7fcc6cd0-dfb7-483b-b710-4771db922bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4619b6-0907-4cd4-ab46-3350f4d216cc",
        "cursor": {
          "ref": "ae6f3383-0474-49a8-8913-89abb127048f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a02a3bf2-cb54-4fc9-a877-fea8cabd70e3"
        },
        "item": {
          "id": "dc4619b6-0907-4cd4-ab46-3350f4d216cc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dbc1e5d1-fbce-4832-8b00-5086b49203e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a3c0e3-aad8-41f9-919a-22d07a83bf09",
        "cursor": {
          "ref": "30cf4746-1107-44d8-9712-c8e0e3d9257a",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "49c398ed-bc35-4906-8025-69c4f7449961"
        },
        "item": {
          "id": "46a3c0e3-aad8-41f9-919a-22d07a83bf09",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "24b5e7f1-c070-4aaa-ac1d-bc139ddf40f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22a3c31-c8c5-4b8e-97bb-86d80a5c3f1d",
        "cursor": {
          "ref": "43cbef73-ef2f-418b-92dd-212fab37edc4",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e6d30f10-2923-43c1-992d-8ab72f6f5ef2"
        },
        "item": {
          "id": "e22a3c31-c8c5-4b8e-97bb-86d80a5c3f1d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "be2dcd80-7fe6-410c-9d4d-63d1b5284c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a54044-5b16-41b1-b216-e78e05b737f3",
        "cursor": {
          "ref": "4f2b55e0-c7e4-4f82-930f-2bc945c76073",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d9ce325a-20fd-4f86-afb0-2cf923a47d82"
        },
        "item": {
          "id": "d6a54044-5b16-41b1-b216-e78e05b737f3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "293b6c53-7d57-4109-948b-d6bed8385edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e19e4be-32dc-406a-b936-179f2323ce4c",
        "cursor": {
          "ref": "f20e2892-1128-4a3a-8348-8e74e68bb4fa",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "874fa4c2-3c4a-4281-8ccf-913391167af1"
        },
        "item": {
          "id": "3e19e4be-32dc-406a-b936-179f2323ce4c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3485ceaa-6aa4-41bb-b0e7-d26bb7c134cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe8cb5e-11f1-4641-ba94-80c7be514e67",
        "cursor": {
          "ref": "03263225-5dae-487b-8659-4a0b6d882666",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "02c26f4d-9b96-40cc-9d91-d79d8b134e4b"
        },
        "item": {
          "id": "4fe8cb5e-11f1-4641-ba94-80c7be514e67",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e1bbf68c-244d-48ef-931f-506be3ff1544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13cd9c9-d2c7-4f4f-8c13-709817ad0b77",
        "cursor": {
          "ref": "b2e621c0-ca01-42ec-9fa5-896676b5f8b6",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1643b763-4978-47f2-972d-ae88dc5c0611"
        },
        "item": {
          "id": "b13cd9c9-d2c7-4f4f-8c13-709817ad0b77",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8c633ee4-104a-4e78-ab26-b06af01f3d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a49b0f-d729-4d04-9143-39939cd328aa",
        "cursor": {
          "ref": "1fab963a-e55a-409d-b7bf-794296875925",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "175f211a-76ba-4850-8eac-4fe97617f3f9"
        },
        "item": {
          "id": "87a49b0f-d729-4d04-9143-39939cd328aa",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "29c5533b-4e33-41d9-8f0c-6d80428e2251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88abe6d2-5de9-45c5-b9cc-e843b909f2ec",
        "cursor": {
          "ref": "aa70393f-a59e-4cfb-a161-c75286412918",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8f8710ae-572a-4691-9e87-1b746e3a1c27"
        },
        "item": {
          "id": "88abe6d2-5de9-45c5-b9cc-e843b909f2ec",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5a1cfe6c-1967-439c-bf01-4af46522eddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34088245-d8a9-44ba-b4c0-1d9764848e98",
        "cursor": {
          "ref": "f6f9c5fd-7e15-4ff1-a34c-175244ce7fe3",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3b9a39d4-eb20-4f08-abc7-06dfd2822258"
        },
        "item": {
          "id": "34088245-d8a9-44ba-b4c0-1d9764848e98",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4f53543b-07fe-4ad1-9432-07e753d8d461",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2955a56b-e11a-439c-aef2-4d7db5fcf4db",
        "cursor": {
          "ref": "77a59cd0-0206-4ba2-9457-71cf015f18cc",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "21c8c052-0fe7-49a4-99da-6426f63c4509"
        },
        "item": {
          "id": "2955a56b-e11a-439c-aef2-4d7db5fcf4db",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d0f877db-5c64-42c7-b5a3-f6c73fca3f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f519518b-9634-4de4-8068-13b4ebe2e672",
        "cursor": {
          "ref": "c408761c-7513-4726-a9a4-aa97be808a45",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e4e37ff1-a348-4dd9-a5a9-c3eaab364a00"
        },
        "item": {
          "id": "f519518b-9634-4de4-8068-13b4ebe2e672",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4cb586f3-6dc3-4da1-862b-350d2377515b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd4ebb4-d713-4f73-8a2e-6f0c9902c4cb",
        "cursor": {
          "ref": "8d081ec8-1b7b-4bc6-bb04-eae4d4d090e2",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "528e6ef1-efb7-485b-a102-5f48b7f86e9f"
        },
        "item": {
          "id": "efd4ebb4-d713-4f73-8a2e-6f0c9902c4cb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bfc3022a-c495-49d4-9a3e-6d7fb5148b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce740ea-1bb5-4920-9ffc-231c9b577dbb",
        "cursor": {
          "ref": "c6d1d4ff-c264-40d8-9e9e-ccdff2b72a6d",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2c0b474b-0509-4798-a890-c4ece2225550"
        },
        "item": {
          "id": "3ce740ea-1bb5-4920-9ffc-231c9b577dbb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e46ea6b5-2d41-4fae-87cc-8851e0182705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ff2e25-3d3c-41d2-a2c4-ceda12aa9ba1",
        "cursor": {
          "ref": "0aa9992c-fcd8-4c39-861c-21a2b81ed9d5",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7de4a18a-dea0-42bd-be15-e6f38e3e989a"
        },
        "item": {
          "id": "22ff2e25-3d3c-41d2-a2c4-ceda12aa9ba1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5227699f-0467-486c-b66c-d54d2350c991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c53655d-ec95-4779-a57f-f21f44f03467",
        "cursor": {
          "ref": "2477657a-629e-4670-9112-7fef3f055e1e",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "214fdc25-3404-44b9-a3ca-7a6e07a57bb7"
        },
        "item": {
          "id": "0c53655d-ec95-4779-a57f-f21f44f03467",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f1488b8e-8ae9-4f60-886d-bed69c2b22bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e986e50e-23db-4265-b57d-650ccd2abc2a",
        "cursor": {
          "ref": "7e359d5d-98e4-4914-a135-01e235ebc596",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "61f8678d-4f5a-436c-a4f7-6bba45c90c53"
        },
        "item": {
          "id": "e986e50e-23db-4265-b57d-650ccd2abc2a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6504189f-32ee-498c-a856-0d74c44c88e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52db514-e33f-4f37-a79c-fd55881b3fbc",
        "cursor": {
          "ref": "8b7c5732-9709-4ba0-b4fb-f029c06d26e0",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6c986465-1100-4678-8c60-18f3e27cc8e9"
        },
        "item": {
          "id": "e52db514-e33f-4f37-a79c-fd55881b3fbc",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "264cd585-cfc1-46e7-b9e8-67168161444c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf280d9e-447f-458f-9ee9-988c8f96cfc3",
        "cursor": {
          "ref": "574aa495-57dd-47b4-b990-e834b9a16453",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "da63f274-d1e4-4273-bb66-6dfe1ec54a3e"
        },
        "item": {
          "id": "cf280d9e-447f-458f-9ee9-988c8f96cfc3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6eeb1770-213e-4bcd-aaf9-4ab621e4a2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b72ba5-85b4-4fa1-89f3-6cf8a19bbe05",
        "cursor": {
          "ref": "015506c7-edca-4d7e-a2c2-35fa1c0cd5e3",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "90c1bf57-2a04-423d-8583-df8d88ed6415"
        },
        "item": {
          "id": "64b72ba5-85b4-4fa1-89f3-6cf8a19bbe05",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cb873b63-e673-4b13-9471-c96ab695598a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5734a05-c2ae-433a-b2db-d2a14ac2642b",
        "cursor": {
          "ref": "c38baa49-5815-47ea-a39f-1054d7e7abbf",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b6dbae62-6cbe-4d1f-b2dc-32ba6764a835"
        },
        "item": {
          "id": "f5734a05-c2ae-433a-b2db-d2a14ac2642b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ef0107e8-4943-4fef-874d-68a599333744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94941347-1715-416d-a3d0-0cf9e5e959b0",
        "cursor": {
          "ref": "2d51a254-9277-42f9-a80d-d2251d8660c6",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e7a357f7-0503-4674-87b0-c3a049c2a667"
        },
        "item": {
          "id": "94941347-1715-416d-a3d0-0cf9e5e959b0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fda31e09-da5e-4399-a062-a85180318f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cec22c-a89c-4a4d-8762-2407cb5fa17f",
        "cursor": {
          "ref": "02facdc2-87da-4955-8f48-578d5e9281d2",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f8d3c4fe-3c0e-4164-867b-6a8c1c145851"
        },
        "item": {
          "id": "43cec22c-a89c-4a4d-8762-2407cb5fa17f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6969e720-9d1a-443b-9af7-c452e983ef36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91724961-3466-4558-a251-861c56c88b8a",
        "cursor": {
          "ref": "dcd500c0-c5dc-4874-8599-944340696354",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "96025173-a486-419a-b61e-b57e947ab49f"
        },
        "item": {
          "id": "91724961-3466-4558-a251-861c56c88b8a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7cb4ce19-383a-4e6c-b3fa-43b3f9572ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d122806-dd3c-4b81-aebe-de07de7606e4",
        "cursor": {
          "ref": "3d4533ed-85a4-4a0d-a119-958606520580",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2e19f111-eda6-4dc5-bc59-e0fdbddbc9d0"
        },
        "item": {
          "id": "4d122806-dd3c-4b81-aebe-de07de7606e4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "483ae0fa-d7e0-4c57-a32b-3193ef579138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9aeceed-8321-4320-86b9-2aca8d6c4871",
        "cursor": {
          "ref": "69ab0ce5-ff0f-490c-8656-3f29a839f26a",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8b1eb395-1353-48f1-a4b0-c2b581223ae0"
        },
        "item": {
          "id": "c9aeceed-8321-4320-86b9-2aca8d6c4871",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "79f6263a-b73b-4b53-99e6-9318ce199854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78a56a9-b05d-4983-a6ca-677814a45419",
        "cursor": {
          "ref": "d33483d0-230a-4008-8ede-c132b0fb0474",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a6e159b6-f5b8-4fdc-91ec-1196de40dd36"
        },
        "item": {
          "id": "c78a56a9-b05d-4983-a6ca-677814a45419",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "474ab135-9307-4033-a5aa-03569498dc2d",
          "status": "OK",
          "code": 200,
          "responseTime": 217,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "b21275fa-27a2-4e79-b074-e4dc87b5a31a",
        "cursor": {
          "ref": "52f14fa4-90b2-41e5-a7e8-a2b0ac9a2510",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "89d7386d-ba83-48c5-86d9-63883be78916"
        },
        "item": {
          "id": "b21275fa-27a2-4e79-b074-e4dc87b5a31a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6cb98ae3-cc66-47f8-a4d8-ee7f175f5944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e248e35-9048-4408-a1d9-82984fb8ce83",
        "cursor": {
          "ref": "ddb487b7-a41c-4b8a-b99e-031dd1e8e4ac",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e8f16ea5-0310-4aaf-93e3-7d7026f3b4e2"
        },
        "item": {
          "id": "1e248e35-9048-4408-a1d9-82984fb8ce83",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fc85655d-a0ec-42be-bf23-42ab3243e098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3667d0da-fa73-4bf7-8101-a7d18310b1ad",
        "cursor": {
          "ref": "f8e5e5e7-2cd5-46da-8d81-5781761a78f4",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "684f6267-d616-47b5-a910-6b57d85740a3"
        },
        "item": {
          "id": "3667d0da-fa73-4bf7-8101-a7d18310b1ad",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "be27086c-4d57-44fe-a7c9-339a74cb6b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d4611c-1093-4d20-8b0c-ef956f2a0107",
        "cursor": {
          "ref": "0485e605-26ee-4edf-b8ff-ce7de0cd9df4",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cb317e4f-59d1-4402-9564-b732c0796341"
        },
        "item": {
          "id": "19d4611c-1093-4d20-8b0c-ef956f2a0107",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5f35ec4f-26b3-471c-85e4-ca321ce46c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19264ae-3555-4ab6-b6ff-640aba321cd0",
        "cursor": {
          "ref": "52bc4356-8d5b-4e53-8f76-03bfb49b85b7",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e4a78a4e-412b-4ed6-bde9-dd5d1703e8e8"
        },
        "item": {
          "id": "a19264ae-3555-4ab6-b6ff-640aba321cd0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4192e0a2-fb97-46aa-a201-a2979a1733c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b2d5ea-546a-4dc2-bffe-76534e643262",
        "cursor": {
          "ref": "bd8bd4dd-2a19-4c11-9765-514d166795f1",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e600a7c5-eddc-4640-842d-128d12233d5f"
        },
        "item": {
          "id": "a3b2d5ea-546a-4dc2-bffe-76534e643262",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9b5b646f-4fbf-409e-a374-714bbba62d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3918e9-830a-4e39-bed3-90f29b9424a6",
        "cursor": {
          "ref": "94c9dbfd-1058-4e33-8d2d-4a0c9ba26f71",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "53b057aa-d3d3-45df-b6d0-21b4a653e339"
        },
        "item": {
          "id": "fc3918e9-830a-4e39-bed3-90f29b9424a6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1ff2df77-5d05-4dee-8ad4-53337efc2981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24ccbd2-a950-401b-a969-c9b0c3d56821",
        "cursor": {
          "ref": "4e9e60d0-0650-47de-a298-973f0bba0df3",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ae61cf27-8e48-4eba-889d-9130b10ddae3"
        },
        "item": {
          "id": "d24ccbd2-a950-401b-a969-c9b0c3d56821",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "45234622-9805-496d-a9b7-17af9f33793f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd824c86-17fb-42ec-a2e9-9035df197ce5",
        "cursor": {
          "ref": "9edf3066-c617-41f3-9746-69a85dcb6c76",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6c087855-55c3-42ae-ad37-4d26db003549"
        },
        "item": {
          "id": "cd824c86-17fb-42ec-a2e9-9035df197ce5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "57bcdc5c-86b1-400c-aeab-2cb29ad0e992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876b2469-7639-4e45-b3eb-86b3231f3e14",
        "cursor": {
          "ref": "15c1f814-4cf0-47a5-8b3f-b4a40f285392",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cdbed7f0-af94-4a2d-8fa1-b92c49a6d799"
        },
        "item": {
          "id": "876b2469-7639-4e45-b3eb-86b3231f3e14",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0042fb5a-2818-47f8-be02-3e7a7974f3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9feb18-2735-465d-8317-3469948f715f",
        "cursor": {
          "ref": "95b1c9f0-b59e-46d8-8363-c005f3103300",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e7028d6c-5801-4474-a1fe-4eca9b18707c"
        },
        "item": {
          "id": "ba9feb18-2735-465d-8317-3469948f715f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "02126360-c9ed-4637-982b-0f0b13f083bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f747b2d-4c63-4a62-9461-89a6804c1d5c",
        "cursor": {
          "ref": "f370a3e3-b341-4f79-919f-99956cda5f5c",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "93f1ebf7-4d44-4e00-afb2-b4a28c0ba692"
        },
        "item": {
          "id": "1f747b2d-4c63-4a62-9461-89a6804c1d5c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "63eed2e5-18db-4bcc-bbe7-8a66a6dced09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e014ccb-a35a-4f43-a4a2-4257e90dae71",
        "cursor": {
          "ref": "6de32404-1193-4745-b64c-7698a7960862",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "69a3f21c-bada-4027-914c-d8c005e1885e"
        },
        "item": {
          "id": "6e014ccb-a35a-4f43-a4a2-4257e90dae71",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7834f298-6b31-4842-9b91-adfd2a7cca87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5101539b-4c2f-4b28-b9ba-8259ab35bf6f",
        "cursor": {
          "ref": "9e8da16f-ebba-4dd1-95ca-ba70550178c0",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8dc52c5f-290c-4afe-a1b4-f201833daaf4"
        },
        "item": {
          "id": "5101539b-4c2f-4b28-b9ba-8259ab35bf6f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9c8dc800-b04f-4aad-ac4c-96cb1b283659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7526a09f-a614-4807-903d-b965638fa44b",
        "cursor": {
          "ref": "c75ca1ec-4406-4eac-916c-6fc20deabff8",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "80364747-7e62-4bcb-8431-c4932d687118"
        },
        "item": {
          "id": "7526a09f-a614-4807-903d-b965638fa44b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "819ac773-9b3d-4f75-8bf3-edabba67bc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dba768f-d9ac-4057-8c43-b6aa0a815333",
        "cursor": {
          "ref": "cbe246d3-4e0a-4363-afad-fa281fec08c8",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f1bc89e2-667e-42a3-9616-c34a0c27fff1"
        },
        "item": {
          "id": "1dba768f-d9ac-4057-8c43-b6aa0a815333",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "36d53030-264d-4ed5-859b-bb7afa59ed3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6910e667-c10e-45ae-aa89-3f38d3ce4c3b",
        "cursor": {
          "ref": "a0628e56-1c73-4803-baac-4e9d2876b97e",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d6ab6d30-d987-4151-942e-48883d1779b3"
        },
        "item": {
          "id": "6910e667-c10e-45ae-aa89-3f38d3ce4c3b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "01c62891-f6e0-461b-aaae-5983e9bdb429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6754b2c3-9ca6-4a43-9063-078fc7d2bbca",
        "cursor": {
          "ref": "72ea3e70-0670-42bc-9bea-228bdc38dbb4",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2ea289ac-cb96-4150-a5eb-5e7ed1325dd9"
        },
        "item": {
          "id": "6754b2c3-9ca6-4a43-9063-078fc7d2bbca",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3ac959b0-95b7-44f5-b820-20ece60789fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec821fd-372c-4f0d-9e93-2856526f31dc",
        "cursor": {
          "ref": "8d4f0dcb-df4c-4e82-8a18-fe7bbf3adef5",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6ac08b21-20d2-4fba-a1c0-588e5e9fd73f"
        },
        "item": {
          "id": "2ec821fd-372c-4f0d-9e93-2856526f31dc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4391db29-3784-4af2-937d-20dac62290ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075f9b7f-55c3-4351-b05a-f4b22432bf24",
        "cursor": {
          "ref": "1a2a63b8-cea8-4fb4-b105-8524369a987d",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4a898b74-8d80-4095-9ca9-a26a5582e056"
        },
        "item": {
          "id": "075f9b7f-55c3-4351-b05a-f4b22432bf24",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "55708b9a-9847-4b82-abe1-d8f8b6b525fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a531ce-8c1f-47c2-a848-7ad604a296b2",
        "cursor": {
          "ref": "d3d60613-44c5-4ad4-801b-4264daa339a3",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7c26cea4-ff8d-4186-97c5-18c4aa2d5d8e"
        },
        "item": {
          "id": "91a531ce-8c1f-47c2-a848-7ad604a296b2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "63df27f5-168d-4bdf-9787-e84cc5c387bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a605b8bf-52fa-4786-bbe5-7aaf407c1b19",
        "cursor": {
          "ref": "39feaf15-9ed2-4254-94d3-81aca32593b4",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5b56cb7c-bac8-425f-9a1d-e229dd4894ad"
        },
        "item": {
          "id": "a605b8bf-52fa-4786-bbe5-7aaf407c1b19",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b293391c-4260-4e9d-9cd5-9fccc5feb0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7ba2ea-5869-423e-b1ff-8f3139e50952",
        "cursor": {
          "ref": "5ce08f4e-5a94-40e7-b0c2-d7363461913e",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "437bb18a-6ea0-491d-8e94-292cbfc08e65"
        },
        "item": {
          "id": "df7ba2ea-5869-423e-b1ff-8f3139e50952",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cc6265b8-112a-41c4-8184-e31fa02df53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8028981d-a24a-40a5-ae77-9d508560b3f3",
        "cursor": {
          "ref": "df562222-6035-4119-b6df-4ab3f1e2ef6f",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "932891e1-bf1e-41b3-9388-604390d5f463"
        },
        "item": {
          "id": "8028981d-a24a-40a5-ae77-9d508560b3f3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "37f910f7-dd51-4693-893d-dd858357ebd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00afd89-d4f5-499f-85ea-923d2807b890",
        "cursor": {
          "ref": "7349dfdc-cb40-4fca-8bee-65b1c3396937",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "08228adc-3bbd-461e-8ea6-340c6c10e7d0"
        },
        "item": {
          "id": "d00afd89-d4f5-499f-85ea-923d2807b890",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "48c1e706-7ff3-46d9-a6aa-6a30931ef1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6054b2d2-6d74-45e1-9301-e5077a438525",
        "cursor": {
          "ref": "f33d3a9b-11e1-4230-9f95-d34ebec163fb",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "337651f4-df50-4a12-bc67-c174f5466d46"
        },
        "item": {
          "id": "6054b2d2-6d74-45e1-9301-e5077a438525",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7abde1a0-7fe5-4f1d-83bb-37f252e63f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955535f2-50fc-4a51-b2f7-9cf092fbf28f",
        "cursor": {
          "ref": "12aa09f7-a47a-49b9-ac78-c2dfe3bb7b82",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fc3afdb6-c947-40d2-b34b-94c9a3d6243a"
        },
        "item": {
          "id": "955535f2-50fc-4a51-b2f7-9cf092fbf28f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "31cb1629-5b25-4289-847f-c44dc88b30c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f62de16-68fe-4ecb-b90d-63414669269f",
        "cursor": {
          "ref": "b3fd12c9-4ec2-44bf-9a47-49e798929d1d",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "25518738-58ca-4b4f-815a-475dbcda0c7a"
        },
        "item": {
          "id": "4f62de16-68fe-4ecb-b90d-63414669269f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fa868a75-1aa3-474d-b82c-cdf7a2ebf7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a98bc8-e73f-489c-9538-4d93ecfe2734",
        "cursor": {
          "ref": "6d2c451a-e626-46e1-aad3-5eac1661a1de",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7b86170d-3599-4943-b636-abbaead374cd"
        },
        "item": {
          "id": "75a98bc8-e73f-489c-9538-4d93ecfe2734",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9fe140ea-a3d9-429f-86c4-4e9ed8ce7172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02bafb5-ac14-4bfc-b08f-30719eb1f2a3",
        "cursor": {
          "ref": "22611091-f655-4736-b9d2-35cb2a60bbee",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b862f00b-c725-4f14-a855-cf4275778890"
        },
        "item": {
          "id": "e02bafb5-ac14-4bfc-b08f-30719eb1f2a3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "02efa6cd-e32f-4875-b108-e97d091d14f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5584ad91-d95a-4244-afe9-f4507bc3928a",
        "cursor": {
          "ref": "4871d0a2-3849-45dd-879b-173ee88d0b7e",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c087aab5-ec9c-4363-aa05-3ebec3bfcf6f"
        },
        "item": {
          "id": "5584ad91-d95a-4244-afe9-f4507bc3928a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f166972b-e45e-47bd-a961-4ebabc9c2a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5e54bb-f4b6-44b4-824f-903b707da4c7",
        "cursor": {
          "ref": "09da73aa-d2f2-46c7-b7e5-d23a7896f3b6",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dccde370-1d67-40c3-b6dc-852e10a13feb"
        },
        "item": {
          "id": "ea5e54bb-f4b6-44b4-824f-903b707da4c7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "de6c24d2-1f6f-45a2-9ce5-ceeb1fc2baea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d8ae8f-2870-44d3-b934-97cc707754a4",
        "cursor": {
          "ref": "771f0cf8-699e-4db3-81f8-968844bf9100",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5b3e6dbf-288c-4e75-a2a9-705b44c6bc48"
        },
        "item": {
          "id": "43d8ae8f-2870-44d3-b934-97cc707754a4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "996a484f-5e43-4ce1-855d-5e41e38bde98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4009643c-b1a2-45ab-812c-6e4b110bbcdd",
        "cursor": {
          "ref": "e7db49c8-b34a-4ef4-bda8-53d1bb296cd8",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f59a5f57-3df1-426b-9abc-bfc4de4efe96"
        },
        "item": {
          "id": "4009643c-b1a2-45ab-812c-6e4b110bbcdd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0389cbcc-c0a0-4dab-86a4-657f2bc13a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdb9734-f783-45a6-a007-5cc97c2d2f33",
        "cursor": {
          "ref": "3a0e7135-57f0-42bf-a023-dfe2a05e10f0",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d8517019-c417-43d7-9dca-6ba45f1a092e"
        },
        "item": {
          "id": "2bdb9734-f783-45a6-a007-5cc97c2d2f33",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f95918d7-583a-4699-95d7-ec2ee02fe67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aad9f00-f16b-4486-a1c5-153b3aa002fe",
        "cursor": {
          "ref": "0c60877f-19c4-4191-a472-7d9aa4e99fbb",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "10a0c237-2913-4bfd-85f0-779acf5a4983"
        },
        "item": {
          "id": "7aad9f00-f16b-4486-a1c5-153b3aa002fe",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4472955b-f93a-4a92-b3e3-03ddc768c316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbb33d9-e741-4daa-aefd-294cfae9e68a",
        "cursor": {
          "ref": "36c06d75-7449-4050-8165-ba4d5c29a864",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c67f740d-1080-4b36-97a9-a12aa5cd727f"
        },
        "item": {
          "id": "edbb33d9-e741-4daa-aefd-294cfae9e68a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fcf842f4-84e9-4b93-ba11-25fc8c8fb8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6203554-144c-4339-b0af-afbdaec0cfac",
        "cursor": {
          "ref": "8e6ded79-ff60-457d-98f0-c5d823295421",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5866ecdb-4300-4083-948c-2db075ced566"
        },
        "item": {
          "id": "e6203554-144c-4339-b0af-afbdaec0cfac",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "96e0c909-8d89-4473-b6cf-55cec6ff8b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30415220-c0d1-4a40-8e72-4af393dd09f1",
        "cursor": {
          "ref": "9f4e2473-7e62-4055-8f94-67900fefc792",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4c7ed355-2fea-48f4-8064-23b952af2191"
        },
        "item": {
          "id": "30415220-c0d1-4a40-8e72-4af393dd09f1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "45ca8d17-02f5-4fbe-bd1a-00cc7579e4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dca5296-43d6-4196-9711-03da9a4d4015",
        "cursor": {
          "ref": "61775985-eb30-4a01-a5d0-25a32d8d3f40",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5aeee229-c6bb-4ecc-87c1-faea545b9360"
        },
        "item": {
          "id": "3dca5296-43d6-4196-9711-03da9a4d4015",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8171a999-320a-4abb-936d-355ccf3a33ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94389b3f-06e5-4de4-806b-bf2f458b50b8",
        "cursor": {
          "ref": "3a0003f3-7500-418c-b94b-32afa056e7fa",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a81287c3-9f1e-4a58-9e1a-bdc21077913b"
        },
        "item": {
          "id": "94389b3f-06e5-4de4-806b-bf2f458b50b8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6cc02378-b22b-426e-80c0-085b5508a476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff9b7cf-3c36-4a2b-979e-8dbd3d24194f",
        "cursor": {
          "ref": "9f1a8f86-c6fb-4225-90e7-50b6757bb2b0",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "17c1387a-805a-4178-90a1-f76f06f9496b"
        },
        "item": {
          "id": "dff9b7cf-3c36-4a2b-979e-8dbd3d24194f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "51db6e53-4f6f-4c21-8699-75e2cd969223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba919067-c957-470d-b411-c7f4bc93d592",
        "cursor": {
          "ref": "20ebeb04-0fba-40b8-903c-4a39ee4b12c0",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4d454f6e-9e16-469b-be47-b2c6db2c4266"
        },
        "item": {
          "id": "ba919067-c957-470d-b411-c7f4bc93d592",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ae3cc556-4c68-4b6f-833c-1f1b043abdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f46dc71-b9cc-498a-b92a-4a5e3b2b7850",
        "cursor": {
          "ref": "e428ab4e-bd8f-4dab-a84f-efacd5bf7f98",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "693c3253-c6a0-4e9c-9310-35ae95db83f3"
        },
        "item": {
          "id": "3f46dc71-b9cc-498a-b92a-4a5e3b2b7850",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "965ea50a-d1be-477b-b746-2fae056970f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a2372a-4e8a-4904-bdb6-454a257f570f",
        "cursor": {
          "ref": "3535111a-497e-48f3-af07-b7f5b5ecd1d0",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "83be0243-ca6c-4d5b-9d09-8f22442d17a8"
        },
        "item": {
          "id": "68a2372a-4e8a-4904-bdb6-454a257f570f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b2f6d7ff-74e2-4ccf-b577-323971b5a2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b033daff-8843-4728-b81d-cb89d8eb187c",
        "cursor": {
          "ref": "09082160-2232-4110-ba95-e47c3572eebf",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "996e91c8-9009-437a-8fa2-eb789bb2360a"
        },
        "item": {
          "id": "b033daff-8843-4728-b81d-cb89d8eb187c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8103666f-ea9c-4024-8fb8-c1970b46c5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5fd7b2-e04b-4fa8-a50e-e5c48a7feaa3",
        "cursor": {
          "ref": "cb686c0d-e20b-47fb-99da-96a85d1f5c69",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3fe3db35-d91c-4578-ae2a-f2e0280f6145"
        },
        "item": {
          "id": "be5fd7b2-e04b-4fa8-a50e-e5c48a7feaa3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "16b61368-434e-4ce9-91e4-31717b6c9ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11069ba0-4de0-42cd-9ebe-1744e28cf514",
        "cursor": {
          "ref": "a6116a97-a3d0-4263-8051-bacc810e057c",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8ce8a95d-eb48-41b9-bd81-89e476310fbc"
        },
        "item": {
          "id": "11069ba0-4de0-42cd-9ebe-1744e28cf514",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "128f486b-0a7c-4eef-858b-a7a67a405264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33da99f4-0102-4fc0-b89c-6722ce817b23",
        "cursor": {
          "ref": "32cd1db7-41eb-4ea7-8b7b-4baff5869c41",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6f38cb8d-733f-415b-adf7-9845bb153678"
        },
        "item": {
          "id": "33da99f4-0102-4fc0-b89c-6722ce817b23",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4d8da8e3-4a9a-4dab-8a61-49bc4527d4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50201af-6b19-48b6-929d-5308953f33fe",
        "cursor": {
          "ref": "2286f927-9856-41e6-9205-55e440489d08",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "969a3eed-dfd9-44bc-a861-00a2fb8bbe18"
        },
        "item": {
          "id": "f50201af-6b19-48b6-929d-5308953f33fe",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8f1d2d36-08aa-4647-94d9-c4d8210d9057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238a7348-e275-45bf-ad77-756769151226",
        "cursor": {
          "ref": "73ddab26-a250-46fe-b744-36bf1f317af8",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4712a8a9-f1ad-461c-8792-dba8035ab532"
        },
        "item": {
          "id": "238a7348-e275-45bf-ad77-756769151226",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c95b5caa-d3c9-4d06-acc9-0163c824c496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fa6c5f-9484-4b26-acee-362a3bb62569",
        "cursor": {
          "ref": "98577e55-0847-4dca-af71-644d30855ebe",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "046a7212-474d-47ac-97e4-8472a109a272"
        },
        "item": {
          "id": "14fa6c5f-9484-4b26-acee-362a3bb62569",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7b0933e0-d616-4bad-8c6d-30a2e398d22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a74a0fb-e583-4c91-a7c4-32681765725a",
        "cursor": {
          "ref": "3cdce593-a4bb-4b69-83dc-d330747ce2b3",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bc13921e-98b5-44c7-8e5a-e99232ca594a"
        },
        "item": {
          "id": "0a74a0fb-e583-4c91-a7c4-32681765725a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d833282a-34a2-4d95-b158-5bb29c1d893b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63c8e20-5fbd-4a21-a9f0-0a09cb906eae",
        "cursor": {
          "ref": "b5e95d16-ed72-4324-8a0a-8a19e7e38594",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "db4bd789-b03b-4011-a3f0-54e7311a9d6c"
        },
        "item": {
          "id": "f63c8e20-5fbd-4a21-a9f0-0a09cb906eae",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "342cf166-7437-4745-ad10-14b4c4fc798a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a9ec63-c925-498b-a934-a97c6954a729",
        "cursor": {
          "ref": "27c922a2-c150-4130-80aa-7bd54263a7f9",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c49a72ff-27ab-4e54-98d4-ac3efae7c03f"
        },
        "item": {
          "id": "03a9ec63-c925-498b-a934-a97c6954a729",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "82e4bb02-58a6-4f5a-997f-1ffc1e51a95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65701345-070f-4f24-a4d0-448610251ea9",
        "cursor": {
          "ref": "8cfebfc6-1c59-45ed-8aaa-f15e2ecd6672",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6c31a43c-00d5-4587-9064-64992cfcfc2b"
        },
        "item": {
          "id": "65701345-070f-4f24-a4d0-448610251ea9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "715adb1c-32c4-4a1c-a67f-e2ac6392e1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd39ccfe-2f2d-40cd-a7e2-d306430c50e3",
        "cursor": {
          "ref": "b8266c13-7a33-4338-a4d5-4f4e39ed9616",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b1d73f51-4d43-453c-b61b-192d8c94a8ee"
        },
        "item": {
          "id": "cd39ccfe-2f2d-40cd-a7e2-d306430c50e3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "76ffa944-400a-4b1f-9be1-65c4f1570e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c5907f-33c5-4b21-9af1-84da64ed9437",
        "cursor": {
          "ref": "70c84e6d-1ee1-45fe-9746-51db3eda4b33",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "848081e9-05d3-41f2-9e60-4d680e1d61f6"
        },
        "item": {
          "id": "13c5907f-33c5-4b21-9af1-84da64ed9437",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5becf4da-13db-4500-89e3-1fe07cc859f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266fb55f-a9cf-4f38-9de8-54d72f2a5a4e",
        "cursor": {
          "ref": "e067294a-ef7b-4abe-b29e-0809d044f045",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0be47625-fb85-496a-a366-0c0747a8c30b"
        },
        "item": {
          "id": "266fb55f-a9cf-4f38-9de8-54d72f2a5a4e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "36178179-3078-40f4-9112-723d0dcdad27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c023d828-466f-49fa-be1c-2e05d680b9ba",
        "cursor": {
          "ref": "bb5dc8e1-a78d-4d27-b0a1-7d555bb531b7",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1cac7f7c-df21-4983-9108-5bd9acf02ca1"
        },
        "item": {
          "id": "c023d828-466f-49fa-be1c-2e05d680b9ba",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6cf6f925-9a17-4ebc-aa1f-9565c297ed55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd550b9c-d452-4dda-9366-350059bb631f",
        "cursor": {
          "ref": "877ff6b5-6ff2-4264-b4b3-588f0355c4f4",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "64079f36-6d20-4d06-a827-ff4a26ef601d"
        },
        "item": {
          "id": "dd550b9c-d452-4dda-9366-350059bb631f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c90c3858-a960-4b25-bfe4-95c3a4de04bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7de4327-6ee8-4ea2-bbdb-47df46ef71cb",
        "cursor": {
          "ref": "e4d054ce-df5e-421f-a75e-3895c21214d6",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "aca5ad17-26c3-4c63-9ba7-d874e4363733"
        },
        "item": {
          "id": "c7de4327-6ee8-4ea2-bbdb-47df46ef71cb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9640cd7e-099f-4ebf-89bd-fd7f9aa3294c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cefee35-0f0c-49d9-a26d-a18e895ad8f4",
        "cursor": {
          "ref": "6e367401-19fb-4264-9381-964fe890b35e",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2000fe60-1e29-4f47-a0c9-d63a620f988e"
        },
        "item": {
          "id": "8cefee35-0f0c-49d9-a26d-a18e895ad8f4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a0a10212-dc53-41bc-947c-b808235e7040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67d3a58-b84f-475a-b66a-f716efcd300f",
        "cursor": {
          "ref": "c9a87a2b-4349-402c-97a3-3cc989fa4e2d",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3f5a458f-8e7b-4023-820e-a69c90185577"
        },
        "item": {
          "id": "a67d3a58-b84f-475a-b66a-f716efcd300f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "df263e53-20ae-4bf1-9d82-3c3a827df9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206a7549-693a-48e7-83ff-798215cc1cf8",
        "cursor": {
          "ref": "ca3f9503-f5c7-428f-8ae2-653ce30e7f06",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "74f9e581-492c-4f35-b90a-6ce8aa9e1141"
        },
        "item": {
          "id": "206a7549-693a-48e7-83ff-798215cc1cf8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f8241591-fcbf-4e92-9210-292b988aea97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b77266d-8b2f-4c46-a36a-64abcd6d2301",
        "cursor": {
          "ref": "6b3f7af6-53cb-4091-a17a-3685255d7bf1",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d0fed483-ac1a-4fd0-8d5a-99bbaac1e500"
        },
        "item": {
          "id": "3b77266d-8b2f-4c46-a36a-64abcd6d2301",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ca54212b-741a-4d7e-90d7-92463f2a86e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e5ea6d-3441-453c-9da9-451610c36bfe",
        "cursor": {
          "ref": "fa774338-cb8c-4e90-b176-f94b076cc1cd",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "620a367e-c448-4020-a92b-3258a9bb100f"
        },
        "item": {
          "id": "c6e5ea6d-3441-453c-9da9-451610c36bfe",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8c2d7092-7add-4566-be24-51050bf7d312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99043ac0-e8ed-4ba6-83cc-f9b968c9b277",
        "cursor": {
          "ref": "d32e4378-983c-4ad9-830b-0b9049565bcc",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "57ba712e-4410-4678-ac93-80eee5659e8d"
        },
        "item": {
          "id": "99043ac0-e8ed-4ba6-83cc-f9b968c9b277",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ed505b09-2def-4f01-b94f-54a26472e3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbe7caf-c541-4e51-b26a-a9da68ba8067",
        "cursor": {
          "ref": "4b08475e-ff23-4841-a815-78974d89016c",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "43b54ea6-9459-440d-b011-891f723d15da"
        },
        "item": {
          "id": "cfbe7caf-c541-4e51-b26a-a9da68ba8067",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cc46de86-a6b0-4132-92bf-18b3c9de5346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ea60a9-191d-4020-a44a-7857f5c7a4c5",
        "cursor": {
          "ref": "d47fabe6-26f5-49e7-b784-15a148a54523",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2028392d-99cb-4c2a-aae8-3124e4b5f8e5"
        },
        "item": {
          "id": "a6ea60a9-191d-4020-a44a-7857f5c7a4c5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5d2cc030-bdab-4012-a319-411ce1074892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ba29eb-97aa-4d24-8014-b47273bfdf3c",
        "cursor": {
          "ref": "16e401fe-8684-464d-adc0-bc7940d10fee",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "08c5c40d-7520-4bdc-9cd6-921176ee71e0"
        },
        "item": {
          "id": "07ba29eb-97aa-4d24-8014-b47273bfdf3c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7eb1f6d9-a247-4918-b5cc-64c541e46a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c276d7-9505-41f3-9113-1c0cfb03fa60",
        "cursor": {
          "ref": "e92286c9-dd74-49d0-aab8-69f324c60bf4",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "60ea5207-ea54-4093-934c-fc5526035695"
        },
        "item": {
          "id": "10c276d7-9505-41f3-9113-1c0cfb03fa60",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7b4249a9-5a34-4770-9c87-e438282d2f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc05505c-0be5-4641-8e77-05b4a6b3f3a6",
        "cursor": {
          "ref": "6b7234dc-c5ba-481f-a187-bb72995095b3",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "47eced57-b764-4b9b-99e8-6a3de00c6a12"
        },
        "item": {
          "id": "fc05505c-0be5-4641-8e77-05b4a6b3f3a6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6c3ee7ab-58ad-40ac-8d9a-43ccc2401765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b97eb4-ff8c-40ae-a3f2-0df1df441958",
        "cursor": {
          "ref": "17ac5440-985d-4a94-abb3-2993707e94f7",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "bfc733c1-309c-4ed0-92ec-2306ede04b0e"
        },
        "item": {
          "id": "f9b97eb4-ff8c-40ae-a3f2-0df1df441958",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "84b21db0-3e63-426f-b9ef-ec2ce2e3a751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b862e2e-a46b-425f-a050-b67216f52aa8",
        "cursor": {
          "ref": "1dc30e60-37eb-4f53-8e6a-1f5b2b73c80a",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f9e28744-d3b1-48d2-af29-028a83345eb9"
        },
        "item": {
          "id": "1b862e2e-a46b-425f-a050-b67216f52aa8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a1bc8301-9749-47cc-bce5-87b32e310287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49813b67-622f-4186-b2fe-fbed4f4659e6",
        "cursor": {
          "ref": "e3078370-f4e8-4abc-b136-3d9ce270112a",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "33dd9702-4239-4a30-89e2-edb2c73e95ab"
        },
        "item": {
          "id": "49813b67-622f-4186-b2fe-fbed4f4659e6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b076625d-ed3e-4483-8f9c-13bd9e014f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0c0ec6-2953-4bfc-8cf5-beef63b62c99",
        "cursor": {
          "ref": "94a94489-bd3e-4ed9-acc7-e6b524d38c7b",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "df05dfd5-ae7b-448f-a6ed-30e521099b78"
        },
        "item": {
          "id": "df0c0ec6-2953-4bfc-8cf5-beef63b62c99",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1ee52416-6394-43ce-8360-6418b734c678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793b0109-5af7-40ff-8587-081c89ba5626",
        "cursor": {
          "ref": "8f2d5c56-6db2-4cd2-b72f-718450a19b22",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d550b51f-0dfa-444f-8d00-2cc5117da570"
        },
        "item": {
          "id": "793b0109-5af7-40ff-8587-081c89ba5626",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e147ee5d-bcc3-4d8e-bd96-0eed5287cd14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0faa72-c847-4640-be52-080e2464a9d1",
        "cursor": {
          "ref": "df2afc65-21fe-48f4-9e24-6a2f66ac4edd",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "941cf78d-34cd-4a42-9285-cec7fc52fe4b"
        },
        "item": {
          "id": "bf0faa72-c847-4640-be52-080e2464a9d1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c71cd159-6279-49b2-9670-a1fa7351c2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7840ef-c44b-40c9-8464-77068294241a",
        "cursor": {
          "ref": "33fb611f-ce3a-41be-94ac-e394c7a2f928",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9be6991a-4ba2-4087-995d-95a0456b13f0"
        },
        "item": {
          "id": "9c7840ef-c44b-40c9-8464-77068294241a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5d39d369-c0f5-47f1-986f-550bedc67d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af259407-6053-4f83-9c38-21277e89fbfd",
        "cursor": {
          "ref": "973eefb3-6d52-4ae0-888b-24327f81c1f4",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "7978d94f-f41f-4716-b372-a971e680ca49"
        },
        "item": {
          "id": "af259407-6053-4f83-9c38-21277e89fbfd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1e567144-2b90-4495-9d80-16e41ce83536",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5fd6fe-a39b-4d58-861c-b178f47c3fa1",
        "cursor": {
          "ref": "c631c00e-a655-4cc8-83cb-c9d49d55771e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "37d1f75e-bdf4-4693-a1f5-8f13351327f8"
        },
        "item": {
          "id": "fd5fd6fe-a39b-4d58-861c-b178f47c3fa1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7fdc9245-1ac1-40ba-87a9-7b9cee848477",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f568d41c-37ec-4dff-bd67-fcfb53780431",
        "cursor": {
          "ref": "0a61823c-19a6-45d0-b61c-82d7c2134ed5",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "899c81f1-d4a0-4840-99be-1fd17f56a628"
        },
        "item": {
          "id": "f568d41c-37ec-4dff-bd67-fcfb53780431",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1ceffd6c-41a1-437a-b0e7-0ec8a33df9fd",
          "status": "OK",
          "code": 200,
          "responseTime": 1738,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd2ad08-fb41-4560-b63e-2d9cf1b52809",
        "cursor": {
          "ref": "62b55e79-7555-439b-b345-dc13c3958f05",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f6171573-09d9-46d3-8704-f7aeeceb77f5"
        },
        "item": {
          "id": "3fd2ad08-fb41-4560-b63e-2d9cf1b52809",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "89775fc1-6186-4ae9-942b-b32785339777",
          "status": "OK",
          "code": 200,
          "responseTime": 2422,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeaa0361-c564-4a28-8ac9-1730448923aa",
        "cursor": {
          "ref": "9f14da87-cb6e-45b3-8b8e-a7836d7bc193",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "fcd84a51-b8d3-4bee-8abf-99b00a98fbf8"
        },
        "item": {
          "id": "eeaa0361-c564-4a28-8ac9-1730448923aa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e3e7eb79-7c1b-43a8-868b-5e06e94e55d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeaa0361-c564-4a28-8ac9-1730448923aa",
        "cursor": {
          "ref": "9f14da87-cb6e-45b3-8b8e-a7836d7bc193",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "fcd84a51-b8d3-4bee-8abf-99b00a98fbf8"
        },
        "item": {
          "id": "eeaa0361-c564-4a28-8ac9-1730448923aa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e3e7eb79-7c1b-43a8-868b-5e06e94e55d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fffdfe-2d48-4dc4-87fd-377304b70e2b",
        "cursor": {
          "ref": "7a8130e7-01cf-4483-a42d-d38a54455fbb",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c347dfbb-903e-4855-891d-f88815d09336"
        },
        "item": {
          "id": "c6fffdfe-2d48-4dc4-87fd-377304b70e2b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ef64282f-f3ac-49c4-88d2-caffe4187a84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9578e438-6546-43b0-a766-b96fe715db7f",
        "cursor": {
          "ref": "b0fa0d47-11c7-430b-a768-3e01217d5a9e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "07dcdbc4-2694-4b34-a0c6-c1dafdd77268"
        },
        "item": {
          "id": "9578e438-6546-43b0-a766-b96fe715db7f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2d70c0a4-8339-4cdd-ab55-6d44950d4e40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}