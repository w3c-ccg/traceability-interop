{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4187bc7a-18ab-4f25-8f5c-b09a173d0f01",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2068f708-a535-4f1e-98b4-1a249c30c398",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a5396cfd-b0af-4292-b7f1-58a0207342e9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d7c9a618-d654-405e-a9e8-965762611d0e"
                }
              }
            ]
          },
          {
            "id": "7aaa0cfc-33c5-46e9-bda3-b999f7431dce",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "44d27d30-56e1-4009-928d-c4bfb33b7f99",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "03a46b4e-6c60-4f1f-9082-bd16f1811ba6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9df3b0e5-6527-4408-9c43-13b4449b2d41",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6453d2ab-f918-40c4-ad17-f4387edab715",
            "name": "Positive Testing",
            "item": [
              {
                "id": "87a78fdc-aef1-4011-b294-2c609ccf2a8b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18efe38d-1c95-4336-8096-982d05380270",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81621ecd-42f9-4750-8a1b-a2a63679361c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f0b837a5-9d63-42d5-9bc5-842cd13b6e82",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d0987c9-15f9-4f09-ab5c-e46c9fd066c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ac32fe6e-6b78-4865-bc8b-4c0d627f976d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa0a9cfd-a8c9-470f-b4d4-c9c262f6dae7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc1b5958-08c5-4e1d-882d-0b7ff7f3bd03",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "eac91e70-5495-4790-9b11-4359574eefee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3dd38d19-ba18-48fc-95ff-b2a8d1d854e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "915f0ac7-1c6b-452a-ba53-21867c668b2a"
            }
          }
        ]
      },
      {
        "id": "ee570827-5625-4a0e-9c42-699c1808d165",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7eb083e3-5155-48eb-8bc7-f371d136070e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee8b698b-bcbc-4106-806d-dbcbabba1ced",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "03ab5f28-361e-4329-a03d-4b373e68d2b3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e3cb8d-7549-42fc-8b78-0a12e482bcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0de5ed0-ff70-4cb3-a925-bbc042a5481a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383ae7e1-b211-41cf-bc42-19385516a425",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e60cdea-c80d-4b76-b8b5-609a3080f9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33f2f419-0272-40a2-a1f2-d649119c606e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c9ec0f-7678-4d16-b800-4e32fddb00e0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3076e9-a723-421f-bac3-7a36f8da0dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a65263d3-e85c-4c20-82c8-d4881d319238"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af13767d-b536-47b7-a141-20a82f5a0600",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30fad312-f6e1-4061-84e5-6d863254ec06",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e35226b-c3af-440a-ac1f-e9d0f996bac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "444f67f1-1941-4e97-b4b4-8b64989d2f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1396e68-8a99-4512-8014-a7e3af411d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3799e4d8-d809-425f-9cba-3b2c19412b8f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "554dfd66-828d-45d3-9a8a-b78c594c81a7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7c1ceb29-dae2-4e31-b952-6f6929539276",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b3651fb-2e06-4d84-949f-150aad079724",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a1048eee-9441-4115-afd3-3d0f90a11c08"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27cfa3f4-f4cd-410b-a66b-7daee8da40cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "47886fe3-ee08-43a0-873d-237265fed45c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6508493-f003-4d86-8e58-69de835bd950",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a860fbc-3a86-4316-8dde-9b4359347275"
            }
          }
        ]
      },
      {
        "id": "af1a45a0-1e61-40e8-ae7f-c6278ded66b7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a1e458c8-1bf4-435b-86ce-a607655a6040",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6c0169e-6224-4bb6-843e-4a9469e58b36",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ef77838f-87af-4c84-9a7a-7a0c4107ccfc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3918952-7f24-49f8-b244-ccfa8822c49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc746e6-5ac9-4445-87e5-ce10b242ee77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6ce59f-19d2-4061-984d-8e9fd678f8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3b050c8-e3ec-413c-8f01-bea857af6f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117cd70a-9e01-40b2-8d9e-6fdbe8c7c4d2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7080cd52-9f79-4164-a35e-9a5b6777345f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b253f1-c771-439d-95e5-821e7d8965bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446fb5a1-2d74-4eb0-8bfb-4882ec95f1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b9c276c-dd51-4f70-98c4-3e7bf99f543f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a355d2eb-c34b-4491-8c5b-69e90f02ff0d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f540884c-1bb7-40a8-b830-b90601589b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19717aa6-0ae7-4347-abf8-225c0e401204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef9a3c1-6a48-4b46-838c-8ad5b3db0bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33ffda0a-bc23-45d3-935c-21159dc18086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285551e2-2d34-4513-abc8-30f4cc6a0f0b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ca7242-19ef-40b3-b90d-002cef17ee02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e11d237-778e-4d61-8240-36ae07891942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9631f03a-bf93-4be5-b78e-fb9ad515acd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a484ff5-23e0-48b2-87be-a766309e7064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b8b409-23e3-4c28-88e1-1e665f2a5a81",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c39353-fb16-4e32-8808-93874976b995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3841417-843b-4a11-9a29-ec49391b4200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd26462-5f36-42de-b719-1ec4770625c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f99b27fa-26d1-4880-acd5-fdb3af5aa915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be404ae-b36b-4e1b-9fdb-ebc891c35acb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06888d3a-09ec-42be-abb5-5fc187acbac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60761330-d0ac-4efc-b901-688e28f81a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63efb88-15cc-4227-8260-2c1c561c1b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bdf7188-a79d-4fb0-999e-0f31ec20dbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4789a6-781e-4f15-b20d-cf3b86a9f73d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761a531d-cea9-446c-a73b-549822f308fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afc2934-a34c-4d23-835b-05b6ed78eb84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c563aaad-5f00-431c-b07a-1d1072b909eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccf0f158-3ec7-495f-b805-99174d766a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce16a28a-83f1-45f8-9705-d154c6011beb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1b8a02-5a6f-4214-a4c6-9fb7ce354c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91c65df-736c-4f42-9925-08611fa5407e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697be2ac-f6cc-4ba7-86f6-8e57a85c17a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0eeed43-debb-4816-84ca-366f3b4004a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111aecbc-aa11-45b0-b77f-35e669ef2505",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7512a98-4dcf-4ff5-afdd-cba3f7357de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da04298-f91d-40b5-8b6d-03cf469d6a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e55a363-0345-4fed-9dd5-293afaed9b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e3eddaf-4689-44e9-8f24-dd7b83033d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1ed1ea-4926-4529-9c0d-a99923438d4d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388537e7-47e8-4914-9cbe-e67a3424e1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cacdc380-ed82-4654-a9c7-278ff91c12db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e90dd3d-3b89-4c0f-8fa3-dfd6a68977e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f44a163e-7012-4f83-afef-91ca8cfcf205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5296a3-5894-4f8e-ac8d-78b5d4f70661",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1f9096-17a1-4292-80c4-f1cfb365b301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6be3a2-6a1b-4b4f-8132-8c46d02802bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abb48b6-9e11-47fb-a3b9-52bf30174098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c4cacec-6c8e-4e24-89a9-72a34c467687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98788745-074e-441e-a670-6e6135bfbc4f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c6bcfc-f905-47d0-9f53-5652c96e9863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8843f798-90b1-4241-8908-dfb988a26c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df168ff-0b80-42f9-b8ff-4b83161d29c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f03b454b-4a35-4c59-8182-9f2c78d2eac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291873aa-0306-4016-ab36-01a305dca508",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c477d359-7786-4c84-8d18-89e0b1a7e4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c82ddd-5089-4073-8472-0b06532c8176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc9fa2b-c349-4eb9-bca2-84c8b62198fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9acd47b-34af-4ccd-a222-a3d99b3f2ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00387d9e-86df-4f97-9ce1-a4335a82490e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3bf574-39a2-4670-a15f-639001a31949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eca76ba-e44d-4c3a-a124-bc53db3b80ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085db6f9-8c64-4cf3-a3eb-16786f7c935e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33c51716-6ad9-4117-9471-840bd521c725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959011a7-beb1-4ecb-be50-050634ef3289",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c320d1b-0086-4354-be51-aedc262791fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bf8789-c6b2-451a-a673-040c8899bc8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6b4c24-ba27-4edc-b844-364b86a1ecb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "681258f8-d8a9-4d06-b5ba-d85cbadea4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedd68d8-7d7d-451b-a99b-26f87d67b303",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34575ca-a977-46d4-ad65-0f5eb992ae83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d10c5c9-2fe8-48ed-abea-d813969a7e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a46419-eee1-4122-98fc-98a5284b17e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a4da21b-7b03-4bf0-820e-3b58deeb993c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f712e5-c78c-4523-87d5-e8fc8320d1af",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8501459-21ae-4fba-8f02-14f7ecd24d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6699da2-aa72-46af-8aa4-d5f81d9d52f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101a5566-25c9-434a-ad36-f0adde3c1fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e04b42d8-f210-4d6f-8a61-ef47f49543ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62b27f3-adf6-4c7f-90a3-6d99c3ec9f77",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c12f8b-32f8-4a69-8b22-899a32497dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3222c8c7-37dc-4ac3-91a5-1db9bf430f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027e851f-bf1a-4f64-9c1d-4b8aa0acacea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5333e5f-9033-477e-abf6-8a90199fdebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4195244-9094-4cae-9664-a67998f0049b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffd0fbf-231f-4854-a71d-c768484c16c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04859dcf-6749-41b4-849a-fe1d48993ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc840b6f-6f91-4776-8ac0-a4645594cc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3f13f5-d846-4404-a8c8-ae5758048068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fcee7b-5ab0-47c2-a9ef-4bac0c5091f5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4ae728-da05-48bb-9dd6-0cd296c3e5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2281acd-ae78-4381-bce8-8f2ec8c70c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b067032-476a-4da2-bf49-caa0736a8624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe6b52a-b2d8-45d5-bb6f-bab39b27999c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c338b8-8bbc-43ba-8068-eae4a2d199a7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4bcdd2-6d5f-4277-ba9b-361141a7c859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70733695-dc30-4706-8fc6-22fd8cba91cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b10fca0-b803-4b45-8ff2-3c7bb7e0f72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2766c43-ae19-4a67-b557-339339cb7cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff155801-6f93-48ef-a7ef-cd6747880331",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b83ee73-671e-42e6-b803-fd3cd3b15cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb346f5b-9033-4053-8ab2-262659ba434b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd847ee6-2a39-422f-adb0-26ecebf54670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d05a924-6cbd-4dff-b3c3-067e5829e228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ef3d9b-53b3-4b67-a2cf-445fa5604c03",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c52f7cc-1607-4da7-8175-e18eeaa581ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9110e0f-060b-4479-b498-3db04a891d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf3eea4-e5c1-405b-86a9-3a01f59f6955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15621925-b41c-4975-9233-7c943c43104b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2d96c6-b679-49c0-ad85-37a7824ee6b3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52d4944-46d4-4747-84f1-c8aa75a2627e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21bfa770-0e80-4448-ba33-10ed0d35720d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08dd192d-e518-45d5-9308-c719bb740e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f3c9f0f-741e-41f3-b162-2de378cd5f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25711e4b-b6d8-4662-b1fb-10a74b1c4fd2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2beee64-46ff-4a66-9a72-360d24deda85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b11a5a-7e65-4131-9874-affa4297b3b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab825704-e62d-47fd-8fc6-b1899b03bac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04311c30-2eb2-4dee-bc0c-bfc1c551361c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd0c0af-e58f-4d2d-af2f-bf92389bed27",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a9a40d-7a00-48b3-93ac-dc900999ae1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ee8912-00f2-4ea8-bff6-04708907e85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecef363-c9a5-4003-a722-c198c92bb397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd71346-3988-4f41-9e2f-d381eee3f1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6fc0b6-9756-4d8e-ac85-fc5bc0b2b879",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed3be13-4e97-47f6-8863-ad0984532d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c442f9b-978b-499a-93ed-9c4f37693c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7c8bbf-11a4-49a2-a8b0-3725519ae710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "802aecf1-2481-4979-96bd-72db4d061b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f46596-c27d-4224-85f6-aad197ef46d1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d88dd5-7ed5-47a0-a4ea-956598c895d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cfa8c5f-937f-41a4-aa5d-e1e83a4e933d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89409da9-b674-4f9a-be6d-e149e4f0f97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b39d9881-85b2-4d15-a1a2-a2dfdb5aac89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6631731a-2660-4406-92b0-ba34671348d1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca3a0d5-0af8-4c06-a1bd-a2e6a996ac81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a6a7e9-f2e0-4798-a924-74d234836799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e1b2aa-7b67-435b-818d-ed83747f0a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36be8ff3-8c7f-4d5b-9026-87b155b30bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc5ce95-edc9-41bc-be2f-62508eaa6376",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2bbd38-5afc-4a5f-b1ab-25d96e1fd0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bde4dc0-de3a-420a-ba02-6a45d7b89361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753b4b6b-28e4-4591-bc7e-c822c3541a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "294671b9-8aac-41e3-ad8e-9852a441768f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60e9d5f-d717-4b9a-8275-64a208cda6e1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e6fe1a-a52b-49a2-973e-52977a470a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1322e9c5-9236-4e83-ad95-c4a3114c66b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659f5c12-f84a-4a61-a9c0-260ea881d212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59c03c60-7ee8-42a8-8969-2f47077a9ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f87a253-69ca-4b2b-bca3-c9088a6f35c5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0e93f1-f917-48fe-beef-4bf94ec75a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2bb97a8-f350-4287-9393-31b8bdfb4c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a98061b-12fe-4df2-bee6-b941d0d27542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91e5c851-bc98-450b-b9db-a2ee0e56ebbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b523243c-96a8-4bcd-b4ef-509e9e231478",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fda4e1-77b4-478e-9123-ce61bff6b5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e77d10c-7681-4d91-979a-09575ff6f26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32758bac-06c1-4707-acd8-40bc115b6790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d250401-0259-4118-9c97-74e2edb383fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b39096d-f328-4ea3-a348-995384db9041",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f38c37-f6f7-453a-b754-c9c2a4444223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6244f4-ebe9-4bed-9103-0aed0821a48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299a2fbe-b7cc-403e-a18c-a9dcee18bc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9150b4-fdc1-4787-8895-50679d9799ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17baee19-2fae-4817-9630-9ccbd9bc0b0f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca67683b-924e-4185-b9a2-f688e4d2cc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e63636-59aa-43f2-bb4f-5df5f318989f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa801a8-ff90-4e9c-87a2-d02bddaaaa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6098b2-26ea-4c00-833e-b494fb7effd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747f1968-eef1-45ee-a5b1-f5d335055607",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b909d0-e896-47cd-8472-21816679a759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b01dfcb0-09b1-489f-ade4-05117e190c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ab46bb-11c6-4c8d-963f-e2b8f5735014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8d0391-fe6e-4c4d-b342-b6a09a9121db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b480b8e-09a9-42f3-ba61-d47d86012a4e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa7056c-6373-4b4e-8c0f-0f50f041be0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "322301e3-107a-4623-a0b6-d5d9d90df851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e067bf8-2a68-43f2-a410-43845e8c2cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e27272d5-4390-4ef1-bcb0-fa80377055d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dec21e0-8447-4647-b04c-86a8317613a2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7434d4-6d68-4298-b47a-30c67248221c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c178975b-aa18-4f2b-8780-507674735406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edc981c-62b2-416e-a048-11686479a8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e83df100-87a6-40cc-9bc6-725f8735edc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e3178f-e4e2-46b2-9c98-00b8b22fa521",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bad3c3a-0ee8-497d-abbd-3b74fe932b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334799aa-6b7a-42a7-a771-0f57319c0435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f38008-4d0b-4445-9ca3-4aa17cbf7bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e0eb00-c655-4a95-9347-1634f33c78e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63214769-6854-4f8c-b1c5-0a8388718635",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db2d9c2-fa90-4cce-b539-0fe48be9dcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "511fe03c-b1a0-4c5f-973c-4fe43d20b517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a2ac4f-1f46-4943-adf0-2d193f30e1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5eaf2ab5-b53d-400d-b227-f6640cba4e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4ecc46-27d5-4aa7-bcc3-158ecea69e7e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20af1fe5-6649-4b81-812e-4dffdcb19ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c5afdff-bec3-48fa-9a6e-fb10ef251eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6c6930-4a22-4ec1-ba32-2833704d45a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3795d81-caa9-4932-b111-6fc939e5c8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bc5d4c-e0eb-44eb-baba-3c6fc6a8d697",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5388604-2cab-44be-990f-63dea48f0713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6299af61-b5af-4cf3-bb36-1fdb90da38d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b197ea9-d70b-4f0e-b589-9b4215063e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd719a1-617d-4f8e-a3ae-5f1b26a7029d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee2c1ce-b539-4f8d-808e-7fc79206687e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec6407d-c3a7-4c41-b205-4e748db3a52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d909af-4252-4724-a182-ae3695008e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d70202-1646-40f4-aa6d-6c12992e6689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "41934fa4-6154-498b-ba93-2bb4d2a550e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6905ae42-daaa-489b-b05e-ee4e81cf6b3c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc43ce3-f7ea-429a-b578-fe50f592710c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94184f9c-c205-409d-93f5-1f0b557b194b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816650b2-dbef-44f8-8655-6a9c2bdaa7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "08716db6-2e29-45d3-8edf-ad88a5744e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586d71ce-e595-4bf5-acd8-086f7dba62e3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d88248-ca61-4066-8383-29409c310542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "924a0763-ef32-4685-9626-3295bde4febf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0605e363-65ec-4cce-b230-b216b9135d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "81c0d5f6-2c39-475d-a2e7-60cefa7be7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba16c90-708c-46cf-b682-86f35ba673c1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d1dbdc-6e98-4e0d-8330-b4323bafe382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b7a0fc-d1de-4dfa-8238-032396dfea58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8f9f49-a39b-4416-8a12-17ec0156842e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2bd9210-fade-49a9-a0a6-4f84fbc06cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3641c727-413c-42bd-a9ed-d7365a5fe678",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d465f250-4e82-462c-a3fd-5249e73f373f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb2de01-3a94-4b58-a3d9-5d8d2ff8e939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91cd5b0-e8bc-4007-8edc-ce37d2294c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0706dd8-80ba-4495-8667-7c3dd37e5559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee599d47-9e66-471b-a08c-bd3777ec5991",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ccf2ad-2aa7-4dfc-82d7-391a91696083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa17ff3c-fb0f-47b3-9f81-744d84472847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300b336f-31a8-4ba2-8e2c-7114388fcfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3324e253-8e22-4d82-97ad-2d977241ff9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cb8c65-7eea-4505-9bb2-155219368ca9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61f7389-f958-4f60-8e45-6b0c07be3d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8b7ef6-bc97-4a83-b8dc-06dfdec6e324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81931e10-6ef5-4e38-8c6c-1277ccc5dbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2fd3b1-326a-4c79-bff6-f222a7651afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221e9680-3ad0-401b-9cf4-9fab1295830f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe42c5d-b5c8-4e3d-b138-ff910c79f4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f81570-64ee-4d73-be45-70665d398735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b1e2bf-01c3-41ea-ba13-22c68873b9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a55dfe5c-27a2-48fb-840e-3af99b17f5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63b1bb0-3fd0-4bdd-8bb2-bd2d141665a9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe071057-8875-4e6a-bfc6-af2aa0a9e601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d448aff6-0adc-4ce2-89ab-aa6091c86c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a046b8-2501-4c5f-8c66-35d1d9be8889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "78ef5403-5919-4df9-83f7-ae6e09fca634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a604813-d346-45d9-91cc-dcc4038c7fa4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc4da2c-0435-4d0b-8d79-0c6c3757ca74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c709239c-de4e-48a8-b0ee-f801d9902edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36d451d-57f5-4e45-aec9-76ec62225864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9888bafa-8948-44d8-b326-e44f79d6393b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbcfbce-a72f-4def-a4c3-ecd8f74ec495",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b90cd64-f175-4a45-a0df-2c864539ac6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "117c37f4-2687-41fa-b4ae-9a1d5abe2873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243bb023-3f64-4170-8e91-4d3afe3b6e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8f7377-c89e-4cd0-a626-b286e7380d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981fd723-2bc6-47e0-8aaf-cf9292e33843",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e14085-3290-4211-ac28-44733b0d000d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0047bbf9-dd9d-4420-af61-1942c79aa545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66a2ffa-d1d5-4ca8-a7df-05a97b965e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84f4553d-e690-46f6-87e7-89d85f7beecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728cfe07-3a1c-4f28-88db-9cdd1ec59573",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30e9252-de85-4be2-bd32-2c1386a88e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880317e8-a51d-40e0-8230-a53fbe29edd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de78acb-b58c-43dc-b07c-e6f09d5013ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e398dd-7602-431a-8c7f-9e9a8ccd5083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f0a030-8ab0-4642-a75b-1afa135a51ea",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bc740f-3f5c-4eba-9c67-dad3a8e620ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b7c24b0-3e4f-4c6f-b889-d3c3cc23b9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e71b5c3-13ac-4d09-ae74-b9651b111955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0bba7545-d738-41a1-b627-2cac534f7fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdd9153-4d1a-49a2-a4c7-70d98d6cb60d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b10ed4-0e76-408f-90a4-4d9b05afa87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6c4099-7749-40e9-bb9d-7078b07fe417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222ef7ef-c4cf-402f-bff1-40485c7f9786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebbc6c8e-7dc6-48a7-9fcd-c798b82d967a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d373dc4b-089d-41e1-9286-854786d51119",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d561f59d-d51a-4dc4-8084-902dab4e9884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae000063-1629-48e3-be8a-449cdc7515f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6462a17-b921-46c3-b5f8-07d7ab60f86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2031804b-3b87-4109-8bdd-f5df11d6d3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea05e481-92ac-45da-89db-92af0601cd9a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc8a427-ae2b-4950-8267-5d3cb6ea4820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca17a67-769c-4e2d-96b1-785ec34ac103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07825d4-47b0-4c87-9a82-1b1660baa7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f70a11-dd8a-4c2d-b1a1-770a29d15ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f7ada5-70c6-44fd-8127-dd7072b628f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74ad739-1787-48bb-a25b-effaecd315c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8762b324-a511-4bc2-ba25-52a864c8ecfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd079cc-8b56-43b2-9f7e-66d2e5f894aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "29b1cf65-3820-4ac2-af78-446ffebcc2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd767ae-c479-4e29-bfb8-4f23325e773f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49ce7f3-641b-4e83-ae95-b35e73a5e840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283278d1-26a5-457d-b1b6-fa8431aa1514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b221582-2931-46e6-b1e9-9c4a62c2cbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "27c50745-022c-403b-b249-d51dec3e464f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237321d6-198b-4407-8c88-2ae79b1368fc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cfa9c3-c39a-4cea-8f59-a37179eddbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14113970-45ae-45b4-854f-dc3d77b97793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fec5f8-40de-4477-93d9-e4a5c3f89acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "83cdc09f-f797-47be-a7a7-1a9133379a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2077ff5f-0fa5-4b08-bc61-7202220af45b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ddfd93-8585-4213-8150-3f9f1b87aaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba557cf8-44fd-4123-82d5-3357b49c875c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a3f1ad-fc7a-46af-8b8d-a4903db9f926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "84ee5e16-53ed-4178-9f1f-120a4217d9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037f91c2-ff0a-47dc-bd35-6d06c0fadea2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330949e1-0b82-4531-98c8-85514e10b136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248f028e-e345-49ed-b670-5708633110b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c1bc85-fe3d-4cf6-92af-13a9552aa40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2dc1442-ac4a-4f2a-a3e8-3fa151aa28ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb3da6f-043b-46eb-b387-db566327080b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d562ae73-6492-4044-a550-1eb92d6039e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ce2c41-48fb-4b46-826a-719fb8a42328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6f2de6-01c0-4c3c-8f0a-88e5a65d3bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acf8b976-2ffb-4a37-9981-edd83b6e6852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e63a99b-7a7f-4aaa-a5cb-d8a992260174",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d90395c-3e46-4e97-b9e5-1fbc8eb7255d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21391186-8af9-4124-bd8f-f68da6f975ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b97d73-65ed-41dd-9e21-a049c0a11f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30f51d0c-539b-4ccd-b8bb-8d481a25f07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8ab297-ffcf-4d92-bf8a-94ea82090f5f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e383f885-5479-4bb3-b819-bed1f88e02ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ac537b-4972-4277-81f5-7b39ea336a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b14feb5-2394-4147-9278-726757dd42e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36ea40f0-b41f-4116-b358-4e606a1d0d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6009f152-090a-4ed9-a4c4-c22c3f5b3ba4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0bb034-ea80-451c-ac28-5feb0f5b4438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32187136-35aa-41cd-aa2a-4b49333820ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e46dacc-8645-4455-bc66-7022e3a0fd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "28cbf911-815e-4e25-92e5-0a34ed12a24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46263bab-3ba5-4400-adfb-e1b4da7d2fe6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a987213b-cc25-4ea7-852d-c50667bd8118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b8bd9f-4364-487c-84d2-2fefe77a28b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0968e7d1-8e27-4a99-88ba-e1dc10513123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcecc0a5-bc4b-4d55-96e1-8ab5d49c928e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db42437-2a87-4d57-a600-1c0e849cad33",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3737dd49-0b1b-40e9-84ed-ee28f4172d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa8cb61-ffae-4c3d-958a-ea7e92cd89c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1e9652-f6f6-48a5-a4bf-e79b12cb70a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bbb9294-1c17-4a06-a2fa-ced36a588643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e17c41-d462-4565-8d6a-b252b2190344",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3365f236-5431-4822-89e0-a5249a1c3690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab6a7e2-1ba5-4437-a24f-ffc9b8a602e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582964af-0633-432d-95eb-1f94a28b9f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f74c0c65-c19b-4bf6-9d3d-92a53d5d08e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb17472e-c13f-4b01-8c51-fb351f2b3abb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70dd21b-aac1-4409-a822-b83e30d659b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944b4790-2bb1-4d8d-bd95-38ff0450ea31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09513f9-09b5-421c-964b-ae23f68cedf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc5026e5-0bc2-40c3-a1d5-6cf26fea8448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a26a779-5dc5-4a97-9566-ce81648f08a6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c421bd6d-de03-469b-a43f-58950ba1453f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a06064-8d20-4131-9b1e-bd3c177d7941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b705d519-1435-4e38-a634-e7bf25c5e076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2460526-ed98-42f5-8547-dc3604a06504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bda0d3a-d7eb-46b3-b7f9-1f57d90ce7d8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4173c4a0-ae9c-4edf-8113-5da831238230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7108868-2864-4f8c-a342-20cbfe2523bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a164c50-9fd3-4d0a-8f70-27c873aec944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6326f4a-7d5e-47f0-9653-4a0f1fd9abb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fd8613-0c18-44e1-a3fc-e3938322d65c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8156b2bf-c224-494b-a5c0-77180b43a9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d38ae6-715c-485d-b653-d320c017ac6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164ca649-6c38-41ca-bf7f-fdfc811c5180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f32bc116-28a1-4072-a597-b09db52794ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2976fa2-7f6f-4b5b-b7e2-b82b47d47b09",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b52fc1a-42e6-4827-8e90-8883c6a97799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e0754a-1629-4eb3-bc94-52297360a5ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39640b9-d8f3-4e7d-aaf5-6fab6d460780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2959276f-ed06-46b5-ae9f-312f63b75c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3d9d04-a00c-4b3e-bf68-c66251d7313a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bc0605-0d6b-45d3-9570-5f832690d927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4c908a-c1a0-40b5-afaf-a297d5db3f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83500c41-b0bb-40a4-a201-d197f3d09745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "264da32d-7c08-42a8-a761-c52ab6046dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87316ecd-973b-40e7-a89b-41e47d47dcb4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1303e6c7-5918-4e55-9cc6-0e1fb94b9d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef08c61-182f-4ffb-9062-817919c99073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4235cfcd-a6b9-4622-9593-26852a83e260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "852af892-663e-41cc-90e6-c1e188866327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faad7d74-8733-4076-957e-c524c8360636",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e52a87-aa32-4e8f-8be1-66c10fe46ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba495f8e-075e-4552-921d-59d589b9a7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0783bd44-3937-406f-b2c0-71824db7f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eece3a4c-9b61-49ce-9f82-b1266386187c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c496a08-8d6b-4c3c-8ec2-adbd9e002548",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693db745-34db-4fb6-ad02-4574667d6431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59bc9d6c-9aed-4793-b67a-5f1bfa4f1efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b41b6a4-4aaa-45b4-b847-64867a530373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54ef3b18-c151-412c-a32e-2a7a543d64a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5551e289-da9c-4aa8-8c68-2c74f36c4bdb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9734d10-b993-471c-9824-421b77560b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47769bca-01f3-4780-83bb-829c4691efb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00749865-42ca-41b1-8d1b-bb459998be12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "29abc6b7-32e6-4710-b06d-e60193950d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9bda03-a8a8-4ea8-bf25-a0c26c0f3537",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02a4c34-bc7f-4ee4-af87-36328844cb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa21c43-27e7-430f-a62d-c040b00d7d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d1b117-463d-4022-b9fb-ed6f59b0fc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc3335e-d970-49a3-9bba-33373cc82f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b880fd-d733-4b8f-9d23-7151db82714c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caeb3b62-b991-47b8-bcce-529262619250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655d3368-f9f5-4805-bf7b-56066e9a7765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064eb5b4-0d78-444b-8588-18ee433174b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75c2acdb-c8f3-434f-958d-fc0347e24b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76370f65-1f09-4ac9-bfab-0c2654743a03",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a926f5f-4826-4d6a-9bfe-a3915cd02774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8dc641-757d-431e-8c19-6912089260b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e791838-c4ce-44a8-9081-090bdd157f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a7dda6d-6e42-4bff-a1ef-2a1af19b3eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de585629-a82d-41ca-b02b-cc6bc8aeadef",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb46c65-56cb-4c61-877a-cbbe531b7e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e61d8e-a3ca-40c6-9c98-656d4f893ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506310a1-587a-4610-bd2d-d28d38e9a6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5fcf87f8-117d-487a-8824-a045c2b0ce19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7461419-e9d0-4892-b2d9-b32f795e7211",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13ad57f-9edc-44d2-990a-fc87ee1f4ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692851b5-555c-4ca9-8062-5034b9635517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25443e90-28bb-4873-a99a-a9b64c6df516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c43301-1b13-4996-b800-81a9b70ba8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65df0b7b-0d40-435e-8d20-bd40dee0df9e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66962444-6f06-473f-b8e8-c1cad1673500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d61652-e3bd-406d-b2e5-273bd7902b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789c395e-e5e4-41d6-ba15-1210dcccaa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "55778b6c-823b-414d-b1da-fd9ced90a48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e48db38-9657-4673-88a6-cdcadaad993a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f506c59-d0f1-4151-985d-48727935db74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87a6bcd-2710-4edc-9641-b69f56ec2843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4d9be0-14a6-41c7-8142-0c906fa4eaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "489c91b0-f273-4acd-af8a-ac1279604f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f36d64-9263-4ea1-85d0-8530cbcdf27e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a7ac31-e530-451f-8ae7-65f485b9523c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60552803-ca66-44d9-aff8-68126fd381d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ff14b1-8b48-43a1-93c3-c7d7b16ccd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf3138a-a11a-43ac-bc3a-3aa641f5f52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19844e56-95e1-44c8-b028-deda62ca209e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0888fd0-4157-47b1-8dd0-05a9a49ce4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd41afc-2310-47b6-9a1b-88688d2478ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1baa6f87-6025-4c6b-a26d-1926486f4fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "110bd463-a1f2-4856-98a8-462e6af8aa75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a3af12-555d-48ed-8727-289c3c6f913c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c796fb0-16e8-4808-9164-048a87250b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b56622-5655-4fed-9047-fce3fc7bf8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfb4a58-12b6-4267-a941-300c79fd88af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "892862cc-eef1-4e96-bf14-ce0360bfa156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74937b18-95ea-4ba2-b2cb-7681136ccf69",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d412e4-b263-4831-8ad1-930d95960ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1dcc0809-a8d2-427b-87c8-e4362d2e5f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b82439b-1c83-4465-a548-6fca5d2254d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c720631-ebe1-4831-b2d9-583c232fb451"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e2f0fbef-91fa-4839-b384-aebd1d16d981",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18c9eec3-afe5-43a8-b7fa-9f98d67d6198",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac659b9-aecc-47ad-985b-0c0db4d13d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "348b819e-8de1-481e-ae44-15b87c647334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ce7f10-dd15-4a00-97d8-eaa682c31fdb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fb6574c-cf21-484a-a50c-abe929cdd01f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c096c3ef-5bfb-4f41-a54d-84fd9eb9983a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59e6d2f3-7c83-4d87-82d0-e0a0aa74edd8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "951a05e2-eb43-4f1b-81b8-98fd48d400f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "434b91d8-b823-426e-9be4-ee67beba0d39"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6af8b3b3-99d6-4b31-9234-b4a4f9298098",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "783369cb-5623-4a39-9faa-75b8f9eb6e03"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7261094a-b431-49a1-b9f7-7935cfdaebb1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c318b692-d9f3-4b58-a50f-bf92b7ec3ec7"
                }
              }
            ]
          },
          {
            "id": "52f75693-2286-439f-b729-98c5971c41a5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "60098d6f-6762-46c3-9ab5-79f59680bc7c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "01fecdca-ebd3-4daa-a89c-92ae865135fc",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f841fa-d16f-4147-9ab6-063041df1668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c7e7c7ab-c41c-4419-8ef9-0a734c16d56b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65828893-6e35-4bc6-88bc-9c24270725cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2c7700-aa56-477b-8842-7c7ac27c46b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2e62d7a7-2768-4cdb-bf53-5abc44bd3637",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02c31dbc-2f17-4564-ab51-0eaf293b52ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06cdd01c-5e0f-4b5a-b3ef-1fe29754cb96"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "faf1f4ab-0fdb-46a1-982b-0af7080603aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "608a7425-bfa2-45cf-8fd2-914839029967"
                    }
                  }
                ]
              },
              {
                "id": "1b403c13-95d5-46d1-937a-8a3c38892052",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e35aec27-7d45-460a-a891-6d5b5fa1e33e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be352eb0-5fc6-4a74-a53c-bbd8d30f3436"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fcde81a-0ea9-4c9d-9960-5b98169d0868",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "df66028d-e858-4b0e-bda2-615cbc204c43"
                    }
                  }
                ]
              },
              {
                "id": "66bb675d-367d-4460-994e-a5dccf4d6371",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd7c4199-fb54-40ac-b868-5bd589b58714",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d379f5bd-b3c7-4945-975b-d10ab03f0f47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ea872f5-9adb-4d5b-ab8d-e4dba1efdda5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ff76b3bb-1aef-40eb-83d2-b2c0d995a17f"
                    }
                  }
                ]
              },
              {
                "id": "d0d708c4-e194-4799-91f3-de76b9c2b8a3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca8992f9-f421-452a-9bb3-570f8584a7e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "410f548e-07c3-4324-9fdb-844ad4952c64"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3e237e1-1f57-4c47-8277-eba373ef103f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1b60be69-f080-4cf0-a4ee-59593bedef23"
                    }
                  }
                ]
              },
              {
                "id": "a7cd9a01-9963-4e2e-bcd0-5c7e05375bb3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3219217-1e0e-47b9-a66c-ae2b9f7b4a1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f4c6dc8-2050-4ae4-81e9-a29153d452d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77b33255-888e-4f4c-9657-f5bcc4fa0db6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4bce69ea-b49e-4d52-8034-bbad129ed0e8"
                    }
                  }
                ]
              },
              {
                "id": "e0428c7d-bdc4-496f-bb32-a813ab12def7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfe55220-047f-4e8c-9d2a-26a715da17c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6463f160-94e1-4e13-a60d-96949c7315a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8631976e-0c1e-41a1-8d7a-04d28ecabe59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0f3b69e7-0d10-419d-9c38-e90db05c773d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9e21bb57-27d6-4e5d-ba0e-92dc1d55a0bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de7fc8d4-ec61-4003-b94a-0b247d295f2d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ed46f881-31ef-4580-a56f-0cb1ef6ad8a5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8e89c9c-5287-477a-899e-fc28d05c33a9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc4ebdef-cc81-408a-9561-f1fc74e2f4c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "20cf08ce-3e40-41da-ac05-16bd56ed08f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06d34f46-11b4-4edc-aa62-8422661170af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b697b2ea-ed24-4248-863d-d0e3be3e02d4"
            }
          }
        ]
      },
      {
        "id": "530693b4-b6f4-45f8-8b6f-17aeb526d3ba",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2a4c0c8d-5166-4d0f-9255-ff3c2ba5a60c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0781a002-d809-4c5a-9596-76f826757b71",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8a31bdea-2fd4-4849-982a-5168a8e87b86",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844de64a-2390-4100-99ae-ee4e150741f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744aee0e-7f7e-45f0-b0e1-85d6721aa749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9536a71e-8f1f-4320-9b02-0c5ebee2541c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "40488e08-0527-4244-9c4e-a52e968bb712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ef005f-f178-4fc2-bee9-52d918a57594",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ace81e-7f93-4200-a82d-190c7eb1285d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a555e6-ad18-4397-aefd-8a2bdb4d968a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799dfe85-3655-4504-bdff-434d2ecefcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd806656-c21a-440d-a6b2-84b74d71860f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0991cb7-f3c7-468a-855e-d80f2c6b3dd0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cb4f42-c255-40cf-a2bf-9049dffdcf75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f3f499-5c33-46ac-b849-2d2767e45bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934fc874-5e5c-4944-9ac5-233f6b5ac4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e32d4c6e-072a-4cc4-a6a3-af555ee74fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f77ee03-338f-47f8-ac1d-7d8e1eb60268",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94778532-857e-4897-b6f2-e1224542a385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd22df5-b2a1-4ddf-9481-6f18b84b379e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfdafc6-40c4-4180-a795-634bfedfd2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b546ce1a-7cdb-4680-9bec-7b7053716589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9867b7a-da44-4215-a956-0091874ee9dc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22ea112-5d47-4e5d-bba2-84819336c4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031ab5f0-6256-4b03-92ee-dbf721d89151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c428109b-2139-4f8c-bd40-238e0a57d0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b38c27b4-7d53-46e2-ac97-5326eeb3bd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3371db5-c959-4d2e-bb64-40b30ea21d73",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24963f2-4f87-4a77-acf2-a0196a2e1ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03184a0-cf32-49b2-9d9c-1502eb018b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71ea5a4-3f0b-42f7-a319-2abbe1d80904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c25ca1-ccde-47f4-afbc-329b8ea8de6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6445d04b-6525-4702-a367-9085eee336fe",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82f1be1-0773-43a0-a24b-2fa8a049def6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58879b9b-93cb-4495-834a-b716c1249bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2028cc29-ab97-4155-a1c6-a129c80f53ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fdac2b0-7ad5-491b-a534-113f2463c815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbbd187-3271-4828-8060-ddf40bd9a2e4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f738a17a-d0d3-497a-b8b9-5d6569cb10ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "445ccd64-21fc-427b-878c-48c92b417c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9768cb61-a048-4520-9de2-04c93fdb5095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a35dd778-a1b4-45db-8e36-6aa01bca9310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c576ee-2b9f-4217-946a-310611b71d73",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d54d70-5d0b-40fd-a6c6-f6afe2b78861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a590680d-7a8c-4145-87fe-7124a54fcfff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d61632-babe-44b9-9b09-73b21508a13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "036bdfff-ded2-490c-8e51-0dd3ed7c731d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46881e25-b068-4bc4-a35f-e357d5077d0a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d318c466-4888-4e0c-a7dd-faac4fa46dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90776b89-c945-40cb-b0b6-7127c20b506e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09245049-df98-4ea1-9b9a-fffafb89eae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5acbb240-60ff-4e8b-8151-5bb3282092f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b6a616-4f72-47bb-a69b-27ee722c0c16",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7df54a-bed1-4158-a25b-528f1d6ee0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f0c1ef-9ae5-4733-ba39-baebeab7996d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03f29a3-f62a-4bf4-a148-b26e8c8df61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d194e5d4-da5e-4e7b-acb2-9786b9f08a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee1ec45-2b4a-420b-bd57-bbb32f93d54f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841d0bec-ee96-4ce1-9fa2-9e8136883be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba154c5a-6f57-4d8c-a7a8-f499e7f1394d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b76c96-0a3b-4917-926d-1014ef1d3487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf80606-ef2b-43f7-b265-35015b837862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fd2812-6c76-4a50-af1f-9b2744a06817",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c17592d-6959-4299-908b-875f4682ca2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07674a0f-0209-462c-b5e9-34f3877c39b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec28995e-a59e-45b3-8863-3f164984b32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f72e5111-4aeb-4f28-87d7-7be7b0f23314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0353b698-f7a5-480a-ae25-a82df4358afa",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91569e8-492f-4e66-a329-6598ca29e712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ad6dc2-285b-4a8e-925a-13a2ccd19aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc10de3-c657-4940-b0f8-47fe782a6c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c616383-5fcb-4998-ab14-9afff993d3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83c71bc-c0c3-443d-b33b-62f729f0e085",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b16a77-4861-48fa-8dfd-02933fca1ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ef6c25-8e76-42c5-bd5c-baa16b122d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dced9908-b07b-4a22-b242-2b813674a788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a947e6-675e-4182-8f1c-18592bcb5d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ecb264-62ec-4900-8ff6-a365e33b0257",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c460b5-9d12-49ff-86b7-6fa8e11bbac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70bf1b3-15a6-446a-96ba-a56b25d2529a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e039d60-91b8-4a62-a2db-e0487ac57240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "706241a5-f302-4ad2-9b05-b12071e80695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3816f1c-f1e3-49a0-901a-934350ad3f5a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77133e3-9c06-47f4-b479-1d326b0a1287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403ea426-a1e1-4aa5-91e3-d9e164c06be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781b1970-4a98-4244-a238-31a4d891b30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae58d2a8-c85b-4da4-adf3-d3aa447acc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb593d70-b2c2-42ae-a70e-35a987b7330b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bf222c-75c5-4d3e-b5a8-5ba1e500ca1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5aa0b4-8bb1-4ed8-8cb0-9ffff091aaab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a4bc7b-24c2-401e-be58-01e68498cae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5bc465b-cb21-434b-971b-42a7a16875f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b17a0f3-48d9-4b72-8973-da1baf677506",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd650d27-e91b-46d2-b84b-1fedb7da8732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7365d10-7404-4556-aa34-ef8233b7fe21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd98fc1-5de8-4b3b-9c70-d3379932f03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8c2f88-b3af-4ae2-9d4a-4d04b78e2e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92674831-d27c-44ab-9a53-433ffb7f513e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31b6973-3e0d-47b3-ad6c-3e0e8bd1279b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7836ecb-b2a1-4ced-8892-2360eb0f0b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386239b1-eedf-4e00-b48e-8861e208a569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40e5d332-3198-4511-9cc9-567a77eb8cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086c22c6-ec25-4ce6-8261-be86587c02b1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d66bc6-6548-4018-8541-20576bb5d05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd74748-0b77-405f-8bc8-a217c29102c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f44b52c-eaad-4787-a22e-bcf6201b896d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6b119a-b2d4-4c3e-bd7f-09e8ba3ba87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406f4f8a-6236-493a-8a4b-991385bbd667",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449cf5f2-8623-4773-96b1-6c14a3eadeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37dcd9eb-a29a-4aca-aaa2-05c305e0acc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30017b25-8aec-4e7a-b29b-908efca80cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef012cec-719b-40f5-b2ad-a75b9b041784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad97ae4-117c-4e67-b2a6-5c85926810ae",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3605eb1c-4904-44bd-9dab-6253371ad694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd616aa-b6fc-4e53-a17c-202405e9364f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1853fca6-52a8-4be9-b926-a91b4f77bfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f97c502c-9d46-46f2-a532-2c28db71d84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856bb1b4-39b6-46e5-ad5f-54cdc9131499",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a4b4ca-6100-4ecd-ba64-18de9f64b2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4362c2-fe72-4754-8c44-66b76fb59938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f7fa3d-10a0-41b5-8ea7-e9b53f6d1c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a2aee6-4f62-40d9-80f0-8b256d151bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae14219-8c5d-4dfd-88de-43fbaa327ca8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b93429e-ecc4-4059-a815-78b7d647b47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cf8fdd-6a93-4fa7-a955-8f7261ebed9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4691342-a5cc-420e-94cd-d8e3a5e47108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61c36879-f2bb-44b3-89fe-0bd63a98f652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fee1af-5c57-4fe2-a80d-9ec7a61834fe",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3efd895f-ac14-4e0f-a8c4-2a629f301ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb1e381-da0d-4d6f-bc18-a36d14819cd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f95471d-37a0-4bfe-9048-93756a07b165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d04c2e5e-748c-48c2-957e-3887c22eb9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04bca15-46ed-4883-9c9f-7e0e274fa0e5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f17040-ab52-4b5d-95b8-209d744bc52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f505f4-078b-4f97-acc5-92c6b9088a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529ed27e-6503-4e19-b42f-561a835e565c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7c9536-8035-44fd-bf3c-0e6b72329f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fbcc99-c0ea-4e9b-bccc-e8211ef8316f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baea54ff-77e7-455e-9c10-1f49f317db47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2650f103-2fbc-4615-876b-e7118bbf6f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e1e2fa-78bd-4fb9-9005-1b872eadce86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "059e222e-1e77-490e-b9ff-a153a59ea492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6cff96-daa3-4ebe-b2d5-7ff7e007ea3c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cacfa5-0347-4618-aa4c-fa0d998262c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef486b9a-4a92-48c6-90c3-3704e1d657e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089dc5a2-3826-4411-b301-e5333a0348a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e99a822-26b1-4081-8c4e-7400b5d8c3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f32f3d-40f2-41e5-b590-b06fc6e96b75",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489362a6-00a0-4f8d-b9f9-8219748a7ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10133e0f-a7a2-46fb-82c6-c110e967f24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9494b43-a3ec-4d9e-8dd8-991d45032ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5382c779-a0bc-41e9-ba02-9f435a664952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c90849-f9b7-4efb-9904-ea175b35b713",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a95dd14-f131-43a1-8f21-43f66a9b4bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb639a7-087c-4503-b92f-b693c43a4102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d5093a-bc3c-4c06-94ee-407ba5f9b807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8694f698-3b9c-4513-9ad2-d100723be4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b47e98-9cee-4b2a-9e53-8951685bff23",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945e835a-d04d-42ab-8516-3bf1506c7171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9c744a-3c0e-4657-a4ca-0189b566f216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8d4a26-5e2f-4339-bf8d-7f3441406de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8d1603-2eb6-4325-bc48-6d7f865219a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7dd30f63-3a0e-4485-90ee-7a225f5b87c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e169683a-74ea-4575-abb6-4775855fe4d5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140430aa-0df4-42b5-b5da-b62a9ace208f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ad61a98f-52d2-4da4-a600-cde79b1028ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9792015f-f82d-4a79-9b41-fccc954d4b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d093947a-1415-488b-a34f-be387e1f54fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f966b482-cee3-46e2-abb4-054208c98964",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea902741-bd33-492d-bba9-79e262ce7a00"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85a7ff2e-0b9f-42ef-ae45-17760f6eae59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dea9c5c1-bc30-4ceb-8556-43560c771253"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e067fcd8-e90e-4516-a2dd-e999da635737",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ada82f0f-258d-4b80-9e07-95c8c443355e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01e911d8-70ca-4a9e-9f04-efb7943146ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf5ea5a9-1508-41dc-ad04-90b2714502b7"
            }
          }
        ]
      },
      {
        "id": "147d982f-da13-4d56-b7fb-9cef7e05ef2c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "aac7a5fc-8fb2-48f1-9d64-d01ef37d1c21",
            "name": "Negative Testing",
            "item": [
              {
                "id": "12bf2b29-b1d9-4741-8914-cce1aea539ab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7a63597b-b09a-425d-9503-f9afad8bd168",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b02b6a5-d5ee-4cee-b059-9128395cbb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f5df82-f881-4dba-9df1-4f489a59fa50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ff57d1-b04b-41fc-9fe4-c1fb9103e1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f13bde6-a785-4fd9-9217-b21eaf47bc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c213ca-133e-4b23-ac2a-d643995bb55a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f936cca9-6eac-4b7a-881b-feaa2c5040c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6a03a6-b413-4f8e-8ba1-57eda2b83816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81823a14-b395-492f-9681-dc88ed0c5e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "740691a5-2609-4c94-b428-642dd4fa73d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68c0a84-fa12-4a8f-a27e-1b9fb4cbb2ee",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1e5652-d382-40e3-a95d-ea0f334b2be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384316fb-4855-4124-b7f5-ff145cb8207b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05ed395-998c-4175-ade5-4b37cc7841dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d031490b-6ec6-45fc-950c-ce5f4bf83df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d4a1ef-dc80-49e8-9d94-35a7a7fcef30",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefa1e61-d74e-4dc8-af6c-d6d4e80b6127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500f9015-651b-474b-99e3-f17cbdb7d3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faac325f-be39-44ef-86bc-d0ff7c89e9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1fc69c7-969a-4242-9879-35139ea15440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2938d77-59c2-43c8-9277-1ce6ccfd0341",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4993b8-16fa-416e-8d6b-b2f5b2c14e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38664a84-efa4-43bf-918f-8045c2b51780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608acfc9-9ddb-475b-834b-a7dd443bd8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43e89016-a15b-47c1-a218-c54269ba730a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5465a4-43b4-452d-b54a-c452cd633348",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e91b1c-8672-4ca7-917f-7a2f17bcda17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e289d4a7-15bf-4132-820f-28ed64e608f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1697c6c5-f80d-472a-a91f-a2d642b8d4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d10192-3fa5-4f77-89ed-115f8624ca2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7553ebb7-ded5-49c6-bdfa-6eac32dfa4c0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078bf6d7-593e-4afd-90e6-99fdb7103320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4581b30f-37fb-4d9d-9d2e-893c0b3b8883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3b3d44-9cc5-4195-b754-8279f7d63e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa10ae7-f4cb-4500-9d98-4c65aae5fd90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85447967-a4d2-400f-93d9-9d42fc8334e7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9b78d3-3286-48d5-9913-46ded75b0bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d1e55f-abf9-42e4-996f-f9be665f6eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e84ad09-188c-4b9a-8e85-fa591d714594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "221f0a8b-1b7a-4bc8-9127-7d9ebb57c8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff96a0c-860e-4615-be6c-df2c0458c09f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e5dd6f-951e-49fe-8a55-f2a4bf2395ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8405e29-8de5-453b-b16f-6c9e2e181067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830fc35d-5bbd-4265-80f9-0c21f008477a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89491848-c52f-44f8-878a-64cd7f51dd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4fa22e-48e0-4653-93d6-e9cf5915926a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3778b95a-d852-49cd-8fc8-95a98cb2b3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092bee65-02bd-4374-bee6-38a34e0efa76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3741d54-5c76-4a82-a4ea-06951d244151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02482728-104e-4365-9c3e-49f21083bf47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cc39ca-339e-42c9-b9a9-1eb8971691ba",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d512a58b-872b-4def-b34c-702cbe2a1b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48a3e30-59a9-4023-9942-e83fc4c51efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb9a90d-d8f2-4efd-ba8d-c27965068a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4f84b2f7-8035-4803-b650-77c7c4fe247a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d033a83-8afe-42bc-91ba-ef693df68e82",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1c40e1-25ae-4c5d-8456-de78c0a5796d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "005cfd60-0448-4caf-bbe3-7d2bbdd45e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512108d7-064d-4010-bdce-15a0f84b7b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d8cca8ed-409e-49c4-b69a-b6c4375852a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d340deb-c923-4a8b-8f93-da27c639f659",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177bf5e7-e5b6-40ae-8141-89b106417a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638518bf-c2fa-4edb-9f70-76b5e9e63960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c69408-f9af-425d-a746-27ff18a5ad79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af5e27ce-9b42-4954-b4e1-4fc5e8ca9eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae9d3e2-9a55-40d4-bffd-67c46b27e352",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db27136-b668-4fea-b1ec-903dd1b4b6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec247022-1f43-4404-a7be-1d7c4722f4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadeb554-4409-4e6b-96a5-d0607d18d53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fabcb212-c132-444a-a074-aa744d097f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e2714f-53e4-45ce-b0be-2a67fd587c69",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fbbad7-4f28-4100-9754-92287289e961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa0e46b-6207-4fb5-8bee-b15200925d95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a265bdf5-3a59-4240-8807-028aec495a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a577662-b711-4c94-b05c-c5fd9e53a498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c43ede-f11f-4fdc-a8b3-2451098d9254",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2b2cca-08c4-4752-94e3-5528a23e420c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afb7b79d-726b-49f8-a947-df31f5a1c5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c09b6d-040e-4ce3-8356-7f5286326698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "74bfdf55-844c-46fe-a8cd-647a1d86d5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a857aa6-8460-4714-9634-32dde12a5a97",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93363169-aa2e-4c5d-89eb-a4d8bc6493fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2202101-8dad-4f43-8d82-39972dfcb2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5737db-5faa-41c4-9827-15c1b832dcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c561777-12f4-4439-9909-330ec70965a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56f083f-386e-4666-9d9f-b26e76076918",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d884b4a2-14a8-42b4-b9c4-e7d936ab111e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddee5811-545c-4035-91a8-8e01556de1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904a5c1f-1868-4e33-9d49-01126666922a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "640bd803-5033-4c89-9570-68e4c6b72396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a49f62-8996-4c94-b09c-3dcab2d32313",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d024a41-58fd-4dcc-8498-10028539e676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf13dff1-82de-447a-ba69-f0e79551dc54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78735769-0b8c-4709-92b9-49a1e3b42cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef27463-bb87-4893-a546-40e6e70d2581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9320637d-bbc1-4986-8c2a-ae716f9c3bae",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28574cea-bad3-4d96-9adf-72c3ed04b1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f805f9-cede-4b33-a881-432665e715a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9fe166-1664-4396-900f-a38c5b4c3eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "165daa08-ff91-4414-934a-50f755cf55ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87a36a7-b3f4-4646-9849-649ed6338bf9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b233241-9285-445f-ace0-44314f31ebcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34bdcfee-54c6-4e18-bc47-3b663fd9d565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a43ff3-9caf-4f80-9838-886c400b672e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89193ea5-0668-498a-8c87-3a6a46f5caae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bff9d4e-e9aa-4527-a1f3-2bbe084e160c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053bd8a5-d812-4e3c-a027-3e36b9977915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683fa136-635e-47b7-ab3c-024ed89d65c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7652f3c9-1c9f-4137-8642-141609fd10cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6da738-292d-43e4-92b1-ec5b1ccfdb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10745ef4-a7d5-4af1-b836-0f5500956ce8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf28dc37-0b16-4c4a-8391-8801f0c5b79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3e4f9b-565e-45bb-a74a-8c198278c9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a853826b-333e-45f2-a8c7-2e31ee8d1570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc44cb9-b0c0-497f-87cb-59b51c2a322b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d6de24-2dbe-44cd-a6c2-9421316126df",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6060b848-85df-4273-8a66-e4ac98cd69aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657e8e31-2c07-40d0-b6ff-628c6c543692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232dd8d8-a11f-479e-9765-fa1a7b4158f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ffcdf1-0b97-4e83-88b4-e6fb160d594b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671dd338-8c95-4046-b95c-cdd7ff80e084",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7991bb56-0279-4efc-ba56-f1492569f0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5cae07-6889-418b-9092-9fe1deeacbaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793d0d85-cf21-4977-950c-0e33a18d9a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "325244d0-5d3c-456d-b1df-27feade6ad70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b49218e-b1af-4661-866e-b316889f05e5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83307dda-2cd8-4bc6-8ebf-50aadb5bacf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896b7bd6-5fd4-43e4-9259-8b6e033bd21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29eae53e-746c-4577-8ab4-be0e14afb827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0865da37-6857-4e55-882c-f105cb42237f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5571cdaa-b995-4300-ad5d-ec9175a96eb2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ae60cf-183c-4c19-a994-d947f1bd9e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a6bfcd-805b-46d3-bbd1-3146d44a1570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f45fec4-7171-4196-b672-98c488256d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef69258-972c-47a1-a38a-bdf3a34b3749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b893efb-8ed7-4ef4-989e-4ed0be1b7f5e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c856d9-755d-4fe3-8271-d0b8cd719dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde62983-cb99-44d9-8378-9b4f2485f501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec14cc84-464f-43d9-82ec-4dad8221de77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a11915ee-5c63-4e53-a050-bc6feebcd289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffb5cd5-6714-42b3-a7ae-2e5d647a0866",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4cd9c5-de56-42e8-bc9d-559ec74d71d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7432d5c2-c9b8-4553-8c93-a75e13c5b00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59898727-742e-4908-884b-cc4916364e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f771b2f-250c-406a-b1f1-230790292842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea55e4fc-b1d0-4ff6-a1d3-75a3a341eda3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d1e04e-0a04-4b33-b0f9-94cd4a82ee68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b4e832-50fd-43a6-9575-521bad705911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a939fa-8286-4f89-85c5-799bcfd552c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7bb9df5-7300-4dc5-bc1e-d244ba2a5cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ea1d38-9eb3-4a0b-8c2b-4becfdc90d59",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e454382b-f27b-4b4c-8063-b958a27a3dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12262165-8828-4585-94e0-cd3e79cdd899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6bc649-1555-43cb-a264-49a6424d1c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f164aa0-dd83-465b-b65f-c88c1a03b471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1eecb53-4950-4909-a956-2cbe4331827a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd107c3-d289-4929-b3f9-0c4402d376b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115153cd-a8d8-4747-b603-f0020ef37c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c52e76-b68e-471c-bf8f-2c96ee296b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fec042e5-3726-45c1-988e-9028d103818c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1626cf-aa47-403a-93fe-6f7ca5567403",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386dee74-ef67-42c8-8513-e5abc1c90ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a945ca-f3ce-4a07-a7d5-04ab93ba6638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bff5fe1-1a6e-4374-a959-c0d0b4a16b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9556a2-eae6-4c1c-88f0-47bff4151f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb908e9-3334-47df-b28c-07b78e0cb195",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9488a342-15db-413f-9e4e-3df74dddd204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d809abf-fb24-476a-afdc-6b723a553a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e87739-5987-463f-b815-5e5734c350d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe90012c-1b51-4e54-8dd0-32e520f2dc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a07337-94fb-4f37-9e86-445ae1a82bdb",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a09a446-119d-4cc7-b7da-683c9d0e0883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70dcb629-624d-4384-9563-a83eec6232cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ecd3cb-10e1-497d-b703-247acbeb716f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52b2d640-9e52-4340-9e7e-6a90d04ac1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fc55b2-5501-4b4a-a9b5-2518c9bf94bc",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffab64d-148a-4495-bc39-46abd0ffb0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b478ef3-d629-4378-bb7f-48ff84751879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f6eeaa-ec12-40dd-97e9-b3fe22415985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06bf73f7-bc08-494f-99ee-d0b2663dddd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1666233-d06e-44b5-a991-612019017bfa",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d396ec-2537-454a-a40a-7a60a23f890c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4080029-87b4-4146-9e04-55cf23d6f276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15b3445-0721-4903-8866-018b4e8f10f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1362da4-83eb-421c-adf4-dd4de8b79cf2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6d92350f-5349-412a-a15b-c2b60e7e2dd5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "549b674d-c42d-4bb3-9c26-61f00cc14f97",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4398b9a0-6efb-4816-89aa-211f82d8c0a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "79d85314-7ce9-437e-8af7-1d25b4b5358d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98da074b-d8da-4d22-b46e-3ee34df27d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab87b429-6535-4c2a-b8c6-fcd98e348430"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09406a6d-a4d0-4fa4-8d74-0bae0c1a6c7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea4c4ae3-7d1c-4ab0-b642-332da0194ce1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0bb46a7-fb92-44f9-b59b-b300f2fbd705",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72be5a58-6fb5-4b65-a015-18ecfd05f9b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e87b007-0c51-4995-a6de-06013848be16",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f73cf354-bf39-424e-955a-1a78e51454e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e58f04c-84dc-4d4a-b85b-fc7e5330ec6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2cfec50c-7cb6-47a5-bb05-90224a36b103"
            }
          }
        ]
      },
      {
        "id": "c2240e5b-582e-4471-a55d-8710705471d5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a4f89660-8446-4ca4-8d7e-0cba5bd1d2c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a6614d3a-47cf-4b2d-91b0-b3cdee4bb0b4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "76c3f67d-21e9-43f8-9906-e03f57d471b1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed8c1f9-c817-4148-9ec1-f266cc5237de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be06124-ba3d-4a0b-ab22-296cb1cb1243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f81be3b-41e9-4123-94f2-273399322226",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515be4ec-2a1c-4246-9f6c-f68a61f207cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3db519-fd78-48da-9894-093055c1113c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b363de6e-dc4c-43d7-aecd-7e04d6fec79d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404b292a-7a7f-449f-8938-c9e1357ca416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d0a118-5d98-4d04-b2f9-b0f6b246e87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d79a8a2-0b1c-4006-bb7b-097b5929404d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bef5b2-d81d-417e-9e06-c18abbc7a330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57965514-5498-4093-952c-856ff1f41603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f69b37-5fc1-487a-8af6-acd756611376",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3fe3fd-83df-493a-bec2-13d09e1e369d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b174368-0d45-422a-bf37-4661ef448dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef0414b-9c09-48b5-a66e-39b1cbebfa5d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78128d6-7cf1-4cb5-80a9-e0cc5295b5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8539ba94-326e-4cbf-b9e7-780bc077d147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848b3378-c873-46c9-afbc-5bdde21fdfbb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1f447d-a9d0-4421-8384-17be314817f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b73a63f-ec32-422a-97f2-c086db2c78f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77a5f51-ab62-4ee8-ad58-f884697cf12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe0e372-3baf-4ff0-a599-0531871ea5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06d02cd-025f-4774-a5e9-33a343dc7cf8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5895d73-1e8f-4ae4-88fe-e25320620c40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcbdde16-fc42-42d1-9ffe-81b419cfb0cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ad81dd-d025-400d-b83c-41b1cbf64879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cdd4f37-eeac-4551-8ead-fcdd7c012c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394d2699-3175-4be5-862a-eff0ada45b4a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0974fd25-8e54-496b-b423-e5001be7e898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0616aa10-b4bb-4656-93b9-46b005171677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388f7fee-d9df-40fc-9d4f-d3c639cfb3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18d56d9-ced3-4563-8bd0-b313f843900b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f1fb09-12d8-487e-adeb-11d74e8df71e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e00c67-e330-46fc-b0c8-158f42793293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fc49450-5a2c-4009-8190-b1f7c6dcb26d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e751773c-652b-4eae-b92c-7ed9acfcf6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe726718-3fdd-405d-a14a-3085ea9014dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d207ca35-9f91-4e9a-9a5b-47e7e3a1838e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5336e38e-fc4c-47b7-8445-df75bef2a9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d4016d-a279-4e1d-9fbe-09e3bfd39cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bfe389-49eb-4a25-b24a-cd10003e2399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624528d6-5dd7-4876-968c-04dfec36852a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54bd89e-e19d-496b-a6b2-902993504918",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf2fb0c-0dfb-410f-867a-c1ecf582d37e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df163101-f058-476f-b6a4-3d799ef305c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c495c57c-6d1b-422e-9b51-b098cc44f4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c161c894-8d2f-4560-8a87-9c9b19ef29a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3728a8b-41d7-4818-a933-0919bcc82e4a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cfabef-209b-41c4-809a-d921ff321a84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8546922a-1807-4a3f-aaa5-1b496e323aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1c809a-aefc-45d2-b90d-c088d4b64a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23828e28-07ad-43cf-b191-0e47f5c927e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ee9003-bd42-4f3d-b5df-f5d6fe6d63ea",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef1f514-5f27-4651-9e51-dd158569463f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de35cf62-d115-4cff-acfd-610a05a195f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78d30b6-dc25-47de-8ef9-2f4dd1d0caa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1389c1b3-018c-4991-812c-5f6e351a3ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e5e02e-9c39-437f-9bc6-1d8210dddaa3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5228b476-c138-4aa6-b9e3-58c2e6109579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef709a07-5f52-44c2-93d5-99a8b23bca64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ddfd10-ce64-4a77-8c83-b0e1e09f6a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397b790f-35d7-411d-ae15-5a0db55d97c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0387d3ae-44dd-4db2-9465-cd9af82ecc90",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c4d992-5e0d-470d-a9be-4e748456454b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0922e813-f416-477a-8218-9f7e02174541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074f7051-9f81-4e76-a584-031f60c2b1a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c2b8fd-4809-41f6-8af9-5cf215d120a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c229051-7da2-4b1d-9517-3b745ca38f05",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424e4ef9-218e-4a27-b10c-187de07f757f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74bb1e9-f9f3-4134-b8c1-93a8ec45fe97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ba5dd5-afe2-4ca6-9fb9-52f54e7d9d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e74c2e-8624-46fa-83b2-c718966d1466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0dde75-67d3-4970-8de6-260c441d7a75",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cf5f7d-5146-4f68-8269-8681352f0c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1139dff-d2b2-4607-851f-b19533e7553b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20917492-7d77-4758-84c2-803ad36e52d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0d15b1-5d74-4883-8ca2-fbc7e37696b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63b5f88-213b-4ad3-bb1f-041f1c81f5d0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fdc41c-704a-4f40-8d06-9af44b5ae40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76deae38-6f53-45f6-97ad-ee8cbb2999f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49960d96-d893-45d8-beed-7850ee4773aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6436621-3427-4208-8d38-142a4affdea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd56fa9-55cb-44a9-8d17-674461b113fc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2833cf48-c3a4-4d4a-bb7e-2d2c157360a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aaada50-843f-4839-a824-46714954c785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c486c8e-d4ec-4cfe-bc1e-c82a454cadf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aacba2f-c49c-4049-b18b-726411fc0eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8b79fd-eb6b-4482-8df2-04d82317af20",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96363934-54fe-40bc-bde1-16dbc906cbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60b19d9-646e-424e-a707-da385ffe67df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67405c98-11d1-4125-a1ae-35037e500bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bde1f95-74fd-49ec-bfda-c954c1d31e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd4bce3-bc00-49e5-8dbd-a21205cf0361",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400d416f-6818-4da4-a255-4e5e67b57936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8782e4c-24b3-4481-82db-ca88ca4776cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6849764-11e8-4936-8471-e21029cfa801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935f03b3-b449-4b2c-9be8-a2a8121686d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f13e03f-9310-4ba1-aa32-e6a7e84d5689",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e02318-32c8-40b8-a942-e61602e87139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d328240-1e58-48a7-88a8-85d5c50a2f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b21bf7a-fc9f-430c-b728-c7345426fd3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b8c659-d85b-4ba1-b988-7385a97de98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7563410d-27c0-4d79-aa05-0e508a989e01",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec065e8-9a28-49e4-b56f-3f7350546c9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78c20e9b-50ef-4bc1-8c75-a4405fed70ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb732f0-9b8d-4f43-9c29-6a01f23db9f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b3713d-ca4e-45c3-a36c-900b03b57380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c812d4f-b6c6-4ad0-baf5-d44378f09998",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70323d71-4e5e-4905-817b-002ebe478bd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5f64d92-ab87-4e91-b9f7-9fa84058ee90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b974dcb-625c-443d-9f05-b7a45027bb43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698b9938-b4a7-4e83-b862-0be27225542d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f540bf98-d027-48f2-a6c5-3e52a6179487",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ac4976-5b28-4040-b35c-6b1f3989b134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c48b3e5-b06f-4ed2-a285-b594231f4f02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef4d4f5-a17a-4a2c-bb06-ee0b3b125f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8186867a-6966-48e0-bc06-93ac359a4ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0286553d-3c31-4855-b574-f8998b866711",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db4ddae-44e4-419f-aafe-542f10fcb3e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1273d866-9b11-4bd6-bab1-ae3d4b7f80c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de52ad0-897f-4ec7-b592-214860fcadd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addccba1-da18-4100-bfe8-85a7241b5b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6659f3ad-a548-4ee5-852b-fb19628cffad",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c47ec5-650e-4dde-8db4-22c3adcd0cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96086228-b34c-4b85-8b0c-7558ff9a5759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdf0560-2703-4160-bfbb-2b7102cfd75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1f583d-f17d-4e34-b2cc-d06ea69c057c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f92deb0-a0ac-4856-a873-ba94b5bdcd3c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3888d3e3-215b-4dc1-b7f0-20ea15ded22e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a8eaa0f-5a36-4937-932c-6114427036ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43da64b-22c7-4f9b-8f73-faa6eafb11c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4138ce-3d4c-4a7f-874b-eeadf033426e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ea221f-c46d-4866-8d34-18b162af0f74",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdcad77-050e-4078-9a3c-c2d2b2a2bb50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27f9ab41-4275-46fe-804a-81c4b0bdac99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe0b019-238b-47e0-8e11-8f986664b4c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda9457a-59ab-4372-af90-7b9c09404a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede18008-b61c-42bb-b257-cd36c6569436",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a75220-c570-4f41-8c27-cdf472c38c49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c1c62f3-ee2d-4a5f-911b-c962378c5d41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8f26db-ac9d-4773-aba4-2cd64f3a6c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7ae809-3669-4e6e-84e7-bf78394758d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157879b4-0b78-4d4a-81ba-608e4262e29a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e19c4f8-cb2f-4a04-ac5e-9718588c2582",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47602686-d80d-48d7-8607-5cff801d4241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc24c22-37ba-4d2d-bb68-e888ee12f607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96824dfe-45d0-4908-912e-1c982b218668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9913588c-23f5-4d26-b0e1-bb4cd64beba8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9273e48-af7b-4ab3-984f-412112bc4d50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0d935c9-2bfc-4b69-8707-d5ec29f37d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b433ed-d1ad-4d8c-8131-05a9b9a148b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c544c29-4a68-4eb0-b60e-115d7d6da9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97e1791-d84a-49cb-bfe7-1c35402eb61d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0a7b9a-ef2a-46b0-9c5e-e8d11eb72387",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47236b08-4c39-463e-9934-f022530b1e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aeae906-c2b1-4854-808b-0fa23f47f574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8769c4a-914c-4def-9376-451acbadb919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea6ed4e-b237-4afd-82b9-b7989c646fe6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92472f8c-cec0-43b1-b443-b563570bdba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871ea4cb-2adb-422c-a563-0d792d2fc1ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58fb9c5-5494-4b41-8263-22cc73147b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202766b0-a755-45ef-b2ff-c726558a392f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874b9364-8715-4b78-9213-1f0aeee2efb5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb96c1a-c93f-4967-8742-3ad6e87acb32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97db6de5-c6cd-4152-8e9c-463a1caf7305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51328d34-fc62-4bbe-aa8d-6363ab91ddf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f215769b-a71e-4716-bc00-1d0eaa6d4332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0758c95-9c0a-4b43-8c05-ad30ae412fe4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb409a1-294f-4970-93d4-ff94e476cf81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9d5559-a380-479e-b337-e8eaad039302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac7011c-ae3e-44cf-a5c9-16ee9ab28694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae88a5b-9c41-451e-a79e-553d72cbf258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafc2593-e1ae-46a4-9b5c-4483329c7d88",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea8ba7b-09d5-42bf-8857-0df742310623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd8bf31-1647-49ba-ad31-2d98277e7af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b07a39-0000-4d0a-9cc6-970cec92c981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f3858a-8aed-416e-b79b-5ce8b1434844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8038ad-9ec9-4fc0-8d43-78214e83ac26",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98eac55d-8506-4341-8d08-ea732df25426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281febb1-badb-4389-a2ee-04298500b85e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5270113-ba1b-4da1-98f4-d2307f69277c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5098a40b-0250-483c-bd5a-8ccb14a9cb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18250b1-3a34-4759-a519-f2629fb23e36",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15300f5-889e-4602-891a-3130337403bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab94ec0-4b00-47bc-a4cb-546a12f70f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ae40a5-29c5-4def-9c65-a33a5dc42b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9224e8e3-9331-4337-a2b1-977ec4d7ce32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170d8ad3-bf50-4cbc-adb6-2af48d350420",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c2af77-488b-4387-b1c2-7ec38833fa40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110d22ec-f1d5-40a3-ac3e-acf5a7507a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a6e647-2f5e-44ce-a4f6-a15ebf0ee28d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9b6c92-4514-48e2-ad12-2027fc3913df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09480e6d-751a-4a96-919c-c4113b1cb06f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a92e339-0920-4875-b3a8-4dced2d43560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04345aa0-cdbe-4713-9724-340354896ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e25b109-e51c-46af-8547-e1d84d48a0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22af68d-7f2c-4453-81ba-4f656bafe8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4903a1a-e8fb-4839-bc31-ca4dd8ee6204",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9b752b-d36b-4d9a-a8ef-947ea97d6805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8efeb3-dbb1-4a76-a641-973f7f34561b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b4c850-0fed-4c84-8462-647ba57758bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8dc7aa2-6fce-4bc4-ab7e-6bff10af44a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdc9894-c1e8-483e-b834-d93062dcdd0e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653c71a9-6b3a-46dc-b22f-bfea6c3dc278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229b2df3-e867-4ba7-ad64-f3fa8e278a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16f5af5-099e-4840-917e-91e6a7f6dbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc1d513-b453-44d1-a0d4-30bd2b9e96d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528f73b9-7e42-402f-b276-6bbe592fa3b7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcc0801-6426-461b-b5fe-8e5429d5b08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab82933-cd00-4dd9-99fa-be3514a980b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d828b294-9d37-42f0-abc2-0a38c7273693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781b4f22-63ca-41ff-abce-10ba0ebb5c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0329f3e-4398-4c35-9a11-160262cf1117",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a14377e-eb39-40a5-9727-55e5c158ff52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015db265-3c55-4374-875e-61070a4ede50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "733c9e91-369b-4d6f-925b-1de307394ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4643ca-ac1a-463e-a9f9-0fa8e186702a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc3fb04-1496-4557-a0d4-ad82306d0795",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd33f9e3-4a4e-4c43-9a88-4012e91a83bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c6612f-79bf-45d8-a03c-5a961ec02ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b118afa5-6517-4b42-942a-0dfdfb1eb8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80aebdfc-0f7b-4669-ae21-ed7c4ce4acbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fbede6-c113-4338-ba4e-1816a83ad6c6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081b4ac7-8ebc-4de2-98b7-f6136072ed05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecba8f5c-1fbd-4130-bd1c-4ad3a1f50de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0f2ad3-531f-4464-9f6f-67656eb6742f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5550644f-052b-4bb9-958f-f3731e33b2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd612dc4-c52f-404a-ad1b-f6c62f4d6236",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43885c92-2fcb-4f48-a538-0ff84947ee1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2c1b9a-db6e-4d01-a668-0b2c27c722db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f00455-db2b-460f-adf7-1cfbe6c6c07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235fbbd0-a354-48ef-a8a8-5f5f023aa167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257f442b-4801-4eb1-9e25-81cb403f0f09",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad3d191-fca4-48e8-b2c4-80946388c3da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca969064-6c34-476a-842f-3cbd9e84bd85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c6d10e-5b42-401f-92bf-1314446781e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2165797a-2fb1-452a-862c-7b21e7f970cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adc7e19-337a-48fe-a374-a2559b431e84",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c79946e-e9da-4d94-8f16-1db947d26831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f31c8d-8bc5-469b-a490-7ef231c50c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a680116-8a79-4945-9a1c-3848d38289f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1aff2e1-d437-46bd-8dca-3f7353d0a4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bb2764-c421-451f-9f7f-d04066ff37dc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d887b9-a5f2-4103-840f-d5623c5490b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b3f2ba-0f9e-42c8-9b2e-95d7fe38d4e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc9db40-439d-45d0-9708-71e2d0b3539e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e80d2c-1a54-44fd-beb7-f396ddceed4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ed3172-f768-4427-967f-e6370b44b468",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125624f9-f7d2-449e-bdaf-cb91305f56a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8036b3a5-7e89-4203-b2da-36a20c36ae5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e10ddf-1955-4915-9e1e-b50f65082748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b909e28-8f20-4569-a576-e70762588fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787219ed-75fa-4a1e-9d1e-e5f2b3663632",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f9094b-5462-417c-9427-f4a1d5a2846a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab884aaf-8214-4bd9-8ace-ce1f882097c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3f9934-ad06-455f-8785-2cb55d042c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb43b0c-2f1f-444c-977b-b40e2bd0100b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b212d3-5ea6-4469-bbe3-3187abb56d96",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff10a4af-8792-422b-bc74-5de3605b973d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f7a5f0-2831-43da-acdd-5e14668b0516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d507e3a0-8620-4b41-abd1-2dcefce1f790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2bb2ca8-0f5e-45b7-8d52-d432c2bc030e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2e5233-0fc3-4d31-a640-a40f4920a4c9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b1c102-af17-47f1-aadb-9907839bdbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c13268e-4018-4fa2-9794-84042a6b8775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5144c0-9138-4f5e-8282-c4d857429d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ca60ce-1fd3-4844-bc92-29f63f509fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22e0589-b192-4bae-8035-33bf22aaaee7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2a36c8-394e-4393-b6e1-559aedf289d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c726b28-a7ec-428e-a4ab-6666cacdd65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca833fb9-5483-43d0-8a42-906817c9acf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef53d82b-feaa-4717-b2f6-b6be6be9e0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3048609d-6020-4b8f-b282-c99243ba801a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c76975c-15db-42ea-ad81-8241a9ed1d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f4be54-c5fb-4c56-9a26-f09a00843159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1d1a53-4115-4fc5-b68c-d6065c747450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89abeeb8-a3f7-4f17-895e-10b649fd300b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa06c67d-f884-4ead-9511-64bbd74a874d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a04223-1103-46b0-908a-e5222719856e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bcab734-f062-433d-a7a2-8b7704c8dc00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6fb59b-6ef9-4e75-b513-e0a4df70eeab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f083b1d-6bce-4808-ac10-065e451165c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64061d81-fa55-46bd-8f88-69a22c3ad8ef",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e28e13a-00e7-416c-9ddb-e1bc01939cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbcc164b-5328-4ef0-b695-57fb25925e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56414773-0e90-498d-9e13-058ac96571d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f310855-129d-48f2-b247-44b95f3974ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed2a103-096e-406c-a640-19e18f521129",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0294ec-6b3d-4b9e-b17d-3552b5d76bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14356985-f5f0-420e-88e7-5d6c3dcdc2d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95eaf387-fa82-4bea-8870-7ebc4cb987e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e148a6e-9f11-4bfb-9e3d-1a7ad964f695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f702ac-bac3-4f96-b981-b55a05aab46c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b595f3d-198d-4101-8736-20b44028620a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a083784f-ebd9-478c-b518-d43e3ac7936a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2c4b15-3bd6-4ae6-a3ff-2a65e02606b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a379312a-b9cd-41b8-9b9a-aed6eb9a9186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a656881a-29de-4d92-9de7-4bb547a665ef",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fa90ed-0cb6-4256-abbb-06a2602f00a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6727ed3-d882-4973-a444-58735ebaecad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8da9c6-556d-41ff-8935-a37251eadf71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2889aa4-554b-4372-a9ed-eed6b72203d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96a808e-c793-42ca-9de3-7dd8b56a8f22",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9929819-601a-45ca-b541-3d32dba9f05f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55905f7a-f6ac-4e87-b9d8-60a0e5a27f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "931d60fb-a940-4fb7-81b9-c781c749d3a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3368570c-d885-4e1f-aa65-3300dc6c09f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6879261a-aac2-4446-824f-6909f09bc080",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a253ab8f-1b8b-47fa-babf-46c2ea422044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18ec7c65-9709-4b62-88f0-f31d7615b925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb49372-7caa-4279-9185-309d9f18e402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab20cf5f-915e-4e10-9b15-f1aaaa31452c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc02f82-9ce3-4cbd-b46a-d22724c8dcab",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78de9b3-0773-41ed-85d0-7fbf0b027f23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f94e26a0-4106-40b8-a401-1338be8e23b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1da611-9d11-4325-b9a2-01c54f7643c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e250e98a-9b54-4a83-9f2e-955d1bb75f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95eda0cb-41f3-4e15-9c17-b08760559aeb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d582a4-4a04-469e-ad22-c91023d93a6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "360a7d21-9abc-46ba-ac8e-a8d089430c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de47e86-e337-4232-90a0-9c37cadffef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264d74d9-5617-42b5-aef8-87adec73c9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aba892c-8048-4818-9e07-7c5176956a5c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550ef6ca-427b-41a7-8aca-2631242c92fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "014be3d7-b711-4b8c-92bf-920822609626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55299a49-ba23-4cdd-81d3-9f54c19fe4dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc62191-aa69-43e3-97c1-a526b38c346d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6900c6a-a2e8-40f9-ab92-9a8804121542",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd1ee0d-e67c-448d-be96-46bd4ae1de53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3265d8a3-9209-4fa7-a5e6-2487d27933f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e40428-bb3e-4369-99e6-10f7a2d8ed9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f8728c-ea03-443f-ace5-b72be16d5cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2de276b-1b61-48fd-8734-a1bfe3071a31",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acad4b1-da65-49c8-924d-baead2a93f45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fdb470b-22bb-4918-9fcc-9cb9fda1a8dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "284591d9-f230-47bf-9aa2-bce4e36b9741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28867650-5637-473c-ac70-fc4896a8c740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14469c96-7c3b-4a9f-9557-d23fc61ef762",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ffaf65-4bae-4b84-9c3c-7f714b925451",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0086aff-b139-4005-a1b1-1075a84ee347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d3865b-efb3-4959-b1ce-1c238f0d3154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e456e77-1f59-4efb-b636-c69444690412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e935231c-ab08-4b60-8ccb-02fd8bbcc688",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e5dc01-d729-4757-a86a-879dd1ca82f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab2508ce-bfc3-45ba-87c0-277101086cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b25a501-b5d9-40d8-a3e8-8d2869791e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152ebdb0-5fe6-4a78-a097-70d32bacfeb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a2c456-12ed-4c71-a6f7-67bd5c33979c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796ac416-8cca-4c3c-a23e-127071066121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6830877f-0ef5-411b-863b-9a0ae01c1a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b42a55c-2905-4128-a0ad-778aff883254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d46bff-8b09-40b2-b13e-34be00be9431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d478c167-cac8-4e18-86cf-63eeb22596d5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fe545e-7bc9-4e1c-a22b-fc935800364a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c244e4fb-f5be-44c0-9c0d-5edeb99d014f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d306eed2-bf17-4059-b6ea-3399baa4913b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3fe85d5-5def-4013-9a5e-168e272a88a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e572f8-a254-430d-9942-8caf851e5669",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cd173d-af59-4344-8517-36e03989e473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1253815-7b85-4867-b73a-0359cd3bfdc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd66ecf2-a829-4250-9b01-549bfa635154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d519bf3-f991-4302-b3bb-4187a84c7236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fdc1dc-22a1-46f5-bd34-8add9d9e2a96",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465678c8-2c08-4fd9-9028-be1dc4b67381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4de0d5e0-c17c-4fdc-95e0-1ea3c66b5810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2181e189-0a64-4d65-9654-0d2e0af37a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c42f044-ec46-448b-ab2e-457c28d504a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70d8183-aeb4-4a73-b52f-23c8d96945df",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5feea948-83bd-430e-9359-d603ee836221",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c30c3f1-40db-48e4-9d1c-8ee161ee2d2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e494d2-1f0e-4cd2-978c-db6e2d7ab713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6d86c6-73b1-41bc-a61b-13afecbed2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418a5c1f-31b8-4394-b74b-f2d354d26882",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde67799-2a99-4903-9808-0760a578bc33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8395085f-c671-4afc-a8f8-68817a244f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0396ad5d-b51c-4123-b0e1-5e7db29f4879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7684f0ab-b5fe-407b-83ac-1a2883814ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bcbae9-4230-465e-ad6f-bcf1199e3867",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3cadf11-8a3a-443d-a87c-5fb9d8437a8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7f17814-e1f3-4b33-b99c-8050347a9b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d81873d-205a-4e03-9144-a1615ae60ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e365f99-67f1-4745-a8cb-776306b7c508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b51054c-a149-4c8b-82bb-496e93472935",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4536c0b6-f333-40cf-b5f2-6b55922d3789",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdf56317-183b-4dfe-9ec8-e88538a99e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebda505d-6315-4730-9d7b-5a90c3f9155c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5dd4e55-10e4-41f6-a1b5-33a1df1a0598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad02d949-6f30-432a-bf1c-fc5c4be95db7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877a3f71-daab-4fd7-9d57-7b4d6a51c9d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cf252bd-a225-492a-84d1-bbe5fd7c712e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d144c58e-f009-420d-9c03-59f3a5fb5bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed35b8f9-3587-49ba-8763-ab839b80948b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ce8bc4-18a5-4117-b734-7b20c0b963d1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fecd909-31a1-4331-9e1c-c090bda0a300",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d41785d0-615c-45fb-8177-12caed046b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1655fedf-eb5c-4ce0-9edd-12bc20dec91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f377fcff-610f-4b9c-9a4f-fcb2671df746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161a1e6d-0fe7-4ae0-88d0-f35005b79043",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f516ff4-0bb6-4317-9b06-9781e4034f94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4295be5f-0d1d-4ff4-99c4-8c40889e972d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d763914f-cbdc-415d-842c-3d374be0b7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d6a962-e739-40a8-a724-7ab2954251bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e35229-cdee-4394-9303-26f20cb8d14b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bb5b7f-19f9-49bd-baf6-45dc3a7474dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a108c78-b2c6-406c-a6a8-0ce2f9c0e247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2db06c-6330-4646-bf78-5156640d9764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43236b5-9c09-4b38-a182-affd4502b7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd41cd84-c09f-4015-8916-62e2a1511552",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862649db-cd6e-4469-a882-4a00ed38ec24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b61005b-3dd2-4dc4-b363-e1468ba076f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "404f9f92-aec0-4dff-aee9-fb6017882b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da4c4f60-7819-413a-a52f-b26aff0a957f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e342e87-499b-4585-91f8-f97827559eec",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545f07e0-1b8c-46b7-af2f-e9ba6b7e3e66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0e6f1e2-b662-448d-8aa7-5fc5ede84ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc33efb-8b25-4875-876d-869d14e13e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f23e9d4-b2e5-4ede-9f9c-6241404b1bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e72eb60-79ed-401e-82a2-bfa876fb13c6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b8e8d6-ec80-4ee5-ba96-354e7f5ea090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fff56979-bb6c-43d6-9ea4-6b9ebaf39f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b896b741-e652-4cfd-b13c-fff4dbb55502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f48ca4-af0c-41cb-95f9-deae1ca10659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19ca20a-bfc9-49e1-a441-8db29afe8178",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21b441a-fcc7-40c1-b065-bc230c67de45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e2ec125-e52d-426f-be1f-549b28f8ebe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f74183-0735-49e4-a542-c108cc3db8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7b1ce3-1b96-48f2-bc6d-2f203c198c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce8db5a-7872-409a-8fa9-f564317b92eb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2454a3f-b284-40ab-bfca-5bf5a008ec07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33bf4b62-eb1b-42f0-a948-7362e2bc0448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8e23d2-15e8-423c-883c-40817cabeda4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca2fa71-de93-44d5-b630-019a6ec6804f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5da60f-b804-4106-ba06-1c4d36a35b35",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af719ce-c40b-4b60-a203-e37dc0996d4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ae9f8ff-4225-4fc7-9d70-47e9212e2ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "973fac87-3571-42bb-8ff9-8fc6434e1ea8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119faad2-78d8-4363-a354-617b4f02c691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3449d97-4ab8-4ef8-bff8-2435ad2d97ef",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2daf28b-1a89-409a-8108-b5388eace6b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "116787ca-8045-4d75-8c30-84285a0b07e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a1dad7-4e41-49a8-bea4-9f0f77d25dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b52796-832f-435b-bd09-a4ae38cfd661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb9a702-85ce-4822-a5d3-e9250e168f0c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addeb446-83f4-42ab-a7d6-aa16a3276207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "442f77f4-7147-42ea-8741-690d86882f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d2c8dd-a4c3-4047-b629-b462e103196a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65315671-c5cd-459a-920f-e996d4e8f473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a438785a-9fe6-4463-a4ef-730d93de50e5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13875b0-eaf0-46d4-ae00-7a48f5045d5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c06d2972-5038-4c60-afff-2a5596abc836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "621cf39a-5975-462c-badb-d8700fa85fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53f0752-26dc-47d4-abfb-ce97c8fb9c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb729e5-510d-4fbe-a4c9-e2dd38b810bd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a2917f-5b07-4c4a-92b4-5325a7d452c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb575f00-bdfe-43e9-8a28-fe10ba50013f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b95c8d-123f-4377-a921-eb56400bd1f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7510b7f9-cfdd-497e-ac6e-379cee5d017f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fcafec-d614-4ed7-8f2c-1a2ee3329306",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8049546-79dd-460e-84ed-74b4f28756bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46081e02-ce6b-494d-828e-31be1d1e6d5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb344275-43f0-44e4-ad8a-f2dacb56a0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8611d6bc-84c8-4fda-b045-7657e2184fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95f2f60-0486-4af1-8eca-0d701437a8ff",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b456d247-b1ad-40eb-a5fb-d8cf81666478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08fbbf70-e124-47af-8a4e-2cfd0a2678ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed2df3c-df50-4aa6-8a99-f748f2e153d3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9dda86-be89-458f-a589-6bb999bd02a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db54fdd-6418-47b4-86d2-e5bdf79a7afe",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3cc5b2-6811-425a-aa42-3b11582af97f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "097fdb0d-0944-4f0c-8354-a6cd68a13fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acda6658-fe8d-4106-9d23-11ee58bc6a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfdc816c-4a34-4577-b20a-671704705b2f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46226c55-03f6-4e73-a833-7bbc02d9729a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9617221-d05c-4edf-96b2-35ef3d8bf60a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8efe9a90-078c-4089-810e-6e4ac72a4c0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f4be455-f1ad-4494-8bb7-58c7cfebc353"
                    }
                  }
                ]
              },
              {
                "id": "dd8a6921-1418-448e-9954-3a0ee3d3f3e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e8a8a70-1f24-464c-b193-3ff36cae932b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a84ba6-8368-4a48-afd9-0be69de6a4f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "83721d7b-726d-41b1-a445-851418ca0cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ece7e4f-e8d0-44b3-b7cb-febe16dc87c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04a1cfee-0ba3-4454-8dda-4006f5ce52a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e24f4d2-2db0-4392-8c00-19a57ca6ce6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19b06f16-fa49-437b-ba82-f3d2d71ff77d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bec9055-f4bf-428e-b900-d548ebe922e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1621042c-ad64-4037-9647-6fb61cea207d"
                    }
                  }
                ]
              },
              {
                "id": "4b469f50-2c86-4d9f-a9a3-79994e67b91f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fd70d22b-5860-4b0b-b177-013bc7d6919a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60664a6e-fb92-4ae0-a880-3ac1f6097f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ba471df8-1a84-43d0-b6a7-66dc051c9a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56af427e-8bee-49a0-8c3b-bb5f8ce5c346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd172ea0-92da-497c-b7d3-298ca36d5ba6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9acc14b9-c9c9-4d3a-b9b0-8ba757224d35",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b0488f64-2559-450e-bcd4-678ea867adf4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69b16289-aba4-45c8-9dd9-314408c9a4a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "45a26857-9392-43c5-bc51-20156d661b04"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0ce5095-9b81-42b3-ac22-a69bd8ff51a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f3a2525-bac1-42f3-bacc-6dcd61408fe5"
                    }
                  }
                ]
              },
              {
                "id": "ea3dff4c-a00c-4ff8-af09-42848397d98e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4220086-088d-4780-8a4d-a2270af94c4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "96eefc46-b546-4ac3-a666-e9cbc941bd4f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee2b980e-b1c5-4881-9145-15b6e1c4915c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c46f9cd7-d535-45ba-aef8-bfa80203231e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5222f93-7f75-41dd-a860-48f16fca00d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a21c557f-060c-4bca-a200-3088524fef6f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b15f27dd-7a2b-4bea-bc62-4d0c685c9e54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33476da4-02d9-49ac-b56e-a48cdfd53316"
            }
          }
        ]
      },
      {
        "id": "a3141be0-7ba8-41c9-b605-dac4a95055a2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "38fa597e-ab65-4961-a300-028275038299",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a0b8813f-31d0-4a28-b713-c508db37729c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12a86349-45df-46e4-96da-00a251086a38",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0fec8c-0440-4bd8-bd32-0a4945847ff6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3e65f639-ed93-49e5-9df7-d90281b20fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "133b7233-da6c-4039-a445-0599ae1ca40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e622edc-611a-42ef-a634-c6ee28350a45"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e63b946c-b35b-472c-8a67-8b38cd040463",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42fe5878-74b7-443c-8f2f-f2c47347d7c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5aa21460-3d74-4441-baa6-fe1c60717288",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9455e55f-5326-43be-85a1-dc5a7bcef9da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4677f02f-95dd-4fcd-94f4-d6c5abf2f47e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "58b9838f-16ed-4503-a601-ddb158cd98a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a344384a-9357-4bed-965e-acf0a229ec03",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9576788-486c-4198-a55b-c36ec2426db8"
            }
          }
        ]
      },
      {
        "id": "ccc71074-2197-4332-8d38-bc778fa3058a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ce47a170-074a-4785-a58e-f3045e2977cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cdf4f819-4ae8-41f8-afc6-f304a23ab307",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8476d189-a319-43bb-bfdf-3617fc188414",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8a5c8c-88ca-4293-8563-cadc3bea9b8d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcf26ef3-6e7c-4d58-9ac2-561415863d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2203e018-07d2-494d-acd8-556d160d4f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1487144c-c87c-4a0e-b3f2-b2e17b426ce0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40fa95fb-dbc0-4f1d-9393-c9f4c44c9271",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48e0f69c-e0e1-4ab1-9bb5-ed4a36367f21"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4b76938-6bca-441e-8fa9-bbdea44cbfde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a37ed192-faae-475d-96dd-4cf82bfd38a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12dff7b3-64f4-4433-b5c2-72b067584558",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "78fa02bb-7760-4174-af8e-68a8e94ff1f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aecfde0e-8b2a-47a1-b840-2ed1edc1a3cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e89631a-b56d-4691-afc7-ac1a3337969f"
            }
          }
        ]
      },
      {
        "id": "4abf00f6-a31d-479a-949b-dafdfbb515a6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "466d7f18-4009-4f0d-a4e5-7e835e83ebe9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eadc2c54-e6b0-4fee-8467-5bb3b820889e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eee31aae-ba43-4a67-a757-32e152d11e7f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513dee44-b3e7-46fa-a1c7-84a51b5dc0ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8562765f-6d12-4734-ace6-25a8ccf72355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebabacc0-e4be-44bf-9fca-cd6db55203cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ed6db18-4ce1-4a8b-afc3-88d0aec0ce80"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc6b26ab-e9af-4d7e-b0de-66a526c5d5d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0998f8d7-1283-4905-8630-13c58dc74dd5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fe065ce-7ff0-4471-a8a0-8a8f1d94b571",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da4474ef-4c1a-43f8-b4ef-2ddc4731e2c5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9badb6e7-41ec-4cf4-8e0f-7a5d56378887",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b7d55d74-c342-45e6-917e-877324d5c027"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e325ca07-4fb1-43c6-b979-72fb40077e54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "321d7918-8fc8-4612-8407-1d89d805ae47"
            }
          }
        ]
      },
      {
        "id": "70da369b-593e-492e-95ce-6e909239a563",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "186afdcc-b826-4ace-b697-be71f921c06e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "609a2175-186d-4e84-89e4-7ce955da8797",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d9bb7425-ee02-4328-b4d8-fa21eab65563",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "155b0492-0c0c-4c4b-bc38-d365c16b0bd9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43d9fffb-ee79-47f8-a4ad-a50099140ecc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 85.59649122807018,
      "responseMin": 3,
      "responseMax": 5455,
      "responseSd": 433.700440705783,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1710462851056,
      "completed": 1710462884596
    },
    "executions": [
      {
        "id": "2068f708-a535-4f1e-98b4-1a249c30c398",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "29f8740c-6d05-4130-8dab-0ee233cbde67",
          "httpRequestId": "e43c8f46-d784-437a-bee7-9308aa2ddd95"
        },
        "item": {
          "id": "2068f708-a535-4f1e-98b4-1a249c30c398",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "68715957-d815-45f7-8313-93dabd941b54",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 0
        }
      },
      {
        "id": "7aaa0cfc-33c5-46e9-bda3-b999f7431dce",
        "cursor": {
          "ref": "7d86d062-7b67-4d77-b832-b0396446c9bc",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9dd62fa2-dd22-4fb5-aa52-dade73015f67"
        },
        "item": {
          "id": "7aaa0cfc-33c5-46e9-bda3-b999f7431dce",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4c897293-436a-4053-a204-27d9ab9d1d4c",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "87a78fdc-aef1-4011-b294-2c609ccf2a8b",
        "cursor": {
          "ref": "c3a7ac0c-9054-4319-b781-a21fd4937111",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2da8711e-a560-4707-b873-ef3c359f51bd"
        },
        "item": {
          "id": "87a78fdc-aef1-4011-b294-2c609ccf2a8b",
          "name": "did_json"
        },
        "response": {
          "id": "9409dfd2-1fde-42b2-9485-815ad763d1c9",
          "status": "OK",
          "code": 200,
          "responseTime": 260,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ab5f28-361e-4329-a03d-4b373e68d2b3",
        "cursor": {
          "ref": "5354cb39-7eca-4235-9b61-fb9a71e604bb",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dd8cd5f7-46c8-4042-b554-2dbff45ca29a"
        },
        "item": {
          "id": "03ab5f28-361e-4329-a03d-4b373e68d2b3",
          "name": "did:invalid"
        },
        "response": {
          "id": "5f19b0ae-ed6c-4f75-b08f-fa2eba44cc0c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1047,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ab5f28-361e-4329-a03d-4b373e68d2b3",
        "cursor": {
          "ref": "5354cb39-7eca-4235-9b61-fb9a71e604bb",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dd8cd5f7-46c8-4042-b554-2dbff45ca29a"
        },
        "item": {
          "id": "03ab5f28-361e-4329-a03d-4b373e68d2b3",
          "name": "did:invalid"
        },
        "response": {
          "id": "5f19b0ae-ed6c-4f75-b08f-fa2eba44cc0c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1047,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383ae7e1-b211-41cf-bc42-19385516a425",
        "cursor": {
          "ref": "6bc62153-60e5-488d-b1b1-0caf1f3a08a1",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d9ce7cc1-57d3-466a-a14a-321c98ca3a12"
        },
        "item": {
          "id": "383ae7e1-b211-41cf-bc42-19385516a425",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "de1f8db2-fc3d-495e-aa18-69318368b8fa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c9ec0f-7678-4d16-b800-4e32fddb00e0",
        "cursor": {
          "ref": "0be19d20-4582-4927-8342-2abdaa58e21c",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "36a54c7d-c2cf-4944-8dd1-308b39c7dc73"
        },
        "item": {
          "id": "81c9ec0f-7678-4d16-b800-4e32fddb00e0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c1d68e82-8e45-4ddd-8b05-b336d7c83c7d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 14,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fad312-f6e1-4061-84e5-6d863254ec06",
        "cursor": {
          "ref": "3550b804-5277-43b3-95e2-76de264dbf28",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e2c146ac-6360-4ecb-a4ab-42b4c5e855c7"
        },
        "item": {
          "id": "30fad312-f6e1-4061-84e5-6d863254ec06",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "16ae85ec-19cb-44e5-a9e6-d0023253ce7c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1ceb29-dae2-4e31-b952-6f6929539276",
        "cursor": {
          "ref": "87928525-847a-4f6a-aac9-b7b75f2fafdc",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1cf3e740-71d7-4556-b2da-c062e0c9cb7f"
        },
        "item": {
          "id": "7c1ceb29-dae2-4e31-b952-6f6929539276",
          "name": "identifiers"
        },
        "response": {
          "id": "88ddf60b-7361-4bb9-a465-7a65583efe93",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef77838f-87af-4c84-9a7a-7a0c4107ccfc",
        "cursor": {
          "ref": "40c28b06-6bca-44a7-bca7-c55787558536",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bf3a60ea-2a61-4ed6-8a4a-a3b2253bbdb0"
        },
        "item": {
          "id": "ef77838f-87af-4c84-9a7a-7a0c4107ccfc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "53b5d0bd-c194-437f-87c0-da7b5ab74bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117cd70a-9e01-40b2-8d9e-6fdbe8c7c4d2",
        "cursor": {
          "ref": "bdee1c1e-0668-4a07-862e-7f3b0aeb4562",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7db61c49-59eb-41a9-b95a-790b251d3c33"
        },
        "item": {
          "id": "117cd70a-9e01-40b2-8d9e-6fdbe8c7c4d2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f34b6e94-7510-41dc-81b2-6523d1ea1878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a355d2eb-c34b-4491-8c5b-69e90f02ff0d",
        "cursor": {
          "ref": "8a7cc43d-8f7e-42fd-aca6-666f22b6d17d",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b760bc15-2c58-4a9f-af13-4d24b61583a3"
        },
        "item": {
          "id": "a355d2eb-c34b-4491-8c5b-69e90f02ff0d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ef85c3a0-4b50-4ad7-8329-6a9ad1ea0330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285551e2-2d34-4513-abc8-30f4cc6a0f0b",
        "cursor": {
          "ref": "369dbad4-1512-4e93-ae6e-f453f2e409cd",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "59e5cd0a-79c5-41e6-943c-aec46446c7af"
        },
        "item": {
          "id": "285551e2-2d34-4513-abc8-30f4cc6a0f0b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "82284530-1bd5-46ae-acb0-045eda86ea3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b8b409-23e3-4c28-88e1-1e665f2a5a81",
        "cursor": {
          "ref": "16a9e030-a3fc-4fd1-9854-7ea19b415f6f",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0c66ecd7-c53e-4e04-96d3-297330870ec8"
        },
        "item": {
          "id": "78b8b409-23e3-4c28-88e1-1e665f2a5a81",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b6a2c831-2905-4c77-88ca-d155996ae668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be404ae-b36b-4e1b-9fdb-ebc891c35acb",
        "cursor": {
          "ref": "8641f640-6b36-4080-bf34-4431c73c1d3c",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "60f5eb44-2878-47a0-a4c9-67d83dc6b893"
        },
        "item": {
          "id": "8be404ae-b36b-4e1b-9fdb-ebc891c35acb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2fd7880b-99c6-4e62-8880-44e442142f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4789a6-781e-4f15-b20d-cf3b86a9f73d",
        "cursor": {
          "ref": "58952c84-2d28-4738-bf5c-e98909834394",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "59fe0fb4-82bf-48ff-aa38-66b470bfbb80"
        },
        "item": {
          "id": "0b4789a6-781e-4f15-b20d-cf3b86a9f73d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "315e32b5-d86d-47d9-965d-b5db1947384a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce16a28a-83f1-45f8-9705-d154c6011beb",
        "cursor": {
          "ref": "d93479a0-ec4a-44b4-8690-cbf99842c004",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e3a1c20e-8b8e-4051-b6e1-a5d80bdbcb9f"
        },
        "item": {
          "id": "ce16a28a-83f1-45f8-9705-d154c6011beb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c444aba9-bc66-4a93-b2a8-cd32d30ac36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111aecbc-aa11-45b0-b77f-35e669ef2505",
        "cursor": {
          "ref": "c0ac5f85-7f0e-4f7d-83a6-0ac4779af823",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2a039520-4bdf-4869-b297-e7b4b98ec275"
        },
        "item": {
          "id": "111aecbc-aa11-45b0-b77f-35e669ef2505",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "df029129-fa25-4111-a6c8-bf52db88696c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1ed1ea-4926-4529-9c0d-a99923438d4d",
        "cursor": {
          "ref": "e5687186-a130-4b0e-9f5b-ed57fbb7ca71",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "725c4cbd-0911-494e-ace2-3514c4906d1d"
        },
        "item": {
          "id": "4a1ed1ea-4926-4529-9c0d-a99923438d4d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4ed7c88a-a8b0-4dc5-9ce7-8128f0244296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5296a3-5894-4f8e-ac8d-78b5d4f70661",
        "cursor": {
          "ref": "87447ff4-9e11-47be-bbbc-0a67d3117f0a",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3d3b1711-dad4-42c1-a15d-0970e7363699"
        },
        "item": {
          "id": "6c5296a3-5894-4f8e-ac8d-78b5d4f70661",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3d6b3478-971a-4d99-9f8a-9874e497507e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98788745-074e-441e-a670-6e6135bfbc4f",
        "cursor": {
          "ref": "2bafc6f0-5c6f-4510-b425-0a2fb6f4d0c2",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6e6ad3df-c5a1-43bd-b149-4b9148117ed0"
        },
        "item": {
          "id": "98788745-074e-441e-a670-6e6135bfbc4f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "44baa1a2-803c-4225-b47f-160c229a4f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291873aa-0306-4016-ab36-01a305dca508",
        "cursor": {
          "ref": "2f1d47db-e748-4226-988f-9c6b64892095",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b0b37585-f328-43d8-b2e8-1e1f8e6f4cc0"
        },
        "item": {
          "id": "291873aa-0306-4016-ab36-01a305dca508",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "00ba9a1b-3d46-430d-a865-4b1dd2efd42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00387d9e-86df-4f97-9ce1-a4335a82490e",
        "cursor": {
          "ref": "1b196aae-12e2-4e72-90fd-2d569161256f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "eb67910c-528f-442c-a4f3-066f39e407fe"
        },
        "item": {
          "id": "00387d9e-86df-4f97-9ce1-a4335a82490e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6640433c-5e2b-4e9f-895b-17d6a0f6b7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959011a7-beb1-4ecb-be50-050634ef3289",
        "cursor": {
          "ref": "5926556f-a1f5-4929-aa99-3f2a8e738981",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1abb1e32-af36-4ba0-b43b-a4cecb0cd5f6"
        },
        "item": {
          "id": "959011a7-beb1-4ecb-be50-050634ef3289",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e92425dc-0aba-4ff8-bde1-cf82c1125f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedd68d8-7d7d-451b-a99b-26f87d67b303",
        "cursor": {
          "ref": "e531ccdd-8281-4619-ad5d-304ce61b0f40",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "dab90f7f-7468-46c8-9505-8dc1aa059d28"
        },
        "item": {
          "id": "cedd68d8-7d7d-451b-a99b-26f87d67b303",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6c63a6f5-ff49-45f1-87d4-b3721781291e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f712e5-c78c-4523-87d5-e8fc8320d1af",
        "cursor": {
          "ref": "17e23743-2d9e-489c-b1dc-19567114b020",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "87e7492a-090c-4c28-85fb-7d17f76accba"
        },
        "item": {
          "id": "01f712e5-c78c-4523-87d5-e8fc8320d1af",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e52023b0-fd9e-403f-9e7d-e048f8ad8ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62b27f3-adf6-4c7f-90a3-6d99c3ec9f77",
        "cursor": {
          "ref": "c5170c33-47de-4028-a109-cb72f6f4d13b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "412a613f-66f7-412a-8684-eb4fb27d3eb8"
        },
        "item": {
          "id": "a62b27f3-adf6-4c7f-90a3-6d99c3ec9f77",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d030ab77-1224-4546-8e69-1c509398cdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4195244-9094-4cae-9664-a67998f0049b",
        "cursor": {
          "ref": "c01304db-7e14-4f91-b923-5757f8059d54",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e7c8a631-a71c-41ee-bed8-354b1d125322"
        },
        "item": {
          "id": "a4195244-9094-4cae-9664-a67998f0049b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f61dfef5-515b-4914-aa9d-d53de1899169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fcee7b-5ab0-47c2-a9ef-4bac0c5091f5",
        "cursor": {
          "ref": "49669786-8926-4776-acf7-b8db050ccbc9",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "96b46d22-8601-4232-b5e5-06df86baedeb"
        },
        "item": {
          "id": "12fcee7b-5ab0-47c2-a9ef-4bac0c5091f5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ad397ffb-1d84-4e97-95df-6c47545cf58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c338b8-8bbc-43ba-8068-eae4a2d199a7",
        "cursor": {
          "ref": "e48c4538-e392-496f-a1f0-844321af6fba",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "23646255-69f0-4613-b8e0-306e8cdcead6"
        },
        "item": {
          "id": "e3c338b8-8bbc-43ba-8068-eae4a2d199a7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5a9fb340-4a69-4db3-a6e5-725b8cfbf474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff155801-6f93-48ef-a7ef-cd6747880331",
        "cursor": {
          "ref": "b9b3797b-7166-4e85-9b5c-4acc55632ac3",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "99598cc6-a9e2-4518-b70d-d3f465a6d2da"
        },
        "item": {
          "id": "ff155801-6f93-48ef-a7ef-cd6747880331",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fc310227-3e5b-4f6b-91e7-3afbfbc0d4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ef3d9b-53b3-4b67-a2cf-445fa5604c03",
        "cursor": {
          "ref": "876ae7d5-0cc9-4e8e-af32-d53d1dffcf6d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "49f92849-333e-4f5d-bde5-3f8b4904ee3e"
        },
        "item": {
          "id": "f9ef3d9b-53b3-4b67-a2cf-445fa5604c03",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e3336766-ed61-445d-85b2-e9aced57fe18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2d96c6-b679-49c0-ad85-37a7824ee6b3",
        "cursor": {
          "ref": "9f9d3aa6-745b-4965-97f6-602ded38e30e",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8560ba23-ac37-47e4-a8fc-1f74d26e49f1"
        },
        "item": {
          "id": "8f2d96c6-b679-49c0-ad85-37a7824ee6b3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fc0b38dd-2c2e-47f2-a5b7-8b3a28893f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25711e4b-b6d8-4662-b1fb-10a74b1c4fd2",
        "cursor": {
          "ref": "079f1b74-9306-412d-932d-7d8bca891a54",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a7e5e418-cce6-4005-a88b-178b809ba02f"
        },
        "item": {
          "id": "25711e4b-b6d8-4662-b1fb-10a74b1c4fd2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "59704ff9-bf6f-4683-b90a-d84bb4e392ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd0c0af-e58f-4d2d-af2f-bf92389bed27",
        "cursor": {
          "ref": "93daa115-44cd-4f54-89ef-1b4fd3440fd5",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f8bb7584-1d87-4b1f-b279-f6c34ca65396"
        },
        "item": {
          "id": "2cd0c0af-e58f-4d2d-af2f-bf92389bed27",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "376af3d6-5a89-4db5-a2ab-0cfcb0a4ecaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6fc0b6-9756-4d8e-ac85-fc5bc0b2b879",
        "cursor": {
          "ref": "f2d22003-ea17-4746-bd0b-5256ce80a5d0",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3879e5dc-d6a3-47fe-b597-b341d65f62f6"
        },
        "item": {
          "id": "da6fc0b6-9756-4d8e-ac85-fc5bc0b2b879",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "578ff380-15cf-4462-9bbb-bce0ed374a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f46596-c27d-4224-85f6-aad197ef46d1",
        "cursor": {
          "ref": "39f906f5-4443-47f6-84bc-fa8acabbe860",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "39141bb8-e93c-4ead-9912-5bb095b3d5c6"
        },
        "item": {
          "id": "a1f46596-c27d-4224-85f6-aad197ef46d1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "383d874e-3a96-4a96-8e87-5e4e84014303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6631731a-2660-4406-92b0-ba34671348d1",
        "cursor": {
          "ref": "47a033cc-45af-4e3f-90b3-6786f838855b",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ffe38193-3eed-4120-9fed-8067dcc4b85d"
        },
        "item": {
          "id": "6631731a-2660-4406-92b0-ba34671348d1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f5e19af1-d504-4d3a-8733-c8d2b31e9e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc5ce95-edc9-41bc-be2f-62508eaa6376",
        "cursor": {
          "ref": "5c898a4e-d96d-4e8a-94ff-f86b642dcef5",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e593973c-9eaa-46e6-85fd-73dc7eeb2a59"
        },
        "item": {
          "id": "0fc5ce95-edc9-41bc-be2f-62508eaa6376",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "271a45de-ca9c-46e8-b5c1-c146cb8dd9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60e9d5f-d717-4b9a-8275-64a208cda6e1",
        "cursor": {
          "ref": "7c1c165e-a22b-4840-93dd-4eeae981b82b",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "831a5cbc-5dbb-4eee-97e2-40d3d5a526b5"
        },
        "item": {
          "id": "b60e9d5f-d717-4b9a-8275-64a208cda6e1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8f12317a-a932-4cd0-9f12-489f1be18f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f87a253-69ca-4b2b-bca3-c9088a6f35c5",
        "cursor": {
          "ref": "5e0bdc02-3ceb-484c-b66b-a32d02e7e7a1",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9ac720d6-5171-46e2-bb4c-22cc63ebcbd2"
        },
        "item": {
          "id": "8f87a253-69ca-4b2b-bca3-c9088a6f35c5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ad57d1d8-dafa-4487-b520-b13a8d8fa760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b523243c-96a8-4bcd-b4ef-509e9e231478",
        "cursor": {
          "ref": "ba2e002a-8584-46d3-bd22-c1a39469419e",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f7b6f451-e809-431e-9a0e-bfa5dd354688"
        },
        "item": {
          "id": "b523243c-96a8-4bcd-b4ef-509e9e231478",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1a75254c-cc2c-4f3c-ae85-54de3569975f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b39096d-f328-4ea3-a348-995384db9041",
        "cursor": {
          "ref": "2e15f6c8-1c47-41a2-800c-080f96df38f5",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "18f2186f-6dae-4b00-8906-084447bec715"
        },
        "item": {
          "id": "3b39096d-f328-4ea3-a348-995384db9041",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e90d76b3-8ed0-4b30-900d-f724b0258ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17baee19-2fae-4817-9630-9ccbd9bc0b0f",
        "cursor": {
          "ref": "bd80984f-00a6-484d-a83a-4b4fb1bae377",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "db93bb2c-6d14-487d-a74c-5c9e7351c27b"
        },
        "item": {
          "id": "17baee19-2fae-4817-9630-9ccbd9bc0b0f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2515d51d-2f6f-41e9-81fd-5358f8d5f5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747f1968-eef1-45ee-a5b1-f5d335055607",
        "cursor": {
          "ref": "7505623b-fe40-46b7-8d11-962bce780382",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d0f4a006-1ae5-4768-823e-9ea63cee506f"
        },
        "item": {
          "id": "747f1968-eef1-45ee-a5b1-f5d335055607",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d0cd055d-aa60-4574-9759-101530979b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b480b8e-09a9-42f3-ba61-d47d86012a4e",
        "cursor": {
          "ref": "2e08d4fd-2572-4cb3-9cec-f896cc2a7341",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "09e166d1-6710-4fbd-921e-a9afd4c297f2"
        },
        "item": {
          "id": "6b480b8e-09a9-42f3-ba61-d47d86012a4e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b25844bf-bdcc-4e85-a78d-a3a075af888d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dec21e0-8447-4647-b04c-86a8317613a2",
        "cursor": {
          "ref": "be5060eb-d108-4147-ac78-907c57167bc4",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b11016c2-9127-432a-b48f-3de6d2bed75e"
        },
        "item": {
          "id": "5dec21e0-8447-4647-b04c-86a8317613a2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5d5d621f-a487-4b47-a19a-2a30abf5c509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e3178f-e4e2-46b2-9c98-00b8b22fa521",
        "cursor": {
          "ref": "7f3169a3-9682-46c1-9c5c-c12a3acf8685",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2c818ba9-082f-4dbc-9ddf-1da52cd62e6f"
        },
        "item": {
          "id": "79e3178f-e4e2-46b2-9c98-00b8b22fa521",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "69fffac3-2482-473d-827d-aec37be78a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63214769-6854-4f8c-b1c5-0a8388718635",
        "cursor": {
          "ref": "7ebf6739-4558-4a64-9069-47e96cf739a0",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "440c83d8-3955-4b95-a389-58a4f33eca8a"
        },
        "item": {
          "id": "63214769-6854-4f8c-b1c5-0a8388718635",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2de8629e-030b-4397-a6ca-1116e662e9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4ecc46-27d5-4aa7-bcc3-158ecea69e7e",
        "cursor": {
          "ref": "0c0b5ce7-7c5d-4019-867e-934fd345b2b1",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "18b34074-3741-4a87-8045-26f8eb78fbf2"
        },
        "item": {
          "id": "3a4ecc46-27d5-4aa7-bcc3-158ecea69e7e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f20f36b2-8ba5-4eda-a1a9-6cbefe25feb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bc5d4c-e0eb-44eb-baba-3c6fc6a8d697",
        "cursor": {
          "ref": "ed735cae-9ab2-48eb-9fc7-a078fa32ce56",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "be3e47f8-1443-4413-ac43-a08a95502e2d"
        },
        "item": {
          "id": "d8bc5d4c-e0eb-44eb-baba-3c6fc6a8d697",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5fe7fc7f-5645-425c-acca-5a3e134f9b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee2c1ce-b539-4f8d-808e-7fc79206687e",
        "cursor": {
          "ref": "7db29754-6416-4f40-a65c-9351b94f6f9e",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ef033f69-9453-4997-9985-9d4a20bbd2ed"
        },
        "item": {
          "id": "aee2c1ce-b539-4f8d-808e-7fc79206687e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "52c55429-00f3-4dc1-a358-90e838d93397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6905ae42-daaa-489b-b05e-ee4e81cf6b3c",
        "cursor": {
          "ref": "ec5cf13e-d680-4548-bd48-446cba20acab",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "06e154ac-5f0e-40cb-96b3-27cfc56a6808"
        },
        "item": {
          "id": "6905ae42-daaa-489b-b05e-ee4e81cf6b3c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "46df9b38-4b99-4a8b-a132-f083c2ceb8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586d71ce-e595-4bf5-acd8-086f7dba62e3",
        "cursor": {
          "ref": "4fa81f9e-8b5e-4482-b83f-db0c2021e015",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8f4fa793-b055-48a3-a75c-df63ea2bf126"
        },
        "item": {
          "id": "586d71ce-e595-4bf5-acd8-086f7dba62e3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3d2e2e4b-6c57-4689-90e5-fcf94179829d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba16c90-708c-46cf-b682-86f35ba673c1",
        "cursor": {
          "ref": "c1c50e10-7c89-40a1-8fff-782229daeb7e",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f0e34e7c-b478-4dba-9816-a5337e9803a6"
        },
        "item": {
          "id": "6ba16c90-708c-46cf-b682-86f35ba673c1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bc02496e-e7c8-4ac0-b5c2-bc808df7ca47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3641c727-413c-42bd-a9ed-d7365a5fe678",
        "cursor": {
          "ref": "ec748ab8-6000-49f5-86d1-bc7ed8631df1",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c09a4ec2-315f-4b47-b4ae-6e9bb4d93084"
        },
        "item": {
          "id": "3641c727-413c-42bd-a9ed-d7365a5fe678",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9272b3f3-ab30-42e8-b56f-c3408f39193b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee599d47-9e66-471b-a08c-bd3777ec5991",
        "cursor": {
          "ref": "afaca53c-174d-436d-9c62-77d26158674d",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6e7bd948-ff2d-47f5-8db5-a91834a9499a"
        },
        "item": {
          "id": "ee599d47-9e66-471b-a08c-bd3777ec5991",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "48e2f0eb-6ddb-42e3-a386-1e99cea22efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cb8c65-7eea-4505-9bb2-155219368ca9",
        "cursor": {
          "ref": "d6c47641-9b16-4a63-8348-f6596efc88a1",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "96e7f8e9-e698-4499-ab89-750e588d2381"
        },
        "item": {
          "id": "c9cb8c65-7eea-4505-9bb2-155219368ca9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b16dc648-ef57-402d-88f9-56ff08e51f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221e9680-3ad0-401b-9cf4-9fab1295830f",
        "cursor": {
          "ref": "b3ce2117-6d1c-4ce3-b6ae-d0af867de6aa",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "adc05983-8469-40fb-a0b1-d6971375f8d0"
        },
        "item": {
          "id": "221e9680-3ad0-401b-9cf4-9fab1295830f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b7ded11b-0015-47c4-8700-364e18c735aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63b1bb0-3fd0-4bdd-8bb2-bd2d141665a9",
        "cursor": {
          "ref": "a7641026-664c-4b20-a24d-55393fd9cc14",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "49deddfa-d15e-47b5-bf6c-597bb33850c7"
        },
        "item": {
          "id": "f63b1bb0-3fd0-4bdd-8bb2-bd2d141665a9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4f5e853d-c8bc-46f2-8c67-9d63324fdffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a604813-d346-45d9-91cc-dcc4038c7fa4",
        "cursor": {
          "ref": "9faea713-0362-4ab4-b6d2-196c69cdc7e8",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0689e229-a114-4f61-ac5b-0d4b71abe285"
        },
        "item": {
          "id": "5a604813-d346-45d9-91cc-dcc4038c7fa4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f37b5ec9-b974-40f0-98dd-7a94c0cd8383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbcfbce-a72f-4def-a4c3-ecd8f74ec495",
        "cursor": {
          "ref": "af9746b5-7ada-4745-913b-5d9321edc03f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1f93a6c2-e3a7-497b-9028-2814abbcb190"
        },
        "item": {
          "id": "3dbcfbce-a72f-4def-a4c3-ecd8f74ec495",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b9f73b7e-8a84-4ea7-8670-00ffcded2a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981fd723-2bc6-47e0-8aaf-cf9292e33843",
        "cursor": {
          "ref": "b3665d1f-01b4-424b-9770-e732b1dfc286",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e567ba7c-1011-4a65-b3c9-84a7fdcb2f9b"
        },
        "item": {
          "id": "981fd723-2bc6-47e0-8aaf-cf9292e33843",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "dc24d732-18a6-4bfa-ac6f-262361396339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728cfe07-3a1c-4f28-88db-9cdd1ec59573",
        "cursor": {
          "ref": "34dca5c5-f532-41a7-b300-4a3575f67322",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "21912666-5218-4af2-8cad-5acbc43263cc"
        },
        "item": {
          "id": "728cfe07-3a1c-4f28-88db-9cdd1ec59573",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d95d9ad6-09f0-40b6-94ff-c291a9fce23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f0a030-8ab0-4642-a75b-1afa135a51ea",
        "cursor": {
          "ref": "cdfc9694-09ef-4f17-bfca-6e996b15b78f",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c8d06b13-5d26-4568-9bea-054b4554aafc"
        },
        "item": {
          "id": "53f0a030-8ab0-4642-a75b-1afa135a51ea",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "48ad80f2-3ba2-4fc1-beb7-e6294da0f6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdd9153-4d1a-49a2-a4c7-70d98d6cb60d",
        "cursor": {
          "ref": "9833016b-ac04-491a-94be-568217f732b0",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ee2a3161-d81f-4ec0-a928-b15acc79c17d"
        },
        "item": {
          "id": "5cdd9153-4d1a-49a2-a4c7-70d98d6cb60d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "534c92b2-b1a7-43ac-8204-3ad9d5a09979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d373dc4b-089d-41e1-9286-854786d51119",
        "cursor": {
          "ref": "7d199862-bdb8-4d66-aa34-c396223aab5b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "59a93d88-bb8b-4fae-9a49-08fb46db1b00"
        },
        "item": {
          "id": "d373dc4b-089d-41e1-9286-854786d51119",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7608eaf4-5d7b-4b44-888d-6e8dc0f03695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea05e481-92ac-45da-89db-92af0601cd9a",
        "cursor": {
          "ref": "ff5fab94-5c59-4d91-8a6c-cbedce56fe8d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6e8d5ee6-9715-4045-90b3-a08af010e7fe"
        },
        "item": {
          "id": "ea05e481-92ac-45da-89db-92af0601cd9a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5133968c-a57a-4c29-8cef-171b6267c01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f7ada5-70c6-44fd-8127-dd7072b628f2",
        "cursor": {
          "ref": "df7361dd-150f-4889-ac14-b573d5d453a0",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "88217ebf-73fd-4e3f-94f9-fbe2cf51c1a5"
        },
        "item": {
          "id": "d6f7ada5-70c6-44fd-8127-dd7072b628f2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "96086b03-b51f-4cd6-a5aa-3e93fd00d764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd767ae-c479-4e29-bfb8-4f23325e773f",
        "cursor": {
          "ref": "6ee07bba-3e27-4e9c-b99e-4b211c27affa",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2d7c38c0-bd3a-4ec9-ba1a-81f6d5578a56"
        },
        "item": {
          "id": "6fd767ae-c479-4e29-bfb8-4f23325e773f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "101af9c5-6102-4aae-a3a3-509ba1d6d2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237321d6-198b-4407-8c88-2ae79b1368fc",
        "cursor": {
          "ref": "2138b6ae-371d-4749-97d1-f8000e242c18",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "317a71ab-5ee0-483f-840e-b4776fa051ed"
        },
        "item": {
          "id": "237321d6-198b-4407-8c88-2ae79b1368fc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d5e78e60-e72e-4738-bcfe-c45f85418edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2077ff5f-0fa5-4b08-bc61-7202220af45b",
        "cursor": {
          "ref": "8cb5bf48-dd45-47dd-b395-bf002868304a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "181b5b47-9c75-47f6-b8f9-91e9ef5e4052"
        },
        "item": {
          "id": "2077ff5f-0fa5-4b08-bc61-7202220af45b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3580b268-5956-4a37-ae79-6772abe0e1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037f91c2-ff0a-47dc-bd35-6d06c0fadea2",
        "cursor": {
          "ref": "b3983151-61b1-460b-9eff-99b9ea69f3a1",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d81f46f0-62ae-4732-b68e-8e91d5e0ab55"
        },
        "item": {
          "id": "037f91c2-ff0a-47dc-bd35-6d06c0fadea2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "84ff480c-ccd4-4f6a-a4f6-391686812b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb3da6f-043b-46eb-b387-db566327080b",
        "cursor": {
          "ref": "f29a2107-d648-4cae-b937-5e65d5c10d29",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "43bc110f-c430-4d82-a87a-e684eb056392"
        },
        "item": {
          "id": "6eb3da6f-043b-46eb-b387-db566327080b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "48ba0c18-8b9d-4371-b9a5-206d74290d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e63a99b-7a7f-4aaa-a5cb-d8a992260174",
        "cursor": {
          "ref": "e0e3dfe5-f1d0-4ef7-be51-80a55873ea60",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f651b8b9-e31f-4b53-80fe-33817fd2227b"
        },
        "item": {
          "id": "1e63a99b-7a7f-4aaa-a5cb-d8a992260174",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9b7c9ec3-af5d-4db4-9167-ef0cfdb99eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8ab297-ffcf-4d92-bf8a-94ea82090f5f",
        "cursor": {
          "ref": "e92a39c8-543d-4afd-92db-037a349acd91",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f59c7937-712b-4e76-9e94-2e7b3beb9607"
        },
        "item": {
          "id": "2d8ab297-ffcf-4d92-bf8a-94ea82090f5f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "632c23db-1db9-4933-91d1-db9b97bc0ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6009f152-090a-4ed9-a4c4-c22c3f5b3ba4",
        "cursor": {
          "ref": "97a65110-d699-41ca-a443-a99222565e03",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "edcd5784-6f39-4a31-9eed-b182811fcc22"
        },
        "item": {
          "id": "6009f152-090a-4ed9-a4c4-c22c3f5b3ba4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8fff42cd-251e-40eb-9bbe-aae51eda3836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46263bab-3ba5-4400-adfb-e1b4da7d2fe6",
        "cursor": {
          "ref": "894060e4-aee6-4312-a589-c8e84ad85e08",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f3184b14-0f2f-4131-a845-0702466299a3"
        },
        "item": {
          "id": "46263bab-3ba5-4400-adfb-e1b4da7d2fe6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "da1cd0fe-a84d-40ea-b62d-64e3cb1173ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db42437-2a87-4d57-a600-1c0e849cad33",
        "cursor": {
          "ref": "6d0dc7b3-abb6-4d21-b214-9874d6b06445",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b7f43387-8e8c-4d0e-84f7-f1fa4db320b2"
        },
        "item": {
          "id": "9db42437-2a87-4d57-a600-1c0e849cad33",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1cd05bcd-e231-45c1-a678-287c1f2d483e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e17c41-d462-4565-8d6a-b252b2190344",
        "cursor": {
          "ref": "1c3b0d20-9b1b-4559-a6bb-bf81693602f6",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dade0125-c6ce-43b9-a1c6-ed28ec24f7ac"
        },
        "item": {
          "id": "a4e17c41-d462-4565-8d6a-b252b2190344",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a2d458d3-1100-447c-81b6-0aea9409b6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb17472e-c13f-4b01-8c51-fb351f2b3abb",
        "cursor": {
          "ref": "ce0727a0-ecdd-42cd-afe7-3880c2c34ef2",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "93e999b6-1786-4c07-b305-ad3d6293430b"
        },
        "item": {
          "id": "fb17472e-c13f-4b01-8c51-fb351f2b3abb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2dd5af4c-83ef-4fc7-8c3e-9eadae8035aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a26a779-5dc5-4a97-9566-ce81648f08a6",
        "cursor": {
          "ref": "92ab7e3d-ea83-429a-ad5a-f51d825dba3c",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "52562864-7a0e-45b5-a2fd-2399f045c4f4"
        },
        "item": {
          "id": "4a26a779-5dc5-4a97-9566-ce81648f08a6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3d19e825-dc3f-491a-9c2f-0e685c913d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bda0d3a-d7eb-46b3-b7f9-1f57d90ce7d8",
        "cursor": {
          "ref": "7c754a4f-61d1-456e-b55e-2209a0df7985",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7c67032b-d779-4e6c-afb4-815cce63e5ed"
        },
        "item": {
          "id": "8bda0d3a-d7eb-46b3-b7f9-1f57d90ce7d8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "14784b01-d07d-43c2-a895-bf9c0368fe1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 177,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fd8613-0c18-44e1-a3fc-e3938322d65c",
        "cursor": {
          "ref": "ceac270d-8dfb-41ba-833a-262f718c65a4",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ba62c26d-24a5-4c46-a609-9319d3dd1c3e"
        },
        "item": {
          "id": "a8fd8613-0c18-44e1-a3fc-e3938322d65c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "bae5f427-e736-4f0e-b15b-f43e4419e918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2976fa2-7f6f-4b5b-b7e2-b82b47d47b09",
        "cursor": {
          "ref": "9f299ec8-08e8-4fba-aaa2-6b4c27fbb4ca",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b69f86c4-50cf-485c-a3a3-d4840f00ae14"
        },
        "item": {
          "id": "f2976fa2-7f6f-4b5b-b7e2-b82b47d47b09",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "46ead2c9-379a-4877-9860-06d14d54c312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3d9d04-a00c-4b3e-bf68-c66251d7313a",
        "cursor": {
          "ref": "947da4dd-dcd5-4915-a4a5-dd1348922ec0",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8057b6ec-56c2-4775-a53b-cc7fb6860eaf"
        },
        "item": {
          "id": "de3d9d04-a00c-4b3e-bf68-c66251d7313a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "29488ee0-5a3d-4050-ad03-f42298a75aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87316ecd-973b-40e7-a89b-41e47d47dcb4",
        "cursor": {
          "ref": "0a5162e6-36ca-4456-af49-da8241b0425d",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5d4e6a22-327d-47f1-9327-8ca6131cc2da"
        },
        "item": {
          "id": "87316ecd-973b-40e7-a89b-41e47d47dcb4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4070dccd-3c32-44d8-a1b2-a01f860074ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faad7d74-8733-4076-957e-c524c8360636",
        "cursor": {
          "ref": "7608ddcc-b876-4e38-878d-53dc0bca6648",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "97c18cde-a226-492b-9258-843a48e30a78"
        },
        "item": {
          "id": "faad7d74-8733-4076-957e-c524c8360636",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "868a6a02-bf2c-4a20-a21a-8d917bb44645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c496a08-8d6b-4c3c-8ec2-adbd9e002548",
        "cursor": {
          "ref": "e16668e6-e2f4-4dd0-ad37-9dbd21ab267a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fc140439-c84b-4dec-b861-a1e19aca4f4a"
        },
        "item": {
          "id": "4c496a08-8d6b-4c3c-8ec2-adbd9e002548",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "160e10d2-25c0-4dad-b642-a6b15590c727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5551e289-da9c-4aa8-8c68-2c74f36c4bdb",
        "cursor": {
          "ref": "77c382cd-c672-420a-b2b1-d3f92200e228",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "777c8105-eec7-46ae-9794-36e7f0e60cab"
        },
        "item": {
          "id": "5551e289-da9c-4aa8-8c68-2c74f36c4bdb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bad2912c-200d-453a-aaf0-504472234fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9bda03-a8a8-4ea8-bf25-a0c26c0f3537",
        "cursor": {
          "ref": "658d0f0a-45b1-4a80-85d2-a2347eba3e69",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f96b9777-4a5e-4ce6-9e3c-c03603cd5238"
        },
        "item": {
          "id": "8d9bda03-a8a8-4ea8-bf25-a0c26c0f3537",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3d831104-1b96-43c5-82ec-317cfaf8f1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b880fd-d733-4b8f-9d23-7151db82714c",
        "cursor": {
          "ref": "97f022a3-836a-4a06-935c-6500b4c93a9a",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1e51c859-bd85-496c-a3cf-1f1ef7f10d7c"
        },
        "item": {
          "id": "83b880fd-d733-4b8f-9d23-7151db82714c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9108fbd7-a0ac-4469-a22c-1646234b4f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76370f65-1f09-4ac9-bfab-0c2654743a03",
        "cursor": {
          "ref": "a5571070-ecdc-4602-b1df-9888989f95b8",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c882e885-a82d-46fd-bc8e-e2e58712a44a"
        },
        "item": {
          "id": "76370f65-1f09-4ac9-bfab-0c2654743a03",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "47e4d2bd-be96-417b-8acd-3a1eced10fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de585629-a82d-41ca-b02b-cc6bc8aeadef",
        "cursor": {
          "ref": "52a9103a-bb8c-4d2d-b412-945bcdc1f42f",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6dd82cb2-d6e7-497e-b9e9-2314b413e6b2"
        },
        "item": {
          "id": "de585629-a82d-41ca-b02b-cc6bc8aeadef",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a30e6e49-3d06-4f7d-9401-9142f6ff4f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7461419-e9d0-4892-b2d9-b32f795e7211",
        "cursor": {
          "ref": "1fba1aaa-5bd6-4c3a-ab23-58891d88fa93",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f800c3c2-17a7-462d-90b4-ff956e183b90"
        },
        "item": {
          "id": "c7461419-e9d0-4892-b2d9-b32f795e7211",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3f838282-3f04-4dc5-995a-98b4580bf446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65df0b7b-0d40-435e-8d20-bd40dee0df9e",
        "cursor": {
          "ref": "4aa240c1-a4cb-4b68-87b3-a547523c6190",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ed4f5c25-e1bf-41bf-a686-fd49e147041d"
        },
        "item": {
          "id": "65df0b7b-0d40-435e-8d20-bd40dee0df9e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e27eb088-a576-433a-a6e3-5ecdc1bf3472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e48db38-9657-4673-88a6-cdcadaad993a",
        "cursor": {
          "ref": "4a12e01f-d836-4d87-876b-ff06c4cd5869",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2cd45b7e-16aa-457e-82ca-066c5f646825"
        },
        "item": {
          "id": "1e48db38-9657-4673-88a6-cdcadaad993a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "90a653a3-3ac6-485b-b0f3-ab413ce957e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 987,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f36d64-9263-4ea1-85d0-8530cbcdf27e",
        "cursor": {
          "ref": "084099af-b3b8-4f19-8137-6d91e71aed51",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bde8fbb9-b252-4bf7-8ba2-3439034fa1dd"
        },
        "item": {
          "id": "23f36d64-9263-4ea1-85d0-8530cbcdf27e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "08fc7554-d5a6-4532-9579-7a71b2ad0e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19844e56-95e1-44c8-b028-deda62ca209e",
        "cursor": {
          "ref": "f5dfd503-5a86-40d1-ad5c-2f01f2b3ee18",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "79db7790-9752-4fe6-8a34-7a8122359dbb"
        },
        "item": {
          "id": "19844e56-95e1-44c8-b028-deda62ca209e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4b7f0fad-4afa-45b9-9983-95a04a161876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a3af12-555d-48ed-8727-289c3c6f913c",
        "cursor": {
          "ref": "c9a2e796-cf36-4b7d-8ae1-8eb1f0a8bd85",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "08fe8000-770f-4141-a8ca-c757ad8e0bc2"
        },
        "item": {
          "id": "a2a3af12-555d-48ed-8727-289c3c6f913c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a41f055c-d4ea-4bc1-bede-59b7e9683617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74937b18-95ea-4ba2-b2cb-7681136ccf69",
        "cursor": {
          "ref": "40b033f0-08f4-48fb-8748-b9fd6e1182aa",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "dfcd4473-24d5-423c-a5a7-35639798acdb"
        },
        "item": {
          "id": "74937b18-95ea-4ba2-b2cb-7681136ccf69",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3175c6bb-2ddd-4a3a-9ea8-90b5bc1e4166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c9eec3-afe5-43a8-b7fa-9f98d67d6198",
        "cursor": {
          "ref": "66e50859-8e68-4ff7-a910-b837c4a56a83",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "578b481d-2136-4367-a3f1-e9eb56e12f6d"
        },
        "item": {
          "id": "18c9eec3-afe5-43a8-b7fa-9f98d67d6198",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2723f90d-8930-4853-93cf-ddc8a490d2f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fecdca-ebd3-4daa-a89c-92ae865135fc",
        "cursor": {
          "ref": "9c9326b6-42ec-4ece-aab9-1b2cf02ca490",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e2ccfb3d-df63-41e7-a1e7-114e2eb7ec45"
        },
        "item": {
          "id": "01fecdca-ebd3-4daa-a89c-92ae865135fc",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "03070936-0e11-4d6d-b4b0-fb35e222e235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2e62d7a7-2768-4cdb-bf53-5abc44bd3637",
        "cursor": {
          "ref": "0e1d5a82-eeac-4712-9e9f-4a9db6675606",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "63bd5fa2-3628-4670-af0b-f8feda3f9cb3"
        },
        "item": {
          "id": "2e62d7a7-2768-4cdb-bf53-5abc44bd3637",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f8cb0ce6-6fbe-4673-b6f8-3061867a1860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "1b403c13-95d5-46d1-937a-8a3c38892052",
        "cursor": {
          "ref": "e4324738-9109-4499-937b-e0d97e48ba27",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "78cf1671-378b-4e31-878e-a70bc27c77f3"
        },
        "item": {
          "id": "1b403c13-95d5-46d1-937a-8a3c38892052",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b0420b41-8f63-46dd-9920-d9073981d85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "66bb675d-367d-4460-994e-a5dccf4d6371",
        "cursor": {
          "ref": "61bfb554-ecb1-4c73-89b9-87d7ee00b9b7",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d40c5aff-c0ed-49b6-92e0-31ed2eec07e0"
        },
        "item": {
          "id": "66bb675d-367d-4460-994e-a5dccf4d6371",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "32676c26-6045-47c8-be94-e9a3b330f2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "d0d708c4-e194-4799-91f3-de76b9c2b8a3",
        "cursor": {
          "ref": "9fc6a7d7-9198-4680-9f66-efebd50b076e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "afcd13d6-cdcb-4772-bbc9-26449b01d186"
        },
        "item": {
          "id": "d0d708c4-e194-4799-91f3-de76b9c2b8a3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "91f0e553-7db0-4977-a122-79b1c0624e20",
          "status": "Created",
          "code": 201,
          "responseTime": 5455,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cd9a01-9963-4e2e-bcd0-5c7e05375bb3",
        "cursor": {
          "ref": "daa878ee-31d5-4eb6-960e-f11be460629b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "82ed0469-8ecd-46d1-9e9e-508e4fcf3e70"
        },
        "item": {
          "id": "a7cd9a01-9963-4e2e-bcd0-5c7e05375bb3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3b53659f-2d41-4c99-85db-0a9465dcee32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e0428c7d-bdc4-496f-bb32-a813ab12def7",
        "cursor": {
          "ref": "2ab1f53d-7c32-446d-bdfb-4fd9680f78b9",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6cb18944-6edd-4bd8-9485-29844c51830c"
        },
        "item": {
          "id": "e0428c7d-bdc4-496f-bb32-a813ab12def7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bc46ab48-5642-4af6-833c-76c16fbf7547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8a31bdea-2fd4-4849-982a-5168a8e87b86",
        "cursor": {
          "ref": "6094418b-9f30-4f8f-a57f-bfaab90ba819",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7bd72ba6-5eac-4a39-8efb-78629aada547"
        },
        "item": {
          "id": "8a31bdea-2fd4-4849-982a-5168a8e87b86",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "274145c3-d763-48f0-8b37-bf6dd1e5d031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ef005f-f178-4fc2-bee9-52d918a57594",
        "cursor": {
          "ref": "69e5320f-8fc1-4f42-af2d-be2613c5e251",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4faa5daa-fb07-4320-b285-5467b31867a8"
        },
        "item": {
          "id": "e1ef005f-f178-4fc2-bee9-52d918a57594",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "696c9fe2-3fac-48a6-913e-cce63c68e031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0991cb7-f3c7-468a-855e-d80f2c6b3dd0",
        "cursor": {
          "ref": "2b68299e-e58f-4753-b7ac-f625b45696d2",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7cfe89f5-8110-44d8-a316-2b5c84c16765"
        },
        "item": {
          "id": "a0991cb7-f3c7-468a-855e-d80f2c6b3dd0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "80caf9ce-a186-4f6e-9a9e-7c4d825d2fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f77ee03-338f-47f8-ac1d-7d8e1eb60268",
        "cursor": {
          "ref": "47b4c3e0-de15-4a82-a47f-561d5610d1f8",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "556c3109-f104-484f-a549-c14aa3bb9798"
        },
        "item": {
          "id": "3f77ee03-338f-47f8-ac1d-7d8e1eb60268",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "365d25b0-b9b8-428e-b186-a202aed492c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9867b7a-da44-4215-a956-0091874ee9dc",
        "cursor": {
          "ref": "bcf30b7e-e705-4c1c-9237-3046db66a1b8",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "95ad4ad5-f7f3-4aa6-8a06-8b3597345c02"
        },
        "item": {
          "id": "f9867b7a-da44-4215-a956-0091874ee9dc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "15c17419-bdd2-4498-aca9-986b85a29101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3371db5-c959-4d2e-bb64-40b30ea21d73",
        "cursor": {
          "ref": "ae1fcbe8-cbd7-451d-80a6-d62bdde67677",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c73ae5b1-3224-457a-9847-76cbf3ac3a06"
        },
        "item": {
          "id": "e3371db5-c959-4d2e-bb64-40b30ea21d73",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ad01dad3-77cf-4f43-ae28-618609705efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6445d04b-6525-4702-a367-9085eee336fe",
        "cursor": {
          "ref": "de2a87e7-1b14-49e4-9558-ae39541a795d",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0f860350-c32f-4cee-9be6-3ff5cdf5d6c8"
        },
        "item": {
          "id": "6445d04b-6525-4702-a367-9085eee336fe",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8a02a125-e212-49e4-bdcb-037d66be6bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbbd187-3271-4828-8060-ddf40bd9a2e4",
        "cursor": {
          "ref": "ee75ea91-40f7-4b74-8ea8-a081e607e1c4",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "41dbe25f-363f-411c-afce-45e0506db217"
        },
        "item": {
          "id": "8cbbd187-3271-4828-8060-ddf40bd9a2e4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f5176b0a-ea49-425a-b515-1273e642a4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c576ee-2b9f-4217-946a-310611b71d73",
        "cursor": {
          "ref": "8253d5ec-7bc1-4711-a246-c940e76713a6",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1d19f734-8315-4423-be86-102b23bbe161"
        },
        "item": {
          "id": "f3c576ee-2b9f-4217-946a-310611b71d73",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "04cea853-df70-434c-96f4-cc096d34dac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46881e25-b068-4bc4-a35f-e357d5077d0a",
        "cursor": {
          "ref": "87100fc1-3d46-4d81-a4f8-de83847365cb",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "97fc421b-25a1-439e-a4ec-bf519f77093e"
        },
        "item": {
          "id": "46881e25-b068-4bc4-a35f-e357d5077d0a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "045d8412-9f74-4af2-b01d-b6a107d1a72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b6a616-4f72-47bb-a69b-27ee722c0c16",
        "cursor": {
          "ref": "9564da0b-cd13-4b08-b9b9-a360037d3601",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "92b3bb5c-3adf-422b-ad01-6d73a7f24cdc"
        },
        "item": {
          "id": "33b6a616-4f72-47bb-a69b-27ee722c0c16",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "de0e4b4c-7320-4873-ac86-ecdc64e7dd9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee1ec45-2b4a-420b-bd57-bbb32f93d54f",
        "cursor": {
          "ref": "fb78796a-9b54-4a29-9e6e-1013a844b985",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b883ed24-a547-41bc-a2c8-885c6bbc1528"
        },
        "item": {
          "id": "eee1ec45-2b4a-420b-bd57-bbb32f93d54f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "76d0f611-1737-4a6b-b807-95e4bcd7ad78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fd2812-6c76-4a50-af1f-9b2744a06817",
        "cursor": {
          "ref": "a6460c12-d9d4-4e90-ab50-e0e974a8057a",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "37309985-1fb9-45b3-b06a-044f39fe064e"
        },
        "item": {
          "id": "c5fd2812-6c76-4a50-af1f-9b2744a06817",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "68acaf69-a42f-45b4-8f82-43139f60d2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0353b698-f7a5-480a-ae25-a82df4358afa",
        "cursor": {
          "ref": "25c84472-6abf-4b7b-9375-aa3b5610a623",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "45488305-e16d-459c-9466-7e18af910afc"
        },
        "item": {
          "id": "0353b698-f7a5-480a-ae25-a82df4358afa",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "78e64a3f-48d5-43ea-9342-49d03fcfe61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83c71bc-c0c3-443d-b33b-62f729f0e085",
        "cursor": {
          "ref": "66b2ed6a-7a41-4b18-b6c2-0d3e89ca8d37",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "75498b2c-5998-4c28-9e0b-9394cf77c884"
        },
        "item": {
          "id": "d83c71bc-c0c3-443d-b33b-62f729f0e085",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "27d82cb0-85ef-4405-85c0-7032333cfe7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ecb264-62ec-4900-8ff6-a365e33b0257",
        "cursor": {
          "ref": "1e4c2340-8b3b-46fb-9c01-1f498d88eddf",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "30fb2147-f790-495e-a702-8001406fe75b"
        },
        "item": {
          "id": "b8ecb264-62ec-4900-8ff6-a365e33b0257",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b7b1afa6-0172-4bc5-9799-f0793b10cdc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3816f1c-f1e3-49a0-901a-934350ad3f5a",
        "cursor": {
          "ref": "94626674-3b49-492e-9aee-99e51e670c96",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ff995c77-9a55-48c6-a1eb-e64ff5379ad1"
        },
        "item": {
          "id": "d3816f1c-f1e3-49a0-901a-934350ad3f5a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "93d99143-a0ef-41c4-97e5-50a7c49587cc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 22,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "bb593d70-b2c2-42ae-a70e-35a987b7330b",
        "cursor": {
          "ref": "5731924e-22e6-494e-8fd4-3d1b6fb64a08",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c040d678-0e41-4948-8a85-2d70830b9fea"
        },
        "item": {
          "id": "bb593d70-b2c2-42ae-a70e-35a987b7330b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "62c1acdc-3f2d-4e64-91a6-dded2bb9ffa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b17a0f3-48d9-4b72-8973-da1baf677506",
        "cursor": {
          "ref": "fb25d11b-c2ec-4db7-a9a3-bb821dc7bb26",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f007023a-7b04-4a26-b6d3-f2c55b9bd42f"
        },
        "item": {
          "id": "2b17a0f3-48d9-4b72-8973-da1baf677506",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bc77ab81-f486-4732-b3cc-29724881e9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92674831-d27c-44ab-9a53-433ffb7f513e",
        "cursor": {
          "ref": "e8b9c4dd-5487-46e9-9996-fab43ee83558",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3c01cd8e-b9eb-4bc8-9c94-802713f7eed1"
        },
        "item": {
          "id": "92674831-d27c-44ab-9a53-433ffb7f513e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0e58b5a0-abcb-45c3-a446-c3fc7add0411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086c22c6-ec25-4ce6-8261-be86587c02b1",
        "cursor": {
          "ref": "30803254-15a4-4166-a4c6-682eff8e6e52",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "454a6aa9-fa72-42ed-be1d-2837ff97518c"
        },
        "item": {
          "id": "086c22c6-ec25-4ce6-8261-be86587c02b1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d82c6a18-6c69-4fb1-a7b2-610032377d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406f4f8a-6236-493a-8a4b-991385bbd667",
        "cursor": {
          "ref": "4671a71f-e1eb-435f-af07-056efe1b474b",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6839c74e-7d0e-4cc8-b3e1-729ec423050c"
        },
        "item": {
          "id": "406f4f8a-6236-493a-8a4b-991385bbd667",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "42472118-c6b9-4105-99f0-cbec5dec9292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad97ae4-117c-4e67-b2a6-5c85926810ae",
        "cursor": {
          "ref": "f2c5e1be-dd88-4122-80f4-e7399d886382",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b85780b2-cdda-41a0-b625-36abe4d2cc78"
        },
        "item": {
          "id": "cad97ae4-117c-4e67-b2a6-5c85926810ae",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fec9a730-2a9e-4e23-8b42-eef53e5dd15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856bb1b4-39b6-46e5-ad5f-54cdc9131499",
        "cursor": {
          "ref": "5bb5039c-7174-4775-852e-b81d4f8fb4ab",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c309902a-2543-45cc-a833-88e7a43d0f07"
        },
        "item": {
          "id": "856bb1b4-39b6-46e5-ad5f-54cdc9131499",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "50da268a-442c-4872-b74c-5985cf3da85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae14219-8c5d-4dfd-88de-43fbaa327ca8",
        "cursor": {
          "ref": "b662a352-cefc-41ad-9bf4-4671296531a4",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d2b0e403-bbfb-417c-824a-a919f2ebe4da"
        },
        "item": {
          "id": "cae14219-8c5d-4dfd-88de-43fbaa327ca8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6d94039c-ed1c-4133-807b-a4db5d286471",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "93fee1af-5c57-4fe2-a80d-9ec7a61834fe",
        "cursor": {
          "ref": "aba7d95d-4415-497e-9f7f-ec5d2782a1c8",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d4dbd12a-44ae-4742-a2a8-9993cfc4873c"
        },
        "item": {
          "id": "93fee1af-5c57-4fe2-a80d-9ec7a61834fe",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "966b4dc1-04c5-46d3-906e-430de87c20b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04bca15-46ed-4883-9c9f-7e0e274fa0e5",
        "cursor": {
          "ref": "0837ab5b-476f-4b7e-88e0-4cc2926a2e9a",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "637ddd70-6597-457c-9916-128569b4b731"
        },
        "item": {
          "id": "d04bca15-46ed-4883-9c9f-7e0e274fa0e5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "36b8e97e-b12d-4f91-8023-d87225647920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fbcc99-c0ea-4e9b-bccc-e8211ef8316f",
        "cursor": {
          "ref": "15dd7ab0-7fd8-4ecf-b0f1-0d778c645d92",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d01aad30-29d6-4470-a95b-b4459cdc2a51"
        },
        "item": {
          "id": "93fbcc99-c0ea-4e9b-bccc-e8211ef8316f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e7d2d97c-22e4-45ed-91ed-d9fed0059d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6cff96-daa3-4ebe-b2d5-7ff7e007ea3c",
        "cursor": {
          "ref": "b307e2bf-8137-4d6d-a312-49cc6764c6ab",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a5721eca-7e70-447b-bde2-7ed2330d3a17"
        },
        "item": {
          "id": "bb6cff96-daa3-4ebe-b2d5-7ff7e007ea3c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6b9127a7-5fd8-4e7d-b157-a5cb1ddc9492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f32f3d-40f2-41e5-b590-b06fc6e96b75",
        "cursor": {
          "ref": "bd9e527b-a2fa-4930-9f0c-28bdace50fb9",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2c1f3b8e-82aa-4df0-b794-f85fb78bde1b"
        },
        "item": {
          "id": "d3f32f3d-40f2-41e5-b590-b06fc6e96b75",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "26e81b78-8d5c-4cd3-96c0-72833eb82cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c90849-f9b7-4efb-9904-ea175b35b713",
        "cursor": {
          "ref": "3881644b-222d-44fd-9342-92e9a6e5f810",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e6d62aae-3881-4ab0-a439-7e6549efae0f"
        },
        "item": {
          "id": "95c90849-f9b7-4efb-9904-ea175b35b713",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "66718194-7d33-407f-a543-a5e4703a1d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b47e98-9cee-4b2a-9e53-8951685bff23",
        "cursor": {
          "ref": "753aaf30-f9c7-4247-8d56-a917216bff50",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ce236cdd-7dc6-4b6f-9fba-dc06d952f02f"
        },
        "item": {
          "id": "c1b47e98-9cee-4b2a-9e53-8951685bff23",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7f838dba-cb6a-4d40-abda-9c617f7804f3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 77,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "e169683a-74ea-4575-abb6-4775855fe4d5",
        "cursor": {
          "ref": "5b765868-cb0c-41d9-bdb7-ffa397034f66",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e6839e89-a92a-438e-82e4-b1784523b1fe"
        },
        "item": {
          "id": "e169683a-74ea-4575-abb6-4775855fe4d5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1d8b9369-f8bb-4505-8603-d5889abcb2c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a63597b-b09a-425d-9503-f9afad8bd168",
        "cursor": {
          "ref": "e0b2935a-396a-4876-932a-9217c3e66046",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9eb46467-aa11-47bb-a107-071e6aac6e1b"
        },
        "item": {
          "id": "7a63597b-b09a-425d-9503-f9afad8bd168",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3e5396ae-72e2-458c-8679-ce3e5a31d650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c213ca-133e-4b23-ac2a-d643995bb55a",
        "cursor": {
          "ref": "bfc0a96c-57ff-423c-b7a6-98981649b8d0",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "89f0cf1b-c7a0-4473-8aa0-0c83aa39801c"
        },
        "item": {
          "id": "66c213ca-133e-4b23-ac2a-d643995bb55a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b6f0cdf9-1501-475e-a690-1f8578445171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68c0a84-fa12-4a8f-a27e-1b9fb4cbb2ee",
        "cursor": {
          "ref": "f7914dac-813a-4a3e-86d1-70019a8473cf",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b62860fc-8015-450d-8204-6a994c25788d"
        },
        "item": {
          "id": "a68c0a84-fa12-4a8f-a27e-1b9fb4cbb2ee",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "21bd2edd-d08f-4f43-9a04-b11a19ab207e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d4a1ef-dc80-49e8-9d94-35a7a7fcef30",
        "cursor": {
          "ref": "000ca51c-2249-40ff-b809-49dc44a0ebd3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9a249d6a-118f-4f59-b082-c86b1522f39a"
        },
        "item": {
          "id": "44d4a1ef-dc80-49e8-9d94-35a7a7fcef30",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2ea7eebc-c217-4ee9-8408-fb1f66d2e4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2938d77-59c2-43c8-9277-1ce6ccfd0341",
        "cursor": {
          "ref": "c976f3cc-ff56-49de-96f6-d2789eeadf4d",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ec298e10-71ed-4feb-b953-4e61c944bc3f"
        },
        "item": {
          "id": "a2938d77-59c2-43c8-9277-1ce6ccfd0341",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "da383205-37f6-4e0d-b680-05cf211e9b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5465a4-43b4-452d-b54a-c452cd633348",
        "cursor": {
          "ref": "f6bee7fc-5f06-44be-a7c0-3dc6c874f3de",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "bdef3110-f4f3-45d9-af00-d9e74238f2e9"
        },
        "item": {
          "id": "5f5465a4-43b4-452d-b54a-c452cd633348",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2ee7b9aa-1f39-4a4a-a7b7-ae5c44d466b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7553ebb7-ded5-49c6-bdfa-6eac32dfa4c0",
        "cursor": {
          "ref": "45fae348-b227-40fd-a366-79002f8fe6a8",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "42f47433-336c-41b4-b4ef-620b59bf6d97"
        },
        "item": {
          "id": "7553ebb7-ded5-49c6-bdfa-6eac32dfa4c0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0369ea89-b764-44d0-bddf-a633e6769a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85447967-a4d2-400f-93d9-9d42fc8334e7",
        "cursor": {
          "ref": "a8e00257-f173-48e3-bc5c-4d22f7475435",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9e735f7c-cf5c-4814-84e3-b0348141c163"
        },
        "item": {
          "id": "85447967-a4d2-400f-93d9-9d42fc8334e7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "66976154-0d3e-432e-83ac-36e6dcaaf943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff96a0c-860e-4615-be6c-df2c0458c09f",
        "cursor": {
          "ref": "115b2aa2-5e60-4e32-ad70-18bff795906b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "934d8179-f766-4b86-880c-b8eca38e4014"
        },
        "item": {
          "id": "9ff96a0c-860e-4615-be6c-df2c0458c09f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6f245659-527e-49f0-b616-54886b9a3d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4fa22e-48e0-4653-93d6-e9cf5915926a",
        "cursor": {
          "ref": "1cb4fd26-752f-43ca-a38e-58423ec55777",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "98ed17d0-e8bf-429f-908c-a9c10de826a4"
        },
        "item": {
          "id": "8a4fa22e-48e0-4653-93d6-e9cf5915926a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "423cbac3-fab8-471b-8777-c9deb4ae785d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cc39ca-339e-42c9-b9a9-1eb8971691ba",
        "cursor": {
          "ref": "67d04b16-a67f-4bed-acf2-46c2405c3a64",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1978775c-597c-49c3-919c-44ed72a9d891"
        },
        "item": {
          "id": "c7cc39ca-339e-42c9-b9a9-1eb8971691ba",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "529ab7b3-8e76-40d0-941c-42c20f462e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d033a83-8afe-42bc-91ba-ef693df68e82",
        "cursor": {
          "ref": "976ee7cd-d3b3-4434-8cf8-1a16d221f9b6",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "40e37fc1-c7ee-4de9-b043-a09296c34416"
        },
        "item": {
          "id": "6d033a83-8afe-42bc-91ba-ef693df68e82",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a1d72ca8-51b0-46e1-beac-20faa05f3b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d340deb-c923-4a8b-8f93-da27c639f659",
        "cursor": {
          "ref": "0eacd672-4112-4dd0-ba59-85158a842f25",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "14f02fa1-d3c0-46a4-b22d-1dd472478080"
        },
        "item": {
          "id": "9d340deb-c923-4a8b-8f93-da27c639f659",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6aa04415-6f58-4f38-b933-695869aefd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae9d3e2-9a55-40d4-bffd-67c46b27e352",
        "cursor": {
          "ref": "0b30d1a4-6862-495c-ad71-bbea6675b538",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "32d4714c-6d2c-4b76-aba7-4591a5325419"
        },
        "item": {
          "id": "8ae9d3e2-9a55-40d4-bffd-67c46b27e352",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "784ff8a2-1ede-4af5-9364-0456deaa4470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e2714f-53e4-45ce-b0be-2a67fd587c69",
        "cursor": {
          "ref": "2aed1400-059c-4615-a1c0-a5860157b43f",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fe3824ca-688e-4e06-ad9e-489e76ae27fd"
        },
        "item": {
          "id": "08e2714f-53e4-45ce-b0be-2a67fd587c69",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "69456f4e-2977-4574-ba30-f050b123710a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c43ede-f11f-4fdc-a8b3-2451098d9254",
        "cursor": {
          "ref": "30ba1b7c-3960-42ae-a084-1747d082e4d6",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6dc63355-ccaa-42d7-bc86-b2d0f2b8c3c6"
        },
        "item": {
          "id": "d5c43ede-f11f-4fdc-a8b3-2451098d9254",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "efb48162-6f5c-4001-b3a9-4f2dfbc36673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a857aa6-8460-4714-9634-32dde12a5a97",
        "cursor": {
          "ref": "0a160868-1ec1-4c58-9dcd-65805599b703",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "44433cbf-b889-4c5d-9d91-7bdecca981c7"
        },
        "item": {
          "id": "9a857aa6-8460-4714-9634-32dde12a5a97",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "60f6888b-9991-4fdc-8229-cfd2490feef4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "f56f083f-386e-4666-9d9f-b26e76076918",
        "cursor": {
          "ref": "71e739e2-ff5d-4901-b1f0-acc9f27f2e40",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "35ffaadc-195f-4871-86f4-2133423cbcc4"
        },
        "item": {
          "id": "f56f083f-386e-4666-9d9f-b26e76076918",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7c6959fb-2474-4f34-b5e0-20ced4f5f63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a49f62-8996-4c94-b09c-3dcab2d32313",
        "cursor": {
          "ref": "0be0f8f0-d853-4b3c-a6ea-679d791c6ac3",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "046eec0d-582b-453a-967d-e82e16d6ac0e"
        },
        "item": {
          "id": "05a49f62-8996-4c94-b09c-3dcab2d32313",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e45a130e-7dc9-4d13-b60f-ebd75412e345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9320637d-bbc1-4986-8c2a-ae716f9c3bae",
        "cursor": {
          "ref": "6f4b496e-66c0-46b9-bc75-1e5e3e4dee6c",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7cf61340-d9c4-459a-9309-cb2a8eb82185"
        },
        "item": {
          "id": "9320637d-bbc1-4986-8c2a-ae716f9c3bae",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b5228edc-3dd7-4f59-80b1-40f60ef59a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87a36a7-b3f4-4646-9849-649ed6338bf9",
        "cursor": {
          "ref": "0df45b49-827e-4f69-b4ca-66e188a64dd4",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "838eae88-2268-406c-aed9-d4e50a16be0c"
        },
        "item": {
          "id": "d87a36a7-b3f4-4646-9849-649ed6338bf9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "233af748-4c2d-4135-ba82-88ac859daac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bff9d4e-e9aa-4527-a1f3-2bbe084e160c",
        "cursor": {
          "ref": "e2d78896-2ec9-47b9-a71b-74460802981c",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "97da53c7-d63f-47d9-96c1-73b606d4420f"
        },
        "item": {
          "id": "7bff9d4e-e9aa-4527-a1f3-2bbe084e160c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "806e88fa-107a-4d61-ac77-71c2460a60cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10745ef4-a7d5-4af1-b836-0f5500956ce8",
        "cursor": {
          "ref": "388beb40-31c2-44de-9bd0-85bb3146f759",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "24e6c813-844c-4b89-8364-963aa9cf5039"
        },
        "item": {
          "id": "10745ef4-a7d5-4af1-b836-0f5500956ce8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3ba84a50-36d8-4f5f-93bb-41d67d795e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d6de24-2dbe-44cd-a6c2-9421316126df",
        "cursor": {
          "ref": "05e2bde5-73f0-47aa-bec9-4dc3d975eb11",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fd0a6eab-d56b-40e4-9eed-09f7ca78327d"
        },
        "item": {
          "id": "16d6de24-2dbe-44cd-a6c2-9421316126df",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "afa3fcdb-802f-40a0-8084-b5e46ecc8400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671dd338-8c95-4046-b95c-cdd7ff80e084",
        "cursor": {
          "ref": "61d5d597-d299-426b-8172-d28e9eb6027d",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "802693cf-cf91-44b6-ac1e-5602e5f90e41"
        },
        "item": {
          "id": "671dd338-8c95-4046-b95c-cdd7ff80e084",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d7924bef-125b-47e9-a40b-3a022269e42a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "7b49218e-b1af-4661-866e-b316889f05e5",
        "cursor": {
          "ref": "427d2b2d-a20c-46ac-9a29-a13ff2597fbc",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4dc0351d-4a43-405d-8d17-da4c9ecea458"
        },
        "item": {
          "id": "7b49218e-b1af-4661-866e-b316889f05e5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4defbbd6-1c03-4d45-b4f7-c7e3d5aa009f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5571cdaa-b995-4300-ad5d-ec9175a96eb2",
        "cursor": {
          "ref": "e813bdfe-4d2b-409b-840e-3cd9271efa75",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ee2029c2-5d28-4b5c-9d62-ddc42bf73c06"
        },
        "item": {
          "id": "5571cdaa-b995-4300-ad5d-ec9175a96eb2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "63ac0ded-543a-4ad5-80ee-609b3bb0b802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b893efb-8ed7-4ef4-989e-4ed0be1b7f5e",
        "cursor": {
          "ref": "50cccc7e-2cd7-4744-a923-c184861201ea",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "45fc231e-c0e6-4717-8bad-9bd54debc52d"
        },
        "item": {
          "id": "0b893efb-8ed7-4ef4-989e-4ed0be1b7f5e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3a0d3334-ea7d-47d5-91e8-47de0b387f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffb5cd5-6714-42b3-a7ae-2e5d647a0866",
        "cursor": {
          "ref": "e693411a-0d3a-4488-83a5-d7fa3963541f",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b037bfa1-920b-47cd-8c7f-33f7af04d384"
        },
        "item": {
          "id": "8ffb5cd5-6714-42b3-a7ae-2e5d647a0866",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "411eba43-7ec3-4369-9966-2b4de67837b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea55e4fc-b1d0-4ff6-a1d3-75a3a341eda3",
        "cursor": {
          "ref": "d03ad01a-d06a-4cd9-a7fc-71a5d724e18d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "421701d6-324b-4104-8fd8-5ea0890f5295"
        },
        "item": {
          "id": "ea55e4fc-b1d0-4ff6-a1d3-75a3a341eda3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ce6fc738-b791-4ba6-898f-140ae7e08388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ea1d38-9eb3-4a0b-8c2b-4becfdc90d59",
        "cursor": {
          "ref": "fac5e511-6846-4899-87e9-800a83adfa93",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "937774bd-17be-410e-baea-3ded29d3fecf"
        },
        "item": {
          "id": "c0ea1d38-9eb3-4a0b-8c2b-4becfdc90d59",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e669bd33-9ea6-421a-b5ca-9d6f6dd8188b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1eecb53-4950-4909-a956-2cbe4331827a",
        "cursor": {
          "ref": "898948e8-44b9-438f-a109-a9735a4e95be",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7a0502f1-b05a-4603-bd27-c8eb192c455a"
        },
        "item": {
          "id": "c1eecb53-4950-4909-a956-2cbe4331827a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c64b8491-41f9-4530-a43d-b11f418a58f5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 28,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "1f1626cf-aa47-403a-93fe-6f7ca5567403",
        "cursor": {
          "ref": "1916a3b0-c043-4da3-99f0-8058db5300eb",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7d41b9b8-3b5f-464e-867c-784bdc27fa9b"
        },
        "item": {
          "id": "1f1626cf-aa47-403a-93fe-6f7ca5567403",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "76db34fa-cfdf-4a83-9d6c-3f847c789970",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "6eb908e9-3334-47df-b28c-07b78e0cb195",
        "cursor": {
          "ref": "70bedf86-c077-495f-91c9-1c390b0d847f",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "437d1ede-f7f1-4984-b099-e8dae840010f"
        },
        "item": {
          "id": "6eb908e9-3334-47df-b28c-07b78e0cb195",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2c018cac-2bbf-40c4-8e83-d0c3bb349007",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "d7a07337-94fb-4f37-9e86-445ae1a82bdb",
        "cursor": {
          "ref": "f0b1aaa1-349d-4cba-84d8-fe88038ddc2c",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "42ff0dd7-72d5-4eab-a626-23167ca625c9"
        },
        "item": {
          "id": "d7a07337-94fb-4f37-9e86-445ae1a82bdb",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "89ef2b13-40fe-4d63-95f6-3771c0ced9f5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "c2fc55b2-5501-4b4a-a9b5-2518c9bf94bc",
        "cursor": {
          "ref": "e2cd3594-edbd-4f4e-89b0-cbf3ff0d49d6",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a3ef981e-c765-4be1-a0ea-259d16f7eb61"
        },
        "item": {
          "id": "c2fc55b2-5501-4b4a-a9b5-2518c9bf94bc",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "85f6de5e-cfdc-4bce-8e30-be5e92a86f21",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "a1666233-d06e-44b5-a991-612019017bfa",
        "cursor": {
          "ref": "89d6b872-f127-4333-9d71-514f03a0a7a9",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b3efbf49-f605-4594-9b3d-3666f1de2df5"
        },
        "item": {
          "id": "a1666233-d06e-44b5-a991-612019017bfa",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a3f68d04-0da0-48f8-81f3-720b64c4821b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "549b674d-c42d-4bb3-9c26-61f00cc14f97",
        "cursor": {
          "ref": "437cf3c0-a0f8-42d4-a172-dac0409ef712",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fd6c08a6-672a-43aa-b2ce-f680ad10e42d"
        },
        "item": {
          "id": "549b674d-c42d-4bb3-9c26-61f00cc14f97",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5b4f5969-3a51-4456-94aa-40d947a6cafd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c3f67d-21e9-43f8-9906-e03f57d471b1",
        "cursor": {
          "ref": "fea3eb61-fad9-4d96-a4b7-ce7551a3877b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c9880a4a-ad26-49ed-98f5-d9c03bdfb450"
        },
        "item": {
          "id": "76c3f67d-21e9-43f8-9906-e03f57d471b1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2dc4b17f-d72f-4985-9f12-a2ba373f5f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f81be3b-41e9-4123-94f2-273399322226",
        "cursor": {
          "ref": "64195c3e-cdf2-4449-89a3-a7a78ffe8401",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "576ca1a5-cfc2-45fb-ac7b-10ce4f2ce7db"
        },
        "item": {
          "id": "1f81be3b-41e9-4123-94f2-273399322226",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "41ac1fe3-15e4-434c-bcc8-aceda4765b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b363de6e-dc4c-43d7-aecd-7e04d6fec79d",
        "cursor": {
          "ref": "b4b81f83-ff7b-4415-81d2-51aba0483fa6",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "56372aa8-f630-44f1-860a-9c390c11db31"
        },
        "item": {
          "id": "b363de6e-dc4c-43d7-aecd-7e04d6fec79d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1f96300c-f566-44cc-b412-5ac4854b9687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d79a8a2-0b1c-4006-bb7b-097b5929404d",
        "cursor": {
          "ref": "1f2b6ca2-d2cc-40e3-8e2f-fc8fd0dd6c19",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7c9cfd25-2291-4c6e-9f82-d3b88a4a3f46"
        },
        "item": {
          "id": "2d79a8a2-0b1c-4006-bb7b-097b5929404d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "14a62cfd-7cff-4055-8c49-ed428563e387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f69b37-5fc1-487a-8af6-acd756611376",
        "cursor": {
          "ref": "10adb1ae-1ba0-4336-977d-f8e235c8bef8",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "26a47c90-882a-435c-8129-48739e3a70db"
        },
        "item": {
          "id": "f2f69b37-5fc1-487a-8af6-acd756611376",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "449dd766-ae1b-42c1-ab69-cc4d5be60dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef0414b-9c09-48b5-a66e-39b1cbebfa5d",
        "cursor": {
          "ref": "7bdf014d-beb5-43fa-a3c0-79377b267d7d",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4af1aeb5-1147-4057-b600-c05ee66edaee"
        },
        "item": {
          "id": "eef0414b-9c09-48b5-a66e-39b1cbebfa5d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "47071672-96be-498d-84b0-67cfa2c6928b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848b3378-c873-46c9-afbc-5bdde21fdfbb",
        "cursor": {
          "ref": "fd4fc2ff-9a0b-466d-b9ef-54f8ebf00da8",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b045c00b-6e23-43d5-bb0a-29683f5568aa"
        },
        "item": {
          "id": "848b3378-c873-46c9-afbc-5bdde21fdfbb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9ddff4c6-d2d6-4cf4-87fe-dcab194534c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06d02cd-025f-4774-a5e9-33a343dc7cf8",
        "cursor": {
          "ref": "2f88666a-2c91-4845-a562-43f929036a4a",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "96e3b74e-dc80-4ec6-bb1f-1063043bb412"
        },
        "item": {
          "id": "d06d02cd-025f-4774-a5e9-33a343dc7cf8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a96fae24-ac07-4083-b2c0-34dc97962eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394d2699-3175-4be5-862a-eff0ada45b4a",
        "cursor": {
          "ref": "03389b89-bae8-4986-9387-db80801bfc4d",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6d8bc06d-f382-4559-9fe3-b20491c8bf30"
        },
        "item": {
          "id": "394d2699-3175-4be5-862a-eff0ada45b4a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "790a8ea4-72da-48fe-aa5d-20e9a3717f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f1fb09-12d8-487e-adeb-11d74e8df71e",
        "cursor": {
          "ref": "ffef7785-47b3-40cb-8fdb-e35bce7830dd",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0d4e2ee4-2d37-433f-b1a6-601df8bc94d3"
        },
        "item": {
          "id": "a3f1fb09-12d8-487e-adeb-11d74e8df71e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3a2553ba-6275-4e2c-9d24-26917fc3596a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d207ca35-9f91-4e9a-9a5b-47e7e3a1838e",
        "cursor": {
          "ref": "38d6a001-2227-48b8-8730-7d56e0377354",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2df76c5f-f1e5-40ef-8be4-bd1346c71721"
        },
        "item": {
          "id": "d207ca35-9f91-4e9a-9a5b-47e7e3a1838e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a5f8f3f9-1973-4ddb-b83e-c5eccaeb7a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54bd89e-e19d-496b-a6b2-902993504918",
        "cursor": {
          "ref": "7e056b27-e5bd-493e-a8c8-0a96b9aaf9f0",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "05c0e3ab-f7a1-4f0f-a6df-fb4f5e02bcd9"
        },
        "item": {
          "id": "f54bd89e-e19d-496b-a6b2-902993504918",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "989aa699-537d-4258-90a3-b28a8f955544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3728a8b-41d7-4818-a933-0919bcc82e4a",
        "cursor": {
          "ref": "d8865369-1722-4c6a-b563-aa0c6e85f4bf",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0fb37f21-c6dc-4124-941f-07eb3c499dd7"
        },
        "item": {
          "id": "d3728a8b-41d7-4818-a933-0919bcc82e4a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "37e5172b-492c-4d46-84af-29e0c0f93a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ee9003-bd42-4f3d-b5df-f5d6fe6d63ea",
        "cursor": {
          "ref": "7d5cbb0a-5552-45a3-bcc9-1c3e50b2fb90",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "758cabdb-beeb-44d5-a156-5dc7352c1773"
        },
        "item": {
          "id": "21ee9003-bd42-4f3d-b5df-f5d6fe6d63ea",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2ba25da3-eb31-4242-92dd-d69ea0aea3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e5e02e-9c39-437f-9bc6-1d8210dddaa3",
        "cursor": {
          "ref": "24c1064d-e93b-40bb-8d0c-a488d7ef7fab",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "54d1212f-61e9-4323-be61-fe8faa44f6cc"
        },
        "item": {
          "id": "65e5e02e-9c39-437f-9bc6-1d8210dddaa3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a0438479-f2ea-4604-9f0e-d8dc854e8df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0387d3ae-44dd-4db2-9465-cd9af82ecc90",
        "cursor": {
          "ref": "18da2026-f220-4fb1-a245-cfd142563f21",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "335285fc-4543-47f0-b95f-81c283ae60dc"
        },
        "item": {
          "id": "0387d3ae-44dd-4db2-9465-cd9af82ecc90",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d5625b0b-45cd-489d-b46c-e578ff8bf067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c229051-7da2-4b1d-9517-3b745ca38f05",
        "cursor": {
          "ref": "bfe53f71-90f5-4517-9327-c3e874d4a5af",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4a7219e8-7ade-44c2-b58d-10635f0a9d91"
        },
        "item": {
          "id": "9c229051-7da2-4b1d-9517-3b745ca38f05",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e372b6f9-9812-454d-955f-ca99fb504b73",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "7e0dde75-67d3-4970-8de6-260c441d7a75",
        "cursor": {
          "ref": "b2ab3c0b-b584-48e8-9eb6-bae318d71313",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7148f2a5-b254-4134-9bc1-04895889dbad"
        },
        "item": {
          "id": "7e0dde75-67d3-4970-8de6-260c441d7a75",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "11a04334-d168-4e78-b60a-c7d3af7dfbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63b5f88-213b-4ad3-bb1f-041f1c81f5d0",
        "cursor": {
          "ref": "bb78f142-d9f7-42bd-b442-def846befe65",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "34b9c304-93c1-4359-9c03-73ffdf6534cd"
        },
        "item": {
          "id": "d63b5f88-213b-4ad3-bb1f-041f1c81f5d0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "80ebb442-422d-4269-8b1c-1975c6c8de3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd56fa9-55cb-44a9-8d17-674461b113fc",
        "cursor": {
          "ref": "cc2bb64c-b143-4d77-9006-fdbd13324194",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7b89a5f1-61ea-417a-894f-a2a939c7dd9d"
        },
        "item": {
          "id": "bfd56fa9-55cb-44a9-8d17-674461b113fc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e52fea1a-2e5a-4713-a15e-4d63c6639181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8b79fd-eb6b-4482-8df2-04d82317af20",
        "cursor": {
          "ref": "7805b750-5181-4084-87e1-64eef92182b5",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8a6f714e-fd44-48df-9599-2f86bd053429"
        },
        "item": {
          "id": "fc8b79fd-eb6b-4482-8df2-04d82317af20",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "29ac36ff-8978-4e21-a70f-de2e2a02a08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd4bce3-bc00-49e5-8dbd-a21205cf0361",
        "cursor": {
          "ref": "d6f893d3-91b0-45f0-b1fd-1f3ffbce355f",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2f6b32ba-1e52-47e5-ac02-581577de57f1"
        },
        "item": {
          "id": "5cd4bce3-bc00-49e5-8dbd-a21205cf0361",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "033f2d0e-5054-455a-b879-4ee9c8a8a22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f13e03f-9310-4ba1-aa32-e6a7e84d5689",
        "cursor": {
          "ref": "8470353b-1e46-4c17-81d2-d864dc2dfa23",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5201c11d-fd14-472a-997f-e80b57b7f922"
        },
        "item": {
          "id": "2f13e03f-9310-4ba1-aa32-e6a7e84d5689",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f0e2eb89-98b4-4026-ad5a-faafc75e155f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7563410d-27c0-4d79-aa05-0e508a989e01",
        "cursor": {
          "ref": "c615cd55-b86c-4eac-af4c-c0a2e18b341c",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f3df6ca5-0dbd-4a9d-a311-206738870c8b"
        },
        "item": {
          "id": "7563410d-27c0-4d79-aa05-0e508a989e01",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "625c27ab-d956-47cd-9826-db83ba921aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c812d4f-b6c6-4ad0-baf5-d44378f09998",
        "cursor": {
          "ref": "85af25e4-40d6-4de4-8bc4-3c5443b97c64",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a66444e9-2770-462e-b070-2b2d3015a903"
        },
        "item": {
          "id": "0c812d4f-b6c6-4ad0-baf5-d44378f09998",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "943713f5-0f8b-40d4-ac1d-efb35b4a448f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f540bf98-d027-48f2-a6c5-3e52a6179487",
        "cursor": {
          "ref": "0b7090ff-0e4e-4403-b183-b1e986b8b028",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1b4c88bc-369f-4e42-9654-7239b1f6578d"
        },
        "item": {
          "id": "f540bf98-d027-48f2-a6c5-3e52a6179487",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "29b2a222-31f6-403e-aba4-810ab02f72f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0286553d-3c31-4855-b574-f8998b866711",
        "cursor": {
          "ref": "23ca49ad-5134-48c0-bb33-86b48ce5c880",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cb919a21-fe63-4935-a9a2-34c34c35350f"
        },
        "item": {
          "id": "0286553d-3c31-4855-b574-f8998b866711",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "abc6e41c-7471-4d84-9802-ef354e736d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6659f3ad-a548-4ee5-852b-fb19628cffad",
        "cursor": {
          "ref": "731e75fa-a945-4147-9d80-d5c2b131e644",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "41e9e0f3-f59e-468a-86f1-2557db4719d1"
        },
        "item": {
          "id": "6659f3ad-a548-4ee5-852b-fb19628cffad",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ccd8e9f4-00e7-4c23-b209-31ea66835fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f92deb0-a0ac-4856-a873-ba94b5bdcd3c",
        "cursor": {
          "ref": "e4ec1434-dc88-41e8-b68a-cfc230b401ff",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "919bc6ca-c6a1-4750-a07b-928c74050602"
        },
        "item": {
          "id": "4f92deb0-a0ac-4856-a873-ba94b5bdcd3c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cd4583a5-010c-402a-8071-dcd2042ca20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ea221f-c46d-4866-8d34-18b162af0f74",
        "cursor": {
          "ref": "ecef553e-32b1-45e3-ac38-d301db4c4cb5",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "30f19bfb-828e-4c0e-8441-ccf673cb5a4e"
        },
        "item": {
          "id": "64ea221f-c46d-4866-8d34-18b162af0f74",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d9d49f23-b230-4b98-9ddf-8c6abac5e3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede18008-b61c-42bb-b257-cd36c6569436",
        "cursor": {
          "ref": "25b15a27-e9ca-4119-b8d0-e7b0dd5e255f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1fa034c6-fc10-4e3c-86a2-a882bf239bac"
        },
        "item": {
          "id": "ede18008-b61c-42bb-b257-cd36c6569436",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "150964b0-36c8-493c-9f8e-6a3a79fb2d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157879b4-0b78-4d4a-81ba-608e4262e29a",
        "cursor": {
          "ref": "b3463a2d-539b-4be9-91bd-e0ef0781bcc9",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e973e87e-96ed-4e99-b39f-1f3a8fd2f733"
        },
        "item": {
          "id": "157879b4-0b78-4d4a-81ba-608e4262e29a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1a0143ba-2ce3-47f6-93f4-3d59891790c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9913588c-23f5-4d26-b0e1-bb4cd64beba8",
        "cursor": {
          "ref": "6eb4f65a-d48a-45b5-98df-2a018edf8b1d",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d66afbf7-81d0-4f09-9fe2-a86172eb2a83"
        },
        "item": {
          "id": "9913588c-23f5-4d26-b0e1-bb4cd64beba8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "14aadf70-09f1-4ee4-95ad-3ddfae6f3773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97e1791-d84a-49cb-bfe7-1c35402eb61d",
        "cursor": {
          "ref": "518a2848-6ec9-4fb9-8519-6746f7b17e9e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "160438e8-c9ff-4ea3-92d1-c9533695e6ce"
        },
        "item": {
          "id": "a97e1791-d84a-49cb-bfe7-1c35402eb61d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a5fea663-3748-4761-8b0c-4cc9fc3008d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea6ed4e-b237-4afd-82b9-b7989c646fe6",
        "cursor": {
          "ref": "4f10c4ca-c86b-492b-8d53-dce18da3766d",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2dbc2717-b2e8-4930-90a3-474d1cbf2a36"
        },
        "item": {
          "id": "7ea6ed4e-b237-4afd-82b9-b7989c646fe6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2ea24f2c-03a1-48c8-bf70-5c9f00ac408b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874b9364-8715-4b78-9213-1f0aeee2efb5",
        "cursor": {
          "ref": "036c9d0f-27bb-4ee5-a771-a31828cdce26",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5693d70e-5fab-4d77-8816-768763957412"
        },
        "item": {
          "id": "874b9364-8715-4b78-9213-1f0aeee2efb5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3ea64950-a0f4-4ac7-bde7-10187a87bfc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0758c95-9c0a-4b43-8c05-ad30ae412fe4",
        "cursor": {
          "ref": "3cf9c49a-13f4-484e-b9b2-afa5d5db9a15",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "591e49e6-92df-4247-a8cd-3caabeb80f46"
        },
        "item": {
          "id": "f0758c95-9c0a-4b43-8c05-ad30ae412fe4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fa5133cd-c9bc-44af-8b84-92642e272310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafc2593-e1ae-46a4-9b5c-4483329c7d88",
        "cursor": {
          "ref": "1eca97d9-d799-43a0-bfe4-11614dd5ea38",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1f308259-1d50-4af0-b372-4fda29af0ca8"
        },
        "item": {
          "id": "eafc2593-e1ae-46a4-9b5c-4483329c7d88",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "cc234a9f-2388-495c-a6a6-0f061e0dfdac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8038ad-9ec9-4fc0-8d43-78214e83ac26",
        "cursor": {
          "ref": "296260e6-674d-4ef5-8018-eae432769e3a",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "35c04b15-8033-4e8b-bcf3-1bf746215026"
        },
        "item": {
          "id": "8b8038ad-9ec9-4fc0-8d43-78214e83ac26",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1cc9c524-215d-4108-a3c1-bf5fb77bd9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18250b1-3a34-4759-a519-f2629fb23e36",
        "cursor": {
          "ref": "6d0a9a62-f1c7-46bc-ba8e-bd26659c13f9",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "deb3b97a-7e5b-4ba5-938d-25972f0dd40a"
        },
        "item": {
          "id": "e18250b1-3a34-4759-a519-f2629fb23e36",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1253ba6f-4869-4e82-978b-ca751744a7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170d8ad3-bf50-4cbc-adb6-2af48d350420",
        "cursor": {
          "ref": "59514c5f-5ea0-4b82-b605-c00d1b35823c",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f1fabebd-3d2a-42a5-9608-f38a95b0da32"
        },
        "item": {
          "id": "170d8ad3-bf50-4cbc-adb6-2af48d350420",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c5cd74d6-c15e-4e59-95e4-4d84952b3e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09480e6d-751a-4a96-919c-c4113b1cb06f",
        "cursor": {
          "ref": "ffbb0eee-b7a2-4069-b74c-6ab40abd0f45",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8573d097-2547-42bd-80dc-25d5b2006dcf"
        },
        "item": {
          "id": "09480e6d-751a-4a96-919c-c4113b1cb06f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f3eefd7b-68b5-46bc-a9de-a707103b86ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4903a1a-e8fb-4839-bc31-ca4dd8ee6204",
        "cursor": {
          "ref": "6aea1357-21d7-4cb3-ab9d-7852bc96a757",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "72c0999c-54b9-4c3e-8384-de871f463270"
        },
        "item": {
          "id": "f4903a1a-e8fb-4839-bc31-ca4dd8ee6204",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "63cbbeae-2dc5-4d0b-9135-1c0bb1e1de0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdc9894-c1e8-483e-b834-d93062dcdd0e",
        "cursor": {
          "ref": "0e6b88d3-f88b-4a60-8180-e5807f93162e",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2b0b0b85-2b33-4441-bcd8-927f1472ea0b"
        },
        "item": {
          "id": "7cdc9894-c1e8-483e-b834-d93062dcdd0e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e9f07647-fcb3-4c73-b6f1-1f9990ae1309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528f73b9-7e42-402f-b276-6bbe592fa3b7",
        "cursor": {
          "ref": "a5ddcd4d-422f-45c7-89ef-d350b52d602a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "27a2ad28-0c28-428d-b4de-dcedacadbff9"
        },
        "item": {
          "id": "528f73b9-7e42-402f-b276-6bbe592fa3b7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4420058d-7fe2-497b-86dd-2204c118285a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0329f3e-4398-4c35-9a11-160262cf1117",
        "cursor": {
          "ref": "e69e2beb-f95e-4f9d-8249-0775df40796d",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "106e53eb-ecfc-40e4-9a55-a6da462ab0ce"
        },
        "item": {
          "id": "e0329f3e-4398-4c35-9a11-160262cf1117",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ee87f7f5-93bb-4b58-a5cb-a0b209f89a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc3fb04-1496-4557-a0d4-ad82306d0795",
        "cursor": {
          "ref": "e2d26144-855a-4e36-bd6d-db83a03b4efc",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bc4bf4b9-7f2c-498d-95a3-7d140ac1b853"
        },
        "item": {
          "id": "5fc3fb04-1496-4557-a0d4-ad82306d0795",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "228d311f-489c-4674-9c78-c1d128423b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fbede6-c113-4338-ba4e-1816a83ad6c6",
        "cursor": {
          "ref": "d7003d8a-010a-41c1-be0e-99743bf0250d",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "863a721a-3052-4cd9-841b-aeda28355349"
        },
        "item": {
          "id": "b1fbede6-c113-4338-ba4e-1816a83ad6c6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4781fb18-022c-4c73-9815-97f48c145712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd612dc4-c52f-404a-ad1b-f6c62f4d6236",
        "cursor": {
          "ref": "a8d68626-94a6-4e08-a9c5-9fe97eb17c90",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "36766244-e9a7-43d7-95fe-c01228ee9aac"
        },
        "item": {
          "id": "dd612dc4-c52f-404a-ad1b-f6c62f4d6236",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a9f980d2-fe2e-4b64-8958-aba17009eb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257f442b-4801-4eb1-9e25-81cb403f0f09",
        "cursor": {
          "ref": "ea1b7ee5-759b-46a4-9e01-35e063d9fd66",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3718b9a3-79a0-4224-b0c5-8256929bcfb6"
        },
        "item": {
          "id": "257f442b-4801-4eb1-9e25-81cb403f0f09",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f6106750-f7fa-49a8-baef-168df5f9b809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adc7e19-337a-48fe-a374-a2559b431e84",
        "cursor": {
          "ref": "a26e5e66-b46a-41f5-8977-17036688be36",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e2978bcd-8553-431f-98bb-a72fa72d425e"
        },
        "item": {
          "id": "9adc7e19-337a-48fe-a374-a2559b431e84",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a42cf484-2b01-409d-b4c1-9afb28f4d83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bb2764-c421-451f-9f7f-d04066ff37dc",
        "cursor": {
          "ref": "fae6aed9-acd0-4ab9-bc0a-5e8023909f89",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "24411982-d700-46b9-ba26-dcc00a216884"
        },
        "item": {
          "id": "26bb2764-c421-451f-9f7f-d04066ff37dc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d661f441-ec8b-455c-a956-94eb407793be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ed3172-f768-4427-967f-e6370b44b468",
        "cursor": {
          "ref": "234c9da9-a59b-4b32-9a9c-f70a24636dc0",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "45c8ec5a-efac-464e-97a3-7ef372b18a3b"
        },
        "item": {
          "id": "67ed3172-f768-4427-967f-e6370b44b468",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "603b081c-dd35-42b8-af64-fb01cc2e3012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787219ed-75fa-4a1e-9d1e-e5f2b3663632",
        "cursor": {
          "ref": "980ca92d-2045-4e9b-8130-922c88346cfa",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8735eefd-ee3a-446d-9201-4954881fb9e4"
        },
        "item": {
          "id": "787219ed-75fa-4a1e-9d1e-e5f2b3663632",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cce56e6a-f56e-422c-8eb4-301766278bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b212d3-5ea6-4469-bbe3-3187abb56d96",
        "cursor": {
          "ref": "13fcca41-5322-4129-9476-c4b453ec7ceb",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "adea4a12-eebe-4ec1-b846-36474ed3ad13"
        },
        "item": {
          "id": "d7b212d3-5ea6-4469-bbe3-3187abb56d96",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4082bb92-5560-48fc-941b-cd565b36cbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2e5233-0fc3-4d31-a640-a40f4920a4c9",
        "cursor": {
          "ref": "c96a3adb-8524-4a8a-86b9-88dbad9e8139",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0b59d9d9-5fcb-417e-927c-c49e8d947f6a"
        },
        "item": {
          "id": "5b2e5233-0fc3-4d31-a640-a40f4920a4c9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "50bb1846-4e42-437c-951e-39bf0b2c992c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22e0589-b192-4bae-8035-33bf22aaaee7",
        "cursor": {
          "ref": "b328397b-e742-45de-8b93-f026e0f59e0c",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "827363b6-64a4-4ef9-a665-40f80074ad3d"
        },
        "item": {
          "id": "f22e0589-b192-4bae-8035-33bf22aaaee7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f8f4dbf1-154e-493a-a832-3d92bddc030f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3048609d-6020-4b8f-b282-c99243ba801a",
        "cursor": {
          "ref": "7d3dc1c2-1dd7-482b-9e7a-b0141a31e8ee",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2f9a5b26-99ea-4d8b-864d-763e6eaed2b8"
        },
        "item": {
          "id": "3048609d-6020-4b8f-b282-c99243ba801a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ab939059-5570-4052-a238-f796b69581b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa06c67d-f884-4ead-9511-64bbd74a874d",
        "cursor": {
          "ref": "f7761ba6-bd84-4383-b85a-e57bbd6d9b90",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4099044c-7fc6-4987-9631-99b6c985c88c"
        },
        "item": {
          "id": "aa06c67d-f884-4ead-9511-64bbd74a874d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1ef3c8b2-d32c-4e45-8ca1-26b24624025e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64061d81-fa55-46bd-8f88-69a22c3ad8ef",
        "cursor": {
          "ref": "6777b333-ffb8-4c41-a0fd-65b40a2adbf5",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f76128c6-32b2-4af1-8afc-aa1b10dc87eb"
        },
        "item": {
          "id": "64061d81-fa55-46bd-8f88-69a22c3ad8ef",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "91334093-f649-4ed8-8664-dc7142484698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed2a103-096e-406c-a640-19e18f521129",
        "cursor": {
          "ref": "219d0545-85fc-4004-af3c-9908fe694844",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e83c9dda-1d38-411e-8a5d-e43d17577b26"
        },
        "item": {
          "id": "5ed2a103-096e-406c-a640-19e18f521129",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e2450ce6-1b12-4f6b-b17c-b611bfab6273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f702ac-bac3-4f96-b981-b55a05aab46c",
        "cursor": {
          "ref": "a35e55d0-56f8-4af5-a6af-a944265740b9",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a76c5099-259e-4ec6-85a0-b73c9969f3d5"
        },
        "item": {
          "id": "02f702ac-bac3-4f96-b981-b55a05aab46c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c97cbc70-9c31-4789-8494-cb35bd62a507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a656881a-29de-4d92-9de7-4bb547a665ef",
        "cursor": {
          "ref": "b0062ea1-d59a-4dc7-b127-20112244a7fd",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d64e3289-3762-4f96-becb-f1a48d867313"
        },
        "item": {
          "id": "a656881a-29de-4d92-9de7-4bb547a665ef",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d8398feb-bcc1-4e16-9c6e-cad06637ccf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96a808e-c793-42ca-9de3-7dd8b56a8f22",
        "cursor": {
          "ref": "d9d09e9e-e5ca-401e-b1de-a2175b03e9b5",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0e968bee-f20c-4860-a945-0955d020c24e"
        },
        "item": {
          "id": "c96a808e-c793-42ca-9de3-7dd8b56a8f22",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f2b0e62e-3a93-4627-a1e4-f44d28c720f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6879261a-aac2-4446-824f-6909f09bc080",
        "cursor": {
          "ref": "3b290a4c-c9d7-48b5-8e74-8c36a4d7b6e9",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d3961578-a120-4187-99c7-272dad95e1e3"
        },
        "item": {
          "id": "6879261a-aac2-4446-824f-6909f09bc080",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "656e8e87-8502-4c62-ba3f-cee80064fd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc02f82-9ce3-4cbd-b46a-d22724c8dcab",
        "cursor": {
          "ref": "f59fa468-db22-4abc-8cfa-41f1e3294144",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bc433701-715c-444c-8fb9-d32ff7344084"
        },
        "item": {
          "id": "dbc02f82-9ce3-4cbd-b46a-d22724c8dcab",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c4da5f6c-22fa-44e0-b014-b374967072d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95eda0cb-41f3-4e15-9c17-b08760559aeb",
        "cursor": {
          "ref": "73eac5f3-81da-4875-90e9-2369e9f4cc54",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4ef18de7-d1fe-4dbc-ae35-c8363579bf5b"
        },
        "item": {
          "id": "95eda0cb-41f3-4e15-9c17-b08760559aeb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "16cca269-73be-42ab-9e8f-5252ecee5a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aba892c-8048-4818-9e07-7c5176956a5c",
        "cursor": {
          "ref": "9dc27172-e081-42b9-bac0-596a049880a1",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "169e33c5-b2d2-4934-a322-dc9f5fe79aff"
        },
        "item": {
          "id": "3aba892c-8048-4818-9e07-7c5176956a5c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7d80eec0-74f8-47e7-ae45-15d0d42dba84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6900c6a-a2e8-40f9-ab92-9a8804121542",
        "cursor": {
          "ref": "08889c75-6db8-4a1a-b9e1-52e5faa882e3",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d5bbb0b6-d323-4860-abec-c92640df60f7"
        },
        "item": {
          "id": "d6900c6a-a2e8-40f9-ab92-9a8804121542",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "79a05023-5645-45ea-9853-2f78dbc176b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2de276b-1b61-48fd-8734-a1bfe3071a31",
        "cursor": {
          "ref": "a19db22b-eb4a-4616-ba77-9548b87eb191",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "631f3748-bfb7-4d14-846c-143fedf4dadf"
        },
        "item": {
          "id": "c2de276b-1b61-48fd-8734-a1bfe3071a31",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "dfebf851-96b9-4b7c-b683-951b68183c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14469c96-7c3b-4a9f-9557-d23fc61ef762",
        "cursor": {
          "ref": "eff40959-dff5-4916-83fe-6d9073639bf9",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "033b565e-5e7d-4105-91db-52e2215b0153"
        },
        "item": {
          "id": "14469c96-7c3b-4a9f-9557-d23fc61ef762",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8a3a631a-8afe-46f1-a38a-8677dbcb15d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e935231c-ab08-4b60-8ccb-02fd8bbcc688",
        "cursor": {
          "ref": "e27ddc1d-d51a-4e69-937f-74029e6a0087",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "663715fb-58fd-478e-97b3-3801adefd2fe"
        },
        "item": {
          "id": "e935231c-ab08-4b60-8ccb-02fd8bbcc688",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "34b971a6-b278-4e9e-9b5e-35370d2bf8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a2c456-12ed-4c71-a6f7-67bd5c33979c",
        "cursor": {
          "ref": "4daaaa6c-be73-496f-a9cc-251188eb9ff9",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "88e618eb-d917-442c-87dc-4d8fc4171fd3"
        },
        "item": {
          "id": "b1a2c456-12ed-4c71-a6f7-67bd5c33979c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c6a8d81e-0e3a-4c96-b6bd-ec060ec16d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d478c167-cac8-4e18-86cf-63eeb22596d5",
        "cursor": {
          "ref": "606abb04-2886-4db4-ab6b-fb59ea7670ec",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a1d67c01-c377-4586-9bba-d8619cac469b"
        },
        "item": {
          "id": "d478c167-cac8-4e18-86cf-63eeb22596d5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5e929da9-ac9b-4205-8b3c-ecd73d8436e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e572f8-a254-430d-9942-8caf851e5669",
        "cursor": {
          "ref": "a34f9347-ac2c-4a77-b856-98c49ece3c86",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "35f7863d-6dce-4cd7-8c93-4bd64c75cd8e"
        },
        "item": {
          "id": "e1e572f8-a254-430d-9942-8caf851e5669",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b3271b72-32d0-4696-b2a0-5da60326a716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fdc1dc-22a1-46f5-bd34-8add9d9e2a96",
        "cursor": {
          "ref": "4ec7e789-a5e0-43cf-aa1f-962dffc867c8",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1eb47041-1e77-43f8-a791-2a238cdc1e3b"
        },
        "item": {
          "id": "97fdc1dc-22a1-46f5-bd34-8add9d9e2a96",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b94bfe78-07db-4af7-a364-5e293133eedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70d8183-aeb4-4a73-b52f-23c8d96945df",
        "cursor": {
          "ref": "6398a54d-92ce-41fa-a74a-fe2667d60418",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c2bfff80-108f-48ff-b319-06bd02186c9f"
        },
        "item": {
          "id": "f70d8183-aeb4-4a73-b52f-23c8d96945df",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d8a7b749-9129-4899-b01c-421cbfb5a6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418a5c1f-31b8-4394-b74b-f2d354d26882",
        "cursor": {
          "ref": "6d20d710-b0f3-4d9b-8048-7d8f2a8a52a2",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e6448885-4dc6-43ec-ac54-3ef9f7bf099a"
        },
        "item": {
          "id": "418a5c1f-31b8-4394-b74b-f2d354d26882",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d75684a0-154e-44e4-b417-172fd312c91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bcbae9-4230-465e-ad6f-bcf1199e3867",
        "cursor": {
          "ref": "fca4ba8c-a55f-4f5e-8ce4-8b0ff84e2965",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "52f582a5-b6f3-4557-bf99-c54d36029459"
        },
        "item": {
          "id": "37bcbae9-4230-465e-ad6f-bcf1199e3867",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c5df8a1f-dddf-4898-a1a2-a00be80910c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b51054c-a149-4c8b-82bb-496e93472935",
        "cursor": {
          "ref": "378b380c-fbae-4f7e-bce6-1e63ad116fd0",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0ebb19da-d4f7-4697-98de-3d3a6a1f3ff4"
        },
        "item": {
          "id": "1b51054c-a149-4c8b-82bb-496e93472935",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "941b442e-a565-4d13-9061-71768ede7aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad02d949-6f30-432a-bf1c-fc5c4be95db7",
        "cursor": {
          "ref": "5f561f8e-6ddc-4224-b9de-278bcea3b07a",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "706d4302-2304-4a59-93b3-9c60c812ec18"
        },
        "item": {
          "id": "ad02d949-6f30-432a-bf1c-fc5c4be95db7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ef6921fe-14ad-4c2d-a472-e4d76714c53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ce8bc4-18a5-4117-b734-7b20c0b963d1",
        "cursor": {
          "ref": "4d16a56e-7564-404f-83a9-5a3cf03c2665",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "66017f52-a5dd-42a4-bad0-9fa6a65c71b1"
        },
        "item": {
          "id": "c2ce8bc4-18a5-4117-b734-7b20c0b963d1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b2b1df3f-b8c3-4164-8286-93d6a417744f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161a1e6d-0fe7-4ae0-88d0-f35005b79043",
        "cursor": {
          "ref": "ec043d6c-535c-4578-817f-52140a6dfb90",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e01acec7-4b23-412e-b63d-8fdf2b1b7774"
        },
        "item": {
          "id": "161a1e6d-0fe7-4ae0-88d0-f35005b79043",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "73938b9e-9612-45f3-8312-704302aa649d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e35229-cdee-4394-9303-26f20cb8d14b",
        "cursor": {
          "ref": "dd90a350-3479-4653-a0ef-dd3b905a29ce",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "0f407c9d-b2c7-4741-9ceb-fedc7b0dcdbb"
        },
        "item": {
          "id": "67e35229-cdee-4394-9303-26f20cb8d14b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "aa845bac-3ef5-43cb-ace3-ace14ec224c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd41cd84-c09f-4015-8916-62e2a1511552",
        "cursor": {
          "ref": "bbd9445c-cc5a-4c2d-8723-997ffe01440e",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7d7c539c-c935-4d02-bbea-7e4e7cd70799"
        },
        "item": {
          "id": "fd41cd84-c09f-4015-8916-62e2a1511552",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a3c0711d-024d-4991-8062-0216fb30d02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e342e87-499b-4585-91f8-f97827559eec",
        "cursor": {
          "ref": "656bdaf7-e782-494f-9ac7-22b462955c81",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a351cef1-1ceb-446d-b2c4-dd3f0de35413"
        },
        "item": {
          "id": "6e342e87-499b-4585-91f8-f97827559eec",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f2ac17f8-ebf8-4407-81e0-ab322ba18405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e72eb60-79ed-401e-82a2-bfa876fb13c6",
        "cursor": {
          "ref": "85619341-6e5b-4b7d-b1af-225a01a68788",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ec86b480-3435-49a5-8421-7a0cd70b503d"
        },
        "item": {
          "id": "4e72eb60-79ed-401e-82a2-bfa876fb13c6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b6cdaac4-436d-4677-a58d-48463c47c39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19ca20a-bfc9-49e1-a441-8db29afe8178",
        "cursor": {
          "ref": "1a04e4cc-d3ae-4df7-b74d-44fbd9798265",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "39b26b7b-7ca3-4ff5-aac7-02760aaf5cbb"
        },
        "item": {
          "id": "e19ca20a-bfc9-49e1-a441-8db29afe8178",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5645b86e-f13e-4c1d-868c-4b295ca7d85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce8db5a-7872-409a-8fa9-f564317b92eb",
        "cursor": {
          "ref": "930cc1d7-7dc4-4b18-ab02-9d53214248a0",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "9a4ed45d-5781-4272-8d02-8a9a1a908861"
        },
        "item": {
          "id": "3ce8db5a-7872-409a-8fa9-f564317b92eb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ff542b46-7f0c-404b-8156-1f4c62d18e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5da60f-b804-4106-ba06-1c4d36a35b35",
        "cursor": {
          "ref": "98e6139d-51f1-43e9-972e-b18139cbbdd3",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8d5cd7bf-2cc0-464b-a59f-ea7a1996261e"
        },
        "item": {
          "id": "1a5da60f-b804-4106-ba06-1c4d36a35b35",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8167eef4-e4ec-4044-ba09-03f8a5b30d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3449d97-4ab8-4ef8-bff8-2435ad2d97ef",
        "cursor": {
          "ref": "bb817a0a-afde-4cc1-a6cf-f88449630b61",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f7ea981b-1fd8-439f-96a8-572dd0b7369d"
        },
        "item": {
          "id": "b3449d97-4ab8-4ef8-bff8-2435ad2d97ef",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cbed9d7c-b496-4349-93c0-4cfdf90dac1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb9a702-85ce-4822-a5d3-e9250e168f0c",
        "cursor": {
          "ref": "6f563fe1-5445-42eb-894d-19592d7c8280",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "498bf06c-1b14-461c-8e3b-093f262cef35"
        },
        "item": {
          "id": "8eb9a702-85ce-4822-a5d3-e9250e168f0c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ae0dc6c0-a271-44dd-8364-f201d64694dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a438785a-9fe6-4463-a4ef-730d93de50e5",
        "cursor": {
          "ref": "e529ab22-7436-453c-965a-3a9c90ed3cb0",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b07a633b-cd54-4b1b-abd4-5ec42155df8b"
        },
        "item": {
          "id": "a438785a-9fe6-4463-a4ef-730d93de50e5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "03b37a07-5ad1-4d4b-b8f3-63507fefb68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb729e5-510d-4fbe-a4c9-e2dd38b810bd",
        "cursor": {
          "ref": "35b2ca71-fc53-4349-b6d0-e91ed81e23ab",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "939bf682-c3ae-4f80-ad5f-e10db39d4731"
        },
        "item": {
          "id": "fbb729e5-510d-4fbe-a4c9-e2dd38b810bd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a95ed1c6-5370-4f36-88a8-e59e843d292a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fcafec-d614-4ed7-8f2c-1a2ee3329306",
        "cursor": {
          "ref": "d8170cf7-1fdb-4f8a-8eb6-b40f74417cd0",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "42a8e8cc-7655-48d1-9f14-3c0d24b7eb6a"
        },
        "item": {
          "id": "f8fcafec-d614-4ed7-8f2c-1a2ee3329306",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5127b32f-7284-4996-b581-1a126aebd934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95f2f60-0486-4af1-8eca-0d701437a8ff",
        "cursor": {
          "ref": "c9c2fb59-4f6d-4ce1-9e78-8bbf068b2897",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b0e3dfce-7870-476e-bbfd-445aa126cbed"
        },
        "item": {
          "id": "e95f2f60-0486-4af1-8eca-0d701437a8ff",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fd04cd22-231e-4430-81f3-88cfba753456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db54fdd-6418-47b4-86d2-e5bdf79a7afe",
        "cursor": {
          "ref": "6cc21ca2-2a48-4d70-8047-b9460f459eb8",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2796a7ff-006d-446f-b308-4447136db686"
        },
        "item": {
          "id": "6db54fdd-6418-47b4-86d2-e5bdf79a7afe",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3751b162-7d89-4952-b678-eaad8bf0d337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8a8a70-1f24-464c-b193-3ff36cae932b",
        "cursor": {
          "ref": "53dcd112-1225-45f7-a6df-b64c528cb74a",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "97d5c765-4a3a-43de-a3c6-d1aaaa0ada4c"
        },
        "item": {
          "id": "0e8a8a70-1f24-464c-b193-3ff36cae932b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "92b31ee7-74c8-4de0-b00c-ddae4d908510",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 86,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd70d22b-5860-4b0b-b177-013bc7d6919a",
        "cursor": {
          "ref": "6fdad1a4-8b4e-4b97-ad82-f948b0340c0a",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "917dba48-0a34-466f-afd2-173a54c862bf"
        },
        "item": {
          "id": "fd70d22b-5860-4b0b-b177-013bc7d6919a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3d02777b-c8d4-4ac1-a311-aa4eb729f2e8",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0488f64-2559-450e-bcd4-678ea867adf4",
        "cursor": {
          "ref": "8bea62f6-5f86-4238-9886-e8b6f861393e",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3cd0bb88-e733-4627-b553-b473dee6f9bf"
        },
        "item": {
          "id": "b0488f64-2559-450e-bcd4-678ea867adf4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2c01d7f1-d439-469e-a7a6-a6a6aac8e167",
          "status": "OK",
          "code": 200,
          "responseTime": 3304,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3dff4c-a00c-4ff8-af09-42848397d98e",
        "cursor": {
          "ref": "e78ff5ad-8ffd-4f1b-b171-a36f1d688630",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2566cf9f-b09d-4644-80ce-1bb0f6ed9712"
        },
        "item": {
          "id": "ea3dff4c-a00c-4ff8-af09-42848397d98e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6f7b9353-aee7-442a-8bd4-0ae813214324",
          "status": "OK",
          "code": 200,
          "responseTime": 2615,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a86349-45df-46e4-96da-00a251086a38",
        "cursor": {
          "ref": "499650ad-05a4-46e3-a89a-6d66b6e0ff78",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b30d9636-60d0-4234-9b5b-e42f1e32d8bf"
        },
        "item": {
          "id": "12a86349-45df-46e4-96da-00a251086a38",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3abfeacd-8abc-4b4b-95b5-410c135eb375",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a86349-45df-46e4-96da-00a251086a38",
        "cursor": {
          "ref": "499650ad-05a4-46e3-a89a-6d66b6e0ff78",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b30d9636-60d0-4234-9b5b-e42f1e32d8bf"
        },
        "item": {
          "id": "12a86349-45df-46e4-96da-00a251086a38",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3abfeacd-8abc-4b4b-95b5-410c135eb375",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8476d189-a319-43bb-bfdf-3617fc188414",
        "cursor": {
          "ref": "6c0e162c-1272-48af-a01b-b04ac434d690",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0f3607c5-050c-4c59-887d-cf5d45c3e75c"
        },
        "item": {
          "id": "8476d189-a319-43bb-bfdf-3617fc188414",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fd5f3c20-5677-4bc4-8eec-87b67eea31a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee31aae-ba43-4a67-a757-32e152d11e7f",
        "cursor": {
          "ref": "836fca3f-5884-4d7e-8f24-b549ea78b113",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ba9638b5-836f-434f-bce1-ad1568c6faf4"
        },
        "item": {
          "id": "eee31aae-ba43-4a67-a757-32e152d11e7f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6280cfbe-060a-4e84-916d-aff178f0bc4b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}