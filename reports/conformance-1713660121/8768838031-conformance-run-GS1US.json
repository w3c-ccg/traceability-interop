{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5654229d-ebb7-4d82-8d3a-b478eb9d193f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "79a7053a-7d19-4dae-806c-c053781f1d21",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3513035d-fb36-4a34-85a9-2bdcd4254717",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "31dfa539-65df-491b-8ca2-2f5586aefddb"
                }
              }
            ]
          },
          {
            "id": "8b4cc829-0f40-4887-b206-bc5f163aa7d1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14c65e0b-2272-426b-8582-3c1a2c076da3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "03ee3895-cd9c-4b9a-b684-faaa20856e1c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ed45e429-a8d6-49eb-a348-0f6b38abd5ea",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f715b63d-dd03-4235-8d3f-4c386eadfd87",
            "name": "Positive Testing",
            "item": [
              {
                "id": "46bc49c5-2cfe-4355-ab0d-13ec9cb89815",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a307bf1-2549-4ec2-a6f5-83c7d2d4f771",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c5eac0a-e939-45f4-98cb-0ce52049d1c7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05a719c1-d138-46f6-b59f-66ab4c976f4e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89fe0193-cdd8-440f-b247-6a422aa5dd27"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4cb10595-8995-4698-bf0a-efe325057c18",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a946b717-d8b9-43c5-9d90-e88f6cb30c59"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5a8b524-0975-45e7-a202-016b07f0802c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9a641942-a2a7-4e8a-8dd3-eff0df311d18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71b16e0a-870f-45d5-bea6-4b38d37e996c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6048e55e-9211-400c-a4b5-ff01a3f28131"
            }
          }
        ]
      },
      {
        "id": "19ca2802-4193-4f89-9248-b7519542e7eb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "42387dfa-4dc8-4382-a46d-d266a3e3374a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80afe71d-13b9-4629-a7dc-c0b7ca9450a0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "665c5cba-d7b6-479e-aff9-fd500a4426c3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc86b30a-33b4-48ff-943b-40e6a6f11726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6cd06d3-b38f-4b5c-a225-7a0bb2e21c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1878fc2c-9ff1-4bdf-ad96-d8c49bc293ed",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a3fa68-b955-4cbc-a755-a703ff757e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89361643-5638-4b83-94b0-1ffe35829a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1587d1d8-9e9a-4cb5-90a6-3fef49a699be",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be098b2-c7a6-4d23-9661-e6f326df641e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e31e2a5c-4df7-44a6-a905-7ba5a0e45c65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c00dbb99-dd3c-4a8b-b56d-81c578e73c47",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc38b753-ff18-41e2-80dc-9c48767d30a8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6081e2f0-bd55-4cec-8337-3175cbd2c2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "283648dd-3543-48f1-8363-c121cbddf62d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3faa06bf-640d-42f7-a754-0365a04becbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2376ae6c-3504-47f2-beca-b427ca6d2393"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1661aeec-4b80-4c1f-9ac7-8f8466d079da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "65d35673-1c1d-4cc8-984a-55ad58d719fa",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25b89908-6126-4cf4-b219-9588b5b1d62f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "45a15571-03ca-4d14-9d1e-c81d5c4f7eff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da9c326c-dae0-4593-9323-2ffea6d19b5a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fa749bf9-a0a9-4aba-9131-ba94af6878e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9523ce9-147b-45e5-8b62-fc60f8f4eba0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "daafa0f4-6022-4be5-b665-072187f5eeff"
            }
          }
        ]
      },
      {
        "id": "f7eb6d3c-c2ac-4d14-a8d9-992247e726ad",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bd9d6ca2-f3c3-456c-a675-6f6849bb1220",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab16ad1d-8711-4536-8931-726902d4980e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ea15487e-50b7-4efa-80b5-4a8ba22a3a7f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782d416b-964d-4bfc-a573-edc13f967a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b6d402-e1da-4051-8cf7-a6eedecb44fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0e13a1-7ced-4750-93f2-1ad45b692c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed7be59e-1fb1-49c9-8081-c39ced6704e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20ee070-bada-4dcd-9750-3cabf7cf4b8d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725eac55-5534-4de9-83e0-df35ba995cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16e6003-7267-4c0d-a6df-3070419de532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560a0af2-7a42-4940-9e5a-646f901cd87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e59ba95-4774-45ca-ae18-0cb66868c9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57d1f29-9aca-40f8-80ed-6e291a528ae9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbe1a41-226e-439c-8d31-0521e09bacd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e2b9f1-ca4f-429d-80c1-fb14be67c587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5b02aa-500e-4cc4-aa96-671f8d2ab7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cc6ffb2-1726-43ab-9df9-93094824b4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17adc524-f758-4a30-9fef-102705466b6a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b402ed-4b73-4312-81c5-e0d6a6f72b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14613858-21ad-48d1-9808-f88aa527d50b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20f6418-0bd3-4e6f-a5da-aa175f11c163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cf41592-a6c7-4d65-8eb2-a5aa70acea21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efe7f08-2c44-4c7a-8103-032578aec7bc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c254a6-3b24-4df0-9015-017c10b3f522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5339e58-a1a7-4430-a66c-9b75f52e6daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f512bb39-ce59-41f9-813c-6fec9bd05857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccc81712-0d96-4972-b26b-306fadc7cb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4baece55-53e6-4bff-b5d2-dea17aa27708",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8161815e-a84f-49f0-8e33-530d33315fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596fbe2f-cf36-495e-928d-1a91e791efc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938d6a5f-aa75-47a4-a309-946eb89afc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7188dd1-36d4-4d02-9f2e-1ffbb04b540b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99149e76-eea7-4110-9652-c8567897a1c2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1703ee08-c4c4-453f-8d36-7da274b84eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68cd6619-3eb3-4c7a-be1a-c694d98b3e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397ae8e5-c083-44a8-8ef0-8b6e057062d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c37df80-d1cf-4f72-a3cc-badfe73eef69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab1ace2-b5cd-434f-b6f7-7dd09934a9cd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae6c624-75ee-4e6b-85b3-590df987d26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79bf3ba0-2da0-423c-a651-520fe896cffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dbcafa-0d94-4546-9e91-83b131a16f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b8705c1-65cc-4c06-a2c2-73218889433d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6b9617-90b5-4d8c-a4f8-1fcb27316e85",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60700fd9-1a48-4bcd-92d9-06ea4716416c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd758a15-db0f-4dcf-88fd-9a8cbf416a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e37f44b-2f2d-48d0-94b3-f49599e261fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c0582bb-9efa-47ed-9483-8a5acd404f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7dbbea-9a13-4c72-9849-2efb680a5a73",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67cef8a-775e-4ead-b245-0fd650529f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2ae931-f9ea-40be-b004-725049513188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c640fbb7-7b05-4546-a54a-45ce7370a290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f9da515-27fe-4ca8-9f1e-96f8668f6fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b46a3d-6173-4a86-bfae-f2a922a822b8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1473f5eb-a9f6-471e-98e2-ab81546e9b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e71b9f4-386c-437b-83f0-caf21d5d128d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05f0b4e-f622-4f56-8625-ba3f7faf071f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4f522af-ee61-4138-bf01-5275d9cf7a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6ee6fe-f992-49e9-b093-c871d9acc7bf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dcea41-5afa-4dfb-a2fc-59a81e533ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cac76eb-05ce-40db-8a86-6699086f3132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca44249b-e035-44f1-ada2-5c6d183a719c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d83e7bc1-31d2-44d6-a35b-2994cfa314d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67929ad7-f08d-458e-9e9d-a1aab43366fd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa865c6-5ace-4a4d-a3fe-81ba860a36ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7101f190-69ec-4804-8ede-fab349ed0a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd344d0-32a5-44dc-abcb-f7e5a6f30da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1cc1d60-06ca-4a1e-9aaf-dc1ba0efa53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5237e4-0524-45e5-99d7-4343a434874e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85b2b95-02b0-4d18-9bd3-aae7285aef6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d5f6d5-95df-465a-90fc-0d8752110e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b3dfec-04e9-41a9-b311-43efe7e59f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "880368b6-59a0-4921-a690-df2030317370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649a6347-3438-4105-96c0-17cc1286c06f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6101534f-b4be-4969-b1c0-80032d5044cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7688c54a-b6c6-4960-85ec-4b4bd61bc0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22537492-877e-4462-8b61-4f9c65934487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "245ca60d-95ab-450d-8404-ca258ce8c380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c10f71-5626-4a86-9f87-50ee00de9cc8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df9d04f-79c1-410d-ae46-9c95bcb69b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24b95cb-f26f-442b-bc2a-6f1d26bb28a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61a0ec1-d4b6-4f1f-b1f8-3212b3e74deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e46b93e-2db5-4233-b58f-45a026edf163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629f8fd9-621b-40c2-aa20-127731ff5719",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27f372e-7726-4f6e-970b-c88711b9162f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f4d922-b03c-4fb6-9523-e96e3f83953a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232a2137-e061-41fb-9b50-6f8b8e590ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c876b9c-f3eb-43f1-a235-5e465c9d7463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5cf8eec-a630-41b9-89ec-1ee9ad1c2c5d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9228c30a-40b8-4769-a55e-e5a7f14dbabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fdb9814-4349-48b5-9d21-c4fabdb30a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2efede-6d52-4018-8177-4bd55c646862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "56bb1427-e528-4cc2-a0e9-9d8778a83983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66474ef0-22f2-4ff1-aa9f-fd7c8efcd12f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ae3e11-d330-4260-9375-ad92ac252f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95055ca2-2700-457a-9906-1c6f0066a01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8589a0e3-2b16-41f2-b42a-c9105461171c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77495f2b-6f4f-4909-8a62-32ac90cad0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58d3a08-3016-4e55-b1c8-61c675afa5ef",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae57f8b-5ea1-4a53-a833-fc8b31d428e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4aa85dc-6781-4ddf-a216-fc4fc756364d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a558c9-a4b3-4de4-9350-c342c0eba3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf60a04e-31c0-4f0a-b5db-447a35721fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdf3618-9e16-4347-904b-b50cedc082c3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802fc639-22b2-443a-a657-d54182f43ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31420f6e-2d28-4a8d-b6fb-6243956bfe45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc340b9c-1137-4c81-b375-072d6ba9ac75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70e829f6-b768-478f-8532-3ae35ef114cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cda8db-0acd-4d34-bdac-c4f2945aae0e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4100e7-b02a-4a7d-bec8-71d617736da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0934e9f4-06fb-4be5-88c8-48f440f8dd94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5235fe6b-5227-496c-acc5-1e39f1bc851b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2957718-c7ca-413f-a3a9-12f348ae4f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c903a08-937c-4857-988e-f710c3731b79",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2164a36b-5b5c-4ed9-88c0-a74317c04836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99fb5e13-03e3-4373-aa67-a0160794839c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5463fe-7350-45b5-b53a-0532dc904729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76fe6729-5119-45bf-aeb0-aa66ae676290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1b4b90-8dc1-4613-a2a5-112e22a9a8b0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc4dccd-7060-4c28-afc1-1a2306c2ce3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1406601a-aa01-4b00-b1d7-8d691eb936ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2403ca4-01ae-48cc-b39e-6e8f537e1fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "161026fd-7ed0-439b-ad88-01811918dba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98559d47-00c9-49b2-a945-afdf59b8caa3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e10f06b-4043-49ea-99f5-b62797d4b36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5df238-51e1-4584-8ead-9ff3b0bde39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62ad473-6f5b-480a-bb70-354ce15a3c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d9704d-e25e-43dd-afc9-70fada0f3af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2ee4cf-86bc-4768-95b8-452564e971fa",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9666dc9-12be-42d4-b3df-31c3befd2f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f263e4a-2f0f-4f00-ae61-2e55aedd64c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e91e720-9909-492d-86b3-dbfa1f816523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8cfa70-dff0-4871-a6a8-53c74c2bca7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb96614-1dd5-4c74-9679-33cd6644f302",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec641479-b459-442c-81bf-1b01b9370c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bde4f86-369b-4f44-ba74-fc450a974e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8fde17-f3e7-4d21-ba8b-529766e7a0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "63d95b2a-35b1-44f4-ac65-90864d367df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d270a5-5af4-409f-ad04-194f5e5adc7d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d21f715-e5e0-43aa-9348-68cce161a69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5de8408-6ad8-492b-b807-a51d6a568092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af037c7d-1c91-413b-a390-137886b28461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5cb13cf-8f77-4180-8c18-7116debaac2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d0cffc-81dd-4572-8221-6e7711a69085",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b776cfa1-9c55-4a47-a00d-0fcd6a460fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402c60ec-4fac-4f53-a697-a33357f5fbe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e6e5ea-84a5-41c0-a6f6-abbcf78d58e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae86afb-0174-49bb-b22e-3bd2f25bc4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a3becf-b450-4a8c-9b38-364ddb7a39cb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9b2517-ccd4-4b51-9ac1-669ced173f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7236e0f6-a5dd-4868-befd-4bc3a223d44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb05d25-5f53-4d53-a303-d90b3684f762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e43e7f2-a4b0-43ae-a794-a857e0c0277e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c11c98-b31b-497d-bbed-5de04d1c85f5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c012c1-805a-4e0c-8501-54429921f3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101dc4ca-4b15-4586-885a-c08c51bcc3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79857c57-d8cb-4512-b8f0-f077772c2835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "da7ca63c-b75d-448d-a261-0ab21be8145b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f452fc3-c755-4d0c-88e4-e19fabfa8f6c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b7e7ba-6c89-4a40-b30e-fcf782fa30ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1fd0655-e681-4d7b-9b53-0ca73489dd6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88fd522-0ba6-4f5e-9955-d83f1184ed6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70baee11-c292-429e-911f-1efff77fdb5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e22750-1130-41f9-9571-b302da35af0d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd38cb4-5b30-4ea7-890c-551f4a0720eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3804c251-f7ce-43b6-b253-702e9e4310d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e091e8f-5f8d-438d-a9cf-dc003949e671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a99645-3bf1-471f-b19d-7e21a6f34518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6ca8c0-09c1-4d14-a959-4333cee5c8f0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa32eca-66cb-4bd0-a451-34dc55e6da4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c169b8d3-718e-4a22-b566-627ba770dd3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad290b4d-91f7-4ff3-afa0-fc471d8378d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bdb113f-c5f0-443d-affc-168fda22e2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ce89a9-8adc-4f2e-a6ff-bc5572135e4c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e92a31a-f11a-48bf-8150-ed865fe9d72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c010bf14-7556-40c4-980f-8a3223ce30b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ddd47a-e41f-468e-9527-d3ef8acb098a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "29d2e348-00a3-4009-989a-34d77f363881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029b7114-9c8c-44fa-8ba8-436588d069e0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c6f139-1029-478d-8ff0-7571faf91eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82c9c94e-23f6-4418-a448-387aa0e40361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa43505-eafc-4785-bfae-34542cdcfcf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c796f0-49e7-40d7-874e-fa6caafcbcc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebc83e5-c675-403b-aaaa-ed57ad42f427",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8514b7d6-afd4-4415-85a5-67e5dc261efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42cb7404-e747-4e76-bfdd-44a961dc4074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c40529-a99d-4e36-8847-456c173cedba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "205101d3-f50d-4387-839f-7e2550bb96e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d2554f-90ef-42ed-8f19-0a459af675b9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a586f4-15e2-4baa-a212-fd59d16fb57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc4f815-5dfc-4a2f-826c-739d80557d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7112789f-6d70-47bb-a72b-c89943cde6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7336fb4-cb8d-4922-90c4-2e9c53858efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cef6ff3-63da-49b8-b73a-33ab564498d4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dae453c-4ac0-477c-aef4-7dbadac5cb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa5402c-3007-4fc9-9ef0-d57debe70e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f20eb55-5f3d-4378-bedd-fa25a2acce0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff27525b-dafa-455e-9d2b-7dfa841b6a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83948903-164d-414b-aedf-858cfb455bb8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d65eb8d-ff5c-45c5-8ef6-0d3dcee88ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb9a0cf-dd23-4d60-a10b-b268a8e1a728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed11592a-b169-4374-9ec9-a660cbac0559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6aec5f3-dc40-4f2a-81b9-eba7d1f43f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc95346-dff2-47aa-b252-8a29f74a7af7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0e585e-1c34-45bf-a675-c461005a80f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e045164-3eab-4252-8242-75ed43ee9a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62dc23ff-322f-467d-a14b-6d2af0a161d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "44023ba4-568c-4a6f-8aa9-b76701e962e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312fd406-e370-4539-8789-c92cd294e39c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a682731-a8a0-4fc6-a4fb-14f389958406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131ef86c-34e1-4614-8c0e-288d87fae334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c24dcf-959c-4800-971a-90eb91eeb7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6f509d04-f3aa-42c4-b4ff-b0031c112deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58f4be8-385f-44b8-bf38-a5e9f9a4181d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a706bc-b259-4d15-a0f3-83ee0758edab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39eb02f5-39d2-4cda-9cf3-eaef8c9e415f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae7ee6d-d4f7-4826-b369-8720af07e4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc486e9-3eca-49e3-b875-fa63b66d51b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f63dbb-b865-40fa-a46c-5c965063d818",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19747ddc-486c-4131-98a5-d72f88502b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d4b912-00d0-49e1-825d-cc47afb11ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d179f779-aa5d-4327-81d2-6a975effe41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d24de227-d290-403b-b3e3-d47711ce0438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7197ed9-cfaa-4510-9f8e-61493269b4b8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95960da-27a1-4688-808c-583ed6aa719b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63937667-6907-4d9a-a34c-93211b038bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4280b3-f722-4d6c-9e0c-92dda5d1ff6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3c3e57-4415-4725-aa8b-e71958dc98c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e1efa2-1629-45cc-9b85-d8af4530786e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a31cb2-a5a0-4978-95dd-c56b3e2f0217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11429780-e0a3-443d-9113-cfea8d8b4b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fe4d80-bf09-4270-8764-28f3b2bd4447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c25a3b78-1960-4a05-835f-7d6d21621093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b7af18-ac1e-4797-b98a-ac905d8b1cc3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dad2ecd-c63e-4840-9ebf-03ce956d5ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37f15e6-c9b3-4942-a6c2-51c2ff9f464c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0753a464-e47b-458c-b99e-5129b81dca9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7c6328-b9d3-460b-9edc-b67e02e55062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfc708d-c180-4447-9ab6-cb7e42e7f8a9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61671656-78cf-4b26-8982-4017ebb03f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6214ed-faf5-430b-b89d-3c84e2889154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e62ae7-2f0b-4468-aa77-414bcbf28811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b9e4f4-d8e2-4ce0-a53f-e9f81d37664d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcaa3a62-cfc3-4a0b-8937-c727c07ae263",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcb2808-688c-4123-9ee0-cee243e92063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a7b295-70bd-42d9-ab39-200c058294af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33987374-4ab0-4a6a-87e3-09a3772596d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf19603d-b30c-45e6-934d-8cbc540dd6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6b1934-7136-40ef-b12a-7d3eb2fd1a2b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4242115f-a153-4076-9cb0-5478c2908fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6397f1-3155-454b-b510-f2603c33e6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63872b4-3b75-44cc-bc32-17a7899130b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23066b72-af86-4af4-bf22-6e43212846d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c5c2d3-cf4c-45df-ab46-a9e0fade0a80",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace8b4cc-61d4-4138-ac09-69c4c119f6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e54b35-8ea0-43dd-88fa-0898b4838027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6d64ce-70b9-40c0-aac7-319e51a9bd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d07c04c7-c539-4a71-8229-ecef61bcb45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfb8268-3af7-4e61-b362-89f727649035",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b2b035-b335-4795-b099-b4f70ced886b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f466422-5357-48b6-9fc1-3fbe7954b965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5da75d-7f80-4c39-a627-4c2a480c4088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac14e0f3-1e3c-4697-afc8-f48711a01f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b459f09e-22bb-4adb-8977-480acb1eaf10",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236ee988-da40-406f-9d30-4d41de396d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd21b4e9-7a3b-4db4-aa1b-0860b3e7cbd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27908e7f-33cf-4bb6-87b9-bf006e8c5f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e931ad7b-c345-446e-865b-d779285c2e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5212fea-35fb-4389-9be7-2a6dd7dc8ab1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dca20a5-8186-45c1-8a25-bc7e1dbee922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f06e07-cfd1-4bf2-9bb9-7d2f5137c21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43979e76-9880-4368-8449-156ac5aa1857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "981296e3-83b9-46d2-94da-7fe2e768e822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc89ef5e-c916-4f5a-9410-b196c91289a5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6416c931-a464-4fd9-bf62-3766f3321110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ebebde-c804-426e-81c0-da5f33355c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9b2b7d-2878-473e-bfa9-ad84ecd63ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f05677f1-8b77-4a78-b1d6-9b96b6112676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3090bcf1-afc3-4763-b129-da86b80cece1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc5dbb8-05b4-41ee-929e-a1cc5675d80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e37d9d-6e01-44ea-9e87-5ef521dbf2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3da4b37-760b-484e-a743-cb459f9343cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4f71895e-7060-44da-be7b-b41e232163eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325dc3cf-63b4-4cb1-8074-ba5801ac1fc0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24820aab-3787-419c-95e6-4f4a909dbaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f3c40c1-d87e-498c-aa23-fa00476d5bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553275bc-cc90-4353-bbbc-fa5b3a1b04ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fda02b5-7bb9-4c04-a469-960d1d0669d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4059f9ae-91c5-4ff8-ae98-f5f99c19fc5b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f98a2b2-9b6c-4b26-9c3c-aae1290273dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4718ff29-0df7-48e0-af76-6058cb59194c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbdf9dd-9c35-46e1-9e29-2730301f4260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff7eddc7-3d9a-4587-94a7-53ba33d5cfd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec225583-cb08-4c10-b8d4-6a0529f1adc9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30756c17-dcb3-4d22-ba97-0d74e9776c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5931df-f2c5-4656-a2f8-a558731836d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df75e457-8374-4691-b198-56718243f688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9175aeb8-f3ec-453d-94c3-43abe140fa69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9432a6-fb90-4c4d-bf67-140bd89b53e2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4b30a2-ea4a-4d14-af09-7aa1e7057a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a57c4469-1411-4e1d-988e-5537bf0160d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24c27fb-b9d6-46c9-9a21-5eef40869175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "33f09f69-59b2-422b-b32a-e440b4eba66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4a6193-282a-46c0-ad22-353f18abe163",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91eb91b5-da2a-4e56-9896-c9d6d3e0e647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b869525-9a57-4764-a86b-b950059533b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c541eb-6027-4735-acf5-6bdc4b370904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "90e0ad61-2d21-41e1-9a8b-52ff22ac1c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee06fcc-396f-44aa-89a0-137b05a92fbd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df906f7-17b5-4bd8-8b52-add04b92377b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2b47bd-7b6e-4f8b-90a2-e29e77c360ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb934eae-871c-4974-a0f0-0f174f9f749c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b04502-ad0a-4f28-8940-e9dc52ae7748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27208f6-ce3f-4488-a34a-a303f5e596c5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6eb57f-2884-4e8e-8c4e-82082473b778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7829115f-e112-4404-a72f-12d6292361d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ffaf75-c7e3-4601-9045-dd1b1de99c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "80725ea1-8cdf-4f18-a248-c2d903d1b6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64649302-75cb-4249-bc51-2ac03c221e4b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6731b3-1a07-45b8-926a-8a0a5cbaa6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12a11ea-1397-438b-b102-d3c2250b9936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc353c3-bf98-44a8-9264-6cee751bc73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfcf8225-36a1-4b12-8506-2cd74ce3df75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddbb2e5-b546-4e6e-8779-58f5225adafa",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a7a1a1-4b59-4713-88c7-a0d8364311a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fea6496-c2e0-48c0-a4ab-a1d9b1b103b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb33f3a-895f-4124-af26-41efbc008aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84a02b91-e686-43bc-ae27-71718bfb684d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e42763-7159-47e7-b16d-2be1876e8bc0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681ff19b-e7ac-4d49-b00d-631c16629ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26734480-a08f-4e35-8cd4-18d7d263fe05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692f9bba-e565-4531-8250-b6d4871088b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fda74c8a-dc74-475b-9f82-8fd4fde50721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6e31a4-4f94-4cff-8129-1bc4cdd41754",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3e9a3d-b62b-4a99-8587-6153da9f1677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afba7681-199f-4561-a75b-af1c74227487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46953d89-120b-43c2-8fa0-ba8e79f79784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c74236ad-fbe9-4729-99bf-c0eed1676df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701a2d0e-88f1-411b-9958-ef6cc8a6bc07",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c1c09c-3416-408e-bb89-c8e808e07e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d699596e-f020-443f-b47d-9756833ad78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af5c061-e31b-48a2-839d-cd86c19887bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9d103a-4c9b-4132-87e0-a1837f85e90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068969b4-4587-4308-af61-298fe6fc9344",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce48c062-989c-42e1-a029-25d78f7c8191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6206e3-c642-4f58-b5ba-0116aa0edabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4158cdf-de66-4e45-b0ba-f071aae84c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4289fe30-5301-4174-94bc-ef8307bea3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ef586d-9e80-44f0-8733-98027a989635",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b8b12c-e882-499a-9406-9de6651c8ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d2170d-30d1-4b9b-8190-457d828060b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc79844-abec-43b7-8f40-0358769b9714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c34edcf0-ea77-40bc-bf5d-d57d31188b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79670047-461a-40ac-8ef3-c3a8e05c8a94",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e00c4f-88dc-4f5f-a070-9310877b1074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68beee6-1e85-45f9-b47b-b482734504d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c496b060-0b02-450a-8a4a-033ee4239919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5155917-9fbc-4f93-86bf-2c7f7253bf8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af54fa0-0697-4b57-afe1-b6c996c2fb78",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b96c593-00e9-462f-be56-9d2557f5601d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2c118c-bd68-485f-a935-32b147d5c5d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e38d3b-bb5d-4089-9d86-31e440deae33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "263d563a-1c8d-48a0-ac03-67238ef08c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1ca86f-a505-4bc1-a208-6b0340e5cf0c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cbfdd6-036e-4228-b9f8-f93e4ef7d81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d05639-97e6-434d-9425-72514b2ae7dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913c6426-3907-41ec-84d6-bb3874c633a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "163325a3-52aa-40a5-9de0-1a699536c040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e7cd60-416b-48fd-b8e0-8583b3504939",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d94054f-056c-4066-8571-cb2147d06d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a6ddb2-2ee4-4382-8ef8-de7bd8b9f43a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f28876e-1381-4439-b48f-457c7c393872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3ebd12-5193-4b26-a3fb-f1ec5889b7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ad9f52-73c5-4f7e-bad2-ea8c65c25eb9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc03438-d9f6-41fa-a99a-93fa7a3da3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82807cb5-1658-496b-b178-55f469bb2fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36947eb2-c42e-43e4-857a-dbdef033be4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "001572a1-953c-49ab-9b25-5bdb32fb2364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc03075a-43e1-4651-9f2b-4dd074667b33",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb885a6f-a3bb-420f-9cb4-5829fde83c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a508a9e-26c4-4a30-b034-d2545f0a4fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7821159-d9c6-47e7-a662-301d04bc60ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ec9467-a7c0-4e1d-9af0-7b22786a6ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f8ef8c-e0b3-43fc-a649-8f7f9a5898cb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5648d510-ea57-41b2-838c-8335764bb0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1075c40b-d342-44b7-919d-60e334631881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24af5b0-9f0a-42fd-9c16-751f5165de0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bfd031b-14e1-4a4f-8559-1f3e8837f86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efc8803-e91d-433f-986b-c4b045192f33",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589f929d-ec75-45dd-b59e-52e037a5ac2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19dd1837-aca2-4e4a-a469-1a9404578ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12a02c3-7970-486f-a79b-113ad62a78cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6edbef89-7087-4601-a845-f387f12bc086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693be510-c3c0-4a88-a6e1-78d62eed2bb8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e400c5c3-bc42-4710-8c82-981a9e857dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fdf86d-dbda-4bb8-a15c-3887705ac7f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d742de-da14-4e63-9fe9-dd0698efe8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e57f3c97-463d-4837-95e6-eb3d3b2a427e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e42c403-ee88-49ea-a0f6-9a0aba844ca9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f71d9a3-823e-4390-bcce-2ab5b062a714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91fcac8-4f94-4c24-805b-db0e7ee9c56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9922548-4cb5-405a-82ad-ae0a48fe564f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b2c056-c8c2-4830-a0b6-69ff1ceedc7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d204117-9552-4521-b8c3-42c131211906",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2111a80-640d-4386-815a-a26a1b6b795b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebde6edc-bc39-4ee1-bc64-2da28306309b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c3634c-d82b-4a85-a8c8-5b2fb52f3c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad546121-b8a2-4253-8e1e-cca304a5abaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf86b71-a562-4702-8335-9a7d757858a4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc93e381-9690-4cba-889d-2c6ec03fe5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ed24c8-342f-4694-b8d2-b33430ffcbae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40edfff4-fb4a-468b-ad8a-5e0f0cdb5b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd06d891-43a2-4c06-891b-09ac7b43607a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b0f97b-c6ce-4ddb-a811-0f861dbdfc49",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4093dd44-7852-4135-b163-4aba255152e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e5e1fe-ea22-42b2-a265-7fecc685f7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2047dcdc-2697-43d9-ab02-5a6012a20d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04e5d4dd-17c4-4e34-81d6-84ee0402693f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554d7781-f4d0-40d3-ad14-3265040107bb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c2a9bf-73d4-49c3-8df8-5e7b9d62c04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4888b8f-48b0-4ba7-b777-1038530da746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdba93c-1950-4efe-8949-26f8d01eb598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eba74ca-20aa-43c7-bead-48e63947a772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292f73e9-4faf-4544-80b8-44d2a85fff2a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444b564c-486b-4a5e-8e71-0e9a262d5615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e6c2cf-cd5a-4967-9885-6d74903fa11c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdb1e9e-bf0c-4bc9-8492-c05efaaef532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "187536d5-f20d-44a8-a09c-325f150fb857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60ec7e0-0975-4d70-8662-725adcd68368",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca6efe5-da0e-47ce-a73a-4c41aec2461a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a113b241-d19c-439b-a502-95d9c2bb29e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837d7181-a4ea-4478-8b44-e9f68168ad9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0db256fd-8525-4392-95eb-2863245fcbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c762cc9-0df8-4b28-91a8-0eada3111ad4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23bbe9c-d1be-45f3-92fe-d4857c709240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2bb9776-75f4-4b32-a36a-ccf64ebb54fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bb69d0-319d-4fea-9709-58e8b330e748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e649ab81-4af8-4a11-b46c-c30fb1f84b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f20832-d0d8-447a-bc39-013d82e2d442",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2031a26-3189-40e0-bd7c-3c28f9ccf802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8dd2ee9-1402-43a7-98c2-d2fa4ef1748a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4747de29-1d53-405b-9160-d96be514fac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5bd336c-4e27-48b6-9834-4d074d571fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008fe578-5f43-4670-ad2e-788522e7c33e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d272aefe-6501-40f3-b398-fa7e6bf9a7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a0d23b-0c45-409f-8cc4-aa345a2f0fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f8a1c9-41cc-4d47-b354-68743e54508f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "824e73d6-0dba-4c9c-acbb-60f15dd457ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f1a4f8-d213-4d98-957a-89acfd2dc0cc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c4da94-254c-442a-87b4-187d19375c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a44b5c-cfec-449a-ba17-3a06e88f3088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f585a6-310d-4d41-8b66-5c7438870d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "61552f3d-fb49-46ad-a75d-e87d30c1e2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8473f4e5-9781-45b8-add6-bd928c968dd9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b266a7-04a5-4315-bb56-fdb0378e7e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f9a8e7-f7f0-4899-a7ef-1cb7fc5701e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23131cb3-b353-4057-9e75-3c600adbb738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3d90e1-3389-46e1-8a70-2a2660c86f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee181b2-6199-4797-867b-64cb87949341",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b11f05f-08d5-4e20-b9f1-f7ec0e7f391d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9a861cea-e0d7-4656-b2ef-791967b2dc24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1aff26b-18b2-4574-9878-a5187e1a1d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf4218a-4a90-45d5-b224-27c5724f1102"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "763dbcb4-8569-4593-8f97-8235c5df40f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8665745c-69d8-491f-9fe7-4ca6d4ea13ba",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffda6a50-e429-4f9f-8c3d-aaada745d3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12780675-47ea-4970-9092-e13a2b625189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb584c4d-b312-420e-8a5e-178fe945d0aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de6ff152-0c60-48b3-9bdc-16ee7295359a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59caaffa-fc2f-40c2-ab48-058b68fb5b65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87852fe3-7c68-4405-b740-59102b4d2ecf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "358abb09-0544-46d4-a3c2-a397d83022c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "364472a9-4c51-4224-8b19-4cca1d9b0464"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7cccb0ce-ff89-4082-b9ad-86806cdfd1d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cdc0eb10-5b64-4683-a156-7dfce9155417"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d4bb4b7a-e11d-48db-98b7-caf8124a4dd1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "212ab54c-7d9d-412a-91f5-313231323e3d"
                }
              }
            ]
          },
          {
            "id": "3bd1b477-fd4e-4b0e-9097-293fc005230a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "445741f6-c172-4a0f-8325-ba9784f04f7f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "598b480b-0534-4791-9456-7f2f777b090a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b4c78e-e2e8-4746-8517-455c1542320c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3f37ccd5-c4a3-418e-9c7a-8a301fa881ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0048c0-b45e-4520-985f-d784fa1d3cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f436c48f-840a-4045-ab6c-39f70677484b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "268cf60e-57d8-457d-a1b0-2adaa962ea2a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "494666cf-dd57-4cbf-9efc-9738d0b02964",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "590fce60-25b8-4bde-8de8-a4412b14f46a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64350905-7605-4bd8-8e5e-51aafb6b4870",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "91ea530b-6ecc-45fa-989b-5d40a263da41"
                    }
                  }
                ]
              },
              {
                "id": "b6d110e7-af66-41da-9f00-7f2d555da83e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fceba788-8395-42f9-b9d7-0f8729f2d5dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7b1a0e8-df2b-41bf-ab2b-fb4c2885e63b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f55fd89-8921-4688-b755-77cfe10c1cb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a44ef8d3-e64b-4213-b7da-e8df958b651e"
                    }
                  }
                ]
              },
              {
                "id": "f83f211e-13df-464d-8be8-d2ef46352f4d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d735fe29-2bc2-416e-8dbb-fe538e124b4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "498c4452-ec97-481b-8791-819e51ca2ee8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d546b4f6-5dd8-47bb-949d-5c346f5db896",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c7000bae-966c-42be-95ca-6983fd5400ab"
                    }
                  }
                ]
              },
              {
                "id": "640e955a-6cf9-45c6-a078-55c4b2221c89",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "900439dd-6d40-4b78-89e5-0261c135f2ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2bef06d4-a5ab-4ed8-88b2-0836f9fce945"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a821a9e-9146-4274-8f07-b3a81300500c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c41f4c0b-5acb-4869-8243-23cf17828759"
                    }
                  }
                ]
              },
              {
                "id": "c666c540-0b8a-4b17-94db-2e3103b1cf54",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05165f3b-dc7d-46b7-9efb-bfd892bc1309",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "28737806-aa95-48ed-8d69-613d6f6552b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "427e7516-65c3-49cf-abae-0f92336fa738",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b5c52d6c-62c9-40c8-ae22-e6e5c86d9c5b"
                    }
                  }
                ]
              },
              {
                "id": "8fbf7c6a-9568-45e3-991d-dabc9c2a9b2d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0350e245-e90e-44c4-ad71-9b46bbe297f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56555958-bfe9-43ba-9f1d-693c34dbd128"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ac60c5c-8c8e-4128-b6e0-88920c517cb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8165a074-1aef-4adf-b1c7-8851b3d182e4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3f5621e2-f064-4c07-a160-5236befc0985",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a43e385a-761a-4b7d-92c3-763c51557ed3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "182e0596-93c4-4196-a4ff-799df00a0e83",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "952a0054-619c-4968-af89-5167d823ba6a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3bf86de6-9b2a-4ace-84d5-296d12e34902",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8066ff41-5470-400a-b110-ec9d11fcdbcc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4244d7e4-3f0a-4600-b0ea-16ea9ae6983c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1f6a793-32f1-49cb-a87b-67637ee248e1"
            }
          }
        ]
      },
      {
        "id": "6ccf9c92-7a3b-43f6-9166-97c90fda649c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "65b4fee8-235e-4829-b286-de688a8062a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27a4faf4-c8f8-431c-8e7f-318021544380",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9948ed8a-905e-4455-b786-866b021a8f3a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ed3233-744a-480d-a753-029ba2df6192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d26cbd3-10c5-424f-8c40-53eb8aa0ae6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88e506d-3e28-49ce-a623-a14b452c78ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3b3994-b3f5-42a3-ba93-549ee6a8118e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb73e233-e67a-4470-b3f5-21f11e22b90c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9b78c2-f648-4281-bf42-6a0b7ebba5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cafc4af4-fc57-45b6-9af1-5206f51e9507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903f5eb4-c224-4adf-a9d8-421d5d8e9ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "afe74e22-bd44-4e2a-9445-6422b899e9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbd3cff-4a4b-4b78-a5d6-4f376714224a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d74f1b0-0586-4bf7-b23a-61bd9321f71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f5e549f-761b-4d9d-ae84-9674fb3b8752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06caa55-7d8a-42ce-b469-20fc85894ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d1db20-6614-42f6-b2b0-a41d83b8b8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb09a77-2732-4969-9035-355f7c6cf2d8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa51ea8-0e72-4f89-bf75-5d5a456abd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14eb55c-b666-4870-a69e-db51a2f54450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040f857d-9a1c-45bf-9ad4-9b5de39f78c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "357dfe72-b1a5-47fe-9898-989623aac336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef648bb3-013c-47ab-a483-f3e3d134e7c4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f1f901-a397-464f-8f6b-b6ea40223241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1117d27e-a7f1-4397-bfd7-61f2fb95b0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066aee30-068d-44c4-ac02-29ba203f2986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eff6dc2e-051f-466b-bf52-c6dcfd22d5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00983b0e-69f0-442f-ab8a-48be2874d2a0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f77246-c0f5-49dc-afe5-a31cec1a62de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197559d4-84d9-4a44-949b-9457d3918be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc6626d-5045-430d-b457-25564dbc5671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f93135cf-8e8e-479d-9d3a-4b74b946b341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2730755-bfca-4ab5-a6fe-19f62e784f17",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa8564d-d90d-420b-afb8-43a06eacf634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce232c9f-7993-4c88-83a6-bd53279e7178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0441a2de-75e8-48b4-a8bc-5738b78ebe68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb92545c-e181-4ba9-9334-442a261fe032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc4983d-33c9-4ace-8cf8-75906b324407",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98394325-a835-453d-89ff-867335a07d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12eed363-8dc6-47d0-a5d8-1fb6dea3740e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bb16ff-2424-4a04-9626-12dac1ec2a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64c0595a-08e8-4395-b3ee-8d8bc054d36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d886fcf-4b31-44be-a26d-67ae5839767d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6761d417-c78d-4dae-ab7a-f631b2046c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15cd445-91a1-4a5e-87d2-a6e1c22099bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222cd3b6-00bc-458d-b130-4adc3fc66166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9325623d-7773-4751-9f8b-1dabd176b72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3c180f-9779-49d0-9d75-691c7b403805",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc99b0f-6a2e-4a2c-a92e-543f449dfb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb365da1-25e1-4d01-8dc4-a834ac913f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae771cda-393d-45bc-9b84-0f5f82161771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a736a2d-a620-4c15-89c2-6370aa5906d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855b425e-8a05-48d1-bce4-a4aa1a6f7b2a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5114d99c-b750-4b04-a649-7645d76db667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f2fe7f-ffeb-4ad8-80e8-8921b0b9af35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9aa4166-d077-4b2f-8cfb-6da9f65de3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c792dfc5-f1ab-4585-910b-70cef13d0abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd26ceb-e706-43c4-9b6b-637493590bc2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acdf622-8e29-4d98-b20b-5506c12fd8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3352667-2bc5-419b-ac8b-a4657b82a043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309ac17c-bc61-48e8-b3f2-a8c15abea4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a1acc8-f471-4377-a3e0-314db98ac173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1bedb1-9365-4b05-bfe5-9d424b86b7ef",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260668d9-4b8c-4adf-84b1-f9fe38728ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993f2624-bb8b-4f0a-8ac5-9eb79ffa399d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26166d29-c06a-401d-9c96-0ffed87fdbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aec2885f-542d-4968-be11-991bc9ae10ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612519cd-dd4d-405b-8d0d-2cbe10873256",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "160446ec-f367-4cef-88e8-6f103a75da05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7ce9e9-6605-4867-a4f9-f4cdea70b5dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029a5f90-8dde-4356-a9f6-90b6fe9b7118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3b2f50-c962-4690-aea8-67aec31a0d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde89ff0-72bb-46f4-a311-ea07440a9689",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6065d492-e91e-4467-a3df-a5507fb25255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c1358d-7f05-4a0d-be68-a3b9cf0eda79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44ef553-4ea3-4d39-9d40-fb19757cd413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb01ac61-62c4-4f6d-a32d-9c8296f5ea49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187db9a5-df1c-4651-a21b-ab29f230cb68",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4114a324-0fc4-4f3e-b58c-d86bbd895f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bddcd35c-612a-4a5a-8ee9-fa9e39135ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a06217-2975-4925-a159-df7427f23c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8048bb68-cdf8-4222-81e9-f7e170de20b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4e42c8-a00a-4ce5-a989-951417db5dc3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56694890-7082-49c5-815b-c83f9b24c22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5c470e-2cab-4df8-ab5a-9104d62b5f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15cb383-ea8a-4baa-b637-d6d75ca0e786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "46057c8e-db10-4a5a-a3ec-d2540e39e58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55b770a-2953-4b64-a07f-4a113efd8ff3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595a6ad7-001e-4ec0-894d-52f823760779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3fb4f8-3679-4796-a879-9cf06d6ebd08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6966dbc3-cb69-4d40-85a8-781c53667e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae7c40b-cc7d-4653-bb9f-cc8e39dc54eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8780539f-daac-436b-9c04-c4436026b368",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83be990-b0f0-4769-9104-5d1c18477d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96426e6a-f4b7-46f2-a5ef-50ed9523c5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5eae9b-05e7-4101-81d2-81854575f106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61b8ed4f-c005-4a7b-8520-55b737c80673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d80879-97d5-4f02-a344-d28cb35b4fcd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127d9ee8-79b1-40c4-bf30-767712fde12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef2f516-e779-43c6-a6e0-c09cabd1010c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6078a36-ace4-4251-8c72-86ec2c26b001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7b7c25-44ce-4350-9d80-f20006c26513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b767f0-3488-4082-8930-d999b963d826",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943eae19-34c0-4b67-8cba-5420a4848f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e0c59d-5dbb-4a29-8b23-a464a37dd8c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47754f1f-a75c-4665-88f9-8b6b227f340b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e8d3d1f-91d0-4b59-975a-aeba440cbd1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ea6e9f-ee25-4a2a-aeaa-ad348a9fe586",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9196c9c-6524-4d89-9298-713b4b76fc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbfa78d1-6b3f-49ff-af40-f143fc8ecefe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e22f106-7732-43a0-9401-9f61d7cf77e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61d31a35-817a-4593-b258-2ad8b722956e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8440bba6-ca3d-4768-8638-485a47cf8cc0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e25db3-0925-4c84-bb17-c5db1aeec8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6250a41-bd68-486b-8c2c-12bbea22a6fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b119a6bd-c2b1-4208-b1e8-c241fb04d173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b271da6d-ee89-42d8-9052-026bb1039e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6802cdd-dd42-469f-a2f4-f8cbba67684c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27804ab-47ce-4799-9fb2-83376178e61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62f6a44-74e4-481a-aaaf-73cc6d6f7d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5127db79-67c7-47a4-b868-0e5b09b4c956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab712cbd-903d-4b89-bcd8-a532d72da638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3483d1fe-cc31-48d6-a053-e3c0cbe4bd13",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9941a6-c88a-4646-9da3-6729d5761f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0441b8e7-6244-410a-abcb-cec4eedba946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3290ca1-bb3f-412b-b7b6-908c012388d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61d2f15f-3dcb-45e4-8881-84e59f0aea85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299d154a-21b4-49a6-9572-ef22a257c17b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050148d4-14d5-4496-bcb4-6b7bd8a2b363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35cf716-c427-4b22-8929-6a1870190c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e28973-d933-492f-8083-6d34d8b495bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65e000e3-fb5e-4f49-96c5-cc9cdfc92970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf12298-367c-49ce-bb5b-50912d90b374",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42c5731-3cb9-40a8-b288-44dcb03ca1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b847f12-f4a2-422f-8c6f-d010e745bea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0ed0bb-b518-4e38-a085-e603d43e6c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69544c25-3732-499c-be22-b38ecdef3daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4176803c-4ee4-4ae4-896e-0d2e5d792220",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1e4fe2-b1a2-455f-ba6f-38fbf1dd500c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9517a03b-8277-4247-b40b-08eb2b81c626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e95126d-0874-437f-9fa1-71bd2f80c3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fccb2418-a4fd-4b98-90ec-237b38b911f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3a39b6-bfe9-4b40-b83b-8bf84bc62c59",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b9ea9c-c7fc-445b-a44b-38594967d015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adaca885-b8b2-41f0-a0e2-88c75b38cba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1bff43-1044-42a0-af65-5f194a750729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54f6114c-abe6-4db0-8d97-0331c801a449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b08b5d-5739-4a9f-b4d1-264c230b629f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f368ed0b-ce0c-438d-8e2d-3df9ab006aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca08864-3b21-47b8-a6a6-f0b326e4a57d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b2558c-69c5-4c55-8f76-48bcd1dfba46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "713f3c82-d68a-4a3b-9645-1496ce668ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d494720a-b12d-4bda-8e16-b4afb1cbdf71",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692cfa77-c557-4358-bd73-2d1de0790c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5c593f-b02d-4803-9978-79a7196a9848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379804c1-a672-410c-944c-7cc2eb7c6bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3da9eb50-3659-41ad-9610-bc7d7c075bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e481e8a9-a823-4047-9320-96dab7cca186",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468500ab-dc80-4ab6-aae3-01d0df4ee54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d180db1e-c607-4f06-bfd2-09e6d8ea2e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab399c7-cfa7-4d7e-b35c-f1b4a64eef0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e12b581-8828-4520-9390-41658cc78ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570e5d4d-ca88-4b4f-a291-c231dbcd9ea2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314f6602-abeb-4142-9767-42984da3d0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1638a315-b3fb-4792-b7a2-c5a847ae8d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce17bcc9-2ff5-4cfc-885d-0fd9cad83fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f809cb3-0684-404f-90ec-075eeef02775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167f5ce0-4a06-4eba-8869-6b23e2c3f3e2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1236d769-ad4f-4cbe-98f4-98661f4fe072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe4d644-e721-4836-bed2-203f2d943f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5195f84e-7bfd-44ec-9519-4d092e7b4b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74f16b0b-dbd8-4382-a6f3-dc84df24bd78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9db07a5-ee95-484d-b80a-0e2605833f1d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591b7a01-eba8-4fe4-b22d-58037948b1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8057ed80-a454-4e37-b970-77f64dbd5b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa308f8-0a57-43d5-b7ba-fef97a3bfb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "808020d5-5fa3-4401-9188-11703ed6a382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74badd4c-36da-44c7-ac7e-72f5e6868011",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c3accc-36a1-405f-b31a-f204f5c542d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a275ebec-d428-40f4-a85d-c2990376719d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bdc872-d376-493b-8525-a8201060e25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be938fe2-d3e8-4dff-89b0-d9474b047894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8061cd-d973-4e33-84de-b08a9d6409ff",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7d5ace-96c1-4395-8d77-ea13329c789f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a590ac6c-99b3-4d2f-80f7-e2de57683f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5764a8-bc7f-4fba-8c80-6089c76d8111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce15db88-e1f1-4b3e-949f-e0a82cae31e3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0509cf6d-1159-4f4b-838a-7adbdf236501",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d057c608-56fd-461d-835c-85120bf184fd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b55ec5-1d1e-4962-9d77-fbea21c5e295",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a5017d1e-8a24-41b9-af94-d4a4fb094e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad233be-116a-4d14-be0a-82151d1d0b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb8472f0-2795-464a-95d8-4e2b2640c84a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4f753b4-ba42-4e9c-81b9-ea59d4b691c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "faede103-2023-4177-ac7b-0e6c00584058"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c479011-77bb-4952-96a5-174ba2663bf1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fdee625-3f6e-472f-af60-acabde821da3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2569ba13-9ba0-4705-a286-828ac4b129f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8537bb49-4bb9-4e4d-8fa6-595b96914b69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ca80b15-e1bc-4e05-a86f-195e9cca68c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9a96697-02df-4546-a052-e856c350d78f"
            }
          }
        ]
      },
      {
        "id": "69c38925-7543-4388-a3d5-3de9006e91b3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c7608ef4-8fa4-4266-afaf-a9286b921025",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8fff6d91-9e51-45d2-a900-1032652a1d5a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "473cd3d5-8023-4480-8362-929118a90cba",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d172c65-612b-403b-bef0-325e6d2c5c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f230bab-a406-4487-8b54-4f30ee330ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a730608-9d3f-4692-bfc3-b385e7a01ab2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd51579-c448-4672-9fac-0ee6feec0994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405d1e30-0c25-4eaf-9384-be6c36ff3781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4878a7d6-11ef-42bd-9015-235f264b8513",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab03e7ec-2135-4a8b-b80a-7381c7f97769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02aa7f94-8fd4-4301-944b-4d52b0ba8870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fcdfc9-0904-4162-aff2-bccbc8e154ba",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a57f4d7-9a6b-4965-999e-89afcd311e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce050c80-f0ff-4230-9b6b-d630708568c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81d8928-4c34-40fb-9147-06bc504a0dc5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719e027a-879d-4539-b4fc-54dd8934ce97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b19f742-d25d-4ee7-b99a-89cfd479255f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd545a1-66ef-47e6-a0f9-76d39ee6ca8a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff49d0a-06e2-4092-8437-3745fce08867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63043433-65d9-4497-8b77-ca35c83469e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe53a48-5988-4cbf-9326-0272b6b8a9e2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e31ead-a13e-4ac4-ba07-af9af5eddf83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687d63ef-fbc1-481b-b451-3d94afec376f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f491c7-5269-4d86-832d-52592bd34c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55758bf-787f-4f93-b1e0-be875f1d8f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfc150c-028a-4247-8c3f-984b8df9cacf",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d8e357-e7f0-4df7-be91-f8f01df93321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da9a1541-b0a4-45ea-9ddf-23ca59472027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68756b89-e850-4d17-b176-4ecc8ece46ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ad279d-f948-4c35-a36f-91ac7e06851c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b3c1de-2a79-4363-a0b7-9adbf1a093e1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5354d226-4e5d-480c-b3c6-45ff1710e685",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "337af0e7-8b77-45d4-9303-f534d5fc4231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "222c11f0-6232-4646-b5c0-10b28710d5c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3871dcb0-c0fa-4c66-a49b-420acecc6308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50586ea3-be5e-468d-85e5-dcd84b92f86b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f2ae6c-09b1-4d5f-b564-3eb4827cd410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f312affc-ef3f-46ce-b5eb-cb02505ca941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9972990-83a9-47e9-adcc-fa8821a2ce3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5905e0aa-e553-4c9a-a943-54170f62d24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d2e720-619a-48dd-9b9b-e6ca8af531cb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06449cd0-218e-42de-ac8f-432a018cd601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4fe436a-94e6-4014-9b24-876c31d0840e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b8d802-a2c2-4e0a-ad81-8e877428c816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937e1e63-abd1-4e6a-80f0-247c929478ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fdbf03-7cbf-400e-96c2-05160635070e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98bd4de-2e0d-4e46-b1f3-c1a00bd9ea73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d934cf6c-a294-4f39-a75d-f7a43bfcb7ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00ad328-79b2-4802-881c-9cc09e867bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a173f5da-e4b7-46ef-911e-bb88b1e410fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df5294b-7797-4478-aea7-9c0826f031bf",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a511138-221d-496e-aad5-b0d654844749",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "193cd496-2ecf-4b12-834e-a5b0af41e751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc0ae93-7d3c-4987-93a6-f4127fd97f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d53ccd-d22c-4b88-ba24-1ed87bba06cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d485fe-34e2-4004-9311-9a49731d8592",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1877e5c-7f61-4cb4-8cb3-227c4a750024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63cccf8a-7d3d-48e3-ba10-47c20c2a4844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc6f786-0996-44c1-9d16-a3cd64c8552e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4e399d-4d7f-4ee8-a625-7b684b514823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a53b085-edb8-4360-8b89-5f43a1c3c4c1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec4aa2e-f2f0-4d85-a8a2-20df5df49293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfcf07bb-a751-424b-b550-59e115ee2757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2469a8c7-0ca9-42ee-bbc1-57bf5d9ed105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48d5363-0a41-4725-a53d-c7c1d89e3f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c70c640-0d22-49ba-bbfc-a0db86bfe72a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557d56de-6aa7-4404-a84d-40429093fe85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea866469-0396-49b5-a76e-89353202a754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea9ed5d-b877-4a27-bacf-5255fd7b7149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c024eaf-f3dd-45f4-bbd8-652c350b811e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3779ba-a57c-43c2-b73e-9b595bcf91ac",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b9cc2a-96cf-481c-9cef-6bedd05d62ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86bec79c-ab34-4c5d-a47a-bc73e346d1c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9eec04-6892-43af-ae64-3321b30660c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c760efb4-cf09-4dc8-a8a2-a8b9d610715a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6685c0a9-c9e1-4691-b275-ea1f25b91408",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800c3ad0-da08-45a2-acf0-420de6b2aa9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc72493-94c9-4c6e-a31e-b43096bcf8ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b55f06c-af2e-4eea-8257-d82eb98ffee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b254dcb5-d392-4a14-b312-c98b559e8767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1962eadb-fda6-4376-afe8-68ec5cb69719",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c06c43c-229d-42ac-9140-bc2eea59b3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27b9b7d-c59d-4269-b36e-9c2ca5ec06b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca87fa85-4a28-4298-8f52-5528efafa7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16091de7-87d9-4224-b819-b4026e6b5c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fde085-9460-4147-ab06-db7c9ee7a213",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5f486d-0e1e-4fe7-9600-be1d450af98a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4dfc47e-783c-47af-bc7e-82f07ad61e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e35a6b-dcf2-42ee-ba9a-b25d35421eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0aa250-c6bc-4094-9aa4-bec562d5af6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782e2447-c501-41b1-93c9-992c54b80bf4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecee07fa-658c-42e8-bc65-00eee6fad156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62dc047b-e56d-45bb-820e-de27f2708649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2ebdf5-c05d-4b1b-9d55-06e24946b3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64710f4a-4dfa-4d36-b742-7f0b1f5a6fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0a161b-321f-4582-9ff9-ea60bb0dcbc4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aaf983c-f355-484f-b8af-678166b06e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40c57d3-c16b-41d2-a259-dc1496808e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf68dcc-6213-4c83-99e5-8f88c478cb2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a8827e-6a87-4766-ba7d-1100e4977933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abcb7fc-a5e4-4949-90e1-47d895c8f8f0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0314f59d-0ae2-4768-816c-3c525e14c7d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71cf718-8cc0-4d98-8923-54b39176c450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b44311-7597-48bc-9b3f-36824a5e4437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1591ebc-02b1-4373-8538-dd6e061cdedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b2610a-79c4-4534-ad1d-0b07a1123715",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd8e4d8-d3f1-4ba7-b5c9-6fdfc49ff534",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4056af4e-8393-4893-a706-fc3b339d49e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9007c189-3069-41d6-958a-e1f5391c3af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12caef5e-4fdd-4b28-a826-d2e300745858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55aa0fe-0a6a-4528-a696-6ec9013bfba0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d0a6ba-e654-4f6a-bf7f-099494a71947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73cef33d-9e87-4473-9d5e-3a7875fd02d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8924a93-b9e0-4992-8a5e-2baea83e438c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeab529b-dc16-4cda-aa41-e7ae1206581d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bc93e7-1a0c-401b-aaa2-992c6cd6df5f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda9ef74-c24e-4b29-86c8-447a4f9f6026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "091515a7-9f4a-4f8a-95ef-f96e0cbe0c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61190c7c-b506-4f2a-bad1-f57281bf54e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3686f78-b81c-4c79-a6c4-b50ebe5a5943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c201f4-8af3-45dc-a136-952bde38aed1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d34d14-e17d-4abc-a56c-b4c981da40a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9d7c81e-6f74-4079-9872-7c52adf949f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f2ae0b-0153-4d2b-a9d2-6f4bacb2af8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec971d3-7899-4610-939d-1e6d4c8317c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e030c96-e69c-4957-8208-42e585472a95",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08ae845-f83f-4683-ae1d-8fd50c14806b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da94af10-502a-45b6-84d2-b084d1e5d4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5636d97-9afa-4aa2-b9b7-2bd848c3f6bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07239018-6611-41a1-b4e4-8822882c38e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d814eaf-f2f1-4423-a8fa-08adbe363b44",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed93eda-2147-40a7-9f0b-494cba99db1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91ed6537-b2b1-441c-8f1f-e4cbe24e9848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44723b75-42ed-4df5-a414-ada608c0a7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31fe6bfe-3813-4f63-8e5e-9c0ff7307f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7037b6cf-801d-476e-bb42-cb3bf387b69b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf6ad19-1f62-4822-b812-840f02bfab32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ec21f98-c243-4928-90f4-343e266500c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e080df-5f65-4f7a-98d8-e2dca97a8461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6019a871-170a-4eba-88a0-8f2ab4c10cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a7f401-d2e7-4499-8811-40abf0a0e4ca",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ebe917-f558-47b1-a4da-dd379eb30ffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9be5676-07c3-41c7-aa19-c8564d20242f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5469e0dd-d7cd-48da-849b-27e928dabdc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15dc7a6-2e85-4fce-80c7-715e24f55a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116565d8-ab63-4c1b-b1c8-adbac9c898fe",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7e6902-4ac0-4e2d-a09f-635f3e76301b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1f8e086-e9c2-4b13-ad83-3c6a432a7731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f39cb75-efec-459d-8c44-e58b5173e088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913e89a7-fb7a-4ffb-b86e-f6eeb519927a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc87864-34bf-4082-be4c-c8287b336ffe",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436e48f6-84de-43d7-9c1b-5f0680debc53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f2b92ab-a816-4b03-8ba4-c4b83dfe7f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20fc21e-2261-4c07-962c-8f1d9432fc88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a389d4-a493-460c-abd4-6bd4916fe7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91a8f30-aaea-4dd2-a3bb-7d02b2feb1cb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bd892d-d518-4b50-ad06-39d2fa5c77d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1590477-c556-48dd-9464-0cc9a0e45e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51370593-009e-41b9-b575-e39d3145c15a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86b032a-2a73-41e2-bba4-b8b001b991a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0028c7a9-ce65-4e95-9a50-d2995ac23d2c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fce6e6-7003-42f2-85dc-a409ddfc4e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ad4c26-80ff-4756-b3fd-c4814ef62963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a4bcd3-38c9-452a-bf3e-4abff5f3fd75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de20aca-debb-46ef-83e5-1b52913e4202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b689dae5-04d4-4919-8761-5baf0fe2a29c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47df37bc-4737-40bb-804d-c6027be70cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09be638-d5bc-473d-9982-57df48d8f35b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe6e5f7-19ad-4b10-b1f9-23e85a68444f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d3e8d0-4883-465c-9db0-82ba5768031a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4568ff5-cfd1-4bdc-a357-e820762ad4b3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d52387-3f8b-4180-a6c1-808179ebb37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a941140e-06d0-457e-a6e2-2603e917d375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc7a4b9-ce32-4594-9e21-24fdf1797b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccce9146-2323-4805-84b4-2f59bfc13d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36aebe9b-3ee3-4c67-ae1c-f2416ca1941a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e6be68-44a2-4208-99e1-22d15d82bea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35027b5-d0e6-49e9-8b04-fc4b80158ee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29742ab4-0c79-4b8a-9f91-8dbb9d1c84b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8de59bf-065c-4abc-9823-37459b1e0970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0275c08-2a43-4196-984a-cfa78dc11ce9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16aa8b3-8c55-4f53-b306-94b1365baeba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3f10bf-e283-4634-a8f4-473a5bbe99cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9c0f13-956b-4a7a-af43-ff0e7bfa8102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58fe2ee6-698f-4436-a670-0f39a0545815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1493d32e-e16a-402c-9982-cd5cd7f445e3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df501dc-4a81-4156-b541-9c88f4dc0e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61196e7-713f-4d5c-b202-e81f1526d230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26167fd-295a-4edd-8989-a97902890187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15f4059-5506-42e9-9864-2453b22276cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f182ab9-85b6-43de-bbdd-078a5c2c35c4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65866b2-309c-453e-9408-3e4e2cb0df89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f808b3dc-afb5-4983-b584-984bb79e7683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86d5d54-141a-43fe-ae4a-2627f435c8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce36244-42fb-47c1-8384-e3d169fd4fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a192db-5cc4-450c-80be-e1537d28bc09",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27a6f91-e9b1-4e66-b3a6-dbba44ffd1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c2c9f7-aa55-487a-b0ed-7d3c4310d835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be403e6f-8d4c-4aa6-83f5-265e220e2675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2f27e4-e613-4ed2-aca6-a8be3ce45b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2f5775-3283-43d4-8d82-f248b649d24d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b793679-645c-4fa0-b9db-874b5dd574a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4ee61b-1cc3-4897-8f43-19c5481fd7eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "568b35bd-0775-497d-a5ed-3e9c93c095ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5549a095-43d9-44c5-8908-2a1fd27e2b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5754ca9-5dc6-46c3-ad8a-85ad0027e76b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e94c268-5527-490c-95bf-2eaf6dd8cd43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb26d902-d758-46f3-90be-48c4e0b8b5af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950273f9-5647-44e7-bf41-581e3e32fccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb0b01e-d9c3-49f4-9eb7-b6f0b413a3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0191db1-3179-4b63-899d-fbccb6c7afc4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209e3eb9-2814-4059-b209-23b7b183784d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7c2ca3-77f5-44c2-bbad-220a59896a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a7c0e4-206e-4d4b-81f6-fdcf302bb425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f84972-65b0-4d96-b65d-5a69cc25b15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9909c5a-a3c9-42d1-82a9-893923419433",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fe1aae-2524-433c-943b-ff49a2a7d59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e15d4f-5605-444d-9607-22573b3dd2ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8f2bb1-7750-4a8d-97b0-5591055a3dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50cdc01a-6eeb-48bf-9b15-a21cf019c3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff43e7b-6fce-41d0-ba0a-cf842b297fc2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684430be-e5fe-4367-8099-72adfa3aded2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e27247-47ec-454f-8162-5c6001357d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8192777-bcf4-4601-a686-5670f2d85202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c71857-fe9e-45c9-8888-f5031d164e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6123a489-746e-43e0-8a08-11e7ed4430a9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0de7aa9-c9b1-43ec-a200-4687d0cd6e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3cb32a1-6fc4-4bf2-8381-3f869ffda90a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "278d4bd0-0823-40ab-8b02-569dc7c999bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff362f93-6ced-4a01-a6a1-83baa2cbbb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f08107e-b32a-4938-ac9d-91779cacb3cb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbebff7-a330-4461-966c-b059d6e6a26f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895958f9-a1b2-484c-9e84-e4888ceaaa08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9d1131-cac2-45c7-aeb2-002499fe996b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456146b3-6d8f-4970-9c2c-dc74fc62496e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab86d4c6-eb14-4828-a57f-4521f2493b6b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d51571a-c7e5-4337-b2dd-404dc2d8e08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cece8b16-37c5-414f-8122-b8cb4e058919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e69a7a-9b24-4fa1-bb1d-e77357ae25f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ca3ddc-0c08-4fd6-8af6-432cd3395265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3728d37c-4c12-4302-9e32-707d0da97be3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b8d330-2c80-4374-83ad-a189e1a577c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f06966-4a03-44e5-96a9-6d7d7017f4e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c28ca1-1514-418c-8bfb-4ec9fa98a5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7cebf8-5eba-4e62-8739-6448d31505f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb82b7d4-8910-4b31-8167-be448e81bfbb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e52fb0-701a-477f-af41-d0e48c1a1490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c9b50bb-1622-403c-8c5f-944cffb7e5d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7c5c23-4bdb-4f81-88f8-d8bc1939d95c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88afa8e4-184a-431b-98ca-326076161899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27338fd-33d8-4ec6-8688-98a2fe341bfd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a12392a-82e8-4234-97e8-94c344f726ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3badb10-ac0c-43c1-92d5-b43143794f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7550512-d075-4d99-8bde-b5fb27b5f791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48fe1146-ceea-4614-8a41-8e77e0306701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecaf5d6-8092-40d1-accb-4df3886ebc2d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea6d359-ae8a-4a75-beca-5b038bddde91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8960b735-acb3-4031-a541-c0561db827fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6b094a-4070-4c09-83bb-b705db740b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c139e6-aae7-49b0-95c5-a0dba27d1113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd22d50-9338-4eaa-bcfe-208048e9c55a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e021c8-44ae-4bd5-b71c-27f7caa5b753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a293c7fb-f5a1-4216-8c2b-84b5529ff95f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ec9f1e-0c61-4171-a116-f5535c901bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a10e31-241f-4e3e-a2a4-57bf9826961f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3685ba-44d0-4a5d-a7b6-6046d48c8094",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68763b2c-a957-4fa3-85ae-6da40e83b13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75305eb5-44c5-42d2-b54c-9348ce39e48e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048b44a2-c8ec-406f-b7a1-12a2b6c3f3f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6495e3fc-5731-4524-b5d1-6eb757d17893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23169c89-c871-45bd-ab62-a51ad4ae7e65",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1be662-92e6-4678-86aa-15ad92ba593b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20de83be-614d-4345-b41a-a41427f06564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13eba4d-5f37-4ecd-a7b1-f52d6c1f3d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45acb211-22b8-4bf9-a471-7c16e03c2547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f056964c-5dfa-4eb4-87b4-555d971b596c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80920f47-0439-43e8-8666-cdeea6c7c3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481231cf-fecb-4c58-9406-ee711befccf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "743c13ee-ba05-4d36-826a-723cd1931ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d524e20-b265-4aad-9d21-acc0f3159734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6b1a4a-dd56-4373-a5e1-fc288b09f0ed",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb360cf8-fb77-4207-a801-b13fc812ba91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b5c608-9efb-4f7d-bf33-aaef4bff7fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24de96bb-faf6-4f62-bea2-c8fd10021852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e44183-5d91-43a4-a765-c606fdcc4c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603e77bb-4293-421a-9163-963dc3a579d7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa99e25-a737-4b39-b6a9-13bed95b3ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044e5a53-e5e9-4bb6-8601-98ebaf58cb01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6485f9cc-8f80-41f5-a1f7-9e08cb846cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b857e4f-8d9a-453d-ae46-da9e09820917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1146d927-a608-4530-84cc-185e5d40bc6f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf7c144-0b6b-4b0d-bca1-5420726f4536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5634bb0f-108f-45dc-9673-f56dadfd9aef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37819fe-1436-4e2f-8df3-40cec710cedc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee92acc2-575e-4bc9-b3ba-85979e0de4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f6f55a-6614-4968-b6f6-2b65aa5b8a9e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98b73a8-1c7d-45f2-9f1e-4a3c1fa2ba16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a835f9-9c11-4731-b4e2-66d17c91d0ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f711f1a9-482b-4aa1-8027-88ce6de9d82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861dac1d-380b-4c38-a230-b5237a7e5528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ff44b9-d8b8-4861-990e-68a22e72cba0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4436f5-c5f3-4ac8-87fb-366374a07d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378d751b-a140-428b-bd48-772ceb0440d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffca4ed-ae4e-44fd-b7ba-e6c0ad051de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23a9a79-435d-46b9-adf4-7c9bcd065017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd39224e-d52a-436a-9500-1a9e4580c206",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce2475a-41d8-4d93-9593-9de55b555c11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f5ab750-14df-4cac-82d1-df1526bad658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c900e6e-7546-45ab-be33-c1fb3d83fe81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df990c10-fd7e-480d-84f3-542ad44b1fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4b36d1-22d5-4d81-93a6-8298d2104444",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5d4364-4c2f-42d0-9b01-7f00d20ba7d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dabdcb5-9dc8-431f-b7e9-fb37910e42c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ef931e-cfef-4280-8045-9cc62f11345b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d1a973-c960-4e74-9568-0640c2973974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2bd6ce-0d71-4708-9857-fa8403beaaf4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5f958a-20f0-4076-8d5a-b59be53bb65b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f29d6a98-e0a4-4699-8b6a-a804cf4ead6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4121ea6-8267-442e-835e-a62eb47c4cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c5ea3d-9f84-48da-8779-ce3783cb643b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6515147-b9c7-4076-9aef-333df91d54f3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420ecb43-66ae-4cd4-8129-19c802e1ced6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c62bc95-b25e-4a86-97bf-d65d146a4ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35113fd1-1540-4d63-ac25-c591d73bb95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e3a5c4-e545-49a5-aed8-a9eec9621ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67358c7b-da1d-4dc1-bd64-74245300062f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00776cd8-ea09-4b82-9137-300caaba6bd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "008456d5-8f69-486e-8542-dffcd25946ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00996f82-9177-48c2-87fe-379d0a10ef93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b91cf74-9281-414c-97bb-668bede8dda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a09b961-f9f7-4713-a5dc-b02d498a7904",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bb08d5-96db-4e94-9bbb-bab8eb817c2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66955562-3f92-43a9-bde6-0c6b02f5ca7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "731bbe51-45a4-4523-9f0f-952753b19d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef949021-511f-4b45-81ee-7809ada74ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a881d5c7-5ac2-4877-9df6-5032791274b9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be14d44-234c-4111-9aa2-ccd75141b7d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7c6b5f1-e1c6-4e78-bd71-bffb3078c84f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b063e51-526c-405a-82b2-b553c97fe029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c5771df-7e62-4b06-8df2-ab8990591d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531ba418-e892-44ef-b7a4-153b4182354d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4645ad32-9173-4e98-864a-24de2a6eca00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a291f63-ecef-412c-804e-cbc1461e0efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbf133e-cfed-4bb3-b899-99eeba03be57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19bead0-d9d6-4aad-b8c6-d9cf4f07a36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76eb9d86-ce39-403a-a607-ab97b5a9e0ab",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7ab941-a599-4162-8b65-4ad104a297e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52285058-cc14-4d98-a03b-02922d29bc9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77024904-fd8e-4701-819b-44a0ceb41a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e6f80f-317e-49ab-ac11-24699dc4d2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9715e297-2e7a-488f-9dbb-50544b414931",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928ff859-d2c0-45b3-91c1-0f7145287729",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "840434f9-f4d0-4de7-95b6-0dd1d30fef44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "576780a9-20e1-4a59-ad2b-602482d9b80d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e64bb8-40c6-485c-942e-def46377f418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281c231a-b2ce-452c-b560-9184180f35cf",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6fa5a9-3a7f-4b94-bf70-3e77bf6c6a41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f770594-2ff9-4861-bc4f-1dd2c6734d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c017f8af-dede-4430-a4eb-cbe550a30caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a084a0-ab19-4bc6-bd23-46c6440e62a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bbee21-cd4a-417e-9bf3-273d8be1cc34",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11faaf63-dd25-4273-8ea7-c881005f0d97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edf58698-0e1b-4bc3-9286-915ea580974c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcd99c8-b396-4d1b-862c-5b98a6ece63c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc6ddd5-def7-4a99-84b0-f680c29d15f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a6731a-15f6-4172-bf9b-c340b0caf39b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2735a3d-db8d-40df-b75c-f8b73a3073fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d0ed767-8feb-440d-8163-bc0d493de8a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317a6d83-7e53-4f7a-b706-c7b4fbcdabe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a85064-e332-4710-9bf9-86e6ab1e38e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f59827f-e8b5-40f9-8177-1fa0bbb757e1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe00cc30-f42e-4c34-a20b-32d98f9c7959",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e23269c-2b28-42e8-91fb-cef33ac9ef30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845ade7b-b787-47b2-9b47-7aa94c9a5d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe50ed7-5794-4817-a969-6774ef0e424f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5924071c-4145-460c-92cd-22bdcd33191e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f492a133-4123-4bc9-b8f7-b4b6fac907a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5c602e2-9911-47d8-b864-f6509b185a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8af46ea-3ef0-465f-9bc3-3ac7de1ddcfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618ace8c-f740-41fd-baad-ebcb4fffce00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92350d8b-1012-49ef-9d2e-d6df7ed161f4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc04a0d-8f54-4366-98fc-45404c5a0e99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9156feb5-7a8e-4ddb-9d64-5c9d6e0f5804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedfe1d7-5cb6-43a0-bc86-953ebb002bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caad5a70-9a35-44d4-ac3d-5143a1195900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f35743-bf3b-4558-b06d-3b1b71b9a5ca",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc56872f-6190-4cce-b26c-b2de929066da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fa35679-6c9e-4023-8142-17950716bf2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf15834-5a01-4adc-8764-39380a033e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf86410-9ee3-4f74-a79f-9de6e7b4de48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9787bfec-7cb6-48ff-a125-0f728945aa03",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c32599e-f2cb-41f8-9de0-96dbc7547461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8421cbf-9d2f-4811-8646-7ba1ff65fe66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ee360f-5f68-4804-b8d3-4b07cebd0bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5170d825-cc3f-4384-9755-269f999cdbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9803cd85-ff66-4203-be9c-ad752f148a1a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0853f8a9-4624-43c8-87e8-ed8082f2b711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07e00e26-42da-4884-b85b-28fd0d1e761b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92842342-57d0-45fd-a706-6374b110e88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d338ad60-76dc-4792-aa80-19582bfe1d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20c8cc4-b6cd-4b49-ad71-0a16eccda918",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2556f4-f559-495b-8458-2c14b4d19662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e29a144-9136-47f1-b43d-4bfc42e4555a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae45a41d-8c5a-4b3b-a17f-50ac5bcc029c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94561a81-37ff-47d7-853f-c392a1095c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63068858-3c32-4732-862b-83e4614493fe",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e9e421-8ceb-448d-81fc-d2874020b872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86f18f13-03b9-41c5-838a-fc09335641cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0f6b56-e7e0-47cc-a17c-510e861aaf52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41efaebf-3bcf-41be-8dd2-dedc0567f0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07e2e0b-738d-475a-8b2c-b9d66363a27f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96394b40-9570-49ef-ab70-78c31c379932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d431f65f-df10-4a22-90aa-a3f4eca494fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ce5110-7b92-41c6-8f1c-fd1939074bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9407da2-7382-44a3-b8da-0085144b50f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2614573b-bb1b-4aa8-89a9-ce29d21c7184",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc55853b-86f0-4164-8519-a24c30020bdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9127e3f4-7259-4fbb-8010-a435ab7efb8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e5d5b6-7796-4b04-9b7e-39d07f26c1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef734b11-1da4-4b68-af62-62373b9ead20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6e1236-b8b1-4f26-b03e-0cd2b5e4278b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff6756a-e9db-44ed-99f4-a75a54ccd4ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eca46c66-ccce-4964-bbfd-796b6cdad8d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35b5b51-c014-46b9-b870-ac8c194d05d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052d488c-222c-4ed2-a278-41bdbfe8aa10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9288b7fc-5ef7-4c8c-96c6-7273d3340354",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d37cf6-c1a8-4dd9-acaf-56a78f98a0ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "394e1060-0316-448d-b363-85e8f12e7923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b84815-3308-44c4-8ff2-b75e8a751f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3fe554-71a3-4ce6-91bd-ac4f49593726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a15dc4-ab58-4451-9ed0-4d51c61f8b40",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085a5e58-67fe-442b-a187-77c22e6c0532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0100f7bb-d044-462e-9d4f-2a31a15eb50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e81455f-6dcd-4f28-8b64-7dbc4d4954d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a137bb0f-46f6-4399-a5e3-2e29063fc996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aac5644-d0c5-4e12-a95a-c11b3c7f5312",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5437d90-ba8e-4b4f-988f-5fd811eab5ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76974782-56d4-4a91-9abe-79c56ec8dd01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9275f5c-278b-447f-8690-a58079a7916b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8ebaeb-1bac-4d46-a62f-0cf377f202b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ec14fc-89d3-4450-9456-ef95f2028e0f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03689cd2-5b1d-44f8-9732-d31f23e49051",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52395d54-5302-42dd-9d56-f25d734e140d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "089deedc-87bf-4e18-9b3b-3881c07282f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4924e2cc-d2c2-4b55-8414-21ed03da942e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70dfff30-c4fb-4383-875c-6619ef0f68d5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16267871-d959-423d-91d2-0011ad704053",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93011716-1303-4b12-93b3-33de23a455fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58b3402-a8d9-420c-9d0a-59c4d2b90760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68c5755-ef6f-49ca-bd04-d669bcbee277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203bf377-b840-4e39-87e6-3b4288c5993f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccc3119-30ef-42f2-b0db-366c6e030677",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81ee713a-a16d-4b47-8540-995a000f312f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ba41ea-3a35-46e3-abed-76e7e8b32522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d88e68a-efc0-480e-a076-c02ad21aca75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc8944f-b225-4f39-83fd-bcde14ceda3b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484e7c42-7e66-48a8-8fab-acf67ef662e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0c91630-67cf-42d8-bff7-c18f8bd74ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f2cb7f-cc23-47ea-b119-77fd83060987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce30d639-3cd3-4207-a136-c0e3027661e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b04398-1ca4-4aa5-9b97-8b535507b9ac",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1049dfae-b95f-40bf-bd54-24e169fd5fe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac405c1b-f61d-4abf-b2eb-4a5af7991f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c908d1d7-c9e9-4303-8db1-4985448e7869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2555892e-1513-47ff-8d9e-fce2668c0cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4a8e5f-772a-4c45-b8fa-05c6c296398a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c298328-d5d7-4cf8-9d52-79522f8d101c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33c6cfd2-879f-4707-8ca2-b3bc1f9a04ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a24779f-7777-4b04-bc06-0b50d173cfc1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902e7893-ffc6-4db0-833f-d4da3f631602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ceb8d2-bd7d-4a4f-b56e-d9d44426f0c0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea16d5b-e23f-4224-86d7-6117a296de64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cec79aa8-8962-4ae4-b052-58f94338a06d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b54c36-d7c7-4231-8ec6-942c4f17593e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182c7bd1-fe71-4995-9fc4-427caeac08f8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d68d72c1-412e-4c55-b515-ece7f49e67a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4fb8a5c-116d-4358-90c4-94f9f7c4b12b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46a54c38-842a-4a6a-b586-a7153f3361cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc1c0408-b15d-443a-9461-814b87d3e86c"
                    }
                  }
                ]
              },
              {
                "id": "d4f12935-0a5a-4af6-b84d-eea625728cbe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "788607bc-3ddb-4679-8f7d-6f404f48b047",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef261fc-00b8-4c0d-a130-e14f5cffd40e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "27218237-71ed-4943-bf40-c083540b104b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea570fa-b326-464e-9b4f-742e096b7425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cafa4aa-0f94-499f-9047-65f1ad271cd2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98943433-aeee-4bd2-b5fe-89e11b020042",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb465752-5357-4729-aa20-37502c5847c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "acb34c45-975b-4f2c-8392-ea3d08e6c4aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "176bddb2-07d6-427e-a37c-8fe0ba8092f0"
                    }
                  }
                ]
              },
              {
                "id": "335bd788-76b8-4879-8287-2c52bbfbfa90",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8888f8a4-b106-42c3-99f1-a7d3921977ac",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dbd559-5a70-4c0a-9035-d2bea9bf55c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fbfda02e-3702-4823-9cc3-3df4899d7448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc698b53-6642-4bb0-b60b-794eb5765503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b1f41a-fdfe-4d7a-bd98-bec98535f06d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8d65af58-6bf6-43ab-9432-aeb7e1f5c194",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6500a01b-f111-4e6e-920e-9fd52792bcce",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "858db891-bfa0-4300-a766-fd17e239ca93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8af91e34-b58f-45b8-bbe1-f159dc72edcd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88d379ae-5a3e-48e6-8282-d01391b9bab8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6392c78b-cc16-4539-9bb8-37c87e807814"
                    }
                  }
                ]
              },
              {
                "id": "b6a55de4-2ad1-488c-ab19-f3ce1e6e324f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b21e729c-83ad-480e-88b0-28e99774ed98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "030ec115-ebe2-4ed0-8189-36348fe93f32"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fe8f52e-3be5-4dd0-ac4b-70029d500d0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7f6fd10-bf77-4fe0-92ce-c82a22b8941c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac1b03ec-9bc2-4276-9e7a-6486208d3110",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "921491b0-9b19-4221-8cbf-e97f36276ed5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab0a5179-66c9-4ade-910d-f2c24925f5ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f06d5305-3288-43e7-8232-c2dc05eafe14"
            }
          }
        ]
      },
      {
        "id": "7925ac74-1812-4492-acd5-a9bb82ce77a4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f0c68e2c-e73b-4b27-8868-69d174ff11e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95843009-5b54-4c68-a769-77ab4acb3bd6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19bd34b2-09cd-499f-8af1-9e1d8e439067",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8826ef5e-b6f5-48e6-b254-e329ba92133b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "46e12a25-9db7-41e1-88bd-2c8835561aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78126ca0-db95-4360-a17a-d2880b370dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb63ecad-6f8d-4351-a5ae-cce56cf3ea16"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc363431-ae62-42c4-a71b-b20fcf08f8b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88378d43-74ae-492e-a1c8-ef931a628d58"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfea79df-dcef-4537-8dfd-93ef72b3d625",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edbe31df-3050-4d5b-8003-c99041a24ded"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d3cd0a9-6c86-48a4-9ba0-b2bdfbfc8af7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "14088824-bbee-4f58-a82f-c329fafa65bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcb12989-f2e8-4563-a4d2-e0fe3a9fc98c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a284df76-165d-4825-9ee5-11d2936b9acc"
            }
          }
        ]
      },
      {
        "id": "c00a434d-e90c-47a7-bfe3-e0bdcb9ba916",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "67cdff87-7d48-4665-947d-76ba8ab85097",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af2ffeab-eb5b-4d58-8486-cf81da50eaca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69791a06-f692-49d8-be0b-5649bd98eca7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb3de5a-918d-4610-8506-07beb395ed95",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28cb7820-8c45-41b4-b392-3069d7d9e5a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ab878e-0616-4470-af87-7d8a76041e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e8895cf-46a5-4fce-9533-f890f4de9399"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30c4e3ae-261d-46a0-97f8-06fab4d45495",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "927adaa3-2284-4bad-9c89-fb3d3b3fb5d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49aeeb29-7c0a-4ac1-8a58-0f375b373974",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55924a35-63c1-4453-9c90-8822aab68753"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c69c0c65-9005-4205-a0a1-f79bd75d2007",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bce234de-77aa-41b1-bfad-8e2aa6aee98f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5ac7367-696a-44a1-920d-0f1b76890c2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12e1c4a1-c8d7-4bbc-9038-466c1045ef55"
            }
          }
        ]
      },
      {
        "id": "b8108b01-61ef-4803-8e2c-861e9792dfa0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2fed622f-e160-4995-af2e-78c1a7087deb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94747015-fc07-41dc-b0c2-457e45861db4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "950d79ae-1c96-484d-8d86-cbc47858526f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df7d67c-cd47-41dd-a890-d8ffcd5e695e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e066469c-552f-4627-b1d8-7d92bcb6cdd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9006ff35-e0ba-4bb1-93da-ff19dc5cfb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f7d9ec2-c55d-441e-a4f3-2cb1774d8c83"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b9c421e-a233-46a7-8929-24f821a6b60d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5ccb4f4-2091-41ae-a5ed-f52138333518"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "719aff06-e2ed-4bc2-9b01-c440a89e0948",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "030b96e2-da2a-434c-9692-ba4b18ce26d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db50ef59-6d61-47b5-a107-9b412718bde1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "58fe8af5-828e-4ffd-bfc9-563b0abf1773"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f92b59e9-18cf-4f29-a731-6f5b52452b45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c780a7d0-4503-4ef3-a19f-731d39f2ecfa"
            }
          }
        ]
      },
      {
        "id": "125cf8e8-4e5a-4d22-899d-69c2857537a6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4044753-dc02-4c27-a147-86a8b0611e7b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75680c16-3bbe-4656-8355-e52e30682db2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cfeb4f2e-68ba-465c-a8ac-dcb3456e7cb4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51fe73c2-e6b2-4cfc-ae14-ce90e54c593a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51fb5809-5473-4334-909a-ba366f1869db",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 103.74999999999997,
      "responseMin": 5,
      "responseMax": 7420,
      "responseSd": 552.7965599624781,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1713659888969,
      "completed": 1713659923172
    },
    "executions": [
      {
        "id": "79a7053a-7d19-4dae-806c-c053781f1d21",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0290df3f-0d44-4231-b6d2-5a528c4eb643",
          "httpRequestId": "aac93f42-1dc1-4195-8844-d699027593ac"
        },
        "item": {
          "id": "79a7053a-7d19-4dae-806c-c053781f1d21",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "450e980d-073a-4bd9-9b59-8d9c42215f61",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "8b4cc829-0f40-4887-b206-bc5f163aa7d1",
        "cursor": {
          "ref": "b9e70368-8bef-4f69-9e88-c20138dac7d2",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3b776162-7da2-4503-9209-12022f60e523"
        },
        "item": {
          "id": "8b4cc829-0f40-4887-b206-bc5f163aa7d1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c9a1fdc9-22e1-4963-b99b-965a434c7568",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "46bc49c5-2cfe-4355-ab0d-13ec9cb89815",
        "cursor": {
          "ref": "4fadccc6-47db-48e7-8c30-deac977a016e",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dd46866b-9b84-47fb-9fec-1766bf51f128"
        },
        "item": {
          "id": "46bc49c5-2cfe-4355-ab0d-13ec9cb89815",
          "name": "did_json"
        },
        "response": {
          "id": "18e83c58-397c-419f-bda2-45ef731c6d0b",
          "status": "OK",
          "code": 200,
          "responseTime": 304,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665c5cba-d7b6-479e-aff9-fd500a4426c3",
        "cursor": {
          "ref": "bd25d831-6a51-4711-aab6-c20f5568007d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6625688e-b01e-46ea-85fa-32a374e0de55"
        },
        "item": {
          "id": "665c5cba-d7b6-479e-aff9-fd500a4426c3",
          "name": "did:invalid"
        },
        "response": {
          "id": "5d0bd996-6118-4202-8312-5e358d6bcb5e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1451,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665c5cba-d7b6-479e-aff9-fd500a4426c3",
        "cursor": {
          "ref": "bd25d831-6a51-4711-aab6-c20f5568007d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6625688e-b01e-46ea-85fa-32a374e0de55"
        },
        "item": {
          "id": "665c5cba-d7b6-479e-aff9-fd500a4426c3",
          "name": "did:invalid"
        },
        "response": {
          "id": "5d0bd996-6118-4202-8312-5e358d6bcb5e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1451,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1878fc2c-9ff1-4bdf-ad96-d8c49bc293ed",
        "cursor": {
          "ref": "dfc64318-012d-4e6e-b6b6-9fdb6cdc299f",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4165c5e5-e2e9-4c2c-aa5a-572366ff67c3"
        },
        "item": {
          "id": "1878fc2c-9ff1-4bdf-ad96-d8c49bc293ed",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3194059e-f80e-4291-8b98-0918e3ae275b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1587d1d8-9e9a-4cb5-90a6-3fef49a699be",
        "cursor": {
          "ref": "65d57549-98f3-41fe-8071-903a2e430199",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f6eace67-ac09-49e9-bb5d-3cba6f39c508"
        },
        "item": {
          "id": "1587d1d8-9e9a-4cb5-90a6-3fef49a699be",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1ffbb1d1-8313-4b58-8a4e-40218df174de",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc38b753-ff18-41e2-80dc-9c48767d30a8",
        "cursor": {
          "ref": "56f4f041-d578-4e8d-a872-7bc32454fd93",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fa2b96a4-6422-4917-890e-4eb88781728b"
        },
        "item": {
          "id": "bc38b753-ff18-41e2-80dc-9c48767d30a8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "901382a3-a81d-42d7-8f19-7b7c95f9d471",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d35673-1c1d-4cc8-984a-55ad58d719fa",
        "cursor": {
          "ref": "dfff1e84-5dfd-4614-93be-e9402a433963",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "22d722ff-ab8e-46d8-9692-c43314cdd048"
        },
        "item": {
          "id": "65d35673-1c1d-4cc8-984a-55ad58d719fa",
          "name": "identifiers"
        },
        "response": {
          "id": "17ce6350-fbc4-4bd6-9641-34da1f6b2016",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea15487e-50b7-4efa-80b5-4a8ba22a3a7f",
        "cursor": {
          "ref": "2636f5d2-583b-4d33-af7f-e9ea2e407757",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3bd681f9-413a-44eb-842b-48e6f80a06ae"
        },
        "item": {
          "id": "ea15487e-50b7-4efa-80b5-4a8ba22a3a7f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a1c1e145-4c35-42cd-a682-b5b05f59279a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20ee070-bada-4dcd-9750-3cabf7cf4b8d",
        "cursor": {
          "ref": "872dacc5-d5ed-484e-b08d-c4406a50fbe3",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "26ae2198-4aab-4a3b-aaa5-758b8f6afcf9"
        },
        "item": {
          "id": "a20ee070-bada-4dcd-9750-3cabf7cf4b8d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "89e715a0-855b-46b2-8e44-7bf3eddfcff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57d1f29-9aca-40f8-80ed-6e291a528ae9",
        "cursor": {
          "ref": "370b671b-2704-46d9-9748-dafa4cb755ae",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4190e8ea-8e21-4d02-a23b-77cb2edc4e2b"
        },
        "item": {
          "id": "b57d1f29-9aca-40f8-80ed-6e291a528ae9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "13db13aa-7c91-4836-8a16-d5dc6a7e7b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17adc524-f758-4a30-9fef-102705466b6a",
        "cursor": {
          "ref": "7a4eb363-60c2-4356-9dc5-80cf654c4a0b",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "12c76425-4755-42c4-8956-3f10456aee93"
        },
        "item": {
          "id": "17adc524-f758-4a30-9fef-102705466b6a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c5794973-f79b-4b85-b375-91e421667bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efe7f08-2c44-4c7a-8103-032578aec7bc",
        "cursor": {
          "ref": "0e6b2988-1525-4973-ae1e-0d185b2463a9",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2a4f1d26-b3f8-4a10-80a0-dab9a75f3bbe"
        },
        "item": {
          "id": "4efe7f08-2c44-4c7a-8103-032578aec7bc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8a3083c2-c21b-4a31-aeda-ff643aacbe83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4baece55-53e6-4bff-b5d2-dea17aa27708",
        "cursor": {
          "ref": "3b43eca4-a053-4037-8f26-8a0125db3aeb",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "86972487-c393-4de5-bbe9-ba4242f661be"
        },
        "item": {
          "id": "4baece55-53e6-4bff-b5d2-dea17aa27708",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "231897aa-9b8e-43b6-bdae-50f84f52e8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99149e76-eea7-4110-9652-c8567897a1c2",
        "cursor": {
          "ref": "e13d125e-eeec-46ed-baf7-c35fc6b8a825",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c9a8d5f4-f91b-4b95-9f1d-9b7d5d67bea4"
        },
        "item": {
          "id": "99149e76-eea7-4110-9652-c8567897a1c2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a06cb3a3-5018-4e31-beca-6606221ffff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab1ace2-b5cd-434f-b6f7-7dd09934a9cd",
        "cursor": {
          "ref": "2cf4182b-55cc-4d3f-9c95-39fad9b41849",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "64c1d69c-0069-4ece-a65a-276cd33bf524"
        },
        "item": {
          "id": "9ab1ace2-b5cd-434f-b6f7-7dd09934a9cd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "57eecd30-cda3-45b7-96c4-4c37e0740504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6b9617-90b5-4d8c-a4f8-1fcb27316e85",
        "cursor": {
          "ref": "7f8d12e3-a3f1-46aa-bb76-23f826bda877",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e9600982-fad5-49a7-a235-2e96fe57f395"
        },
        "item": {
          "id": "2d6b9617-90b5-4d8c-a4f8-1fcb27316e85",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2361b7d7-435b-4bd7-91d6-c85e9b30f5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7dbbea-9a13-4c72-9849-2efb680a5a73",
        "cursor": {
          "ref": "f3c974cb-ff40-4b18-ae8d-54f68f64b568",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2c870386-8822-41c5-8c91-cfb12d5e917c"
        },
        "item": {
          "id": "9a7dbbea-9a13-4c72-9849-2efb680a5a73",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6fe991e1-5e0e-4fcf-a27c-f39c20d3e49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b46a3d-6173-4a86-bfae-f2a922a822b8",
        "cursor": {
          "ref": "53df4fbb-4667-4228-b218-24873e24c93a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5469814a-c2f0-4330-a32c-cc18ff84b580"
        },
        "item": {
          "id": "a7b46a3d-6173-4a86-bfae-f2a922a822b8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5848d25d-b72f-4f34-855c-1a48ea9d26ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6ee6fe-f992-49e9-b093-c871d9acc7bf",
        "cursor": {
          "ref": "fe445f13-16d0-4ec7-b3db-c7b33afb8ce9",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "59a13b31-16c0-4269-8c81-4f5e7cdd64ae"
        },
        "item": {
          "id": "4f6ee6fe-f992-49e9-b093-c871d9acc7bf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1edc376c-4b92-439a-8277-aaef40b5624b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67929ad7-f08d-458e-9e9d-a1aab43366fd",
        "cursor": {
          "ref": "ee9a4638-aa17-4c2d-8201-951b9604322f",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "896664a8-9d62-479a-b373-e791d65b01d3"
        },
        "item": {
          "id": "67929ad7-f08d-458e-9e9d-a1aab43366fd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9c46c214-66d6-471f-b90c-51f8b73f9d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5237e4-0524-45e5-99d7-4343a434874e",
        "cursor": {
          "ref": "1b262219-fe84-420f-8882-64d3a72950f0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fe28c211-d168-4135-9a2c-7d338570d678"
        },
        "item": {
          "id": "9e5237e4-0524-45e5-99d7-4343a434874e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7420b2ec-9c72-4468-9f73-4f1afd1b2843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649a6347-3438-4105-96c0-17cc1286c06f",
        "cursor": {
          "ref": "b86c714d-714f-48fd-adfb-7c8bc63376da",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "424634f4-0df7-4341-a6e8-09bfd01ae5a7"
        },
        "item": {
          "id": "649a6347-3438-4105-96c0-17cc1286c06f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e85f68e3-c124-4cf3-aeab-5bf33be1212c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c10f71-5626-4a86-9f87-50ee00de9cc8",
        "cursor": {
          "ref": "f147822a-0d99-403a-acc9-523cc5f44345",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1ab24ea7-6343-4223-8533-c2a913094e8e"
        },
        "item": {
          "id": "22c10f71-5626-4a86-9f87-50ee00de9cc8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7e5e05c2-72d0-49f1-b92f-2ef598abfcf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629f8fd9-621b-40c2-aa20-127731ff5719",
        "cursor": {
          "ref": "fe6dd9c8-8957-451e-97fa-edc87840d0bc",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e5b9e505-627a-497c-a181-59049592cb91"
        },
        "item": {
          "id": "629f8fd9-621b-40c2-aa20-127731ff5719",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8e2335ae-2c1c-4ee6-8b1f-9ac48b4d4c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5cf8eec-a630-41b9-89ec-1ee9ad1c2c5d",
        "cursor": {
          "ref": "10bec633-3ccc-442d-9d36-024f99969e5e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9ad1a1b1-827e-4686-bcb3-d11a81e3a307"
        },
        "item": {
          "id": "e5cf8eec-a630-41b9-89ec-1ee9ad1c2c5d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e2282388-b3f9-48d0-9a11-5e89180fd59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66474ef0-22f2-4ff1-aa9f-fd7c8efcd12f",
        "cursor": {
          "ref": "fe3dfbe2-8c86-4786-bc8f-b3d01c0e8734",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "65ea9ca5-0e04-4710-b2a4-5f683ad470a1"
        },
        "item": {
          "id": "66474ef0-22f2-4ff1-aa9f-fd7c8efcd12f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "186355b8-383e-4bbf-a4b4-aa123ea1cac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58d3a08-3016-4e55-b1c8-61c675afa5ef",
        "cursor": {
          "ref": "84b92246-fd2c-4498-b30b-f840a7074534",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5c7933a6-3d9e-41be-a528-3feb42828afa"
        },
        "item": {
          "id": "f58d3a08-3016-4e55-b1c8-61c675afa5ef",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5920adca-98da-497e-8861-1b4a328bc92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdf3618-9e16-4347-904b-b50cedc082c3",
        "cursor": {
          "ref": "6921c33e-5307-40ad-aabe-89d9c8a9e12b",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "07f2bad4-5d9a-4e89-b38d-44f7d95228cb"
        },
        "item": {
          "id": "3cdf3618-9e16-4347-904b-b50cedc082c3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e23c6be3-e222-41a8-8420-5fd02d133571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cda8db-0acd-4d34-bdac-c4f2945aae0e",
        "cursor": {
          "ref": "acc5ad0c-ba18-4f52-8460-c00715f39edd",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "741eca3c-7ba4-4e6f-aca3-62b7b915abeb"
        },
        "item": {
          "id": "46cda8db-0acd-4d34-bdac-c4f2945aae0e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4664aa7b-a851-4dd6-b770-71c77968a9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c903a08-937c-4857-988e-f710c3731b79",
        "cursor": {
          "ref": "a3e99864-f840-40ae-b579-4aa5974135f8",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a71c2e85-0256-4c63-98ec-d116acd37a28"
        },
        "item": {
          "id": "2c903a08-937c-4857-988e-f710c3731b79",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a1f3d815-633d-47c9-b5bb-84caab99d43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1b4b90-8dc1-4613-a2a5-112e22a9a8b0",
        "cursor": {
          "ref": "8b8300c2-a259-4bca-a580-009690de32f8",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d6cf49f7-4eec-4e18-beb4-bae90bdda06b"
        },
        "item": {
          "id": "ec1b4b90-8dc1-4613-a2a5-112e22a9a8b0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8b0ee400-5906-4a96-9ae2-78d4ec86d982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98559d47-00c9-49b2-a945-afdf59b8caa3",
        "cursor": {
          "ref": "dd385314-63cd-4cdb-91e3-c898220e41f3",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ac4d99dc-c460-445c-96f9-7d6d5beeba72"
        },
        "item": {
          "id": "98559d47-00c9-49b2-a945-afdf59b8caa3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "23286c62-ae17-45d2-87ad-5838d522e26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2ee4cf-86bc-4768-95b8-452564e971fa",
        "cursor": {
          "ref": "5359f1ae-de43-4064-b315-d4af69c898b1",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "05326c6f-babe-40da-9e49-2e62153d9e8c"
        },
        "item": {
          "id": "6b2ee4cf-86bc-4768-95b8-452564e971fa",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "23414cf0-257c-4044-afb6-4383840f8321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb96614-1dd5-4c74-9679-33cd6644f302",
        "cursor": {
          "ref": "051ec5c0-5fb5-4eea-bce1-f575f71486e3",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f2e7bc8a-b171-474b-ab9c-c6e94de65ab5"
        },
        "item": {
          "id": "9eb96614-1dd5-4c74-9679-33cd6644f302",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e1b9b6f9-078f-47a8-a229-143598c10e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d270a5-5af4-409f-ad04-194f5e5adc7d",
        "cursor": {
          "ref": "dedc02c6-1beb-4ff7-ab5c-735902e50f95",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6e00251c-d69d-4ba3-b526-74cf29e38156"
        },
        "item": {
          "id": "72d270a5-5af4-409f-ad04-194f5e5adc7d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b2ee6ecb-11ed-4f9e-803c-a75b55f43274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d0cffc-81dd-4572-8221-6e7711a69085",
        "cursor": {
          "ref": "ed521946-a026-4263-8b6d-12993fbf6559",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "54882888-e0e5-408b-b36b-2306462319de"
        },
        "item": {
          "id": "d0d0cffc-81dd-4572-8221-6e7711a69085",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "59480c13-28d4-4aab-9432-7cf517754ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a3becf-b450-4a8c-9b38-364ddb7a39cb",
        "cursor": {
          "ref": "b4cb8212-a2d7-4949-b19b-8719bf9b6273",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ae6547c7-e9d1-4b15-aa82-c868b0157908"
        },
        "item": {
          "id": "36a3becf-b450-4a8c-9b38-364ddb7a39cb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c8b2092c-c466-425b-afed-e548c1044c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c11c98-b31b-497d-bbed-5de04d1c85f5",
        "cursor": {
          "ref": "d604fd2a-3161-48f8-8c95-e46fab0f53b2",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "84ae1a9b-cb16-4e5b-8db5-3d911ba97a97"
        },
        "item": {
          "id": "16c11c98-b31b-497d-bbed-5de04d1c85f5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9b3dfa33-d546-451d-a9d9-65f603110cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f452fc3-c755-4d0c-88e4-e19fabfa8f6c",
        "cursor": {
          "ref": "c033df41-430c-4236-a5c3-1abfd5f614e0",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4cd59205-3b68-4bff-9c24-04853fba58bc"
        },
        "item": {
          "id": "2f452fc3-c755-4d0c-88e4-e19fabfa8f6c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ce5d6032-9381-4d1e-a83e-ce242b49393c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e22750-1130-41f9-9571-b302da35af0d",
        "cursor": {
          "ref": "e1d5f9f4-4731-4f88-9719-00f18f75f396",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "69725a78-82d9-4077-9ede-8b1f4708efb1"
        },
        "item": {
          "id": "c8e22750-1130-41f9-9571-b302da35af0d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7ab661c1-7021-4fbf-a5b8-09d8b17fd18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6ca8c0-09c1-4d14-a959-4333cee5c8f0",
        "cursor": {
          "ref": "2f13b8b0-a984-4093-8bbc-c51b75e16d5c",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "949c87c2-0130-4f8f-b211-8f9310381c8a"
        },
        "item": {
          "id": "7b6ca8c0-09c1-4d14-a959-4333cee5c8f0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c4f88fff-0d9a-496b-8005-2ef5be9ce528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ce89a9-8adc-4f2e-a6ff-bc5572135e4c",
        "cursor": {
          "ref": "7c28277b-14bc-4aa8-8b16-9c173b50af4d",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9f6dc134-8c07-4175-9b7b-5586fe87d336"
        },
        "item": {
          "id": "74ce89a9-8adc-4f2e-a6ff-bc5572135e4c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4130c11f-d4b9-4437-8985-70254de35f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029b7114-9c8c-44fa-8ba8-436588d069e0",
        "cursor": {
          "ref": "199eba81-c735-4c74-a422-c7b868c73b77",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6673adf0-8566-45a7-8e08-f747c90053e7"
        },
        "item": {
          "id": "029b7114-9c8c-44fa-8ba8-436588d069e0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "23fc56d1-daaa-41ff-b9b4-01fec5757c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebc83e5-c675-403b-aaaa-ed57ad42f427",
        "cursor": {
          "ref": "6b002ecb-53b0-4b95-80a5-dd478bcf439c",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "90ac9349-d88b-4092-a2b6-6a8449d0e438"
        },
        "item": {
          "id": "4ebc83e5-c675-403b-aaaa-ed57ad42f427",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "568f686a-d379-49cb-9528-c3667e5cae5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d2554f-90ef-42ed-8f19-0a459af675b9",
        "cursor": {
          "ref": "416a1b59-3c37-435a-be18-b7ee463fcd68",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0ea49b6e-ce0d-4d58-a781-36802cfbed24"
        },
        "item": {
          "id": "a8d2554f-90ef-42ed-8f19-0a459af675b9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5e24d553-3dc0-4003-9c18-dc543b90aaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cef6ff3-63da-49b8-b73a-33ab564498d4",
        "cursor": {
          "ref": "e368b76c-0b5d-470a-b7f6-b10e46bb0d4c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "527999eb-47e7-4fe4-be2b-dc7553390b41"
        },
        "item": {
          "id": "2cef6ff3-63da-49b8-b73a-33ab564498d4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "68211a91-572a-44b7-aed1-ae54b0ce0c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83948903-164d-414b-aedf-858cfb455bb8",
        "cursor": {
          "ref": "9ecb6fec-28d6-43e0-bd46-172984d2ba18",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5c817aeb-4cf5-4523-a34b-ba1f3b19eac3"
        },
        "item": {
          "id": "83948903-164d-414b-aedf-858cfb455bb8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8c84959b-05f2-41a1-9dab-6b8eb953cbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc95346-dff2-47aa-b252-8a29f74a7af7",
        "cursor": {
          "ref": "c1ea1312-fc8f-4173-9f72-f037a71a2cb2",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0dd67cc4-130b-49e5-a7f5-bba734498fb4"
        },
        "item": {
          "id": "cdc95346-dff2-47aa-b252-8a29f74a7af7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e62ed0bc-4a4e-44c6-947f-08854ab9c8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312fd406-e370-4539-8789-c92cd294e39c",
        "cursor": {
          "ref": "87341f6b-8e57-4d2d-ab3f-27faec0ac690",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cba8ffd2-72f1-4d65-822a-8d8dd66dd193"
        },
        "item": {
          "id": "312fd406-e370-4539-8789-c92cd294e39c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "036e40b6-97ce-4b83-bea7-13f9f84f56c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58f4be8-385f-44b8-bf38-a5e9f9a4181d",
        "cursor": {
          "ref": "d578c0f5-8b8a-47b4-b940-dcae71aea9d5",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5e7f5889-5c50-470a-99a2-59f3bdb7f39c"
        },
        "item": {
          "id": "b58f4be8-385f-44b8-bf38-a5e9f9a4181d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c9a6c008-6d29-457c-aafd-8025570bdefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f63dbb-b865-40fa-a46c-5c965063d818",
        "cursor": {
          "ref": "d0406e33-59b2-4063-9006-f5324f95a03e",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5795f4f2-7326-4e19-88c5-e47d56d20bac"
        },
        "item": {
          "id": "83f63dbb-b865-40fa-a46c-5c965063d818",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7a731575-ec69-43ea-9fbf-cb8d537d4ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7197ed9-cfaa-4510-9f8e-61493269b4b8",
        "cursor": {
          "ref": "a4661692-15c5-44da-b340-1ecc15147658",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0215fd0e-23f5-4d12-9c28-987ac6ce8b53"
        },
        "item": {
          "id": "b7197ed9-cfaa-4510-9f8e-61493269b4b8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f1d7d229-8108-49e9-8cad-d5e524486b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e1efa2-1629-45cc-9b85-d8af4530786e",
        "cursor": {
          "ref": "d4d678aa-5077-4a32-ab30-6f18a2cc8b42",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c137eda3-83a6-44d9-978e-5f35abbb087f"
        },
        "item": {
          "id": "b1e1efa2-1629-45cc-9b85-d8af4530786e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b7a03972-1b4a-49e8-8194-681a96e862dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b7af18-ac1e-4797-b98a-ac905d8b1cc3",
        "cursor": {
          "ref": "ddef228e-7e0c-40de-b61e-75e6d68710d1",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "29583365-b78d-4438-ae65-dd8e615de1a5"
        },
        "item": {
          "id": "61b7af18-ac1e-4797-b98a-ac905d8b1cc3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a888fb9c-db0c-4d3a-b0d1-8f214dc7c774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfc708d-c180-4447-9ab6-cb7e42e7f8a9",
        "cursor": {
          "ref": "2b5ebe60-354d-4beb-9454-67c08d7fe749",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "98c7cc1d-bfe7-424a-9161-5c045bd203aa"
        },
        "item": {
          "id": "3bfc708d-c180-4447-9ab6-cb7e42e7f8a9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5894d545-4003-43fc-8d00-5b2bdf62f27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcaa3a62-cfc3-4a0b-8937-c727c07ae263",
        "cursor": {
          "ref": "fc5c3888-5f5b-4b23-936e-888be249145e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a5d4a772-0bf2-43a3-b858-a47ecb5093db"
        },
        "item": {
          "id": "dcaa3a62-cfc3-4a0b-8937-c727c07ae263",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d799e438-9347-4684-a75b-6a57563c154a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6b1934-7136-40ef-b12a-7d3eb2fd1a2b",
        "cursor": {
          "ref": "3d1ecc86-888c-4bd6-b34b-3c94966f543d",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1a065c62-f932-4f18-b78b-fff11ca233b4"
        },
        "item": {
          "id": "9a6b1934-7136-40ef-b12a-7d3eb2fd1a2b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9aee8b6c-034c-49f4-98c8-a20eab46a30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c5c2d3-cf4c-45df-ab46-a9e0fade0a80",
        "cursor": {
          "ref": "c141d26b-7f6f-4609-a17e-bc102d6b4a6b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c7b6e269-b136-40b4-9094-09d28e5b3e6e"
        },
        "item": {
          "id": "93c5c2d3-cf4c-45df-ab46-a9e0fade0a80",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "68a572a5-f140-4569-823f-69e391b7a5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfb8268-3af7-4e61-b362-89f727649035",
        "cursor": {
          "ref": "88a355f8-4f24-4cb7-aa7c-1a3e2b25f3be",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "11b59c2d-fe37-4c91-a3a7-8df560647336"
        },
        "item": {
          "id": "dcfb8268-3af7-4e61-b362-89f727649035",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "13e23f92-ccad-4611-b351-dee884f942aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b459f09e-22bb-4adb-8977-480acb1eaf10",
        "cursor": {
          "ref": "e99871c2-31a3-4326-8fd4-c10f08585d72",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4d9da25b-fd35-40b7-bf13-209a2583b0ae"
        },
        "item": {
          "id": "b459f09e-22bb-4adb-8977-480acb1eaf10",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7fff39f8-c7f9-4c6b-bf3d-1a712c4dbd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5212fea-35fb-4389-9be7-2a6dd7dc8ab1",
        "cursor": {
          "ref": "8dfa37f3-ddba-45f9-a723-0e91bfc7d4f6",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "077a1269-fda6-463a-8afb-468760f935f0"
        },
        "item": {
          "id": "d5212fea-35fb-4389-9be7-2a6dd7dc8ab1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "61b87101-a715-4a03-a59d-7fa452496b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc89ef5e-c916-4f5a-9410-b196c91289a5",
        "cursor": {
          "ref": "677bbeba-0c12-431d-a272-0a15f7a1b57e",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e307507c-9d3e-4297-9068-e6e5f21b0cdf"
        },
        "item": {
          "id": "bc89ef5e-c916-4f5a-9410-b196c91289a5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3d16a26b-3a62-478e-ac7b-c08969fdea58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3090bcf1-afc3-4763-b129-da86b80cece1",
        "cursor": {
          "ref": "6cf43f60-3ff1-4339-8b97-9525c4a7bbc7",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ff32ccd4-504a-4698-bcd6-ac5670366a28"
        },
        "item": {
          "id": "3090bcf1-afc3-4763-b129-da86b80cece1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3c453518-6825-4585-aa48-ae1b50263d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325dc3cf-63b4-4cb1-8074-ba5801ac1fc0",
        "cursor": {
          "ref": "7a1b2695-9668-46fa-b36b-c9490f579bc9",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1c5503de-ba4b-44f1-8693-62e4e0540c48"
        },
        "item": {
          "id": "325dc3cf-63b4-4cb1-8074-ba5801ac1fc0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "381938cc-91f1-4665-bfab-011bcc2d4251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4059f9ae-91c5-4ff8-ae98-f5f99c19fc5b",
        "cursor": {
          "ref": "eb2c1619-a93f-4515-b627-e2de1e456625",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2053b504-589b-4ac8-bc16-541f024333d1"
        },
        "item": {
          "id": "4059f9ae-91c5-4ff8-ae98-f5f99c19fc5b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "62145495-a8f9-41e6-bfe9-b976c811b8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec225583-cb08-4c10-b8d4-6a0529f1adc9",
        "cursor": {
          "ref": "98a43382-e11d-4077-93b1-81d16bda2032",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6b9a09cd-359f-4822-83a1-2efdaddd8fe5"
        },
        "item": {
          "id": "ec225583-cb08-4c10-b8d4-6a0529f1adc9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "de24efca-8792-4b23-9771-2edaa4af6fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9432a6-fb90-4c4d-bf67-140bd89b53e2",
        "cursor": {
          "ref": "00dab9f6-1bfc-4d51-a673-4ca772053a5e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f1fbdeb5-9269-4301-a6d6-3f186dc24bcb"
        },
        "item": {
          "id": "be9432a6-fb90-4c4d-bf67-140bd89b53e2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "84b830a3-642c-47a2-8387-19c9b20eac09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4a6193-282a-46c0-ad22-353f18abe163",
        "cursor": {
          "ref": "7adfa2b9-0551-47c9-80e9-69eadbedc182",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "02c5eee5-3893-4132-b2ad-a3066457c0e4"
        },
        "item": {
          "id": "5d4a6193-282a-46c0-ad22-353f18abe163",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3a7b273f-807f-4808-a70b-a2fcf1a5b1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee06fcc-396f-44aa-89a0-137b05a92fbd",
        "cursor": {
          "ref": "cb017cc0-9726-48e5-b5f9-e88663dc7a10",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6251177e-9229-40af-b49a-2e1484e7d08b"
        },
        "item": {
          "id": "eee06fcc-396f-44aa-89a0-137b05a92fbd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5e86972a-427f-4f30-b5fc-19825fe0bae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27208f6-ce3f-4488-a34a-a303f5e596c5",
        "cursor": {
          "ref": "cdb0ae50-3ab6-4b4d-82b8-8738c7386557",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "72135349-0d32-42bb-94fd-0e4ff754cddd"
        },
        "item": {
          "id": "e27208f6-ce3f-4488-a34a-a303f5e596c5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e16c5ce7-cab5-4c79-8d94-d3fbea635341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64649302-75cb-4249-bc51-2ac03c221e4b",
        "cursor": {
          "ref": "23d09fd3-8326-47e3-bd3f-1c5ec110d7bc",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "059114fc-36cb-495a-a3ae-4b19976ae86d"
        },
        "item": {
          "id": "64649302-75cb-4249-bc51-2ac03c221e4b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cccea109-3857-4013-b117-e307e9cde5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddbb2e5-b546-4e6e-8779-58f5225adafa",
        "cursor": {
          "ref": "b4b8977f-a566-4384-937c-40a5df3b9d79",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f522eb90-2f31-4a3d-bec5-d84546a4d1ad"
        },
        "item": {
          "id": "3ddbb2e5-b546-4e6e-8779-58f5225adafa",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "49feb888-e5d6-4903-bad2-89f643aa2e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e42763-7159-47e7-b16d-2be1876e8bc0",
        "cursor": {
          "ref": "524c5202-4b3d-4c71-ae8e-c5c469a06390",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "492157c6-7ef0-466e-8f49-0d5b731bea88"
        },
        "item": {
          "id": "d9e42763-7159-47e7-b16d-2be1876e8bc0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "65583b99-2cdc-4995-bd8e-010f7c52b2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6e31a4-4f94-4cff-8129-1bc4cdd41754",
        "cursor": {
          "ref": "cb5dec2d-7933-4e18-9592-90d26ca193b4",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "13a17f93-05e6-4859-8be7-f6ce00bc5266"
        },
        "item": {
          "id": "7d6e31a4-4f94-4cff-8129-1bc4cdd41754",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6ad424d7-77ee-4c48-bedc-f76755e8354e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701a2d0e-88f1-411b-9958-ef6cc8a6bc07",
        "cursor": {
          "ref": "737f9f51-09b5-46b3-80b7-33c491a31462",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1409a58d-38be-4603-9df9-d283456ef830"
        },
        "item": {
          "id": "701a2d0e-88f1-411b-9958-ef6cc8a6bc07",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5b749696-3591-4402-a954-4f352febd331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068969b4-4587-4308-af61-298fe6fc9344",
        "cursor": {
          "ref": "be0e0513-a726-4c6e-aac3-fa3ed9d733cc",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6dfb6e10-445b-4f3b-9aa4-210c29e039a7"
        },
        "item": {
          "id": "068969b4-4587-4308-af61-298fe6fc9344",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "17a78144-af41-4378-9871-b4e139bcbb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ef586d-9e80-44f0-8733-98027a989635",
        "cursor": {
          "ref": "6653ed0b-636b-423a-8205-b8fa8da3534d",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "87d6a82e-b173-410e-a8ef-988d583fc21d"
        },
        "item": {
          "id": "20ef586d-9e80-44f0-8733-98027a989635",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9cb3ed04-6d0f-4d1b-b125-e3596ef13b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79670047-461a-40ac-8ef3-c3a8e05c8a94",
        "cursor": {
          "ref": "ed8973b2-fbb4-4738-8dbe-cf8f48f882f0",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "88c9aee6-0c0b-4371-b7f5-20d5bf332577"
        },
        "item": {
          "id": "79670047-461a-40ac-8ef3-c3a8e05c8a94",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9a9c1b68-7e2f-44ba-a66c-0c04c80d69f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af54fa0-0697-4b57-afe1-b6c996c2fb78",
        "cursor": {
          "ref": "45b6ac57-3e88-4d06-9acb-ede3b798c811",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "72d1a603-c03c-413f-b255-8941e8224432"
        },
        "item": {
          "id": "2af54fa0-0697-4b57-afe1-b6c996c2fb78",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fa82b488-e2c9-4da5-8167-73dbb6e20b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1ca86f-a505-4bc1-a208-6b0340e5cf0c",
        "cursor": {
          "ref": "6addbf34-9b34-46f7-9142-7606c55ea60f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f7a0835f-c547-4adc-bb73-f9c32f4da6de"
        },
        "item": {
          "id": "3b1ca86f-a505-4bc1-a208-6b0340e5cf0c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ecbd2a94-7bb5-441b-8013-1e4c7a10ab53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e7cd60-416b-48fd-b8e0-8583b3504939",
        "cursor": {
          "ref": "7f676ccc-9efc-4589-b636-bfccec5102b8",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c80b7e75-4da2-40a8-b964-04ad4505b6ed"
        },
        "item": {
          "id": "b0e7cd60-416b-48fd-b8e0-8583b3504939",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b4db82f5-78de-4aad-be18-f2e3b851dd4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ad9f52-73c5-4f7e-bad2-ea8c65c25eb9",
        "cursor": {
          "ref": "b5b8d87a-69e2-4bed-a706-84d92bae8689",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d080f131-5069-4cd7-bb8d-e05a90aef887"
        },
        "item": {
          "id": "41ad9f52-73c5-4f7e-bad2-ea8c65c25eb9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9439260e-231c-4971-a119-ba041755869d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc03075a-43e1-4651-9f2b-4dd074667b33",
        "cursor": {
          "ref": "f4335090-d16c-43ca-848c-7da0c9c1b2a1",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "dcb6ade7-322c-47b9-86b5-187eef0a823b"
        },
        "item": {
          "id": "fc03075a-43e1-4651-9f2b-4dd074667b33",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2a47b00f-a94c-4239-b234-0437e9cef42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f8ef8c-e0b3-43fc-a649-8f7f9a5898cb",
        "cursor": {
          "ref": "a5326f4a-2460-4561-b1d0-b1d9d0169a40",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ccce1839-9154-44ba-8fcf-c36cecace5d9"
        },
        "item": {
          "id": "f6f8ef8c-e0b3-43fc-a649-8f7f9a5898cb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "cc567b54-4c5d-452d-b447-75a6e6130d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efc8803-e91d-433f-986b-c4b045192f33",
        "cursor": {
          "ref": "f377e3de-a482-4472-8709-fe54604723c2",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b32309cc-8233-4d48-8103-16d2972d7d82"
        },
        "item": {
          "id": "6efc8803-e91d-433f-986b-c4b045192f33",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2516e851-6d75-4760-b619-659cd31d89d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693be510-c3c0-4a88-a6e1-78d62eed2bb8",
        "cursor": {
          "ref": "20c21173-5bc3-4afe-9305-52fb0dfb7047",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "10beb884-6229-41cb-b01b-57373a801dae"
        },
        "item": {
          "id": "693be510-c3c0-4a88-a6e1-78d62eed2bb8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "898eddbf-78c2-4a39-8906-bd5a1045c58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e42c403-ee88-49ea-a0f6-9a0aba844ca9",
        "cursor": {
          "ref": "1905a373-f402-4ef7-9278-21dabb9af9ad",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2b6cb1bd-a476-4f4b-9687-27b8a68a469e"
        },
        "item": {
          "id": "8e42c403-ee88-49ea-a0f6-9a0aba844ca9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bc382ab7-bfb8-4628-b557-8e6250c34e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d204117-9552-4521-b8c3-42c131211906",
        "cursor": {
          "ref": "ef842cfd-b986-42fe-8c97-4285d9dbbca2",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7d385435-c90b-4aee-989e-d9983695380e"
        },
        "item": {
          "id": "4d204117-9552-4521-b8c3-42c131211906",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "146b0b3d-d4c0-4cf8-a1b8-a88f0dda10df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf86b71-a562-4702-8335-9a7d757858a4",
        "cursor": {
          "ref": "393a103f-3fd8-4745-a09c-d0eaff505f4c",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "64fd1080-8bd8-4eb2-b50f-5017a7354469"
        },
        "item": {
          "id": "3bf86b71-a562-4702-8335-9a7d757858a4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "35eeac09-aeb6-46e0-855a-b01a4a67b757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b0f97b-c6ce-4ddb-a811-0f861dbdfc49",
        "cursor": {
          "ref": "2391d7a7-0dc2-4fbb-ac43-e4cd75e9fb29",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dffcd69b-6a62-44b3-a25b-2ffa84805911"
        },
        "item": {
          "id": "a3b0f97b-c6ce-4ddb-a811-0f861dbdfc49",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "80bb9cfd-6a5d-43bd-856c-c0f8c7474cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554d7781-f4d0-40d3-ad14-3265040107bb",
        "cursor": {
          "ref": "3af8a407-4b5e-4424-b6d1-6a7dd85a261d",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5a518879-2ead-4bef-923d-3acc445c2a24"
        },
        "item": {
          "id": "554d7781-f4d0-40d3-ad14-3265040107bb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "350b4e1b-c930-432c-a8b1-b065b5da7feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292f73e9-4faf-4544-80b8-44d2a85fff2a",
        "cursor": {
          "ref": "bea82784-9097-44fb-a1d3-77318eabe66a",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "df6478a6-65e8-41cd-bde3-19e9091b56ac"
        },
        "item": {
          "id": "292f73e9-4faf-4544-80b8-44d2a85fff2a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0372e3f7-be8d-4824-bb0d-bd1de7a076ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60ec7e0-0975-4d70-8662-725adcd68368",
        "cursor": {
          "ref": "052208f7-37c7-44da-872d-890e29f2cec6",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f2a560d4-d41a-4b5e-ab47-522c5b22965a"
        },
        "item": {
          "id": "b60ec7e0-0975-4d70-8662-725adcd68368",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ca04baec-2d86-43ee-bc5e-cf868121e886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c762cc9-0df8-4b28-91a8-0eada3111ad4",
        "cursor": {
          "ref": "354bc3af-ef18-46c7-85d1-dc8d9538f16a",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4235ed3c-290d-402e-b2b6-669e96b2b2a2"
        },
        "item": {
          "id": "1c762cc9-0df8-4b28-91a8-0eada3111ad4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8cd19d8d-c5a8-4182-86a3-b62d4fbdc191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f20832-d0d8-447a-bc39-013d82e2d442",
        "cursor": {
          "ref": "691e6ed5-4857-4f1c-a0e0-087a83f6bcda",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a6a00d48-90b4-4eb2-9258-69c1c6fca32b"
        },
        "item": {
          "id": "86f20832-d0d8-447a-bc39-013d82e2d442",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "84266859-8e24-40e2-8bad-b16f60aa13f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008fe578-5f43-4670-ad2e-788522e7c33e",
        "cursor": {
          "ref": "15bfd65c-51d0-4098-9b91-cc0924534386",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "65557553-9879-4bf5-a05b-90d6cb5c67c4"
        },
        "item": {
          "id": "008fe578-5f43-4670-ad2e-788522e7c33e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8227a8e9-e34e-4c6f-8c4b-3bdb084986c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f1a4f8-d213-4d98-957a-89acfd2dc0cc",
        "cursor": {
          "ref": "f31eb0c9-91ea-4958-a893-59b1e4d1c8c8",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3b58c234-740e-45d8-9350-5862be8fc256"
        },
        "item": {
          "id": "12f1a4f8-d213-4d98-957a-89acfd2dc0cc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "32f441b0-3478-4465-a1fc-b6b53f90136d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8473f4e5-9781-45b8-add6-bd928c968dd9",
        "cursor": {
          "ref": "b04bf20f-45cd-4c19-86ff-1cd715755b8a",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fca3659b-df67-457e-9d2d-229f2a5a4dc9"
        },
        "item": {
          "id": "8473f4e5-9781-45b8-add6-bd928c968dd9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1840434c-744a-4812-a7ff-a5f3756b591a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee181b2-6199-4797-867b-64cb87949341",
        "cursor": {
          "ref": "907eb805-1b4a-48d0-a40f-854dfb27301b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ad2e3af3-0ab8-416e-a2d9-79a97cc962bd"
        },
        "item": {
          "id": "3ee181b2-6199-4797-867b-64cb87949341",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9d9aef30-3c77-40c2-9132-31e2c4a1aa0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8665745c-69d8-491f-9fe7-4ca6d4ea13ba",
        "cursor": {
          "ref": "2bc191fb-e830-4b49-8b68-207246930245",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "91ad2da9-2420-4ff0-95bf-188561f066a4"
        },
        "item": {
          "id": "8665745c-69d8-491f-9fe7-4ca6d4ea13ba",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "37342053-9278-4a5b-8da3-35cb7bdf6ef1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598b480b-0534-4791-9456-7f2f777b090a",
        "cursor": {
          "ref": "1ee52e8d-328c-4996-99e6-92ceba498af3",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "71ae6b48-a0de-4946-b13c-f9424b862c65"
        },
        "item": {
          "id": "598b480b-0534-4791-9456-7f2f777b090a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "cea23668-c794-4278-b044-886b23a0d0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "268cf60e-57d8-457d-a1b0-2adaa962ea2a",
        "cursor": {
          "ref": "70c76e08-d589-4590-97a6-c494de361863",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "23880123-61c0-44e3-a501-e9c6bacf26a4"
        },
        "item": {
          "id": "268cf60e-57d8-457d-a1b0-2adaa962ea2a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6faf71c1-ad87-4c5a-a257-bdccd403c690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b6d110e7-af66-41da-9f00-7f2d555da83e",
        "cursor": {
          "ref": "7be13fd3-4890-49d3-84c9-2d55af4d55ba",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4e77f5db-1a71-43fd-bb22-caf22745ddb8"
        },
        "item": {
          "id": "b6d110e7-af66-41da-9f00-7f2d555da83e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b602b117-fc5b-40cb-b44a-4c97b9e84ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "f83f211e-13df-464d-8be8-d2ef46352f4d",
        "cursor": {
          "ref": "1a9e687c-31cb-4450-99cf-b54399524336",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3edbd50b-a2a1-4198-af23-1e1ec68ef305"
        },
        "item": {
          "id": "f83f211e-13df-464d-8be8-d2ef46352f4d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "84722b6c-75ea-486e-a183-e569b512c0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "640e955a-6cf9-45c6-a078-55c4b2221c89",
        "cursor": {
          "ref": "a1be502e-4a41-4db1-aa01-f5d55322a665",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "14b7b6bb-5f14-4749-855b-0a5090cfabcd"
        },
        "item": {
          "id": "640e955a-6cf9-45c6-a078-55c4b2221c89",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5aece133-cdf3-4281-875b-2aeea39eba59",
          "status": "Created",
          "code": 201,
          "responseTime": 7420,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c666c540-0b8a-4b17-94db-2e3103b1cf54",
        "cursor": {
          "ref": "c0f56c13-0661-494d-aa70-72a7dea66aab",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b1f76d2b-63d8-42b3-bf2e-6b1989ee5624"
        },
        "item": {
          "id": "c666c540-0b8a-4b17-94db-2e3103b1cf54",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4c3c59fd-0b3b-4bae-9cc5-7c6df7687acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "8fbf7c6a-9568-45e3-991d-dabc9c2a9b2d",
        "cursor": {
          "ref": "8cdd1c72-24da-4b2a-bbdb-486f4f3d1576",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "914bd666-434e-486f-86f0-d041e53d8d22"
        },
        "item": {
          "id": "8fbf7c6a-9568-45e3-991d-dabc9c2a9b2d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6de00a50-5135-498c-9974-411795d314a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9948ed8a-905e-4455-b786-866b021a8f3a",
        "cursor": {
          "ref": "7a6e0254-3384-4e33-b9ca-02f5b9b76965",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dd326ef9-3427-4178-b148-2f51be9215d6"
        },
        "item": {
          "id": "9948ed8a-905e-4455-b786-866b021a8f3a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5f0a6e35-c2bb-4899-bca1-dd4617d0db13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb73e233-e67a-4470-b3f5-21f11e22b90c",
        "cursor": {
          "ref": "063814c4-18f8-40ad-bc45-01f6f7cbed71",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "adde3104-1d2b-4c6d-aa82-6a1db9ee8d5d"
        },
        "item": {
          "id": "bb73e233-e67a-4470-b3f5-21f11e22b90c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "60743431-1233-41fa-b375-2aa276dc1cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbd3cff-4a4b-4b78-a5d6-4f376714224a",
        "cursor": {
          "ref": "8f8ff516-af82-41f1-b4e8-8f8a0b871f02",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "11c46af4-a43c-47f7-85a2-57c2fc6a3c80"
        },
        "item": {
          "id": "fdbd3cff-4a4b-4b78-a5d6-4f376714224a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "130dcd84-33b9-4fad-a9d6-6646df5423de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb09a77-2732-4969-9035-355f7c6cf2d8",
        "cursor": {
          "ref": "69ef7704-4b62-4865-a5c0-b8b53a9d4627",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "14533bb0-a117-47cb-891d-a7abbe945332"
        },
        "item": {
          "id": "1bb09a77-2732-4969-9035-355f7c6cf2d8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f6bb448d-0761-41a5-ac89-fb2051c1a5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef648bb3-013c-47ab-a483-f3e3d134e7c4",
        "cursor": {
          "ref": "f839e302-5e7f-4324-adf7-2229a6d83b17",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a5954e1f-bd20-44e8-a574-edb46b200e78"
        },
        "item": {
          "id": "ef648bb3-013c-47ab-a483-f3e3d134e7c4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "00e65cbe-0cce-4f4b-bf90-59432f161ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00983b0e-69f0-442f-ab8a-48be2874d2a0",
        "cursor": {
          "ref": "b4a3b73f-9ba1-42d9-9346-5060849f846f",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "123cfcdf-b082-4817-943f-123af89cfbb6"
        },
        "item": {
          "id": "00983b0e-69f0-442f-ab8a-48be2874d2a0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c56a1e20-da58-4069-b068-08f48c5cfb55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2730755-bfca-4ab5-a6fe-19f62e784f17",
        "cursor": {
          "ref": "1bf7c228-0e04-4480-afb1-cd030d568109",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6aaaf918-3a23-4b9b-8e22-c249330b30ea"
        },
        "item": {
          "id": "e2730755-bfca-4ab5-a6fe-19f62e784f17",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "84d9a5ff-5dd9-4ea9-a915-aeb654606845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc4983d-33c9-4ace-8cf8-75906b324407",
        "cursor": {
          "ref": "46af2b7f-e344-484b-96f1-e673f3ed4040",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "052a1834-2601-49a8-b1ff-3dee9e648064"
        },
        "item": {
          "id": "3dc4983d-33c9-4ace-8cf8-75906b324407",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c12cbfb2-aa01-4a33-a3cc-7624d71415f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d886fcf-4b31-44be-a26d-67ae5839767d",
        "cursor": {
          "ref": "fd81f46c-8f86-4727-a8a1-5e000ec3847f",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ae8eade2-81b9-4b85-863f-05a6d613fa86"
        },
        "item": {
          "id": "7d886fcf-4b31-44be-a26d-67ae5839767d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "37370b1b-46ab-48c6-9f7b-17c4492125db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3c180f-9779-49d0-9d75-691c7b403805",
        "cursor": {
          "ref": "c8cf2712-c6ff-4363-bcab-b39a54b03acc",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "43e63861-5f9c-4a7b-8c7a-5a0fc8fbcfdc"
        },
        "item": {
          "id": "9c3c180f-9779-49d0-9d75-691c7b403805",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f3e0c666-7fee-4f2d-ada1-ec404822fbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855b425e-8a05-48d1-bce4-a4aa1a6f7b2a",
        "cursor": {
          "ref": "f449c858-6501-4f10-8ca1-5f3ef6528004",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7ee9cbf5-ab09-4a19-922d-1e83e5b38192"
        },
        "item": {
          "id": "855b425e-8a05-48d1-bce4-a4aa1a6f7b2a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9eecc614-e484-4063-92f6-f56cb0e90a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd26ceb-e706-43c4-9b6b-637493590bc2",
        "cursor": {
          "ref": "914b1181-32ef-4485-8d01-18a4edc706d4",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e415bc14-b3b9-4b15-af10-65cce9395607"
        },
        "item": {
          "id": "0dd26ceb-e706-43c4-9b6b-637493590bc2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bc6efc0f-dc11-44d6-9244-2cb8f595120a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1bedb1-9365-4b05-bfe5-9d424b86b7ef",
        "cursor": {
          "ref": "2f69b8cb-5b4b-4bcb-9ac9-34a65a7ce6cc",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "788a8ca8-1d2b-453e-957e-f6f86200a6f1"
        },
        "item": {
          "id": "6f1bedb1-9365-4b05-bfe5-9d424b86b7ef",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "509e442f-a94b-4a28-8070-235ac8b5b938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612519cd-dd4d-405b-8d0d-2cbe10873256",
        "cursor": {
          "ref": "61f3290b-7d21-4efd-a5a1-780581fcc573",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a05f33f5-6a43-475c-906c-c3d933be9f85"
        },
        "item": {
          "id": "612519cd-dd4d-405b-8d0d-2cbe10873256",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e00742bc-44ed-4ccf-9aac-3132536039fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde89ff0-72bb-46f4-a311-ea07440a9689",
        "cursor": {
          "ref": "9d4cff4e-1c2e-4314-b698-b58e43ba9d8c",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "86e6bfdb-41c1-42e0-be3e-e742462cb9d0"
        },
        "item": {
          "id": "bde89ff0-72bb-46f4-a311-ea07440a9689",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8ad6ecab-8fb4-4d69-ab25-a0bf95e9fae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187db9a5-df1c-4651-a21b-ab29f230cb68",
        "cursor": {
          "ref": "60b99167-9656-4029-b68f-8cef6af0135e",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "be44503e-20cc-4c73-a295-d2deaf84a6af"
        },
        "item": {
          "id": "187db9a5-df1c-4651-a21b-ab29f230cb68",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d29aa07d-e323-414d-8843-7ed7d4904484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4e42c8-a00a-4ce5-a989-951417db5dc3",
        "cursor": {
          "ref": "638bb971-69d8-4eaa-9f35-a11fddd2c3b1",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a2eb28b9-3d82-4031-aa9c-27dc3ba8e219"
        },
        "item": {
          "id": "bc4e42c8-a00a-4ce5-a989-951417db5dc3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9981454f-2aa3-45de-a861-b79110dd16e8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "f55b770a-2953-4b64-a07f-4a113efd8ff3",
        "cursor": {
          "ref": "7aa1a040-940d-4361-9b0b-4ec3258d5f38",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "92369e19-68c0-4bab-b906-6911d47bdc0a"
        },
        "item": {
          "id": "f55b770a-2953-4b64-a07f-4a113efd8ff3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e4c91789-b3eb-4ca4-abc9-6c67d1e89b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8780539f-daac-436b-9c04-c4436026b368",
        "cursor": {
          "ref": "7e52c0c1-d24f-4525-802d-a6b7e6cf5657",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ccf2b894-c9ca-4240-85bd-956fddf1b867"
        },
        "item": {
          "id": "8780539f-daac-436b-9c04-c4436026b368",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c9bf0761-9f8a-4094-96b7-e784de924e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d80879-97d5-4f02-a344-d28cb35b4fcd",
        "cursor": {
          "ref": "d599371c-1c7f-4359-8afc-3b81d4c319af",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "07a31c6f-3549-4671-a3a0-2bdf8f86418d"
        },
        "item": {
          "id": "66d80879-97d5-4f02-a344-d28cb35b4fcd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "75087842-af45-4f9f-aa69-c39d255e92c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b767f0-3488-4082-8930-d999b963d826",
        "cursor": {
          "ref": "2adbf57c-4f50-4ec6-b174-d7a427dfa481",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2429c392-28f5-4c14-a0c3-470b082ae9dc"
        },
        "item": {
          "id": "b0b767f0-3488-4082-8930-d999b963d826",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a69f4ac8-cfe6-40db-a806-5d2b805225ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ea6e9f-ee25-4a2a-aeaa-ad348a9fe586",
        "cursor": {
          "ref": "1ed1996f-c0a2-4080-af72-b7f92bfcf9ff",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "de6efdb4-8c79-4c9f-8184-da084e1bc7e3"
        },
        "item": {
          "id": "73ea6e9f-ee25-4a2a-aeaa-ad348a9fe586",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "14404686-e99c-42ed-867b-f4d68b550f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8440bba6-ca3d-4768-8638-485a47cf8cc0",
        "cursor": {
          "ref": "d80024fb-8304-4459-b0e1-8e84b06a2a03",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "23f8bdd5-4d58-471e-b44c-b891c5f004d1"
        },
        "item": {
          "id": "8440bba6-ca3d-4768-8638-485a47cf8cc0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "90291d69-c806-498e-9060-207efdf1188e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6802cdd-dd42-469f-a2f4-f8cbba67684c",
        "cursor": {
          "ref": "909d3fc7-9cb8-48e4-a0d0-39cb2208acd9",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bdf1df4e-b45d-4c5a-9543-3644afc37f72"
        },
        "item": {
          "id": "f6802cdd-dd42-469f-a2f4-f8cbba67684c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d7d0d5fa-6079-48ae-8c50-b88dddeeb644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3483d1fe-cc31-48d6-a053-e3c0cbe4bd13",
        "cursor": {
          "ref": "bf666388-ff15-45c2-a97e-055c46c836c9",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "dd67d9f9-803a-4e86-a2d0-308babe02cf1"
        },
        "item": {
          "id": "3483d1fe-cc31-48d6-a053-e3c0cbe4bd13",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e243366b-776f-4b07-a6c8-e392243982c2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "299d154a-21b4-49a6-9572-ef22a257c17b",
        "cursor": {
          "ref": "8a1631d7-160b-4fe9-b84d-57667abd4cdf",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1db6244c-8626-48de-ba13-a904f5da9821"
        },
        "item": {
          "id": "299d154a-21b4-49a6-9572-ef22a257c17b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3645fd8f-360a-4c5d-9884-a0e5daa36d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf12298-367c-49ce-bb5b-50912d90b374",
        "cursor": {
          "ref": "0eae97cd-474e-4aa0-b6f6-235e14550c49",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "30ef035d-b8d3-4147-b337-d1b0bd0c0902"
        },
        "item": {
          "id": "cdf12298-367c-49ce-bb5b-50912d90b374",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f49f9ca0-39fd-4e16-9896-f06540c710cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4176803c-4ee4-4ae4-896e-0d2e5d792220",
        "cursor": {
          "ref": "53bf6078-b850-4713-a09b-92b7c2a22d03",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e06bd669-ad9f-4a3d-8265-ee7adaabb9ec"
        },
        "item": {
          "id": "4176803c-4ee4-4ae4-896e-0d2e5d792220",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dfcea27e-9441-4594-b4da-306eb309e5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3a39b6-bfe9-4b40-b83b-8bf84bc62c59",
        "cursor": {
          "ref": "6370ae3e-92b4-4618-8e33-35fe0964fd0a",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5ceec9b3-7280-4124-9db2-42357e3eee0d"
        },
        "item": {
          "id": "ad3a39b6-bfe9-4b40-b83b-8bf84bc62c59",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d97712f7-83ae-4cd6-85df-c99febde5ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b08b5d-5739-4a9f-b4d1-264c230b629f",
        "cursor": {
          "ref": "e1c1e9ac-770f-4651-8c61-018bfdd44a63",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "96971a83-09de-4647-ab1a-9febe0aae7b7"
        },
        "item": {
          "id": "d9b08b5d-5739-4a9f-b4d1-264c230b629f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0b91b773-560e-4e0f-9f45-d269765e1b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d494720a-b12d-4bda-8e16-b4afb1cbdf71",
        "cursor": {
          "ref": "5b5cf8c4-7d63-4b27-a3ef-f51ecae73371",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "44d9c249-27f4-4a62-aecb-68d12318fb88"
        },
        "item": {
          "id": "d494720a-b12d-4bda-8e16-b4afb1cbdf71",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "480f01bd-08a4-4cea-b65a-fa1f00e534d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e481e8a9-a823-4047-9320-96dab7cca186",
        "cursor": {
          "ref": "2910c1ac-cfc8-49fb-9d85-c256bac3a726",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "25c9754f-d25b-4009-92a9-a6c72b17dc1a"
        },
        "item": {
          "id": "e481e8a9-a823-4047-9320-96dab7cca186",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8b578a36-9ec5-4c8f-93f2-2a12484ffa42",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "570e5d4d-ca88-4b4f-a291-c231dbcd9ea2",
        "cursor": {
          "ref": "5ede45c8-a816-43a4-8e66-ab4839f0e9a3",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2508b093-e775-440c-9cdc-fd909770fe53"
        },
        "item": {
          "id": "570e5d4d-ca88-4b4f-a291-c231dbcd9ea2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "447cfec1-f497-4af6-91e4-461827e6941f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "167f5ce0-4a06-4eba-8869-6b23e2c3f3e2",
        "cursor": {
          "ref": "084bd671-16e5-4a5f-bd26-7f4798e3a63a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "23d9b9b6-3dc5-4be8-8f83-3ca4b528745e"
        },
        "item": {
          "id": "167f5ce0-4a06-4eba-8869-6b23e2c3f3e2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "30c2bd12-0451-4474-9af7-95dfcb714ddf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "e9db07a5-ee95-484d-b80a-0e2605833f1d",
        "cursor": {
          "ref": "aa1d31de-e22d-40dc-8486-8033490a2c74",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "97c15ed9-172c-4c5e-a3e3-c32973ccece5"
        },
        "item": {
          "id": "e9db07a5-ee95-484d-b80a-0e2605833f1d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3acbdb9b-dead-443a-9989-558598e9bbce",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "74badd4c-36da-44c7-ac7e-72f5e6868011",
        "cursor": {
          "ref": "d5859244-a3b9-4315-b6a8-26815de5572b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b3a141b0-a78f-4d6c-a01e-9ebbde24a91f"
        },
        "item": {
          "id": "74badd4c-36da-44c7-ac7e-72f5e6868011",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6b83db3b-589c-4c96-8af3-075692215719",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "8c8061cd-d973-4e33-84de-b08a9d6409ff",
        "cursor": {
          "ref": "3b20e7fe-3a6d-43e9-890a-64476f0a63db",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6f92d813-a793-4e3b-8d5a-388ccbecc7f5"
        },
        "item": {
          "id": "8c8061cd-d973-4e33-84de-b08a9d6409ff",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b7886ac3-9436-4ed8-8bc4-23c7c68c994f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "d057c608-56fd-461d-835c-85120bf184fd",
        "cursor": {
          "ref": "032f5e04-ce78-492f-a701-dd4eeef690f8",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c12a339f-1ffa-474a-958a-971c024e5cab"
        },
        "item": {
          "id": "d057c608-56fd-461d-835c-85120bf184fd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2694d71a-da15-4177-8185-48993923de92",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473cd3d5-8023-4480-8362-929118a90cba",
        "cursor": {
          "ref": "836d317d-309c-4b80-94c5-f9b3cfc1df73",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9d37d9af-3290-4ae8-abb2-562ca2a315b3"
        },
        "item": {
          "id": "473cd3d5-8023-4480-8362-929118a90cba",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ded6eb55-fe27-412d-972d-c148398ef0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a730608-9d3f-4692-bfc3-b385e7a01ab2",
        "cursor": {
          "ref": "828b9777-514d-4d6c-a44f-a6b60417d860",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f78e4b3c-c7c6-4743-aac0-adf5ec235fbd"
        },
        "item": {
          "id": "8a730608-9d3f-4692-bfc3-b385e7a01ab2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0a4708ee-04c1-4908-af3c-afe444d0ac0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4878a7d6-11ef-42bd-9015-235f264b8513",
        "cursor": {
          "ref": "67d42ea7-428d-413d-b2b4-6cf56adf3334",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "623b3d15-eb5d-4033-bb9e-51ef0df23dae"
        },
        "item": {
          "id": "4878a7d6-11ef-42bd-9015-235f264b8513",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8391bd6d-7a89-4e1a-ab84-098fe97a1b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fcdfc9-0904-4162-aff2-bccbc8e154ba",
        "cursor": {
          "ref": "9a45e09e-0931-4ac7-921d-6bad892d8b45",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9cb52be4-37ea-4a0c-8800-e23332f35bbb"
        },
        "item": {
          "id": "70fcdfc9-0904-4162-aff2-bccbc8e154ba",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d373ce91-f98e-4f89-af37-1cc37c46911f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81d8928-4c34-40fb-9147-06bc504a0dc5",
        "cursor": {
          "ref": "508eab1c-af05-4ea1-a7ce-effd944b40ac",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "df32d71e-e996-4c69-82fe-dd3812bbaa0b"
        },
        "item": {
          "id": "a81d8928-4c34-40fb-9147-06bc504a0dc5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f913a89c-6616-4376-b883-34645d7f6e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd545a1-66ef-47e6-a0f9-76d39ee6ca8a",
        "cursor": {
          "ref": "74d61364-bd0b-44b3-94db-a1659fd0eb0f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "808d7347-4d91-4796-8f69-d08d903349fc"
        },
        "item": {
          "id": "1fd545a1-66ef-47e6-a0f9-76d39ee6ca8a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8d13b08f-3213-409f-bbb8-7a1e3839fb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe53a48-5988-4cbf-9326-0272b6b8a9e2",
        "cursor": {
          "ref": "0bbdf210-d16f-4038-af1c-9e1ff836dc47",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1681f4dd-e069-4e6c-a804-00501f29dca8"
        },
        "item": {
          "id": "0fe53a48-5988-4cbf-9326-0272b6b8a9e2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "48c629d4-a0bf-46dc-b53d-d133b1e83572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfc150c-028a-4247-8c3f-984b8df9cacf",
        "cursor": {
          "ref": "b93e019e-4ccf-49f7-a64a-16c783005a54",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "28482978-dbe9-45be-9c84-91b9b67fa136"
        },
        "item": {
          "id": "bbfc150c-028a-4247-8c3f-984b8df9cacf",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "635d17a2-925b-4465-b41a-ee926eef2444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b3c1de-2a79-4363-a0b7-9adbf1a093e1",
        "cursor": {
          "ref": "702e0de5-c8c2-47ce-b5b1-190cd9547327",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5c604b72-d7b8-47d8-8070-f01bb0c33964"
        },
        "item": {
          "id": "46b3c1de-2a79-4363-a0b7-9adbf1a093e1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c87c6b3c-7477-40b7-8af9-8fd0d6a2c413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50586ea3-be5e-468d-85e5-dcd84b92f86b",
        "cursor": {
          "ref": "fd41e1a3-c580-4d7b-b258-27c6520d8af9",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0eec8ccf-6709-44c4-b7d5-1bb7fc20dd66"
        },
        "item": {
          "id": "50586ea3-be5e-468d-85e5-dcd84b92f86b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "477561ae-f913-49ea-bbaa-7b5431adca7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d2e720-619a-48dd-9b9b-e6ca8af531cb",
        "cursor": {
          "ref": "e54ed86b-3632-475e-8a6e-410f1e093f65",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fc2e75af-e433-4dc6-84e6-36bdad8ba85c"
        },
        "item": {
          "id": "06d2e720-619a-48dd-9b9b-e6ca8af531cb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c4793ba1-1444-40f9-ae26-0e6df38242fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fdbf03-7cbf-400e-96c2-05160635070e",
        "cursor": {
          "ref": "cefb88fa-0ec3-4683-9428-2180e2696d11",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f5644c28-78f0-4059-8ad3-912dd275dbf9"
        },
        "item": {
          "id": "03fdbf03-7cbf-400e-96c2-05160635070e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7e37e14a-e119-47da-b1ee-2f200b830d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df5294b-7797-4478-aea7-9c0826f031bf",
        "cursor": {
          "ref": "46d5e8c4-8b03-4067-807d-85263cc8739a",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ad62c93e-dcc3-4814-931b-9738b75a8434"
        },
        "item": {
          "id": "8df5294b-7797-4478-aea7-9c0826f031bf",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8799c585-9321-4d12-84e6-ec178583f92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d485fe-34e2-4004-9311-9a49731d8592",
        "cursor": {
          "ref": "d5d1aece-a52d-4322-be1a-c7344890ca91",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e4769403-bc13-4d57-aca0-6a4904f433b9"
        },
        "item": {
          "id": "90d485fe-34e2-4004-9311-9a49731d8592",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "616dadbe-6256-4e1f-af90-81bd3d71205a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a53b085-edb8-4360-8b89-5f43a1c3c4c1",
        "cursor": {
          "ref": "132b2621-be5d-4b9c-b8f2-750679f490a6",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "578d2dcd-dc40-4282-a3f8-a65dfab0280c"
        },
        "item": {
          "id": "8a53b085-edb8-4360-8b89-5f43a1c3c4c1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6458c1c2-c600-4d4e-bf12-12f7401dfac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c70c640-0d22-49ba-bbfc-a0db86bfe72a",
        "cursor": {
          "ref": "d256e9de-7603-4f6a-839a-ddc66dcff6c6",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "57fd171b-f25d-456e-8e01-6e0292f464e2"
        },
        "item": {
          "id": "3c70c640-0d22-49ba-bbfc-a0db86bfe72a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "59f8aa09-1b2e-4513-9f9f-ff32885c62c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3779ba-a57c-43c2-b73e-9b595bcf91ac",
        "cursor": {
          "ref": "14fdb02f-7dce-4ca3-8526-e03dccc84011",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "09edc283-adb2-4e70-8585-f2922d1f8cfe"
        },
        "item": {
          "id": "ed3779ba-a57c-43c2-b73e-9b595bcf91ac",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b7a95716-3c4b-43c4-b6f3-39dd2ae2383b",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "6685c0a9-c9e1-4691-b275-ea1f25b91408",
        "cursor": {
          "ref": "497fb534-c72e-4a7d-9c51-9f1543151fb8",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "257e4798-f4dc-42fe-a930-30624385144b"
        },
        "item": {
          "id": "6685c0a9-c9e1-4691-b275-ea1f25b91408",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "07e7c2cf-4678-44c1-9ad4-58b3bc0172be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1962eadb-fda6-4376-afe8-68ec5cb69719",
        "cursor": {
          "ref": "13da0ddf-ca42-4340-8926-23ec820e397b",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "30a52ff1-174b-4904-9771-189ec2e238e8"
        },
        "item": {
          "id": "1962eadb-fda6-4376-afe8-68ec5cb69719",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "299b0884-9a14-476e-b6b5-67e20818c7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fde085-9460-4147-ab06-db7c9ee7a213",
        "cursor": {
          "ref": "96310cbd-8f2e-4799-be7b-34eb47b0a6b4",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5d167f57-1515-44c5-bb1b-0022aef2ba26"
        },
        "item": {
          "id": "78fde085-9460-4147-ab06-db7c9ee7a213",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "456503e7-ce67-4130-aa48-7f0439473f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782e2447-c501-41b1-93c9-992c54b80bf4",
        "cursor": {
          "ref": "cfb30008-c68f-41b4-9b34-347917002626",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8c171e20-d7b4-43f4-8679-dd4a9e241929"
        },
        "item": {
          "id": "782e2447-c501-41b1-93c9-992c54b80bf4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "805dd956-2920-4464-a686-60784d958c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0a161b-321f-4582-9ff9-ea60bb0dcbc4",
        "cursor": {
          "ref": "1b505bab-d4a0-46a5-9b27-dc6c1643595d",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4aa0fa70-d8c9-453a-b9dc-fddf918bfde9"
        },
        "item": {
          "id": "7e0a161b-321f-4582-9ff9-ea60bb0dcbc4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e1d34be6-37b1-492e-8a94-ecdd3f99e85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abcb7fc-a5e4-4949-90e1-47d895c8f8f0",
        "cursor": {
          "ref": "46b05211-dac3-4c2b-bd11-62625d077228",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "27494981-3f86-4d93-a0fb-2209e99f08d8"
        },
        "item": {
          "id": "2abcb7fc-a5e4-4949-90e1-47d895c8f8f0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3022c4e5-635e-4c08-bd40-82c0bfdb9acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b2610a-79c4-4534-ad1d-0b07a1123715",
        "cursor": {
          "ref": "783712ab-1a25-4dd6-b1f6-db9aa1226234",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b9501194-db9a-47fc-a6bc-79407e25012d"
        },
        "item": {
          "id": "55b2610a-79c4-4534-ad1d-0b07a1123715",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "155f0555-fb52-4f7a-972c-472918638c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55aa0fe-0a6a-4528-a696-6ec9013bfba0",
        "cursor": {
          "ref": "948e6e3a-98d7-4efa-b6f8-5f3899471670",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e6183e78-3ba0-4614-8f39-475eb33ceef1"
        },
        "item": {
          "id": "e55aa0fe-0a6a-4528-a696-6ec9013bfba0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "680ebc65-3ec6-4b13-a46c-f5d87836f1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bc93e7-1a0c-401b-aaa2-992c6cd6df5f",
        "cursor": {
          "ref": "b9bf33f1-967d-4d33-8f33-6fe695361626",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "563c7ca3-a65d-49da-b3ec-b07ef69093a6"
        },
        "item": {
          "id": "37bc93e7-1a0c-401b-aaa2-992c6cd6df5f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "26dcc4d4-ab1b-450d-acf0-c7c4496ef1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c201f4-8af3-45dc-a136-952bde38aed1",
        "cursor": {
          "ref": "9a5c0576-2e84-430f-b5f6-003f7547bfec",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cf5dc550-8558-4274-a1fd-9127b6b2a803"
        },
        "item": {
          "id": "62c201f4-8af3-45dc-a136-952bde38aed1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a37a7198-fce8-471b-9034-5442b251f390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e030c96-e69c-4957-8208-42e585472a95",
        "cursor": {
          "ref": "5ed1cac9-8a90-46d3-8804-af94ffbe848a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4f2df560-5adc-4008-8a12-9548af7bb216"
        },
        "item": {
          "id": "3e030c96-e69c-4957-8208-42e585472a95",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9cf5a10c-c7cd-47e8-b0c9-798da0936ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d814eaf-f2f1-4423-a8fa-08adbe363b44",
        "cursor": {
          "ref": "1fdceb45-46ad-4ce6-acaa-02002cc26fa1",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bec3b2bd-4173-48f3-b647-5bc642b97566"
        },
        "item": {
          "id": "1d814eaf-f2f1-4423-a8fa-08adbe363b44",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5f9e5e6f-badd-490f-835c-58c33856cc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7037b6cf-801d-476e-bb42-cb3bf387b69b",
        "cursor": {
          "ref": "e982dcf0-3bba-4911-bd06-43e6cb8d91be",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "24e30341-d8ef-4f0f-93f6-047511334e73"
        },
        "item": {
          "id": "7037b6cf-801d-476e-bb42-cb3bf387b69b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f3c8efe0-dde5-4021-ac7d-9bfaa50361cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a7f401-d2e7-4499-8811-40abf0a0e4ca",
        "cursor": {
          "ref": "c01f0d7d-6573-4bee-a654-3995a762ef47",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "165e1d29-f914-491a-aed9-d2cda7eeb435"
        },
        "item": {
          "id": "49a7f401-d2e7-4499-8811-40abf0a0e4ca",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5422517f-3b83-4cfe-a43c-ff5fa93118ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116565d8-ab63-4c1b-b1c8-adbac9c898fe",
        "cursor": {
          "ref": "7ccd0e4b-614b-4132-809b-4dab32eb31e4",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7a33136b-aedd-425e-a4f0-d0c09584048a"
        },
        "item": {
          "id": "116565d8-ab63-4c1b-b1c8-adbac9c898fe",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "48baaee4-42fc-4e15-be72-c5b0d0060ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc87864-34bf-4082-be4c-c8287b336ffe",
        "cursor": {
          "ref": "26f3b962-7540-4f95-b77e-2e0d19235c57",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b6e6f580-834e-4d32-a8d1-6603a5b51da4"
        },
        "item": {
          "id": "dbc87864-34bf-4082-be4c-c8287b336ffe",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d6736144-601d-4981-95a6-5e1d54786a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91a8f30-aaea-4dd2-a3bb-7d02b2feb1cb",
        "cursor": {
          "ref": "24d8e978-db59-423e-b209-dc43cd35dbec",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c1408402-d8e3-4fc3-9ebd-0be54a958793"
        },
        "item": {
          "id": "a91a8f30-aaea-4dd2-a3bb-7d02b2feb1cb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "43418238-034f-423c-9133-fcf2c4b7c901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0028c7a9-ce65-4e95-9a50-d2995ac23d2c",
        "cursor": {
          "ref": "248423b6-26b7-40fe-9b54-6de7e8610244",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bcddd13b-b514-4940-8eca-e8478d2bd73a"
        },
        "item": {
          "id": "0028c7a9-ce65-4e95-9a50-d2995ac23d2c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e37be8e5-ea01-4d2d-a2be-4c6583f795c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b689dae5-04d4-4919-8761-5baf0fe2a29c",
        "cursor": {
          "ref": "e6e9d5a8-f1b1-4cf3-bc87-dc479c87d35c",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4c06d7a1-11d6-483c-b93d-f01bcdd865b2"
        },
        "item": {
          "id": "b689dae5-04d4-4919-8761-5baf0fe2a29c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6e6a496c-6af0-45a8-9b40-b946d5e63726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4568ff5-cfd1-4bdc-a357-e820762ad4b3",
        "cursor": {
          "ref": "604841fd-f014-4a6a-b8bf-f20ebc64bb3d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5e5b8f38-f497-4f3c-891a-fcee91ee7584"
        },
        "item": {
          "id": "e4568ff5-cfd1-4bdc-a357-e820762ad4b3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8ce35c74-a808-43be-b8fd-3da9222b4c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36aebe9b-3ee3-4c67-ae1c-f2416ca1941a",
        "cursor": {
          "ref": "28acf63c-e404-4cab-99d5-7f79007cdf9c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5042eee5-652a-4026-9e90-8cfbe136e7b2"
        },
        "item": {
          "id": "36aebe9b-3ee3-4c67-ae1c-f2416ca1941a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6efbbf07-4f14-4941-a5c6-ff16e264d7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0275c08-2a43-4196-984a-cfa78dc11ce9",
        "cursor": {
          "ref": "a8d11c34-5478-4216-b7ec-f9f19bb3da49",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2f20c38c-6307-4b68-bcb3-e0c36b4bacba"
        },
        "item": {
          "id": "c0275c08-2a43-4196-984a-cfa78dc11ce9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "97c7d0ef-089f-4f4d-b972-221cc0c529be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1493d32e-e16a-402c-9982-cd5cd7f445e3",
        "cursor": {
          "ref": "6a1cc52a-4d08-4f2a-a296-6303af3d09d8",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "48b3b98c-04bc-44d6-af36-3281f7b5dc47"
        },
        "item": {
          "id": "1493d32e-e16a-402c-9982-cd5cd7f445e3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c10c8341-e3a1-4626-9bbb-311d68d2f9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f182ab9-85b6-43de-bbdd-078a5c2c35c4",
        "cursor": {
          "ref": "4a5e2520-9e77-417f-aca4-59ce09868c24",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "714482de-b8cc-4cfd-80ed-cbcb73dba114"
        },
        "item": {
          "id": "4f182ab9-85b6-43de-bbdd-078a5c2c35c4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "443ac95b-bc9a-4b8c-aa2d-5e3e3c3bd4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a192db-5cc4-450c-80be-e1537d28bc09",
        "cursor": {
          "ref": "d9329d4b-957c-4468-965a-924d3836b2fc",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f2feb136-0f00-4ce2-acbb-03c71d526971"
        },
        "item": {
          "id": "40a192db-5cc4-450c-80be-e1537d28bc09",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "85e62746-a435-4555-bc86-f52eaa334b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2f5775-3283-43d4-8d82-f248b649d24d",
        "cursor": {
          "ref": "fffaeb28-6e7f-4c37-b6e0-185bf4ce879d",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "25fd998c-76a3-4d19-8985-c341a8c81f91"
        },
        "item": {
          "id": "ee2f5775-3283-43d4-8d82-f248b649d24d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "89e82b7e-1bb9-4e14-95c5-804b2b1aad03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5754ca9-5dc6-46c3-ad8a-85ad0027e76b",
        "cursor": {
          "ref": "48fcf436-faf0-42c9-9e9d-bafc60cc0da8",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7e22f730-87ee-4a1f-9c64-44b68722a852"
        },
        "item": {
          "id": "c5754ca9-5dc6-46c3-ad8a-85ad0027e76b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8eda51fa-1820-4667-8307-c8ae55649802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0191db1-3179-4b63-899d-fbccb6c7afc4",
        "cursor": {
          "ref": "3fcd232e-8796-4083-9318-93b6f436600a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4d02735f-eeec-496f-92d2-72c8f63d6972"
        },
        "item": {
          "id": "e0191db1-3179-4b63-899d-fbccb6c7afc4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "af8f6928-049d-4685-867e-4af120480661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9909c5a-a3c9-42d1-82a9-893923419433",
        "cursor": {
          "ref": "11cef732-3616-4e1a-aac9-8e787d6a545d",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2c58a06c-8e59-4d6c-95da-f3a1ce71797c"
        },
        "item": {
          "id": "e9909c5a-a3c9-42d1-82a9-893923419433",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "92ee7e69-8611-4c25-82d7-71c4fad9706b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff43e7b-6fce-41d0-ba0a-cf842b297fc2",
        "cursor": {
          "ref": "17492c18-4de8-4a3d-b8d0-1060b9125054",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6ebb831f-aba0-4d47-b4b0-bad3d90b79d9"
        },
        "item": {
          "id": "3ff43e7b-6fce-41d0-ba0a-cf842b297fc2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3ff15977-cd29-4a0e-94b2-519d8c44ab7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6123a489-746e-43e0-8a08-11e7ed4430a9",
        "cursor": {
          "ref": "d9d073d2-a32f-4008-9be4-53990ccb60f4",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6f97dc91-815a-4af7-a539-23ac02858a4b"
        },
        "item": {
          "id": "6123a489-746e-43e0-8a08-11e7ed4430a9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "336b889a-c6a8-436d-b7b0-f054fb9bce9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f08107e-b32a-4938-ac9d-91779cacb3cb",
        "cursor": {
          "ref": "14fd64dc-4d77-48d3-9880-3380abd17b30",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d77e17ea-7cc9-423c-9f9c-f55117e12838"
        },
        "item": {
          "id": "5f08107e-b32a-4938-ac9d-91779cacb3cb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b5a2aab2-6702-4c7b-bb41-bc1573cd0c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab86d4c6-eb14-4828-a57f-4521f2493b6b",
        "cursor": {
          "ref": "a11f9279-6c12-4661-ad9c-4258ceddcda4",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6695899d-ebb2-42bb-a058-f1427014cf7e"
        },
        "item": {
          "id": "ab86d4c6-eb14-4828-a57f-4521f2493b6b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5c12ed71-c639-46e4-be9c-670b05c9db38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3728d37c-4c12-4302-9e32-707d0da97be3",
        "cursor": {
          "ref": "c20debad-8878-4997-b230-f1658188b935",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e71170e1-fa86-4881-9355-f876f0eaf468"
        },
        "item": {
          "id": "3728d37c-4c12-4302-9e32-707d0da97be3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5fcbcc67-9525-4166-984b-4e9adec3f7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb82b7d4-8910-4b31-8167-be448e81bfbb",
        "cursor": {
          "ref": "c10fa04f-bcaa-4ad4-947e-d4a231bfab55",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "dcdbf53f-d217-406c-8160-13486a12c6b0"
        },
        "item": {
          "id": "bb82b7d4-8910-4b31-8167-be448e81bfbb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "bb2981b7-ab3c-49a1-8cf4-04d39e835717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27338fd-33d8-4ec6-8688-98a2fe341bfd",
        "cursor": {
          "ref": "04f8925c-cfc4-40c7-bc9d-eea0a1c5af8c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2e1fd802-f241-446d-8291-150346ac7387"
        },
        "item": {
          "id": "f27338fd-33d8-4ec6-8688-98a2fe341bfd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "de584486-58ad-4157-9e94-8e0c62b506f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecaf5d6-8092-40d1-accb-4df3886ebc2d",
        "cursor": {
          "ref": "0c448223-7270-414c-86b9-5b6e456c20a6",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f210c3b6-9d0a-4f0e-a854-dbcf4432c189"
        },
        "item": {
          "id": "eecaf5d6-8092-40d1-accb-4df3886ebc2d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6bab1f0f-68d6-4520-8b2d-36ccc8cf7d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd22d50-9338-4eaa-bcfe-208048e9c55a",
        "cursor": {
          "ref": "a37273df-2179-4f74-ad47-4c9d8ed493b2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3a13b255-5d2b-40e8-8653-ceba55cfdd62"
        },
        "item": {
          "id": "cfd22d50-9338-4eaa-bcfe-208048e9c55a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1e925670-6a9e-4233-be81-1676d9bfb5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3685ba-44d0-4a5d-a7b6-6046d48c8094",
        "cursor": {
          "ref": "14577e45-7809-4b46-949d-3de73891ba48",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "650d5de6-66a8-42f8-bdda-70344957055b"
        },
        "item": {
          "id": "4f3685ba-44d0-4a5d-a7b6-6046d48c8094",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ccb4ad13-4a82-421d-abb7-a495a4d48f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23169c89-c871-45bd-ab62-a51ad4ae7e65",
        "cursor": {
          "ref": "98488d6a-453e-47c7-bc39-0faca35365a3",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b5a56d0d-d1bb-4a24-9ab5-b569f6e15674"
        },
        "item": {
          "id": "23169c89-c871-45bd-ab62-a51ad4ae7e65",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9f1b1235-b2bb-43ce-bf32-fd0c57d65bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f056964c-5dfa-4eb4-87b4-555d971b596c",
        "cursor": {
          "ref": "08c8959f-8ccd-4e56-8c56-e41a2ed69a58",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "18094ba3-c36d-4c95-93d7-12b14abf1880"
        },
        "item": {
          "id": "f056964c-5dfa-4eb4-87b4-555d971b596c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ce402853-267c-4ac7-9a58-82b50f626f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6b1a4a-dd56-4373-a5e1-fc288b09f0ed",
        "cursor": {
          "ref": "6f1f4447-6292-43c8-983c-7792b38ffc4c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d74b3338-60aa-471c-97cc-d55c5c5e572e"
        },
        "item": {
          "id": "ac6b1a4a-dd56-4373-a5e1-fc288b09f0ed",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1321d3af-bb10-4422-bf0c-fb563292d2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603e77bb-4293-421a-9163-963dc3a579d7",
        "cursor": {
          "ref": "fc99a30a-7907-49f0-b2a8-bb460208d894",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d1626f81-741e-47a1-bd3b-a8de857ce90b"
        },
        "item": {
          "id": "603e77bb-4293-421a-9163-963dc3a579d7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0c7980bd-993c-46d9-9e72-0fafa9c7d397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1146d927-a608-4530-84cc-185e5d40bc6f",
        "cursor": {
          "ref": "25032e9e-9d79-4997-9832-560b1e145f2b",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c39d3029-b652-4a16-9c7f-ced7f5cbec2a"
        },
        "item": {
          "id": "1146d927-a608-4530-84cc-185e5d40bc6f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6d46efe1-c8c9-4ad6-803c-5a0a69c92927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f6f55a-6614-4968-b6f6-2b65aa5b8a9e",
        "cursor": {
          "ref": "339e19c0-b450-4cdc-b05c-21c07124406b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7e275124-562d-49cf-8d38-756cca6f28fc"
        },
        "item": {
          "id": "97f6f55a-6614-4968-b6f6-2b65aa5b8a9e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4d1c4fac-3c0f-4d71-9813-125505f37f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ff44b9-d8b8-4861-990e-68a22e72cba0",
        "cursor": {
          "ref": "bb420152-3f63-4634-9e69-802f9dbc4845",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f7b71c9c-b4fa-4d4c-8ca2-f431ac808a3b"
        },
        "item": {
          "id": "92ff44b9-d8b8-4861-990e-68a22e72cba0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d5db04c6-6279-4808-b518-3f48672d9d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd39224e-d52a-436a-9500-1a9e4580c206",
        "cursor": {
          "ref": "29df226f-c88e-4454-8d88-524db8f59015",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8af17c67-0f2e-477f-b615-564d5ee13557"
        },
        "item": {
          "id": "fd39224e-d52a-436a-9500-1a9e4580c206",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "021e9638-eed6-474d-90ab-692c23e5dbb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4b36d1-22d5-4d81-93a6-8298d2104444",
        "cursor": {
          "ref": "94d14ca3-8a33-452b-8adc-4b52e8034515",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f7ef9cfb-3fed-400c-aa8a-ecd984354f9a"
        },
        "item": {
          "id": "cd4b36d1-22d5-4d81-93a6-8298d2104444",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "54e784f0-2a95-4c04-8e1e-268465ea0268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2bd6ce-0d71-4708-9857-fa8403beaaf4",
        "cursor": {
          "ref": "474ce9eb-b7c9-41bc-b162-824d59730a83",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "61350d30-4b15-41ad-95e7-9c240b723c73"
        },
        "item": {
          "id": "1d2bd6ce-0d71-4708-9857-fa8403beaaf4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6374c88c-ce4b-4ffd-a16f-04f1339b305f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6515147-b9c7-4076-9aef-333df91d54f3",
        "cursor": {
          "ref": "a564d49d-cbba-4cc0-9c14-4360cfc2b07e",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "057be5d9-0ef8-4e8f-8c8e-abf28767aee7"
        },
        "item": {
          "id": "c6515147-b9c7-4076-9aef-333df91d54f3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "939045e7-fc50-440b-8b70-49697ea443cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67358c7b-da1d-4dc1-bd64-74245300062f",
        "cursor": {
          "ref": "30d2770e-3d47-45f1-a8b7-d16c50c5bc15",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "638a55dd-2d3b-4103-9e52-052aab2ca52a"
        },
        "item": {
          "id": "67358c7b-da1d-4dc1-bd64-74245300062f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0d7d7743-cb49-4193-bd83-03863bd05f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a09b961-f9f7-4713-a5dc-b02d498a7904",
        "cursor": {
          "ref": "aa654732-c145-43a2-a169-758c64d1d822",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8c8fca23-d99d-4c67-a2e5-4087c94f6205"
        },
        "item": {
          "id": "0a09b961-f9f7-4713-a5dc-b02d498a7904",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "414c086e-3ac0-4252-9622-3ec06c0be5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a881d5c7-5ac2-4877-9df6-5032791274b9",
        "cursor": {
          "ref": "f3646261-ccda-4a08-bf76-45b37b55accd",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "196189cb-aad5-41d8-a991-7a92289d6d8c"
        },
        "item": {
          "id": "a881d5c7-5ac2-4877-9df6-5032791274b9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "43aded6d-9bf7-43c8-8984-7f4e799d6030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531ba418-e892-44ef-b7a4-153b4182354d",
        "cursor": {
          "ref": "4182abd4-53d8-4486-8d80-905b48a0d71f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "64df49ca-93ce-47b7-be36-f0b98de46960"
        },
        "item": {
          "id": "531ba418-e892-44ef-b7a4-153b4182354d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e555793f-9be6-4795-a841-ae27382f3587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76eb9d86-ce39-403a-a607-ab97b5a9e0ab",
        "cursor": {
          "ref": "f32803f6-09f8-4ae4-937e-95c59076426a",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fb790cd8-3ed7-443d-994d-53c8cb85fef8"
        },
        "item": {
          "id": "76eb9d86-ce39-403a-a607-ab97b5a9e0ab",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ecb90f02-1c51-44ef-824c-3be3a404437f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9715e297-2e7a-488f-9dbb-50544b414931",
        "cursor": {
          "ref": "08fdb6bc-1ac3-42cc-95bd-1d1cb453fa62",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "55c9311f-2e73-4fa3-a242-d4ebe7471fc9"
        },
        "item": {
          "id": "9715e297-2e7a-488f-9dbb-50544b414931",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9ba61131-5d15-424f-a634-fca55f8b32a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281c231a-b2ce-452c-b560-9184180f35cf",
        "cursor": {
          "ref": "87116656-6034-42cb-a939-53c0bf5dacbe",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "739e5290-94ce-40e0-92e9-99846cf3387e"
        },
        "item": {
          "id": "281c231a-b2ce-452c-b560-9184180f35cf",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "582505d4-eb0a-4b3b-9548-320a05f0048b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bbee21-cd4a-417e-9bf3-273d8be1cc34",
        "cursor": {
          "ref": "4f56e27c-3f85-4922-bd97-dab8794381a7",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f58f444c-7e03-47c8-8296-2e6df54b73c7"
        },
        "item": {
          "id": "d9bbee21-cd4a-417e-9bf3-273d8be1cc34",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6f1f86ac-34cc-44ce-ae4e-e922ba00e855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a6731a-15f6-4172-bf9b-c340b0caf39b",
        "cursor": {
          "ref": "95918beb-3746-4444-b021-f748d183c0e4",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c4970e17-57fd-4d50-8199-d671baa99188"
        },
        "item": {
          "id": "06a6731a-15f6-4172-bf9b-c340b0caf39b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ec4e3788-e447-490e-91bf-adbf606e9402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f59827f-e8b5-40f9-8177-1fa0bbb757e1",
        "cursor": {
          "ref": "1acd5905-1fe0-422a-8239-11687e1eb303",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "235365d9-c407-47c8-bbd1-308c7b7232bd"
        },
        "item": {
          "id": "9f59827f-e8b5-40f9-8177-1fa0bbb757e1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9d58d4b1-ddb1-412d-81f6-0f0c0339b6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5924071c-4145-460c-92cd-22bdcd33191e",
        "cursor": {
          "ref": "c4bfaf95-1ff8-4b96-ba0d-f9553216b009",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "18a301b5-87e3-4f9f-8a17-93524582368a"
        },
        "item": {
          "id": "5924071c-4145-460c-92cd-22bdcd33191e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1643f457-e8be-48be-a19b-ef0b0b58be64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92350d8b-1012-49ef-9d2e-d6df7ed161f4",
        "cursor": {
          "ref": "aeff9518-2003-4671-b020-1abe12890a90",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a950c228-5083-4293-a63d-335e7bd7bbcc"
        },
        "item": {
          "id": "92350d8b-1012-49ef-9d2e-d6df7ed161f4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "643986f6-642e-45bf-975e-d96a9c890de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f35743-bf3b-4558-b06d-3b1b71b9a5ca",
        "cursor": {
          "ref": "279136dc-f926-4f5a-99cf-0da58fd5c448",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "89f12d8c-6c94-4e51-8b82-6d555769b546"
        },
        "item": {
          "id": "28f35743-bf3b-4558-b06d-3b1b71b9a5ca",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f4b74b4e-85ec-4958-a906-281f1a42d238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9787bfec-7cb6-48ff-a125-0f728945aa03",
        "cursor": {
          "ref": "14161b0b-748b-4e0b-b785-dededee6b6e4",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7d5a46f2-e586-49d1-80ba-61f80844258f"
        },
        "item": {
          "id": "9787bfec-7cb6-48ff-a125-0f728945aa03",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c38e48bb-ab3c-4e9a-92af-f4756db4c585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9803cd85-ff66-4203-be9c-ad752f148a1a",
        "cursor": {
          "ref": "f5cb6a73-09ea-4d0d-abdd-61048f61365f",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3507255a-2fd7-4852-a1fe-a321a3067d8c"
        },
        "item": {
          "id": "9803cd85-ff66-4203-be9c-ad752f148a1a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6f2e3118-0201-48b7-8828-4312de650eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 859,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20c8cc4-b6cd-4b49-ad71-0a16eccda918",
        "cursor": {
          "ref": "5c979b3c-a6e2-44c7-8d7a-2e0b6bdd2c3d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "66655d27-8473-4caa-b1cf-97812ee24aeb"
        },
        "item": {
          "id": "f20c8cc4-b6cd-4b49-ad71-0a16eccda918",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ca9458b1-05a7-42ed-a6ae-be7f6947ce63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63068858-3c32-4732-862b-83e4614493fe",
        "cursor": {
          "ref": "b553f09f-8319-41a9-a8e9-1eadf93aab0e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a28d829b-384d-4467-9e92-002f92e0c0f1"
        },
        "item": {
          "id": "63068858-3c32-4732-862b-83e4614493fe",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "95753e29-4030-4d65-befb-06ce35fcef15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07e2e0b-738d-475a-8b2c-b9d66363a27f",
        "cursor": {
          "ref": "0a3f49df-56b1-4397-8276-013d0fa14705",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8d77ebb1-6566-4e2b-aec1-b16b178c41d8"
        },
        "item": {
          "id": "e07e2e0b-738d-475a-8b2c-b9d66363a27f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "77c22020-7cd6-4c10-bcb8-1f73ae9269bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2614573b-bb1b-4aa8-89a9-ce29d21c7184",
        "cursor": {
          "ref": "55eedc00-973a-41c4-80a9-b311528a431e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "aa6434bf-ec66-48ee-a3b3-5387bb13a97a"
        },
        "item": {
          "id": "2614573b-bb1b-4aa8-89a9-ce29d21c7184",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "efdc78ed-d701-49aa-9374-7132a9ff5fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6e1236-b8b1-4f26-b03e-0cd2b5e4278b",
        "cursor": {
          "ref": "6a630176-7d0d-45b6-92be-518d92114fca",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "65765b37-5c74-40e7-9a27-7afa1dc3051d"
        },
        "item": {
          "id": "aa6e1236-b8b1-4f26-b03e-0cd2b5e4278b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b0ce23cc-ccb4-4127-bba3-d4238d1bd687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9288b7fc-5ef7-4c8c-96c6-7273d3340354",
        "cursor": {
          "ref": "803a181f-c0b4-4da4-bb48-06b89f176f99",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0cb6b779-b4cb-4d23-b7f5-2eb9b26cdec0"
        },
        "item": {
          "id": "9288b7fc-5ef7-4c8c-96c6-7273d3340354",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "809d427f-66a2-4b9b-9f06-0f1ca45130cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a15dc4-ab58-4451-9ed0-4d51c61f8b40",
        "cursor": {
          "ref": "41963b35-4ef3-44e8-bf3a-be258acbe7cd",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4b52fa28-fc8c-4d44-a95f-fe8b1b2b126b"
        },
        "item": {
          "id": "62a15dc4-ab58-4451-9ed0-4d51c61f8b40",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "80b4a0bc-9d99-48f1-9eed-d90b99deaad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aac5644-d0c5-4e12-a95a-c11b3c7f5312",
        "cursor": {
          "ref": "fdb41399-4484-4745-bad5-a525277b3656",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "27fb51ad-df49-405c-9e8a-54b59a400345"
        },
        "item": {
          "id": "9aac5644-d0c5-4e12-a95a-c11b3c7f5312",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f5050367-67dc-401b-8c6d-6958dc844808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ec14fc-89d3-4450-9456-ef95f2028e0f",
        "cursor": {
          "ref": "036752fe-b8cf-48b3-95a0-962e2b6b2c1c",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "aaf4853a-f8c0-46d9-b5f7-d6a700f7b673"
        },
        "item": {
          "id": "66ec14fc-89d3-4450-9456-ef95f2028e0f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "bef49778-b600-49e2-9a1b-19ef696375a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70dfff30-c4fb-4383-875c-6619ef0f68d5",
        "cursor": {
          "ref": "1e3fcc35-3316-4680-9711-04d35eb15aae",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9995fca2-346d-4003-9f07-c19319da477f"
        },
        "item": {
          "id": "70dfff30-c4fb-4383-875c-6619ef0f68d5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5cc0e2db-ce4b-4929-a021-96945795026b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203bf377-b840-4e39-87e6-3b4288c5993f",
        "cursor": {
          "ref": "bead723c-78e9-4780-9bc7-2f824ab35a79",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "66dc00f2-9637-4d29-9ee6-f770c6523a09"
        },
        "item": {
          "id": "203bf377-b840-4e39-87e6-3b4288c5993f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b7457ac9-f19f-4700-b3fd-8b314cffa3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc8944f-b225-4f39-83fd-bcde14ceda3b",
        "cursor": {
          "ref": "847b5cc0-f13c-4d49-be64-55dba7aebd8d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b8c52a22-2286-4012-9b4d-19622ff1723d"
        },
        "item": {
          "id": "9dc8944f-b225-4f39-83fd-bcde14ceda3b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "56652961-ef89-46d9-80e0-b59e65ffbb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b04398-1ca4-4aa5-9b97-8b535507b9ac",
        "cursor": {
          "ref": "ef9eafbf-735a-4a2a-8c89-8d99c6c503fc",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "dccbba56-7fec-4ffa-a555-0cab3f5d5318"
        },
        "item": {
          "id": "58b04398-1ca4-4aa5-9b97-8b535507b9ac",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4a51d356-ae2b-488e-a0c8-09cec6b0a893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4a8e5f-772a-4c45-b8fa-05c6c296398a",
        "cursor": {
          "ref": "c8054c3c-81ce-4c32-affe-a664a45fbee1",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2f0377db-2702-4902-8613-e8f6dd2df47a"
        },
        "item": {
          "id": "da4a8e5f-772a-4c45-b8fa-05c6c296398a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cc9d654c-d4c4-4d39-a3fc-d7fa0d258b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ceb8d2-bd7d-4a4f-b56e-d9d44426f0c0",
        "cursor": {
          "ref": "e9b51ed2-1953-4b40-9a70-8082174e79d6",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9e3930bb-58f9-4235-9c28-2b31fa6539ff"
        },
        "item": {
          "id": "72ceb8d2-bd7d-4a4f-b56e-d9d44426f0c0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0e6f7a03-fc54-4bf7-a045-db9be305cf17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788607bc-3ddb-4679-8f7d-6f404f48b047",
        "cursor": {
          "ref": "9f23f248-2d12-47e0-bce7-6d3c00e09902",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fe390ffd-d0e9-4894-be80-9bab4e974bfb"
        },
        "item": {
          "id": "788607bc-3ddb-4679-8f7d-6f404f48b047",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7e34b267-1ca7-4b5f-95e0-fbdac4cd0fb5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8888f8a4-b106-42c3-99f1-a7d3921977ac",
        "cursor": {
          "ref": "c0c8d5e3-da7e-4a58-a32f-3ce93a1d352e",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "740f43c2-e81c-4402-9e64-3f15ee6467a0"
        },
        "item": {
          "id": "8888f8a4-b106-42c3-99f1-a7d3921977ac",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "66286bf5-92cf-4f88-a16e-e64c13921a8e",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6500a01b-f111-4e6e-920e-9fd52792bcce",
        "cursor": {
          "ref": "20a9b99a-3028-4610-88a7-e83ce9c9450c",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "10b91f69-b04d-4abe-a9e1-a4f0444c0e9d"
        },
        "item": {
          "id": "6500a01b-f111-4e6e-920e-9fd52792bcce",
          "name": "credentials_verify"
        },
        "response": {
          "id": "908800d9-b4d7-4eca-b3d8-f3b0a310e61c",
          "status": "OK",
          "code": 200,
          "responseTime": 1904,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a55de4-2ad1-488c-ab19-f3ce1e6e324f",
        "cursor": {
          "ref": "6ccbdec5-5c64-423a-ab19-ebec2fb7231d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ad2598c5-4b36-4369-897e-89f4891acae3"
        },
        "item": {
          "id": "b6a55de4-2ad1-488c-ab19-f3ce1e6e324f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "75c960bd-2af9-4c14-aa29-bed9ce3ab49d",
          "status": "OK",
          "code": 200,
          "responseTime": 3673,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bd34b2-09cd-499f-8af1-9e1d8e439067",
        "cursor": {
          "ref": "02eec5f4-b974-4e6e-8a37-4fe7b1d40604",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5239e5d0-a770-4d30-92e1-f00300892528"
        },
        "item": {
          "id": "19bd34b2-09cd-499f-8af1-9e1d8e439067",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e18f0b57-6377-4aa2-823b-a28afd22f5ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bd34b2-09cd-499f-8af1-9e1d8e439067",
        "cursor": {
          "ref": "02eec5f4-b974-4e6e-8a37-4fe7b1d40604",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5239e5d0-a770-4d30-92e1-f00300892528"
        },
        "item": {
          "id": "19bd34b2-09cd-499f-8af1-9e1d8e439067",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e18f0b57-6377-4aa2-823b-a28afd22f5ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69791a06-f692-49d8-be0b-5649bd98eca7",
        "cursor": {
          "ref": "dd8f446b-b0a8-4e25-8ada-da689fd9b60b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "13143a7e-94ea-4c58-badd-d94222143ed9"
        },
        "item": {
          "id": "69791a06-f692-49d8-be0b-5649bd98eca7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5e9ca94e-d20d-49d1-9def-4f6bc56ea075",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950d79ae-1c96-484d-8d86-cbc47858526f",
        "cursor": {
          "ref": "e92d76ba-9555-46da-a326-8638f482cf3e",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "24f681e2-203c-4aa4-aac9-d33966ec2ba0"
        },
        "item": {
          "id": "950d79ae-1c96-484d-8d86-cbc47858526f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5ab48a0c-d529-4d4c-bf18-745eb252fb9d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}